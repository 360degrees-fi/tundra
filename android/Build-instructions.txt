Tundra-Android port, build instructions
---------------------------------------

Some dependencies will be automatically built, others need to be manually installed. See below for detail.


Windows
-------

- You will need the Android SDK & NDK, download and install them from http://developer.android.com/sdk/index.html.
  Install API platform 10 (2.3.3) for the Native Activity support that OGRE library needs.

- Important! Android NDK version r8b or newer are NOT currently supported, due to incompatibilities between Android CMake toolchain and the new
  4.4.3/4.6 folder structure introduced to Android NDK r8b. Download Android NDK version r8 from here: http://dl.google.com/android/ndk/android-ndk-r8-windows.zip

- Set the environment variables ANDROID_SDK & ANDROID_NDK to point to them, for example
  ANDROID_NDK=C:\android-ndk-r8
  ANDROID_SDK=C:\Program Files (x86)\Android\android-sdk

- Download and install Java SE Development Kit 7 from http://www.oracle.com/technetwork/java/javase/downloads/index.html
  Set up JAVA_HOME to point to the installation directory, e.g. JAVA_HOME=C:\Program Files\Java\jdk1.7.0

- Set the environment variable TUNDRA_ANDROID_ABI to either 
  armeabi-v7a OR x86
  depending on whether you want an arm or x86 Android build. Alternatively use the helper batch files BuildDepsArm.bat, BuildDepsX86.bat,
  BuildTundraArm.bat, BuildTundraX86.bat which set it before invoking the corresponding build script.

- Set the environment variable QTDIR to point to your Necessitas-Qt build.
  The helper batch files BuildTundraArm.bat & BuildTundraX86.bat automatically set this to point to subdirectory "deps-android\Qt" of the Tundra checkout.

  (To use a prebuilt Necessitas for arm, download and install Necessitas-SDK from http://necessitas.kde.org/necessitas/necessitas_sdk_installer.php,
   and set QTDIR to point to its "Android\Qt\482\armeabi-v7a" subdirectory, which contains bin, include and lib subdirectories.
   Alternatively, copy that directory's contents to "deps-android\Qt" of the Tundra checkout to use the helper scripts without modification.) 

- Using a Visual Studio command prompt, run BuildAndroidDeps.cmd from the "android" subdirectory of Tundra checkout.
  This downloads and builds the automatically buildable dependencies (Bullet, Boost, kNet, OGRE.) This may take some time,
  so be patient.

- Install the 'ant' tool on your system from http://ant.apache.org/bindownload.cgi. The installation step consists of simply
  unzipping a single archive. After unzipping, add the ant bin\ folder to system PATH, e.g. "C:\apache-ant-1.8.4\bin"

- Before running BuildTundra.cmd, make sure to add the path to the Android SDK tool 'android' to the system PATH. By default, this is 
  located in the folder C:\Program Files (x86)\Android\android-sdk\tools

- To build and package Tundra, run BuildTundra.cmd from the "android" subdirectory of Tundra checkout, using a Visual Studio command prompt.
  Tundra is compiled as a monolithic library "libTundra.so" after which it is packaged together with the Ministro/Necessitas activity shell 
  into "android\bin\Tundra-release.apk". This can be installed on a device and run.

Running Tundra
--------------

- Tundra on Android will currently use the fixed directory Download/Tundra on the Android device's internal memory (/sdcard/Download/Tundra) as
  its "Bin" folder. Copy the contents of your Tundra Bin directory there as applicable.

- If it exists, Tundra will use the file commandline.txt in the Download/Tundra folder for its command line parameters. Use this to configure eg. the scene
  to load.

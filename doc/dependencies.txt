DEPENDENCIES
============

This project has the following dependencies:

- Boost 1.36.0 or newer, http://www.boost.org/

- poco-1.3.4 or newer (Economy package), http://pocoproject.org/. Used as dynamic libraries.

- Ogre 1.6.1 or newer, http://www.ogre3d.org 

- GTK--2.4. Gtkmm is being used by the GtkmmUI for the UI system. You will be instructed below how to install this.

- MD5 using C++ 2005-02-15, http://www.md5hashing.com/c++/. This project is used by building the project source files as part of the main project build. Contains the following four files: md5.h, md5.c, md5wrapper.h, md5wrapper.c that are located in OpenSimProtocol/.

- XMLRPC-EPI 2008-04-16, http://xmlrpc-epi.sourceforge.net/main.php?t=summary is used as a dynamic library.  XMLRPC-EPI depends on LibIconv and eXpat. To build this, first build the expat project.

- eXpat 2.0.1: http://expat.sourceforge.net/ . This is used as a dynamic library, and is located in the directory Expat 2.0.1/ in SVN. 

- libcURL 7.19.4.0 or newer, http://curl.haxx.se/ . libcURL is a multiprotocol file transfer library which is used e.g. for the HTTP file transfers and the XML-RPC via HTTP login procedure.

- LibIconv 1.9.2 for Windows: http://gnuwin32.sourceforge.net/packages/libiconv.htm (also see http://gnuwin32.sourceforge.net/packages.html) LibIconv is located in the GnuWin32\ directory, and is used as a dynamic library.

- OpenJpeg 1.3: http://www.openjpeg.org/

- OpenAL 1.1: http://connect.creativelabs.com/openal/

- Caelum OGRE Add-on 0.4: http://www.ogre3d.org/wiki/index.php/Caelum/ . Used for the dynamic environmetal lightning.


OBTAINING DEPENDENCIES
======================

If you don't have 32-bit Windows as an OS, don't use the direct links.

gtkmm  ->  Website: http://www.gtkmm.org/
       ->  Installer: http://ftp.gnome.org/pub/GNOME/binaries/win32/gtkmm/2.14/gtkmm-win32-devel-2.14.3-2.exe
       ->  Get 2.14.x or never. Remember to get the "devel" version.
       ->  Be sure that install option "Add the gtkmm runtime directory to the PATH variable" is checked
	   
cmake  ->  Website: http://www.cmake.org/
       ->  Installer: http://www.cmake.org/files/v2.6/cmake-2.6.4-win32-x86.exe
       ->  You should select "Add CMake to the system PATH" when the installer asks for it.
	   
external librarys

    You can do this in two ways:
	
	1. BINARIES
	
       ->  Website: http://dev.realxtend.org/svn/viewerdeps
       ->  Direct link: http://dev.realxtend.org/gf/download/frsrelease/102/19/Dependencies_VS2008.zip
       1.  Extract the "bin" and "external_libs" from the .zip file to your <project_folder>/trunk folder.
       2.  Windows will probably prompt that you are extracting a "bin" folder that already exist. Just allow windows to continue the operation.
       3.  Set a new Windows System Variable named "REX_DEP_PATH" and set it to the "<project_folder>/trunk/external_libs" folder.
           Help to do this 
           - Windows XP: http://support.microsoft.com/kb/310519 
           - Vista: Right Click "My Computer" on your desktop -> Properties -> Left side "Advanced system settings" -> "Enviroment Variables..."
		   
    2. SOURCE
	
       -> Website: http://dev.realxtend.org/gf/project/viewerdeps/scmsvn/
	   -> SVN checkout: http://dev.realxtend.org/svn/viewerdeps
	   
	   NOTE: If you use the source method you will have to install boost and poco separately. URLs for this are on top of this document.


MAKE THE PROJECT FILE
=====================

Go to your <project_folder>/trunk and execute the cmake.bat if you are not using VS2008, and cmake_vs2008.bat, if you are using VS2008.

If everything went right you should now have a Visual Studio project file in your <project_folder>/trunk. 
When compiling for the first time, compile in debug mode and run the exe at least once. Some data files are created in debug mode which are needed when running in release mode.

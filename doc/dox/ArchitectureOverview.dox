/**

\page TundraArchitectureOverview Tundra Architecture Overview

<b>This page is currently only a stub and pending a major re-write.</b>


Tundra offers a diverse amount of functionality. To be able to maintain all the features, the different functionality is implemented as separate plugins/modules. Conceptually, these plugins/modules are grouped into larger subsystems based on the roles different plugins/modules have. A description of each subsystem is available on \ref TundraSubsystems "the main page".

The plugins/modules are implemented on top of a common \ref CoreAPIList "Core API". This API is exposed to all C++ code running on top of Tundra, as well as to the supported scripting languages via the Qt meta-object system. The structuring of Tundra follows a traditional "framework" approach.

Additionally, functionality is implemented as separate Entity-Component libraries. The \ref component_base "Tundra Entity Component Reference" page describes in detail all the provided components.


Tundra uses CMake as its build system. The different parts of the repository are grouped into separate projects, which each reside in their individual folders.

This page provides an overview of the internal structure of different folders in the codebase.


*/
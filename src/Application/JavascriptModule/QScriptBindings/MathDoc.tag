<?xml version='1.0' encoding='ISO-8859-1' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>AssetAPI.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Asset/</path>
    <filename>_asset_a_p_i_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_i_asset_transfer_8h" name="IAssetTransfer.h" local="yes" imported="no">IAssetTransfer.h</includes>
    <includes id="_i_asset_8h" name="IAsset.h" local="yes" imported="no">IAsset.h</includes>
    <includes id="_i_asset_storage_8h" name="IAssetStorage.h" local="yes" imported="no">IAssetStorage.h</includes>
    <includes id="_i_asset_provider_8h" name="IAssetProvider.h" local="yes" imported="no">IAssetProvider.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_core_exception_8h" name="CoreException.h" local="yes" imported="no">CoreException.h</includes>
    <includes id="_i_asset_type_factory_8h" name="IAssetTypeFactory.h" local="yes" imported="no">IAssetTypeFactory.h</includes>
    <includes id="_i_asset_upload_transfer_8h" name="IAssetUploadTransfer.h" local="yes" imported="no">IAssetUploadTransfer.h</includes>
    <includes id="_generic_asset_factory_8h" name="GenericAssetFactory.h" local="yes" imported="no">GenericAssetFactory.h</includes>
    <includes id="_null_asset_factory_8h" name="NullAssetFactory.h" local="yes" imported="no">NullAssetFactory.h</includes>
    <includes id="_asset_cache_8h" name="AssetCache.h" local="yes" imported="no">AssetCache.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_core_string_utils_8h" name="CoreStringUtils.h" local="yes" imported="no">CoreStringUtils.h</includes>
    <namespace>anonymous_namespace{AssetAPI.cpp}</namespace>
    <member kind="function">
      <type>QString</type>
      <name>GuaranteeTrailingSlash</name>
      <anchorfile>_asset_a_p_i_8cpp.html</anchorfile>
      <anchor>a3faecb401f9c5a518593819cb64eedf3</anchor>
      <arglist>(const QString &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFileToVector</name>
      <anchorfile>_asset_a_p_i_8cpp.html</anchorfile>
      <anchor>a5be3a44c6e4e3d4c932a370a052766ce</anchor>
      <arglist>(const char *filename, std::vector&lt; u8 &gt; &amp;dst)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFileOfType</name>
      <anchorfile>namespaceanonymous__namespace_02_asset_a_p_i_8cpp_03.html</anchorfile>
      <anchor>aeca230647c35292afc4813f517917cf5</anchor>
      <arglist>(const QString &amp;filename, const char **suffixes, int numSuffixes)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CopyAssetFile</name>
      <anchorfile>_asset_a_p_i_8cpp.html</anchorfile>
      <anchor>a5c972bf8645e400fae0fe766c9d1a084</anchor>
      <arglist>(const char *sourceFile, const char *destFile)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveAssetFromMemoryToFile</name>
      <anchorfile>_asset_a_p_i_8cpp.html</anchorfile>
      <anchor>a6d57580708c0e958c3839adcf2f2d6e6</anchor>
      <arglist>(const u8 *data, size_t numBytes, const char *destFile)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AssetAPI.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Asset/</path>
    <filename>_asset_a_p_i_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_core_string_utils_8h" name="CoreStringUtils.h" local="yes" imported="no">CoreStringUtils.h</includes>
    <includes id="_asset_fwd_8h" name="AssetFwd.h" local="yes" imported="no">AssetFwd.h</includes>
    <includes id="_asset_a_p_i_8inl" name="AssetAPI.inl" local="yes" imported="no">AssetAPI.inl</includes>
    <class kind="class">AssetAPI</class>
    <class kind="struct">AssetAPI::PendingDownloadRequest</class>
    <member kind="typedef">
      <type>std::map&lt; QString, AssetPtr &gt;</type>
      <name>AssetMap</name>
      <anchorfile>_asset_a_p_i_8h.html</anchorfile>
      <anchor>ab7e5caf187bc474122056cb77dad8a40</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; AssetStoragePtr &gt;</type>
      <name>AssetStorageVector</name>
      <anchorfile>_asset_a_p_i_8h.html</anchorfile>
      <anchor>a7366a7fc02c359fca757ae67235cdecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFileToVector</name>
      <anchorfile>_asset_a_p_i_8h.html</anchorfile>
      <anchor>a5be3a44c6e4e3d4c932a370a052766ce</anchor>
      <arglist>(const char *filename, std::vector&lt; u8 &gt; &amp;dst)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CopyAssetFile</name>
      <anchorfile>_asset_a_p_i_8h.html</anchorfile>
      <anchor>a5c972bf8645e400fae0fe766c9d1a084</anchor>
      <arglist>(const char *sourceFile, const char *destFile)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveAssetFromMemoryToFile</name>
      <anchorfile>_asset_a_p_i_8h.html</anchorfile>
      <anchor>a6d57580708c0e958c3839adcf2f2d6e6</anchor>
      <arglist>(const u8 *data, size_t numBytes, const char *destFile)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>GuaranteeTrailingSlash</name>
      <anchorfile>_asset_a_p_i_8h.html</anchorfile>
      <anchor>a3faecb401f9c5a518593819cb64eedf3</anchor>
      <arglist>(const QString &amp;source)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AssetAPI.inl</name>
    <path>E:/Projects/TundraLCNew/src/Core/Asset/</path>
    <filename>_asset_a_p_i_8inl</filename>
  </compound>
  <compound kind="file">
    <name>AssetCache.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Asset/</path>
    <filename>_asset_cache_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_asset_cache_8h" name="AssetCache.h" local="yes" imported="no">AssetCache.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_i_asset_8h" name="IAsset.h" local="yes" imported="no">IAsset.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>AssetCache.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Asset/</path>
    <filename>_asset_cache_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_asset_fwd_8h" name="AssetFwd.h" local="yes" imported="no">AssetFwd.h</includes>
    <class kind="class">AssetCache</class>
  </compound>
  <compound kind="file">
    <name>AssetFwd.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Asset/</path>
    <filename>_asset_fwd_8h</filename>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; IAsset &gt;</type>
      <name>AssetPtr</name>
      <anchorfile>_asset_fwd_8h.html</anchorfile>
      <anchor>aed5a5a28574fa76117129b631a05bbb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; IAsset &gt;</type>
      <name>AssetWeakPtr</name>
      <anchorfile>_asset_fwd_8h.html</anchorfile>
      <anchor>ad2788ce2e85904cafe088ea3e78c6f09</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; IAssetTransfer &gt;</type>
      <name>AssetTransferPtr</name>
      <anchorfile>_asset_fwd_8h.html</anchorfile>
      <anchor>a8891a38dac5fe5d30c14695b39115fb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; IAssetTransfer &gt;</type>
      <name>AssetTransferWeakPtr</name>
      <anchorfile>_asset_fwd_8h.html</anchorfile>
      <anchor>a62956d5bbf5abc3ea514ac0bc350996c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; IAssetProvider &gt;</type>
      <name>AssetProviderPtr</name>
      <anchorfile>_asset_fwd_8h.html</anchorfile>
      <anchor>a40ba3343f032333c30840759c002cad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; IAssetProvider &gt;</type>
      <name>AssetProviderWeakPtr</name>
      <anchorfile>_asset_fwd_8h.html</anchorfile>
      <anchor>a7a4026cdf3266d26c037dc9c062eedc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; IAssetStorage &gt;</type>
      <name>AssetStoragePtr</name>
      <anchorfile>_asset_fwd_8h.html</anchorfile>
      <anchor>af38f47c0eeda48d6fae1256761223579</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; IAssetStorage &gt;</type>
      <name>AssetStorageWeakPtr</name>
      <anchorfile>_asset_fwd_8h.html</anchorfile>
      <anchor>a6ec52d612b6a04b0c58357c6ae11a57e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; IAssetUploadTransfer &gt;</type>
      <name>AssetUploadTransferPtr</name>
      <anchorfile>_asset_fwd_8h.html</anchorfile>
      <anchor>a0a23b282ef7413944e5f4ac8b50dd111</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; IAssetTypeFactory &gt;</type>
      <name>AssetTypeFactoryPtr</name>
      <anchorfile>_asset_fwd_8h.html</anchorfile>
      <anchor>acd5d6ab7e352c358d95742fdcae46a91</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; AssetRefListener &gt;</type>
      <name>AssetRefListenerPtr</name>
      <anchorfile>_asset_fwd_8h.html</anchorfile>
      <anchor>a5a25c5d6223833237139f61ffef5dc8e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AssetReference.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Asset/</path>
    <filename>_asset_reference_8h</filename>
    <class kind="struct">AssetReference</class>
    <class kind="struct">AssetReferenceList</class>
  </compound>
  <compound kind="file">
    <name>AssetRefListener.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Asset/</path>
    <filename>_asset_ref_listener_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_asset_ref_listener_8h" name="AssetRefListener.h" local="yes" imported="no">AssetRefListener.h</includes>
    <includes id="_i_attribute_8h" name="IAttribute.h" local="yes" imported="no">IAttribute.h</includes>
    <includes id="_asset_reference_8h" name="AssetReference.h" local="yes" imported="no">AssetReference.h</includes>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_i_asset_8h" name="IAsset.h" local="yes" imported="no">IAsset.h</includes>
    <includes id="_i_asset_transfer_8h" name="IAssetTransfer.h" local="yes" imported="no">IAssetTransfer.h</includes>
  </compound>
  <compound kind="file">
    <name>AssetRefListener.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Asset/</path>
    <filename>_asset_ref_listener_8h</filename>
    <includes id="_asset_fwd_8h" name="AssetFwd.h" local="yes" imported="no">AssetFwd.h</includes>
    <class kind="class">AssetRefListener</class>
  </compound>
  <compound kind="file">
    <name>BinaryAsset.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Asset/</path>
    <filename>_binary_asset_8h</filename>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_i_asset_8h" name="IAsset.h" local="yes" imported="no">IAsset.h</includes>
    <class kind="class">BinaryAsset</class>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; BinaryAsset &gt;</type>
      <name>BinaryAssetPtr</name>
      <anchorfile>_binary_asset_8h.html</anchorfile>
      <anchor>a1f4b4008ed10f96d15ca44e78b4aed6d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GenericAssetFactory.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Asset/</path>
    <filename>_generic_asset_factory_8h</filename>
    <includes id="_i_asset_type_factory_8h" name="IAssetTypeFactory.h" local="yes" imported="no">IAssetTypeFactory.h</includes>
    <includes id="_binary_asset_8h" name="BinaryAsset.h" local="yes" imported="no">BinaryAsset.h</includes>
    <class kind="class">GenericAssetFactory</class>
    <member kind="typedef">
      <type>GenericAssetFactory&lt; BinaryAsset &gt;</type>
      <name>BinaryAssetFactory</name>
      <anchorfile>_generic_asset_factory_8h.html</anchorfile>
      <anchor>af30fbf4f791e290e2a40a7fa87962e89</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>IAsset.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Asset/</path>
    <filename>_i_asset_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_i_asset_8h" name="IAsset.h" local="yes" imported="no">IAsset.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>IAsset.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Asset/</path>
    <filename>_i_asset_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_asset_fwd_8h" name="AssetFwd.h" local="yes" imported="no">AssetFwd.h</includes>
    <includes id="_asset_reference_8h" name="AssetReference.h" local="yes" imported="no">AssetReference.h</includes>
    <class kind="class">IAsset</class>
  </compound>
  <compound kind="file">
    <name>IAssetProvider.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Asset/</path>
    <filename>_i_asset_provider_8h</filename>
    <includes id="_asset_fwd_8h" name="AssetFwd.h" local="yes" imported="no">AssetFwd.h</includes>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <class kind="class">IAssetProvider</class>
  </compound>
  <compound kind="file">
    <name>IAssetStorage.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Asset/</path>
    <filename>_i_asset_storage_8h</filename>
    <includes id="_asset_fwd_8h" name="AssetFwd.h" local="yes" imported="no">AssetFwd.h</includes>
    <class kind="class">IAssetStorage</class>
  </compound>
  <compound kind="file">
    <name>IAssetTransfer.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Asset/</path>
    <filename>_i_asset_transfer_8cpp</filename>
    <includes id="_i_asset_transfer_8h" name="IAssetTransfer.h" local="yes" imported="no">IAssetTransfer.h</includes>
    <includes id="_i_asset_8h" name="IAsset.h" local="yes" imported="no">IAsset.h</includes>
  </compound>
  <compound kind="file">
    <name>IAssetTransfer.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Asset/</path>
    <filename>_i_asset_transfer_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_asset_fwd_8h" name="AssetFwd.h" local="yes" imported="no">AssetFwd.h</includes>
    <includes id="_asset_reference_8h" name="AssetReference.h" local="yes" imported="no">AssetReference.h</includes>
    <class kind="class">IAssetTransfer</class>
    <class kind="class">VirtualAssetTransfer</class>
  </compound>
  <compound kind="file">
    <name>IAssetTypeFactory.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Asset/</path>
    <filename>_i_asset_type_factory_8h</filename>
    <includes id="_asset_fwd_8h" name="AssetFwd.h" local="yes" imported="no">AssetFwd.h</includes>
    <class kind="class">IAssetTypeFactory</class>
  </compound>
  <compound kind="file">
    <name>IAssetUploadTransfer.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Asset/</path>
    <filename>_i_asset_upload_transfer_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_i_asset_upload_transfer_8h" name="IAssetUploadTransfer.h" local="yes" imported="no">IAssetUploadTransfer.h</includes>
  </compound>
  <compound kind="file">
    <name>IAssetUploadTransfer.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Asset/</path>
    <filename>_i_asset_upload_transfer_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_asset_fwd_8h" name="AssetFwd.h" local="yes" imported="no">AssetFwd.h</includes>
    <includes id="_i_asset_storage_8h" name="IAssetStorage.h" local="yes" imported="no">IAssetStorage.h</includes>
    <class kind="class">IAssetUploadTransfer</class>
  </compound>
  <compound kind="file">
    <name>NullAssetFactory.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Asset/</path>
    <filename>_null_asset_factory_8h</filename>
    <includes id="_i_asset_type_factory_8h" name="IAssetTypeFactory.h" local="yes" imported="no">IAssetTypeFactory.h</includes>
    <class kind="class">NullAssetFactory</class>
  </compound>
  <compound kind="file">
    <name>AssetModule.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/AssetModule/</path>
    <filename>_asset_module_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_asset_module_8h" name="AssetModule.h" local="yes" imported="no">AssetModule.h</includes>
    <includes id="_local_asset_provider_8h" name="LocalAssetProvider.h" local="yes" imported="no">LocalAssetProvider.h</includes>
    <includes id="_http_asset_provider_8h" name="HttpAssetProvider.h" local="yes" imported="no">HttpAssetProvider.h</includes>
    <includes id="_http_asset_storage_8h" name="HttpAssetStorage.h" local="yes" imported="no">HttpAssetStorage.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_core_exception_8h" name="CoreException.h" local="yes" imported="no">CoreException.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_local_asset_storage_8h" name="LocalAssetStorage.h" local="yes" imported="no">LocalAssetStorage.h</includes>
    <includes id="_console_a_p_i_8h" name="ConsoleAPI.h" local="yes" imported="no">ConsoleAPI.h</includes>
    <includes id="_application_8h" name="Application.h" local="yes" imported="no">Application.h</includes>
    <includes id="_kristalli_protocol_module_8h" name="KristalliProtocolModule.h" local="yes" imported="no">KristalliProtocolModule.h</includes>
    <includes id="_tundra_logic_module_8h" name="TundraLogicModule.h" local="yes" imported="no">TundraLogicModule.h</includes>
    <includes id="_tundra_messages_8h" name="TundraMessages.h" local="yes" imported="no">TundraMessages.h</includes>
    <includes id="_client_8h" name="Client.h" local="yes" imported="no">Client.h</includes>
    <includes id="_server_8h" name="Server.h" local="yes" imported="no">Server.h</includes>
    <includes id="_user_connected_response_data_8h" name="UserConnectedResponseData.h" local="yes" imported="no">UserConnectedResponseData.h</includes>
    <includes id="_user_connection_8h" name="UserConnection.h" local="yes" imported="no">UserConnection.h</includes>
    <includes id="_msg_asset_deleted_8h" name="MsgAssetDeleted.h" local="yes" imported="no">MsgAssetDeleted.h</includes>
    <includes id="_msg_asset_discovery_8h" name="MsgAssetDiscovery.h" local="yes" imported="no">MsgAssetDiscovery.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <namespace>Asset</namespace>
    <member kind="function">
      <type>DLLEXPORT void</type>
      <name>TundraPluginMain</name>
      <anchorfile>_asset_module_8cpp.html</anchorfile>
      <anchor>a5e5a5f8cd7055f51e852059f9ec87e99</anchor>
      <arglist>(Framework *fw)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AssetModule.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/AssetModule/</path>
    <filename>_asset_module_8h</filename>
    <includes id="_i_module_8h" name="IModule.h" local="yes" imported="no">IModule.h</includes>
    <includes id="_i_asset_provider_8h" name="IAssetProvider.h" local="yes" imported="no">IAssetProvider.h</includes>
    <includes id="_asset_module_api_8h" name="AssetModuleApi.h" local="yes" imported="no">AssetModuleApi.h</includes>
    <class kind="class">Asset::AssetModule</class>
    <namespace>kNet</namespace>
    <namespace>Asset</namespace>
    <member kind="typedef">
      <type>unsigned long</type>
      <name>message_id_t</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>a13a69d6fe1a692c68cf8b4661b61127c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AssetModuleApi.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/AssetModule/</path>
    <filename>_asset_module_api_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>ASSET_MODULE_API</name>
      <anchorfile>_asset_module_api_8h.html</anchorfile>
      <anchor>a6a5d962470f57dc146d12c635be1488f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SettingUpWebdav.dox</name>
    <path>E:/Projects/TundraLCNew/src/Core/AssetModule/doc/</path>
    <filename>_setting_up_webdav_8dox</filename>
  </compound>
  <compound kind="file">
    <name>HttpAssetProvider.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/AssetModule/</path>
    <filename>_http_asset_provider_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_application_8h" name="Application.h" local="yes" imported="no">Application.h</includes>
    <includes id="_http_asset_provider_8h" name="HttpAssetProvider.h" local="yes" imported="no">HttpAssetProvider.h</includes>
    <includes id="_http_asset_transfer_8h" name="HttpAssetTransfer.h" local="yes" imported="no">HttpAssetTransfer.h</includes>
    <includes id="_i_asset_upload_transfer_8h" name="IAssetUploadTransfer.h" local="yes" imported="no">IAssetUploadTransfer.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_asset_cache_8h" name="AssetCache.h" local="yes" imported="no">AssetCache.h</includes>
    <includes id="_i_asset_8h" name="IAsset.h" local="yes" imported="no">IAsset.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>HttpAssetProvider.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/AssetModule/</path>
    <filename>_http_asset_provider_8h</filename>
    <includes id="_asset_module_api_8h" name="AssetModuleApi.h" local="yes" imported="no">AssetModuleApi.h</includes>
    <includes id="_i_asset_provider_8h" name="IAssetProvider.h" local="yes" imported="no">IAssetProvider.h</includes>
    <includes id="_asset_fwd_8h" name="AssetFwd.h" local="yes" imported="no">AssetFwd.h</includes>
    <includes id="_http_asset_transfer_8h" name="HttpAssetTransfer.h" local="yes" imported="no">HttpAssetTransfer.h</includes>
    <includes id="_http_asset_storage_8h" name="HttpAssetStorage.h" local="yes" imported="no">HttpAssetStorage.h</includes>
    <class kind="class">HttpAssetProvider</class>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; HttpAssetStorage &gt;</type>
      <name>HttpAssetStoragePtr</name>
      <anchorfile>_http_asset_provider_8h.html</anchorfile>
      <anchor>a832c3c3a1f0c934c034af3c895ae70da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HttpAssetStorage.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/AssetModule/</path>
    <filename>_http_asset_storage_8cpp</filename>
    <includes id="_http_asset_provider_8h" name="HttpAssetProvider.h" local="yes" imported="no">HttpAssetProvider.h</includes>
    <includes id="_http_asset_storage_8h" name="HttpAssetStorage.h" local="yes" imported="no">HttpAssetStorage.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
  </compound>
  <compound kind="file">
    <name>HttpAssetStorage.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/AssetModule/</path>
    <filename>_http_asset_storage_8h</filename>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_i_asset_storage_8h" name="IAssetStorage.h" local="yes" imported="no">IAssetStorage.h</includes>
    <class kind="struct">SearchRequest</class>
    <class kind="class">HttpAssetStorage</class>
  </compound>
  <compound kind="file">
    <name>HttpAssetTransfer.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/AssetModule/</path>
    <filename>_http_asset_transfer_8h</filename>
    <includes id="_i_asset_transfer_8h" name="IAssetTransfer.h" local="yes" imported="no">IAssetTransfer.h</includes>
    <class kind="class">HttpAssetTransfer</class>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; HttpAssetTransfer &gt;</type>
      <name>HttpAssetTransferPtr</name>
      <anchorfile>_http_asset_transfer_8h.html</anchorfile>
      <anchor>ad735650862d483688498fd56b1c6dcc3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>LocalAssetProvider.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/AssetModule/</path>
    <filename>_local_asset_provider_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_local_asset_provider_8h" name="LocalAssetProvider.h" local="yes" imported="no">LocalAssetProvider.h</includes>
    <includes id="_local_asset_storage_8h" name="LocalAssetStorage.h" local="yes" imported="no">LocalAssetStorage.h</includes>
    <includes id="_asset_module_8h" name="AssetModule.h" local="yes" imported="no">AssetModule.h</includes>
    <includes id="_i_asset_upload_transfer_8h" name="IAssetUploadTransfer.h" local="yes" imported="no">IAssetUploadTransfer.h</includes>
    <includes id="_i_asset_transfer_8h" name="IAssetTransfer.h" local="yes" imported="no">IAssetTransfer.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_core_string_utils_8h" name="CoreStringUtils.h" local="yes" imported="no">CoreStringUtils.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <namespace>Asset</namespace>
  </compound>
  <compound kind="file">
    <name>LocalAssetProvider.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/AssetModule/</path>
    <filename>_local_asset_provider_8h</filename>
    <includes id="_asset_module_api_8h" name="AssetModuleApi.h" local="yes" imported="no">AssetModuleApi.h</includes>
    <includes id="_i_asset_provider_8h" name="IAssetProvider.h" local="yes" imported="no">IAssetProvider.h</includes>
    <includes id="_asset_fwd_8h" name="AssetFwd.h" local="yes" imported="no">AssetFwd.h</includes>
    <class kind="class">Asset::LocalAssetProvider</class>
    <namespace>Asset</namespace>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; LocalAssetStorage &gt;</type>
      <name>LocalAssetStoragePtr</name>
      <anchorfile>namespace_asset.html</anchorfile>
      <anchor>a97076a4cf7c8ba5b3207e6ccd32e66f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>LocalAssetStorage.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/AssetModule/</path>
    <filename>_local_asset_storage_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_local_asset_storage_8h" name="LocalAssetStorage.h" local="yes" imported="no">LocalAssetStorage.h</includes>
    <includes id="_local_asset_provider_8h" name="LocalAssetProvider.h" local="yes" imported="no">LocalAssetProvider.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <namespace>Asset</namespace>
  </compound>
  <compound kind="file">
    <name>LocalAssetStorage.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/AssetModule/</path>
    <filename>_local_asset_storage_8h</filename>
    <includes id="_asset_module_api_8h" name="AssetModuleApi.h" local="yes" imported="no">AssetModuleApi.h</includes>
    <includes id="_i_asset_storage_8h" name="IAssetStorage.h" local="yes" imported="no">IAssetStorage.h</includes>
    <class kind="class">Asset::LocalAssetStorage</class>
    <namespace>Asset</namespace>
  </compound>
  <compound kind="file">
    <name>StableHeaders.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/AssetModule/</path>
    <filename>_asset_module_2_stable_headers_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>StableHeaders.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Console/</path>
    <filename>_console_2_stable_headers_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>StableHeaders.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_e_c_editor_module_2_stable_headers_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>StableHeaders.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/EnvironmentModule/</path>
    <filename>_environment_module_2_stable_headers_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>StableHeaders.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_framework_2_stable_headers_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>StableHeaders.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_ogre_rendering_module_2_stable_headers_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>StableHeaders.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/PhysicsModule/</path>
    <filename>_physics_module_2_stable_headers_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>StableHeaders.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_scene_2_stable_headers_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>StableHeaders.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_tundra_protocol_module_2_stable_headers_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>StableHeaders.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/AssetModule/</path>
    <filename>_asset_module_2_stable_headers_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
  </compound>
  <compound kind="file">
    <name>StableHeaders.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Console/</path>
    <filename>_console_2_stable_headers_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
  </compound>
  <compound kind="file">
    <name>StableHeaders.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_e_c_editor_module_2_stable_headers_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>OGRE_INTEROP</name>
      <anchorfile>_e_c_editor_module_2_stable_headers_8h.html</anchorfile>
      <anchor>a9af2b61539d42b83ffec719b22407071</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>StableHeaders.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/EnvironmentModule/</path>
    <filename>_environment_module_2_stable_headers_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
  </compound>
  <compound kind="file">
    <name>StableHeaders.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_framework_2_stable_headers_8h</filename>
  </compound>
  <compound kind="file">
    <name>StableHeaders.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_ogre_rendering_module_2_stable_headers_8h</filename>
    <includes id="_core_defines_8h" name="CoreDefines.h" local="yes" imported="no">CoreDefines.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
  </compound>
  <compound kind="file">
    <name>StableHeaders.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/PhysicsModule/</path>
    <filename>_physics_module_2_stable_headers_8h</filename>
    <includes id="_core_defines_8h" name="CoreDefines.h" local="yes" imported="no">CoreDefines.h</includes>
  </compound>
  <compound kind="file">
    <name>StableHeaders.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_scene_2_stable_headers_8h</filename>
    <includes id="_core_defines_8h" name="CoreDefines.h" local="yes" imported="no">CoreDefines.h</includes>
  </compound>
  <compound kind="file">
    <name>StableHeaders.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_tundra_protocol_module_2_stable_headers_8h</filename>
    <includes id="_core_defines_8h" name="CoreDefines.h" local="yes" imported="no">CoreDefines.h</includes>
  </compound>
  <compound kind="file">
    <name>TinyJson.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/AssetModule/TinyJson/</path>
    <filename>_tiny_json_8h</filename>
    <class kind="struct">json::unicodecvt</class>
    <class kind="struct">json::unicodecvt&lt; char &gt;</class>
    <class kind="class">json::grammar</class>
    <class kind="struct">json::grammar::push_string</class>
    <class kind="struct">json::grammar::push_double</class>
    <class kind="struct">json::grammar::push_int</class>
    <class kind="struct">json::grammar::push_boolean</class>
    <class kind="struct">json::grammar::push_null</class>
    <class kind="struct">json::grammar::create_pair</class>
    <class kind="class">json::grammar::array_delimiter</class>
    <class kind="struct">json::grammar::begin_array</class>
    <class kind="struct">json::grammar::end_array</class>
    <class kind="class">json::grammar::object_delimiter</class>
    <class kind="struct">json::grammar::begin_object</class>
    <class kind="struct">json::grammar::end_object</class>
    <class kind="class">json::grammar::definition</class>
    <namespace>json</namespace>
    <member kind="function">
      <type>json::grammar&lt; typename Iterator::value_type &gt;::variant</type>
      <name>parse</name>
      <anchorfile>namespacejson.html</anchorfile>
      <anchor>afd6f96c7fd305b3fb4fe6f0470493250</anchor>
      <arglist>(Iterator const &amp;szFirst, Iterator const &amp;szEnd)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AudioAPI.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Audio/</path>
    <filename>_audio_a_p_i_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_audio_a_p_i_8h" name="AudioAPI.h" local="yes" imported="no">AudioAPI.h</includes>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_audio_asset_8h" name="AudioAsset.h" local="yes" imported="no">AudioAsset.h</includes>
    <includes id="_generic_asset_factory_8h" name="GenericAssetFactory.h" local="yes" imported="no">GenericAssetFactory.h</includes>
    <includes id="_null_asset_factory_8h" name="NullAssetFactory.h" local="yes" imported="no">NullAssetFactory.h</includes>
    <includes id="_sound_channel_8h" name="SoundChannel.h" local="yes" imported="no">SoundChannel.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <class kind="struct">AudioApiImpl</class>
  </compound>
  <compound kind="file">
    <name>AudioAPI.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Audio/</path>
    <filename>_audio_a_p_i_8h</filename>
    <includes id="_audio_fwd_8h" name="AudioFwd.h" local="yes" imported="no">AudioFwd.h</includes>
    <includes id="_asset_fwd_8h" name="AssetFwd.h" local="yes" imported="no">AssetFwd.h</includes>
    <includes id="_audio_asset_8h" name="AudioAsset.h" local="yes" imported="no">AudioAsset.h</includes>
    <includes id="_sound_channel_8h" name="SoundChannel.h" local="yes" imported="no">SoundChannel.h</includes>
    <includes id="_audio_api_exports_8h" name="AudioApiExports.h" local="yes" imported="no">AudioApiExports.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Math/Quat.h</includes>
    <class kind="class">AudioAPI</class>
  </compound>
  <compound kind="file">
    <name>AudioApiExports.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Audio/</path>
    <filename>_audio_api_exports_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>AUDIO_API</name>
      <anchorfile>_audio_api_exports_8h.html</anchorfile>
      <anchor>a8c51eb032bd081c35abfffd3a9d1aad1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AudioAsset.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Audio/</path>
    <filename>_audio_asset_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_audio_asset_8h" name="AudioAsset.h" local="yes" imported="no">AudioAsset.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_wav_loader_8h" name="WavLoader.h" local="yes" imported="no">WavLoader.h</includes>
    <includes id="_ogg_vorbis_loader_8h" name="OggVorbisLoader.h" local="yes" imported="no">OggVorbisLoader.h</includes>
  </compound>
  <compound kind="file">
    <name>AudioAsset.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Audio/</path>
    <filename>_audio_asset_8h</filename>
    <includes id="_i_asset_8h" name="IAsset.h" local="yes" imported="no">IAsset.h</includes>
    <includes id="_audio_api_exports_8h" name="AudioApiExports.h" local="yes" imported="no">AudioApiExports.h</includes>
    <includes id="_audio_fwd_8h" name="AudioFwd.h" local="yes" imported="no">AudioFwd.h</includes>
    <includes id="_sound_buffer_8h" name="SoundBuffer.h" local="yes" imported="no">SoundBuffer.h</includes>
    <class kind="class">AudioAsset</class>
  </compound>
  <compound kind="file">
    <name>AudioFwd.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Audio/</path>
    <filename>_audio_fwd_8h</filename>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>sound_id_t</name>
      <anchorfile>_audio_fwd_8h.html</anchorfile>
      <anchor>a4f7747be95096a04971274758acb08cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; SoundChannel &gt;</type>
      <name>SoundChannelPtr</name>
      <anchorfile>_audio_fwd_8h.html</anchorfile>
      <anchor>a8dd5cd4ae37b5be8db9f1e3238ff3c55</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; SoundChannel &gt;</type>
      <name>SoundChannelWeakPtr</name>
      <anchorfile>_audio_fwd_8h.html</anchorfile>
      <anchor>a8aa814de86101bc400372d6541497ea0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; sound_id_t, SoundChannelPtr &gt;</type>
      <name>SoundChannelMap</name>
      <anchorfile>_audio_fwd_8h.html</anchorfile>
      <anchor>a7bfb1f47a56ddd616f070a5e855d03e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; AudioAsset &gt;</type>
      <name>AudioAssetPtr</name>
      <anchorfile>_audio_fwd_8h.html</anchorfile>
      <anchor>ae6aa92a5670269694a4e1b261c7a6b90</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; AudioAsset &gt;</type>
      <name>AudioAssetWeakPtr</name>
      <anchorfile>_audio_fwd_8h.html</anchorfile>
      <anchor>a758a0e89e0c48847bb522611b4cec435</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>ALuint</name>
      <anchorfile>_audio_fwd_8h.html</anchorfile>
      <anchor>ae0292edc5c1c47db9accee3f49933e6f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OggVorbisLoader.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Audio/</path>
    <filename>_ogg_vorbis_loader_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_ogg_vorbis_loader_8h" name="OggVorbisLoader.h" local="yes" imported="no">OggVorbisLoader.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <class kind="class">anonymous_namespace{OggVorbisLoader.cpp}::OggMemDataSource</class>
    <namespace>anonymous_namespace{OggVorbisLoader.cpp}</namespace>
    <namespace>OggVorbisLoader</namespace>
    <member kind="function">
      <type>size_t</type>
      <name>OggReadCallback</name>
      <anchorfile>namespaceanonymous__namespace_02_ogg_vorbis_loader_8cpp_03.html</anchorfile>
      <anchor>a7fa93c71d71fe20e841f1e1e6c97ea5f</anchor>
      <arglist>(void *ptr, size_t size, size_t nmemb, void *datasource)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>OggSeekCallback</name>
      <anchorfile>namespaceanonymous__namespace_02_ogg_vorbis_loader_8cpp_03.html</anchorfile>
      <anchor>ae35c7218ce3c076d37d60335886fd570</anchor>
      <arglist>(void *datasource, ogg_int64_t offset, int whence)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>OggTellCallback</name>
      <anchorfile>namespaceanonymous__namespace_02_ogg_vorbis_loader_8cpp_03.html</anchorfile>
      <anchor>ab476ede3d3358d62247174524c993840</anchor>
      <arglist>(void *datasource)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadOggVorbisFromFileInMemory</name>
      <anchorfile>namespace_ogg_vorbis_loader.html</anchorfile>
      <anchor>a104cb093d0b3feaf0c5c40ee29d55e88</anchor>
      <arglist>(const u8 *fileData, size_t numBytes, std::vector&lt; u8 &gt; &amp;dst, bool *isStereo, bool *is16Bit, int *frequency)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OggVorbisLoader.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Audio/</path>
    <filename>_ogg_vorbis_loader_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_sound_buffer_8h" name="SoundBuffer.h" local="yes" imported="no">SoundBuffer.h</includes>
    <includes id="_audio_api_exports_8h" name="AudioApiExports.h" local="yes" imported="no">AudioApiExports.h</includes>
    <namespace>OggVorbisLoader</namespace>
    <member kind="function">
      <type>bool</type>
      <name>LoadOggVorbisFromFileInMemory</name>
      <anchorfile>namespace_ogg_vorbis_loader.html</anchorfile>
      <anchor>a104cb093d0b3feaf0c5c40ee29d55e88</anchor>
      <arglist>(const u8 *fileData, size_t numBytes, std::vector&lt; u8 &gt; &amp;dst, bool *isStereo, bool *is16Bit, int *frequency)</arglist>
    </member>
    <member kind="function">
      <type>bool AUDIO_API</type>
      <name>LoadOggVorbisFileToSoundBuffer</name>
      <anchorfile>namespace_ogg_vorbis_loader.html</anchorfile>
      <anchor>ad7ffcd31f8810016e9591f7ae3a50497</anchor>
      <arglist>(const u8 *data, size_t numBytes, SoundBuffer &amp;dst)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SoundBuffer.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Audio/</path>
    <filename>_sound_buffer_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_audio_api_exports_8h" name="AudioApiExports.h" local="yes" imported="no">AudioApiExports.h</includes>
    <class kind="class">SoundBuffer</class>
  </compound>
  <compound kind="file">
    <name>SoundChannel.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Audio/</path>
    <filename>_sound_channel_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_sound_channel_8h" name="SoundChannel.h" local="yes" imported="no">SoundChannel.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <member kind="variable" static="yes">
      <type>static const float</type>
      <name>MINIMUM_ROLLOFF</name>
      <anchorfile>_sound_channel_8cpp.html</anchorfile>
      <anchor>af070956a2b264a7c9ede16d5cdd9a644</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float</type>
      <name>DEFAULT_ROLLOFF</name>
      <anchorfile>_sound_channel_8cpp.html</anchorfile>
      <anchor>adb76ff5131b2dad4a73c21f16f068342</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float</type>
      <name>DEFAULT_INNER_RADIUS</name>
      <anchorfile>_sound_channel_8cpp.html</anchorfile>
      <anchor>ae83197559ea87875a89614611513de7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float</type>
      <name>DEFAULT_OUTER_RADIUS</name>
      <anchorfile>_sound_channel_8cpp.html</anchorfile>
      <anchor>ac1df8513ac2860ac5b59aac9b138765b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SoundChannel.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Audio/</path>
    <filename>_sound_channel_8h</filename>
    <includes id="_sound_buffer_8h" name="SoundBuffer.h" local="yes" imported="no">SoundBuffer.h</includes>
    <includes id="_asset_fwd_8h" name="AssetFwd.h" local="yes" imported="no">AssetFwd.h</includes>
    <includes id="_audio_api_exports_8h" name="AudioApiExports.h" local="yes" imported="no">AudioApiExports.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="_audio_fwd_8h" name="AudioFwd.h" local="yes" imported="no">AudioFwd.h</includes>
    <includes id="_audio_asset_8h" name="AudioAsset.h" local="yes" imported="no">AudioAsset.h</includes>
    <class kind="class">SoundChannel</class>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; SoundChannel &gt;</type>
      <name>SoundChannelPtr</name>
      <anchorfile>_sound_channel_8h.html</anchorfile>
      <anchor>a8dd5cd4ae37b5be8db9f1e3238ff3c55</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WavLoader.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Audio/</path>
    <filename>_wav_loader_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_wav_loader_8h" name="WavLoader.h" local="yes" imported="no">WavLoader.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <namespace>WavLoader</namespace>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ReadBytes</name>
      <anchorfile>_wav_loader_8cpp.html</anchorfile>
      <anchor>aa14a190a072c6b93dac7bc315a1dd600</anchor>
      <arglist>(u8 *dest, const u8 *src, uint &amp;index, unsigned int numBytes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static u8</type>
      <name>ReadU8</name>
      <anchorfile>_wav_loader_8cpp.html</anchorfile>
      <anchor>a76a5d68ae42787e96f11cecb858492a6</anchor>
      <arglist>(const u8 *src, uint &amp;index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static u16</type>
      <name>ReadU16</name>
      <anchorfile>_wav_loader_8cpp.html</anchorfile>
      <anchor>a2334dfc996a715cffac7b80b57faead7</anchor>
      <arglist>(const u8 *src, uint &amp;index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static u32</type>
      <name>ReadU32</name>
      <anchorfile>_wav_loader_8cpp.html</anchorfile>
      <anchor>a98297d144b828a342e27999b7d16eb50</anchor>
      <arglist>(const u8 *src, uint &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IdentifyWavFileInMemory</name>
      <anchorfile>namespace_wav_loader.html</anchorfile>
      <anchor>a1ad2f3f960c5a6b30c19097732ab4d55</anchor>
      <arglist>(const u8 *fileData, size_t numBytes)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadWavFromFileInMemory</name>
      <anchorfile>namespace_wav_loader.html</anchorfile>
      <anchor>acd3c61d080d8bfb883e2971f0a0c48e4</anchor>
      <arglist>(const u8 *fileData, size_t numBytes, std::vector&lt; u8 &gt; &amp;dst, bool *isStereo, bool *is16Bit, int *frequency)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WavLoader.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Audio/</path>
    <filename>_wav_loader_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_sound_buffer_8h" name="SoundBuffer.h" local="yes" imported="no">SoundBuffer.h</includes>
    <includes id="_audio_api_exports_8h" name="AudioApiExports.h" local="yes" imported="no">AudioApiExports.h</includes>
    <namespace>WavLoader</namespace>
    <member kind="function">
      <type>bool</type>
      <name>LoadWavFromFileInMemory</name>
      <anchorfile>namespace_wav_loader.html</anchorfile>
      <anchor>acd3c61d080d8bfb883e2971f0a0c48e4</anchor>
      <arglist>(const u8 *fileData, size_t numBytes, std::vector&lt; u8 &gt; &amp;dst, bool *isStereo, bool *is16Bit, int *frequency)</arglist>
    </member>
    <member kind="function">
      <type>bool AUDIO_API</type>
      <name>LoadWavFileToSoundBuffer</name>
      <anchorfile>namespace_wav_loader.html</anchorfile>
      <anchor>ae3db481b9a2b45be3c017287a4d13b4e</anchor>
      <arglist>(const u8 *data, size_t numBytes, SoundBuffer &amp;dst)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IdentifyWavFileInMemory</name>
      <anchorfile>namespace_wav_loader.html</anchorfile>
      <anchor>a1ad2f3f960c5a6b30c19097732ab4d55</anchor>
      <arglist>(const u8 *fileData, size_t numBytes)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ConsoleAPI.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Console/</path>
    <filename>_console_a_p_i_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_console_a_p_i_8h" name="ConsoleAPI.h" local="yes" imported="no">ConsoleAPI.h</includes>
    <includes id="_console_widget_8h" name="ConsoleWidget.h" local="yes" imported="no">ConsoleWidget.h</includes>
    <includes id="_shell_input_thread_8h" name="ShellInputThread.h" local="yes" imported="no">ShellInputThread.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_input_a_p_i_8h" name="InputAPI.h" local="yes" imported="no">InputAPI.h</includes>
    <includes id="_ui_a_p_i_8h" name="UiAPI.h" local="yes" imported="no">UiAPI.h</includes>
    <includes id="_ui_graphics_view_8h" name="UiGraphicsView.h" local="yes" imported="no">UiGraphicsView.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_function_invoker_8h" name="FunctionInvoker.h" local="yes" imported="no">FunctionInvoker.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <member kind="function">
      <type>void</type>
      <name>ParseCommand</name>
      <anchorfile>_console_a_p_i_8cpp.html</anchorfile>
      <anchor>ac90ba4a8026f00d063c1ca1d064e7fd1</anchor>
      <arglist>(QString command, QString &amp;commandName, QStringList &amp;parameterList)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ConsoleAPI.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Console/</path>
    <filename>_console_a_p_i_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_core_string_utils_8h" name="CoreStringUtils.h" local="yes" imported="no">CoreStringUtils.h</includes>
    <includes id="_input_fwd_8h" name="InputFwd.h" local="yes" imported="no">InputFwd.h</includes>
    <class kind="class">ConsoleCommand</class>
    <class kind="class">ConsoleAPI</class>
  </compound>
  <compound kind="file">
    <name>ConsoleWidget.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Console/</path>
    <filename>_console_widget_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_console_widget_8h" name="ConsoleWidget.h" local="yes" imported="no">ConsoleWidget.h</includes>
    <includes id="_console_a_p_i_8h" name="ConsoleAPI.h" local="yes" imported="no">ConsoleAPI.h</includes>
    <includes id="_ui_a_p_i_8h" name="UiAPI.h" local="yes" imported="no">UiAPI.h</includes>
    <includes id="_ui_proxy_widget_8h" name="UiProxyWidget.h" local="yes" imported="no">UiProxyWidget.h</includes>
    <includes id="_ui_graphics_view_8h" name="UiGraphicsView.h" local="yes" imported="no">UiGraphicsView.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>ConsoleWidget.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Console/</path>
    <filename>_console_widget_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <class kind="class">ConsoleWidget</class>
  </compound>
  <compound kind="file">
    <name>DebugConsole.dox</name>
    <path>E:/Projects/TundraLCNew/src/Core/Console/doc/</path>
    <filename>_debug_console_8dox</filename>
  </compound>
  <compound kind="file">
    <name>ShellInputThread.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Console/</path>
    <filename>_shell_input_thread_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_shell_input_thread_8h" name="ShellInputThread.h" local="yes" imported="no">ShellInputThread.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>ShellInputThread.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Console/</path>
    <filename>_shell_input_thread_8h</filename>
    <class kind="class">ShellInputThread</class>
  </compound>
  <compound kind="file">
    <name>AddComponentDialog.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_add_component_dialog_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_add_component_dialog_8h" name="AddComponentDialog.h" local="yes" imported="no">AddComponentDialog.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_scene_a_p_i_8h" name="SceneAPI.h" local="yes" imported="no">SceneAPI.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>AddComponentDialog.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_add_component_dialog_8h</filename>
    <includes id="_e_c_editor_module_api_8h" name="ECEditorModuleApi.h" local="yes" imported="no">ECEditorModuleApi.h</includes>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_attribute_change_type_8h" name="AttributeChangeType.h" local="yes" imported="no">AttributeChangeType.h</includes>
    <class kind="class">AddComponentDialog</class>
  </compound>
  <compound kind="file">
    <name>AddContentWindow.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_add_content_window_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_add_content_window_8h" name="AddContentWindow.h" local="yes" imported="no">AddContentWindow.h</includes>
    <includes id="_scene_structure_module_8h" name="SceneStructureModule.h" local="yes" imported="no">SceneStructureModule.h</includes>
    <includes id="_tree_widget_utils_8h" name="TreeWidgetUtils.h" local="yes" imported="no">TreeWidgetUtils.h</includes>
    <includes id="_supported_file_types_8h" name="SupportedFileTypes.h" local="yes" imported="no">SupportedFileTypes.h</includes>
    <includes id="_ui_a_p_i_8h" name="UiAPI.h" local="yes" imported="no">UiAPI.h</includes>
    <includes id="_ui_main_window_8h" name="UiMainWindow.h" local="yes" imported="no">UiMainWindow.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_i_asset_storage_8h" name="IAssetStorage.h" local="yes" imported="no">IAssetStorage.h</includes>
    <includes id="_i_asset_upload_transfer_8h" name="IAssetUploadTransfer.h" local="yes" imported="no">IAssetUploadTransfer.h</includes>
    <includes id="_scene_desc_8h" name="SceneDesc.h" local="yes" imported="no">SceneDesc.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_scene_importer_8h" name="SceneImporter.h" local="yes" imported="no">SceneImporter.h</includes>
    <includes id="_transform_8h" name="Transform.h" local="yes" imported="no">Transform.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_core_exception_8h" name="CoreException.h" local="yes" imported="no">CoreException.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <class kind="class">EntityWidgetItem</class>
    <class kind="class">AssetWidgetItem</class>
    <member kind="typedef">
      <type>QMap&lt; QString, QString &gt;</type>
      <name>RefMap</name>
      <anchorfile>_add_content_window_8cpp.html</anchorfile>
      <anchor>a70bde8bc868d016a38bdf3cce88ec68d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReplaceReferences</name>
      <anchorfile>_add_content_window_8cpp.html</anchorfile>
      <anchor>a8bf3a418520e76e2cc3cc84895a12ab0</anchor>
      <arglist>(QByteArray &amp;material, const RefMap &amp;refs)</arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>cDefaultStorage</name>
      <anchorfile>_add_content_window_8cpp.html</anchorfile>
      <anchor>a1031ee341b164aeaa32c95d1e6796191</anchor>
      <arglist>(&quot;DefaultStorage&quot;)</arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>cDoNotAlterAssetReferences</name>
      <anchorfile>_add_content_window_8cpp.html</anchorfile>
      <anchor>a733efe2a1979cbcbc13aaf9cccf28419</anchor>
      <arglist>(&quot;DoNotAlterAssetReferences&quot;)</arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cColumnEntityCreate</name>
      <anchorfile>_add_content_window_8cpp.html</anchorfile>
      <anchor>acb41b8e53610cc97ccca7ac26eb898c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cColumnEntityId</name>
      <anchorfile>_add_content_window_8cpp.html</anchorfile>
      <anchor>ac7d68ff577ba2f6d8f0d5f0f8a5839af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cColumnEntityName</name>
      <anchorfile>_add_content_window_8cpp.html</anchorfile>
      <anchor>a1e09ac8e11a65d08721d087b8e25c61a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cColumnAssetUpload</name>
      <anchorfile>_add_content_window_8cpp.html</anchorfile>
      <anchor>a83708f4f27833613607ffa56b6a51ca5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cColumnAssetTypeName</name>
      <anchorfile>_add_content_window_8cpp.html</anchorfile>
      <anchor>a1b87fd8df4b3c5c0a98b1080b0e3c573</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cColumnAssetSourceName</name>
      <anchorfile>_add_content_window_8cpp.html</anchorfile>
      <anchor>ac41d8f1998c29a13126d493e97553666</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cColumnAssetSubname</name>
      <anchorfile>_add_content_window_8cpp.html</anchorfile>
      <anchor>ab47b2fef5720c7a0650d0ab1b9dee301</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cColumnAssetDestName</name>
      <anchorfile>_add_content_window_8cpp.html</anchorfile>
      <anchor>ab8aa3380dc17473b2b1e0fd122f76e1e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AddContentWindow.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_add_content_window_8h</filename>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <includes id="_asset_fwd_8h" name="AssetFwd.h" local="yes" imported="no">AssetFwd.h</includes>
    <includes id="_scene_desc_8h" name="SceneDesc.h" local="yes" imported="no">SceneDesc.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <class kind="class">AddContentWindow</class>
  </compound>
  <compound kind="file">
    <name>AssetsWindow.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_assets_window_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_assets_window_8h" name="AssetsWindow.h" local="yes" imported="no">AssetsWindow.h</includes>
    <includes id="_asset_tree_widget_8h" name="AssetTreeWidget.h" local="yes" imported="no">AssetTreeWidget.h</includes>
    <includes id="_tree_widget_utils_8h" name="TreeWidgetUtils.h" local="yes" imported="no">TreeWidgetUtils.h</includes>
    <includes id="_scene_tree_widget_items_8h" name="SceneTreeWidgetItems.h" local="yes" imported="no">SceneTreeWidgetItems.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_i_asset_8h" name="IAsset.h" local="yes" imported="no">IAsset.h</includes>
    <includes id="_i_asset_storage_8h" name="IAssetStorage.h" local="yes" imported="no">IAssetStorage.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <namespace>anonymous_namespace{AssetsWindow.cpp}</namespace>
    <member kind="function">
      <type>bool</type>
      <name>HasSameRefAsPredecessors</name>
      <anchorfile>namespaceanonymous__namespace_02_assets_window_8cpp_03.html</anchorfile>
      <anchor>aa558bb548c1a31c966f9b890dacbf8b0</anchor>
      <arglist>(QTreeWidgetItem *item)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AssetsWindow.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_assets_window_8h</filename>
    <includes id="_asset_fwd_8h" name="AssetFwd.h" local="yes" imported="no">AssetFwd.h</includes>
    <class kind="class">AssetsWindow</class>
  </compound>
  <compound kind="file">
    <name>AssetTreeWidget.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_asset_tree_widget_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_asset_tree_widget_8h" name="AssetTreeWidget.h" local="yes" imported="no">AssetTreeWidget.h</includes>
    <includes id="_scene_tree_widget_items_8h" name="SceneTreeWidgetItems.h" local="yes" imported="no">SceneTreeWidgetItems.h</includes>
    <includes id="_add_content_window_8h" name="AddContentWindow.h" local="yes" imported="no">AddContentWindow.h</includes>
    <includes id="_supported_file_types_8h" name="SupportedFileTypes.h" local="yes" imported="no">SupportedFileTypes.h</includes>
    <includes id="_request_new_asset_dialog_8h" name="RequestNewAssetDialog.h" local="yes" imported="no">RequestNewAssetDialog.h</includes>
    <includes id="_clone_asset_dialog_8h" name="CloneAssetDialog.h" local="yes" imported="no">CloneAssetDialog.h</includes>
    <includes id="_function_dialog_8h" name="FunctionDialog.h" local="yes" imported="no">FunctionDialog.h</includes>
    <includes id="_assets_window_8h" name="AssetsWindow.h" local="yes" imported="no">AssetsWindow.h</includes>
    <includes id="_scene_a_p_i_8h" name="SceneAPI.h" local="yes" imported="no">SceneAPI.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_i_asset_8h" name="IAsset.h" local="yes" imported="no">IAsset.h</includes>
    <includes id="_i_asset_storage_8h" name="IAssetStorage.h" local="yes" imported="no">IAssetStorage.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_asset_cache_8h" name="AssetCache.h" local="yes" imported="no">AssetCache.h</includes>
    <includes id="_qt_utils_8h" name="QtUtils.h" local="yes" imported="no">QtUtils.h</includes>
    <includes id="_ui_a_p_i_8h" name="UiAPI.h" local="yes" imported="no">UiAPI.h</includes>
    <includes id="_function_invoker_8h" name="FunctionInvoker.h" local="yes" imported="no">FunctionInvoker.h</includes>
    <includes id="_argument_type_8h" name="ArgumentType.h" local="yes" imported="no">ArgumentType.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>AssetTreeWidget.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_asset_tree_widget_8h</filename>
    <includes id="_asset_fwd_8h" name="AssetFwd.h" local="yes" imported="no">AssetFwd.h</includes>
    <class kind="class">AssetTreeWidget</class>
  </compound>
  <compound kind="file">
    <name>CloneAssetDialog.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_clone_asset_dialog_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_clone_asset_dialog_8h" name="CloneAssetDialog.h" local="yes" imported="no">CloneAssetDialog.h</includes>
    <includes id="_i_asset_8h" name="IAsset.h" local="yes" imported="no">IAsset.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>CloneAssetDialog.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_clone_asset_dialog_8h</filename>
    <includes id="_asset_fwd_8h" name="AssetFwd.h" local="yes" imported="no">AssetFwd.h</includes>
    <class kind="class">CloneAssetDialog</class>
  </compound>
  <compound kind="file">
    <name>ComponentGroup.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_component_group_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_component_group_8h" name="ComponentGroup.h" local="yes" imported="no">ComponentGroup.h</includes>
    <includes id="_e_c_component_editor_8h" name="ECComponentEditor.h" local="yes" imported="no">ECComponentEditor.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_e_c___dynamic_component_8h" name="EC_DynamicComponent.h" local="yes" imported="no">EC_DynamicComponent.h</includes>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>ComponentGroup.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_component_group_8h</filename>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <class kind="struct">ComponentGroup</class>
  </compound>
  <compound kind="file">
    <name>dllmain.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>dllmain_8cpp</filename>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_e_c_editor_module_8h" name="ECEditorModule.h" local="yes" imported="no">ECEditorModule.h</includes>
    <includes id="_scene_structure_module_8h" name="SceneStructureModule.h" local="yes" imported="no">SceneStructureModule.h</includes>
    <member kind="function">
      <type>DLLEXPORT void</type>
      <name>TundraPluginMain</name>
      <anchorfile>dllmain_8cpp.html</anchorfile>
      <anchor>a5e5a5f8cd7055f51e852059f9ec87e99</anchor>
      <arglist>(Framework *fw)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ECEditorModule.dox</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/doc/</path>
    <filename>_e_c_editor_module_8dox</filename>
  </compound>
  <compound kind="file">
    <name>DoxygenDocReader.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_doxygen_doc_reader_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_doxygen_doc_reader_8h" name="DoxygenDocReader.h" local="yes" imported="no">DoxygenDocReader.h</includes>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>GuessClassDocumentationFilename</name>
      <anchorfile>_doxygen_doc_reader_8cpp.html</anchorfile>
      <anchor>a984002df593745338eabca24b9da31b2</anchor>
      <arglist>(QString functionName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>StripSymbolReturnValue</name>
      <anchorfile>_doxygen_doc_reader_8cpp.html</anchorfile>
      <anchor>a33506470c294cc8afb68c08659398db3</anchor>
      <arglist>(QString symbol)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>StripSymbolParameterList</name>
      <anchorfile>_doxygen_doc_reader_8cpp.html</anchorfile>
      <anchor>a91525305976335c703aa10e5182e9cc6</anchor>
      <arglist>(QString symbol)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>GuessFunctionDocumentationFilename</name>
      <anchorfile>_doxygen_doc_reader_8cpp.html</anchorfile>
      <anchor>afaefafab21edf1a1f228f6ea4f29a144</anchor>
      <arglist>(QString functionName)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>ErrorDocumentation</name>
      <anchorfile>_doxygen_doc_reader_8cpp.html</anchorfile>
      <anchor>ad02d5ee7120120366fcf806ee9c4c0aa</anchor>
      <arglist>(QString doxygenDocDirectory, QString expectedDocFilename, QString functionName, QString errorReason)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DoxygenDocReader.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_doxygen_doc_reader_8h</filename>
    <namespace>DoxygenDocReader</namespace>
    <member kind="function">
      <type>bool</type>
      <name>GetSymbolDocumentation</name>
      <anchorfile>namespace_doxygen_doc_reader.html</anchorfile>
      <anchor>a47aec06117e36ab41a2ee39afa49c77b</anchor>
      <arglist>(QString doxygenDocDirectory, QString functionName, QString *documentationOut)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSymbolDocumentation</name>
      <anchorfile>namespace_doxygen_doc_reader.html</anchorfile>
      <anchor>acb250538646325b09d7701c9fbc5ccda</anchor>
      <arglist>(QString functionName, QString *documentationOut, QUrl *docPathOut)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ECAttributeEditor.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_e_c_attribute_editor_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_e_c_attribute_editor_8h" name="ECAttributeEditor.h" local="yes" imported="no">ECAttributeEditor.h</includes>
    <includes id="_multi_edit_property_manager_8h" name="MultiEditPropertyManager.h" local="yes" imported="no">MultiEditPropertyManager.h</includes>
    <includes id="_multi_edit_property_factory_8h" name="MultiEditPropertyFactory.h" local="yes" imported="no">MultiEditPropertyFactory.h</includes>
    <includes id="_line_edit_property_factory_8h" name="LineEditPropertyFactory.h" local="yes" imported="no">LineEditPropertyFactory.h</includes>
    <includes id="_editor_button_factory_8h" name="EditorButtonFactory.h" local="yes" imported="no">EditorButtonFactory.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="float2_8h" name="float2.h" local="yes" imported="no">Math/float2.h</includes>
    <includes id="float4_8h" name="float4.h" local="yes" imported="no">Math/float4.h</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Math/Quat.h</includes>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_i_attribute_8h" name="IAttribute.h" local="yes" imported="no">IAttribute.h</includes>
    <includes id="_transform_8h" name="Transform.h" local="yes" imported="no">Transform.h</includes>
    <includes id="_asset_reference_8h" name="AssetReference.h" local="yes" imported="no">AssetReference.h</includes>
    <includes id="_assets_window_8h" name="AssetsWindow.h" local="yes" imported="no">AssetsWindow.h</includes>
    <includes id="_ui_a_p_i_8h" name="UiAPI.h" local="yes" imported="no">UiAPI.h</includes>
    <includes id="_ui_main_window_8h" name="UiMainWindow.h" local="yes" imported="no">UiMainWindow.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_i_asset_8h" name="IAsset.h" local="yes" imported="no">IAsset.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <member kind="function">
      <type>int</type>
      <name>ParseIndex</name>
      <anchorfile>_e_c_attribute_editor_8cpp.html</anchorfile>
      <anchor>a4ccb5b426ea847db4b291bca95ca6304</anchor>
      <arglist>(const QString &amp;objName)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ECAttributeEditor.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_e_c_attribute_editor_8h</filename>
    <includes id="float2_8h" name="float2.h" local="yes" imported="no">Math/float2.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="float4_8h" name="float4.h" local="yes" imported="no">Math/float4.h</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Math/Quat.h</includes>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_transform_8h" name="Transform.h" local="yes" imported="no">Transform.h</includes>
    <includes id="_asset_reference_8h" name="AssetReference.h" local="yes" imported="no">AssetReference.h</includes>
    <includes id="_entity_reference_8h" name="EntityReference.h" local="yes" imported="no">EntityReference.h</includes>
    <includes id="_asset_fwd_8h" name="AssetFwd.h" local="yes" imported="no">AssetFwd.h</includes>
    <includes id="_multi_edit_property_manager_8h" name="MultiEditPropertyManager.h" local="yes" imported="no">MultiEditPropertyManager.h</includes>
    <includes id="_multi_edit_property_factory_8h" name="MultiEditPropertyFactory.h" local="yes" imported="no">MultiEditPropertyFactory.h</includes>
    <includes id="_e_c_attribute_editor_8inl" name="ECAttributeEditor.inl" local="yes" imported="no">ECAttributeEditor.inl</includes>
    <class kind="class">ECAttributeEditorBase</class>
    <class kind="class">ECAttributeEditor</class>
    <class kind="class">AssetReferenceAttributeEditor</class>
    <class kind="class">AssetReferenceListAttributeEditor</class>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>MetaDataFlag</name>
      <anchorfile>_e_c_attribute_editor_8h.html</anchorfile>
      <anchor>a0f975a0126b8df808b0ce3ab6dc266d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>MetaDataFlags</name>
      <anchorfile>_e_c_attribute_editor_8h.html</anchorfile>
      <anchor>ad659d3240023e4a034b3f63ecb9ccf6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>None</name>
      <anchorfile>_e_c_attribute_editor_8h.html</anchorfile>
      <anchor>ad659d3240023e4a034b3f63ecb9ccf6dac9d3e887722f2bc482bcca9d41c512af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UsingEnums</name>
      <anchorfile>_e_c_attribute_editor_8h.html</anchorfile>
      <anchor>ad659d3240023e4a034b3f63ecb9ccf6da7c65b24309ff2fa9fd9384a993c82b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UsingMaxValue</name>
      <anchorfile>_e_c_attribute_editor_8h.html</anchorfile>
      <anchor>ad659d3240023e4a034b3f63ecb9ccf6da5d9d38142c7951d24f5b84c6497d4d83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UsingMinValue</name>
      <anchorfile>_e_c_attribute_editor_8h.html</anchorfile>
      <anchor>ad659d3240023e4a034b3f63ecb9ccf6daa16c0c443802a1dab84e4aa81b1845f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UsingStepValue</name>
      <anchorfile>_e_c_attribute_editor_8h.html</anchorfile>
      <anchor>ad659d3240023e4a034b3f63ecb9ccf6daf64d6aaa3c890341d25fd5e1a81468eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UsingDescription</name>
      <anchorfile>_e_c_attribute_editor_8h.html</anchorfile>
      <anchor>ad659d3240023e4a034b3f63ecb9ccf6da6f6823167029fd85c6c0a81707c808ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ECAttributeEditor.inl</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_e_c_attribute_editor_8inl</filename>
  </compound>
  <compound kind="file">
    <name>ECBrowser.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_e_c_browser_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_e_c_browser_8h" name="ECBrowser.h" local="yes" imported="no">ECBrowser.h</includes>
    <includes id="_component_group_8h" name="ComponentGroup.h" local="yes" imported="no">ComponentGroup.h</includes>
    <includes id="_e_c_component_editor_8h" name="ECComponentEditor.h" local="yes" imported="no">ECComponentEditor.h</includes>
    <includes id="_tree_widget_item_expand_memory_8h" name="TreeWidgetItemExpandMemory.h" local="yes" imported="no">TreeWidgetItemExpandMemory.h</includes>
    <includes id="_tree_widget_utils_8h" name="TreeWidgetUtils.h" local="yes" imported="no">TreeWidgetUtils.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_scene_a_p_i_8h" name="SceneAPI.h" local="yes" imported="no">SceneAPI.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_e_c___dynamic_component_8h" name="EC_DynamicComponent.h" local="yes" imported="no">EC_DynamicComponent.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>ECBrowser.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_e_c_browser_8h</filename>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_attribute_change_type_8h" name="AttributeChangeType.h" local="yes" imported="no">AttributeChangeType.h</includes>
    <class kind="class">ECBrowser</class>
    <member kind="define">
      <type>#define</type>
      <name>QT_QTPROPERTYBROWSER_IMPORT</name>
      <anchorfile>_e_c_browser_8h.html</anchorfile>
      <anchor>a363b1c98078089f7a51000737ac0dc7c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ECComponentEditor.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_e_c_component_editor_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_e_c_component_editor_8h" name="ECComponentEditor.h" local="yes" imported="no">ECComponentEditor.h</includes>
    <includes id="_e_c_editor_module_8h" name="ECEditorModule.h" local="yes" imported="no">ECEditorModule.h</includes>
    <includes id="_i_attribute_8h" name="IAttribute.h" local="yes" imported="no">IAttribute.h</includes>
    <includes id="_e_c_attribute_editor_8h" name="ECAttributeEditor.h" local="yes" imported="no">ECAttributeEditor.h</includes>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_transform_8h" name="Transform.h" local="yes" imported="no">Transform.h</includes>
    <includes id="_asset_reference_8h" name="AssetReference.h" local="yes" imported="no">AssetReference.h</includes>
    <includes id="_attribute_metadata_8h" name="AttributeMetadata.h" local="yes" imported="no">AttributeMetadata.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>ECComponentEditor.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_e_c_component_editor_8h</filename>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <includes id="_attribute_change_type_8h" name="AttributeChangeType.h" local="yes" imported="no">AttributeChangeType.h</includes>
    <class kind="class">ECComponentEditor</class>
  </compound>
  <compound kind="file">
    <name>ECEditorModule.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_e_c_editor_module_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_e_c_editor_module_8h" name="ECEditorModule.h" local="yes" imported="no">ECEditorModule.h</includes>
    <includes id="_e_c_editor_window_8h" name="ECEditorWindow.h" local="yes" imported="no">ECEditorWindow.h</includes>
    <includes id="_ec_xml_editor_widget_8h" name="EcXmlEditorWidget.h" local="yes" imported="no">EcXmlEditorWidget.h</includes>
    <includes id="_doxygen_doc_reader_8h" name="DoxygenDocReader.h" local="yes" imported="no">DoxygenDocReader.h</includes>
    <includes id="_tree_widget_item_expand_memory_8h" name="TreeWidgetItemExpandMemory.h" local="yes" imported="no">TreeWidgetItemExpandMemory.h</includes>
    <includes id="_scene_a_p_i_8h" name="SceneAPI.h" local="yes" imported="no">SceneAPI.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_input_a_p_i_8h" name="InputAPI.h" local="yes" imported="no">InputAPI.h</includes>
    <includes id="_ui_a_p_i_8h" name="UiAPI.h" local="yes" imported="no">UiAPI.h</includes>
    <includes id="_ui_main_window_8h" name="UiMainWindow.h" local="yes" imported="no">UiMainWindow.h</includes>
    <includes id="_console_a_p_i_8h" name="ConsoleAPI.h" local="yes" imported="no">ConsoleAPI.h</includes>
    <includes id="_config_a_p_i_8h" name="ConfigAPI.h" local="yes" imported="no">ConfigAPI.h</includes>
    <includes id="_e_c___placeable_8h" name="EC_Placeable.h" local="yes" imported="no">EC_Placeable.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <member kind="function">
      <type>const QString</type>
      <name>cShowAidsSetting</name>
      <anchorfile>_e_c_editor_module_8cpp.html</anchorfile>
      <anchor>aff1b18f3f47c21a87cbbc6d31502fd27</anchor>
      <arglist>(&quot;show visual editing aids&quot;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ECEditorModule.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_e_c_editor_module_8h</filename>
    <includes id="_i_module_8h" name="IModule.h" local="yes" imported="no">IModule.h</includes>
    <includes id="_e_c_editor_module_api_8h" name="ECEditorModuleApi.h" local="yes" imported="no">ECEditorModuleApi.h</includes>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <includes id="_input_fwd_8h" name="InputFwd.h" local="yes" imported="no">InputFwd.h</includes>
    <class kind="class">ECEditorModule</class>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; TreeWidgetItemExpandMemory &gt;</type>
      <name>ExpandMemoryPtr</name>
      <anchorfile>_e_c_editor_module_8h.html</anchorfile>
      <anchor>a6942a4c8dac7dc897bc2174ee166164b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ECEditorModuleApi.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_e_c_editor_module_api_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>ECEDITOR_MODULE_API</name>
      <anchorfile>_e_c_editor_module_api_8h.html</anchorfile>
      <anchor>a312cc81ba60a92d513a10173c912f7d2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ECEditorWindow.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_e_c_editor_window_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_e_c_editor_window_8h" name="ECEditorWindow.h" local="yes" imported="no">ECEditorWindow.h</includes>
    <includes id="_e_c_browser_8h" name="ECBrowser.h" local="yes" imported="no">ECBrowser.h</includes>
    <includes id="_entity_placer_8h" name="EntityPlacer.h" local="yes" imported="no">EntityPlacer.h</includes>
    <includes id="_add_component_dialog_8h" name="AddComponentDialog.h" local="yes" imported="no">AddComponentDialog.h</includes>
    <includes id="_entity_action_dialog_8h" name="EntityActionDialog.h" local="yes" imported="no">EntityActionDialog.h</includes>
    <includes id="_function_dialog_8h" name="FunctionDialog.h" local="yes" imported="no">FunctionDialog.h</includes>
    <includes id="_argument_type_8h" name="ArgumentType.h" local="yes" imported="no">ArgumentType.h</includes>
    <includes id="_function_invoker_8h" name="FunctionInvoker.h" local="yes" imported="no">FunctionInvoker.h</includes>
    <includes id="_e_c_editor_module_8h" name="ECEditorModule.h" local="yes" imported="no">ECEditorModule.h</includes>
    <includes id="_transform_editor_8h" name="TransformEditor.h" local="yes" imported="no">TransformEditor.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_application_8h" name="Application.h" local="yes" imported="no">Application.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_scene_a_p_i_8h" name="SceneAPI.h" local="yes" imported="no">SceneAPI.h</includes>
    <includes id="_e_c___name_8h" name="EC_Name.h" local="yes" imported="no">EC_Name.h</includes>
    <includes id="_e_c___placeable_8h" name="EC_Placeable.h" local="yes" imported="no">EC_Placeable.h</includes>
    <includes id="_input_a_p_i_8h" name="InputAPI.h" local="yes" imported="no">InputAPI.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <member kind="function">
      <type>const QString</type>
      <name>cEcEditorHighlight</name>
      <anchorfile>_e_c_editor_window_8cpp.html</anchorfile>
      <anchor>a4512947ff8a90e21a8f5c25c5c9dd372</anchor>
      <arglist>(&quot;EcEditorHighlight&quot;)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>AddUniqueListItem</name>
      <anchorfile>_e_c_editor_window_8cpp.html</anchorfile>
      <anchor>a3995afe279850f5a0ef94dbb3f29fbe5</anchor>
      <arglist>(const EntityPtr &amp;entity, QListWidget *list, const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CmpEntityById</name>
      <anchorfile>_e_c_editor_window_8cpp.html</anchorfile>
      <anchor>aca33df3d2467ac213183b72c952f4466</anchor>
      <arglist>(const EntityPtr &amp;a, const EntityPtr &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ECEditorWindow.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_e_c_editor_window_8h</filename>
    <includes id="_e_c_editor_module_api_8h" name="ECEditorModuleApi.h" local="yes" imported="no">ECEditorModuleApi.h</includes>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <class kind="struct">EntityComponentSelection</class>
    <class kind="class">EntityListWidgetItem</class>
    <class kind="class">ECEditorWindow</class>
  </compound>
  <compound kind="file">
    <name>EcXmlEditorWidget.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_ec_xml_editor_widget_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_ec_xml_editor_widget_8h" name="EcXmlEditorWidget.h" local="yes" imported="no">EcXmlEditorWidget.h</includes>
    <includes id="_e_c_editor_module_8h" name="ECEditorModule.h" local="yes" imported="no">ECEditorModule.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_scene_a_p_i_8h" name="SceneAPI.h" local="yes" imported="no">SceneAPI.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>EcXmlEditorWidget.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_ec_xml_editor_widget_8h</filename>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <class kind="class">EcXmlEditorWidget</class>
  </compound>
  <compound kind="file">
    <name>EditorButtonFactory.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_editor_button_factory_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_editor_button_factory_8h" name="EditorButtonFactory.h" local="yes" imported="no">EditorButtonFactory.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>EditorButtonFactory.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_editor_button_factory_8h</filename>
    <class kind="class">EditorButtonFactory</class>
  </compound>
  <compound kind="file">
    <name>EntityActionDialog.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_entity_action_dialog_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_entity_action_dialog_8h" name="EntityActionDialog.h" local="yes" imported="no">EntityActionDialog.h</includes>
    <includes id="_invoke_item_8h" name="InvokeItem.h" local="yes" imported="no">InvokeItem.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>EntityActionDialog.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_entity_action_dialog_8h</filename>
    <includes id="_e_c_editor_module_api_8h" name="ECEditorModuleApi.h" local="yes" imported="no">ECEditorModuleApi.h</includes>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <includes id="_entity_action_8h" name="EntityAction.h" local="yes" imported="no">EntityAction.h</includes>
    <class kind="class">EntityActionDialog</class>
  </compound>
  <compound kind="file">
    <name>EntityPlacer.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_entity_placer_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_entity_placer_8h" name="EntityPlacer.h" local="yes" imported="no">EntityPlacer.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_scene_a_p_i_8h" name="SceneAPI.h" local="yes" imported="no">SceneAPI.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_e_c___placeable_8h" name="EC_Placeable.h" local="yes" imported="no">EC_Placeable.h</includes>
    <includes id="_ogre_world_8h" name="OgreWorld.h" local="yes" imported="no">OgreWorld.h</includes>
    <includes id="_renderer_8h" name="Renderer.h" local="yes" imported="no">Renderer.h</includes>
    <includes id="_input_a_p_i_8h" name="InputAPI.h" local="yes" imported="no">InputAPI.h</includes>
    <includes id="_e_c___mesh_8h" name="EC_Mesh.h" local="yes" imported="no">EC_Mesh.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>EntityPlacer.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_entity_placer_8h</filename>
    <includes id="_input_fwd_8h" name="InputFwd.h" local="yes" imported="no">InputFwd.h</includes>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <includes id="_ogre_module_fwd_8h" name="OgreModuleFwd.h" local="yes" imported="no">OgreModuleFwd.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Math/Quat.h</includes>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <class kind="class">EntityPlacer</class>
  </compound>
  <compound kind="file">
    <name>FunctionDialog.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_function_dialog_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_function_dialog_8h" name="FunctionDialog.h" local="yes" imported="no">FunctionDialog.h</includes>
    <includes id="_argument_type_8h" name="ArgumentType.h" local="yes" imported="no">ArgumentType.h</includes>
    <includes id="_doxygen_doc_reader_8h" name="DoxygenDocReader.h" local="yes" imported="no">DoxygenDocReader.h</includes>
    <includes id="_function_invoker_8h" name="FunctionInvoker.h" local="yes" imported="no">FunctionInvoker.h</includes>
    <includes id="_invoke_item_8h" name="InvokeItem.h" local="yes" imported="no">InvokeItem.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>FunctionDialog.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_function_dialog_8h</filename>
    <includes id="_e_c_editor_module_api_8h" name="ECEditorModuleApi.h" local="yes" imported="no">ECEditorModuleApi.h</includes>
    <includes id="_entity_action_8h" name="EntityAction.h" local="yes" imported="no">EntityAction.h</includes>
    <class kind="struct">FunctionMetaData</class>
    <class kind="class">FunctionComboBox</class>
    <class kind="class">FunctionDialog</class>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; QObject &gt;</type>
      <name>QObjectWeakPtr</name>
      <anchorfile>_function_dialog_8h.html</anchorfile>
      <anchor>a3be0d6af0a9e31cc425419dbd602f443</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>QList&lt; QObjectWeakPtr &gt;</type>
      <name>QObjectWeakPtrList</name>
      <anchorfile>_function_dialog_8h.html</anchorfile>
      <anchor>a1e022dbc376b9940e791f118a7dfa440</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>InvokeItem.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_invoke_item_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_invoke_item_8h" name="InvokeItem.h" local="yes" imported="no">InvokeItem.h</includes>
    <includes id="_core_exception_8h" name="CoreException.h" local="yes" imported="no">CoreException.h</includes>
  </compound>
  <compound kind="file">
    <name>InvokeItem.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_invoke_item_8h</filename>
    <includes id="_e_c_editor_module_api_8h" name="ECEditorModuleApi.h" local="yes" imported="no">ECEditorModuleApi.h</includes>
    <includes id="_entity_action_8h" name="EntityAction.h" local="yes" imported="no">EntityAction.h</includes>
    <class kind="struct">InvokeItem</class>
  </compound>
  <compound kind="file">
    <name>LineEditPropertyFactory.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_line_edit_property_factory_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_line_edit_property_factory_8h" name="LineEditPropertyFactory.h" local="yes" imported="no">LineEditPropertyFactory.h</includes>
    <includes id="_function_invoker_8h" name="FunctionInvoker.h" local="yes" imported="no">FunctionInvoker.h</includes>
    <includes id="_editor_button_factory_8h" name="EditorButtonFactory.h" local="yes" imported="no">EditorButtonFactory.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>LineEditPropertyFactory.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_line_edit_property_factory_8h</filename>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <includes id="_i_attribute_8h" name="IAttribute.h" local="yes" imported="no">IAttribute.h</includes>
    <includes id="_attribute_metadata_8h" name="AttributeMetadata.h" local="yes" imported="no">AttributeMetadata.h</includes>
    <class kind="class">LineEditWithButtons</class>
    <class kind="class">LineEditPropertyFactory</class>
    <member kind="define">
      <type>#define</type>
      <name>QT_QTPROPERTYBROWSER_IMPORT</name>
      <anchorfile>_line_edit_property_factory_8h.html</anchorfile>
      <anchor>a363b1c98078089f7a51000737ac0dc7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>QMap&lt; QtProperty *, QWidget * &gt;</type>
      <name>PropertyToWidgetMap</name>
      <anchorfile>_line_edit_property_factory_8h.html</anchorfile>
      <anchor>a1662b9d1f7ad67d1f2bbb1277b41ee73</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>QMap&lt; QWidget *, QtProperty * &gt;</type>
      <name>WidgetToPropertyMap</name>
      <anchorfile>_line_edit_property_factory_8h.html</anchorfile>
      <anchor>afdbbc0aafd7c628369d590ad793cb60e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>QMap&lt; QtProperty *, AttributeMetadata::ButtonInfoList &gt;</type>
      <name>PropertyToButtonsMap</name>
      <anchorfile>_line_edit_property_factory_8h.html</anchorfile>
      <anchor>acaf6b14c4bdb8ec2f55ec4d8735d2b95</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>QMap&lt; QtProperty *, QList&lt; ComponentWeakPtr &gt; &gt;</type>
      <name>PropertyToComponentList</name>
      <anchorfile>_line_edit_property_factory_8h.html</anchorfile>
      <anchor>a0e2c3241cad1a2dd97930cd7416a5e82</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MultiEditPropertyFactory.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_multi_edit_property_factory_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_multi_edit_property_factory_8h" name="MultiEditPropertyFactory.h" local="yes" imported="no">MultiEditPropertyFactory.h</includes>
    <includes id="_editor_button_factory_8h" name="EditorButtonFactory.h" local="yes" imported="no">EditorButtonFactory.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>MultiEditPropertyFactory.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_multi_edit_property_factory_8h</filename>
    <includes id="_multi_edit_property_manager_8h" name="MultiEditPropertyManager.h" local="yes" imported="no">MultiEditPropertyManager.h</includes>
    <class kind="class">MultiEditButton</class>
    <class kind="class">MultiEditPropertyFactory</class>
    <member kind="define">
      <type>#define</type>
      <name>QT_QTPROPERTYBROWSER_IMPORT</name>
      <anchorfile>_multi_edit_property_factory_8h.html</anchorfile>
      <anchor>a363b1c98078089f7a51000737ac0dc7c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MultiEditPropertyManager.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_multi_edit_property_manager_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_multi_edit_property_manager_8h" name="MultiEditPropertyManager.h" local="yes" imported="no">MultiEditPropertyManager.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>MultiEditPropertyManager.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_multi_edit_property_manager_8h</filename>
    <includes id="_color_8h" name="Color.h" local="yes" imported="no">Color.h</includes>
    <class kind="class">MultiEditPropertyManager</class>
    <class kind="struct">MultiEditPropertyManager::Data</class>
    <member kind="define">
      <type>#define</type>
      <name>QT_QTPROPERTYBROWSER_IMPORT</name>
      <anchorfile>_multi_edit_property_manager_8h.html</anchorfile>
      <anchor>a363b1c98078089f7a51000737ac0dc7c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RequestNewAssetDialog.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_request_new_asset_dialog_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_request_new_asset_dialog_8h" name="RequestNewAssetDialog.h" local="yes" imported="no">RequestNewAssetDialog.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_i_asset_type_factory_8h" name="IAssetTypeFactory.h" local="yes" imported="no">IAssetTypeFactory.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>RequestNewAssetDialog.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_request_new_asset_dialog_8h</filename>
    <class kind="class">RequestNewAssetDialog</class>
  </compound>
  <compound kind="file">
    <name>SceneStructureModule.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_scene_structure_module_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_scene_structure_module_8h" name="SceneStructureModule.h" local="yes" imported="no">SceneStructureModule.h</includes>
    <includes id="_scene_structure_window_8h" name="SceneStructureWindow.h" local="yes" imported="no">SceneStructureWindow.h</includes>
    <includes id="_assets_window_8h" name="AssetsWindow.h" local="yes" imported="no">AssetsWindow.h</includes>
    <includes id="_supported_file_types_8h" name="SupportedFileTypes.h" local="yes" imported="no">SupportedFileTypes.h</includes>
    <includes id="_add_content_window_8h" name="AddContentWindow.h" local="yes" imported="no">AddContentWindow.h</includes>
    <includes id="_scene_a_p_i_8h" name="SceneAPI.h" local="yes" imported="no">SceneAPI.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_i_asset_8h" name="IAsset.h" local="yes" imported="no">IAsset.h</includes>
    <includes id="_i_asset_transfer_8h" name="IAssetTransfer.h" local="yes" imported="no">IAssetTransfer.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_console_a_p_i_8h" name="ConsoleAPI.h" local="yes" imported="no">ConsoleAPI.h</includes>
    <includes id="_input_a_p_i_8h" name="InputAPI.h" local="yes" imported="no">InputAPI.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_renderer_8h" name="Renderer.h" local="yes" imported="no">Renderer.h</includes>
    <includes id="_scene_importer_8h" name="SceneImporter.h" local="yes" imported="no">SceneImporter.h</includes>
    <includes id="_e_c___camera_8h" name="EC_Camera.h" local="yes" imported="no">EC_Camera.h</includes>
    <includes id="_e_c___placeable_8h" name="EC_Placeable.h" local="yes" imported="no">EC_Placeable.h</includes>
    <includes id="_e_c___mesh_8h" name="EC_Mesh.h" local="yes" imported="no">EC_Mesh.h</includes>
    <includes id="_ui_a_p_i_8h" name="UiAPI.h" local="yes" imported="no">UiAPI.h</includes>
    <includes id="_ui_graphics_view_8h" name="UiGraphicsView.h" local="yes" imported="no">UiGraphicsView.h</includes>
    <includes id="_ui_main_window_8h" name="UiMainWindow.h" local="yes" imported="no">UiMainWindow.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_scene_desc_8h" name="SceneDesc.h" local="yes" imported="no">SceneDesc.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>SceneStructureModule.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_scene_structure_module_8h</filename>
    <includes id="_i_module_8h" name="IModule.h" local="yes" imported="no">IModule.h</includes>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <includes id="_input_fwd_8h" name="InputFwd.h" local="yes" imported="no">InputFwd.h</includes>
    <includes id="_asset_fwd_8h" name="AssetFwd.h" local="yes" imported="no">AssetFwd.h</includes>
    <includes id="_asset_reference_8h" name="AssetReference.h" local="yes" imported="no">AssetReference.h</includes>
    <class kind="struct">SceneMaterialDropData</class>
    <class kind="class">SceneStructureModule</class>
  </compound>
  <compound kind="file">
    <name>SceneStructureWindow.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_scene_structure_window_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_scene_structure_window_8h" name="SceneStructureWindow.h" local="yes" imported="no">SceneStructureWindow.h</includes>
    <includes id="_scene_tree_widget_8h" name="SceneTreeWidget.h" local="yes" imported="no">SceneTreeWidget.h</includes>
    <includes id="_scene_tree_widget_items_8h" name="SceneTreeWidgetItems.h" local="yes" imported="no">SceneTreeWidgetItems.h</includes>
    <includes id="_tree_widget_utils_8h" name="TreeWidgetUtils.h" local="yes" imported="no">TreeWidgetUtils.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_e_c___name_8h" name="EC_Name.h" local="yes" imported="no">EC_Name.h</includes>
    <includes id="_asset_reference_8h" name="AssetReference.h" local="yes" imported="no">AssetReference.h</includes>
    <includes id="_e_c___dynamic_component_8h" name="EC_DynamicComponent.h" local="yes" imported="no">EC_DynamicComponent.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>SceneStructureWindow.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_scene_structure_window_8h</filename>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <class kind="class">SceneStructureWindow</class>
  </compound>
  <compound kind="file">
    <name>SceneTreeWidget.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_scene_tree_widget_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_scene_tree_widget_8h" name="SceneTreeWidget.h" local="yes" imported="no">SceneTreeWidget.h</includes>
    <includes id="_scene_tree_widget_items_8h" name="SceneTreeWidgetItems.h" local="yes" imported="no">SceneTreeWidgetItems.h</includes>
    <includes id="_scene_structure_module_8h" name="SceneStructureModule.h" local="yes" imported="no">SceneStructureModule.h</includes>
    <includes id="_supported_file_types_8h" name="SupportedFileTypes.h" local="yes" imported="no">SupportedFileTypes.h</includes>
    <includes id="_core_exception_8h" name="CoreException.h" local="yes" imported="no">CoreException.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_qt_utils_8h" name="QtUtils.h" local="yes" imported="no">QtUtils.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_scene_importer_8h" name="SceneImporter.h" local="yes" imported="no">SceneImporter.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_config_a_p_i_8h" name="ConfigAPI.h" local="yes" imported="no">ConfigAPI.h</includes>
    <includes id="_e_c_editor_window_8h" name="ECEditorWindow.h" local="yes" imported="no">ECEditorWindow.h</includes>
    <includes id="_e_c_editor_module_8h" name="ECEditorModule.h" local="yes" imported="no">ECEditorModule.h</includes>
    <includes id="_entity_action_dialog_8h" name="EntityActionDialog.h" local="yes" imported="no">EntityActionDialog.h</includes>
    <includes id="_add_component_dialog_8h" name="AddComponentDialog.h" local="yes" imported="no">AddComponentDialog.h</includes>
    <includes id="_function_dialog_8h" name="FunctionDialog.h" local="yes" imported="no">FunctionDialog.h</includes>
    <includes id="_argument_type_8h" name="ArgumentType.h" local="yes" imported="no">ArgumentType.h</includes>
    <includes id="_invoke_item_8h" name="InvokeItem.h" local="yes" imported="no">InvokeItem.h</includes>
    <includes id="_function_invoker_8h" name="FunctionInvoker.h" local="yes" imported="no">FunctionInvoker.h</includes>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_ogre_conversion_utils_8h" name="OgreConversionUtils.h" local="yes" imported="no">OgreConversionUtils.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_scene_a_p_i_8h" name="SceneAPI.h" local="yes" imported="no">SceneAPI.h</includes>
    <includes id="_i_asset_8h" name="IAsset.h" local="yes" imported="no">IAsset.h</includes>
    <includes id="_i_asset_transfer_8h" name="IAssetTransfer.h" local="yes" imported="no">IAssetTransfer.h</includes>
    <includes id="_ui_a_p_i_8h" name="UiAPI.h" local="yes" imported="no">UiAPI.h</includes>
    <includes id="_ui_main_window_8h" name="UiMainWindow.h" local="yes" imported="no">UiMainWindow.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>SceneTreeWidget.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_scene_tree_widget_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <includes id="_asset_fwd_8h" name="AssetFwd.h" local="yes" imported="no">AssetFwd.h</includes>
    <class kind="class">Menu</class>
    <class kind="class">SceneTreeWidget</class>
  </compound>
  <compound kind="file">
    <name>SceneTreeWidgetItems.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_scene_tree_widget_items_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_scene_tree_widget_items_8h" name="SceneTreeWidgetItems.h" local="yes" imported="no">SceneTreeWidgetItems.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_asset_reference_8h" name="AssetReference.h" local="yes" imported="no">AssetReference.h</includes>
    <includes id="_i_asset_8h" name="IAsset.h" local="yes" imported="no">IAsset.h</includes>
    <includes id="_i_asset_storage_8h" name="IAssetStorage.h" local="yes" imported="no">IAssetStorage.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>SceneTreeWidgetItems.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_scene_tree_widget_items_8h</filename>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <includes id="_asset_fwd_8h" name="AssetFwd.h" local="yes" imported="no">AssetFwd.h</includes>
    <class kind="class">EntityItem</class>
    <class kind="class">ComponentItem</class>
    <class kind="class">AssetRefItem</class>
    <class kind="struct">Selection</class>
    <class kind="class">AssetItem</class>
    <class kind="class">AssetStorageItem</class>
    <class kind="struct">AssetTreeWidgetSelection</class>
  </compound>
  <compound kind="file">
    <name>SupportedFileTypes.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_supported_file_types_8h</filename>
    <member kind="function">
      <type>const QString</type>
      <name>cTundraXmlFileExtension</name>
      <anchorfile>_supported_file_types_8h.html</anchorfile>
      <anchor>a59f17d86097bf894953e19f71790b302</anchor>
      <arglist>(&quot;.txml&quot;)</arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>cTundraBinFileExtension</name>
      <anchorfile>_supported_file_types_8h.html</anchorfile>
      <anchor>a446783cc72c9366eb7868a4efd87b5b3</anchor>
      <arglist>(&quot;.tbin&quot;)</arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>cOgreMeshFileExtension</name>
      <anchorfile>_supported_file_types_8h.html</anchorfile>
      <anchor>afb885497d69b93d7dfd136295f620b10</anchor>
      <arglist>(&quot;.mesh&quot;)</arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>cOgreSceneFileExtension</name>
      <anchorfile>_supported_file_types_8h.html</anchorfile>
      <anchor>a0da9652b5a71452c5a3121d3622cd2cf</anchor>
      <arglist>(&quot;.scene&quot;)</arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>cOgreSceneFileFilter</name>
      <anchorfile>_supported_file_types_8h.html</anchorfile>
      <anchor>a526a172182fe9faa6987d1ee8db724b8</anchor>
      <arglist>(QApplication::translate(&quot;SupportedFileTypes&quot;,&quot;OGRE scene (*.scene)&quot;))</arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>cOgreMeshFileFilter</name>
      <anchorfile>_supported_file_types_8h.html</anchorfile>
      <anchor>a5cf3c87714b416b4aa1cd74d3ab19d93</anchor>
      <arglist>(QApplication::translate(&quot;SupportedFileTypes&quot;,&quot;OGRE mesh (*.mesh)&quot;))</arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>cTundraXmlFileFilter</name>
      <anchorfile>_supported_file_types_8h.html</anchorfile>
      <anchor>a2d9ebb4801e771090517ac672ee88a09</anchor>
      <arglist>(QApplication::translate(&quot;SupportedFileTypes&quot;,&quot;Tundra scene XML(*.txml)&quot;))</arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>cTundraBinaryFileFilter</name>
      <anchorfile>_supported_file_types_8h.html</anchorfile>
      <anchor>a9aff6013f0ea26f42f25b3f98a56b87a</anchor>
      <arglist>(QApplication::translate(&quot;SupportedFileTypes&quot;,&quot;Tundra Binary Format (*.tbin)&quot;))</arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>cAllSupportedTypesFileFilter</name>
      <anchorfile>_supported_file_types_8h.html</anchorfile>
      <anchor>ab20f01e1cab9994f93c9d36413751337</anchor>
      <arglist>(QApplication::translate(&quot;SupportedFileTypes&quot;,&quot;All supported types (*.scene *.mesh *.txml *.tbin)&quot;))</arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>cAllTypesFileFilter</name>
      <anchorfile>_supported_file_types_8h.html</anchorfile>
      <anchor>a831fff6537070caf3f9802b76a7b7991</anchor>
      <arglist>(QApplication::translate(&quot;SupportedFileTypes&quot;,&quot;All types (*.*)&quot;))</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TransformEditor.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_transform_editor_8cpp</filename>
    <includes id="_transform_editor_8h" name="TransformEditor.h" local="yes" imported="no">TransformEditor.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_e_c___placeable_8h" name="EC_Placeable.h" local="yes" imported="no">EC_Placeable.h</includes>
    <includes id="_input_a_p_i_8h" name="InputAPI.h" local="yes" imported="no">InputAPI.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
  </compound>
  <compound kind="file">
    <name>TransformEditor.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_transform_editor_8h</filename>
    <includes id="_e_c_editor_module_api_8h" name="ECEditorModuleApi.h" local="yes" imported="no">ECEditorModuleApi.h</includes>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Math/Quat.h</includes>
    <includes id="_input_fwd_8h" name="InputFwd.h" local="yes" imported="no">InputFwd.h</includes>
    <class kind="struct">AttributeWeakPtr</class>
    <class kind="class">TransformEditor</class>
  </compound>
  <compound kind="file">
    <name>TreeWidgetItemExpandMemory.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_tree_widget_item_expand_memory_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_tree_widget_item_expand_memory_8h" name="TreeWidgetItemExpandMemory.h" local="yes" imported="no">TreeWidgetItemExpandMemory.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_config_a_p_i_8h" name="ConfigAPI.h" local="yes" imported="no">ConfigAPI.h</includes>
  </compound>
  <compound kind="file">
    <name>TreeWidgetItemExpandMemory.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_tree_widget_item_expand_memory_8h</filename>
    <class kind="class">TreeWidgetItemExpandMemory</class>
  </compound>
  <compound kind="file">
    <name>TreeWidgetUtils.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_tree_widget_utils_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <member kind="function">
      <type>void</type>
      <name>TreeWidgetSearch</name>
      <anchorfile>_tree_widget_utils_8cpp.html</anchorfile>
      <anchor>ac72a56798bd46a970068a6c833b3af6a</anchor>
      <arglist>(QTreeWidget *treeWidget, int column, const QString &amp;filter)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>TreeWidgetExpandOrCollapseAll</name>
      <anchorfile>_tree_widget_utils_8cpp.html</anchorfile>
      <anchor>a08e0d56af5570c78b57a869620692e02</anchor>
      <arglist>(QTreeWidget *treeWidget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TreeWidgetSetCheckStateForAllItems</name>
      <anchorfile>_tree_widget_utils_8cpp.html</anchorfile>
      <anchor>afb3a53d1c966427c0e915bd3828d2a92</anchor>
      <arglist>(QTreeWidget *treeWidget, int column, Qt::CheckState state)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TreeWidgetUtils.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/ECEditorModule/</path>
    <filename>_tree_widget_utils_8h</filename>
    <member kind="function">
      <type>void</type>
      <name>TreeWidgetSearch</name>
      <anchorfile>_tree_widget_utils_8h.html</anchorfile>
      <anchor>ac72a56798bd46a970068a6c833b3af6a</anchor>
      <arglist>(QTreeWidget *treeWidget, int column, const QString &amp;filter)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>TreeWidgetExpandOrCollapseAll</name>
      <anchorfile>_tree_widget_utils_8h.html</anchorfile>
      <anchor>a08e0d56af5570c78b57a869620692e02</anchor>
      <arglist>(QTreeWidget *treeWidget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TreeWidgetSetCheckStateForAllItems</name>
      <anchorfile>_tree_widget_utils_8h.html</anchorfile>
      <anchor>afb3a53d1c966427c0e915bd3828d2a92</anchor>
      <arglist>(QTreeWidget *treeWidget, int column, Qt::CheckState state)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EC_EnvironmentLight.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/EnvironmentModule/</path>
    <filename>_e_c___environment_light_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_e_c___environment_light_8h" name="EC_EnvironmentLight.h" local="yes" imported="no">EC_EnvironmentLight.h</includes>
    <includes id="_environment_module_8h" name="EnvironmentModule.h" local="yes" imported="no">EnvironmentModule.h</includes>
    <includes id="_e_c___placeable_8h" name="EC_Placeable.h" local="yes" imported="no">EC_Placeable.h</includes>
    <includes id="_i_attribute_8h" name="IAttribute.h" local="yes" imported="no">IAttribute.h</includes>
    <includes id="_attribute_metadata_8h" name="AttributeMetadata.h" local="yes" imported="no">AttributeMetadata.h</includes>
    <includes id="_renderer_8h" name="Renderer.h" local="yes" imported="no">Renderer.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_ogre_material_utils_8h" name="OgreMaterialUtils.h" local="yes" imported="no">OgreMaterialUtils.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_ogre_world_8h" name="OgreWorld.h" local="yes" imported="no">OgreWorld.h</includes>
    <includes id="_ogre_conversion_utils_8h" name="OgreConversionUtils.h" local="no" imported="no">OgreConversionUtils.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>OGRE_INTEROP</name>
      <anchorfile>_e_c___environment_light_8cpp.html</anchorfile>
      <anchor>a9af2b61539d42b83ffec719b22407071</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EC_EnvironmentLight.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/EnvironmentModule/</path>
    <filename>_e_c___environment_light_8h</filename>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="_ogre_module_fwd_8h" name="OgreModuleFwd.h" local="yes" imported="no">OgreModuleFwd.h</includes>
    <includes id="_color_8h" name="Color.h" local="yes" imported="no">Color.h</includes>
    <class kind="class">EC_EnvironmentLight</class>
  </compound>
  <compound kind="file">
    <name>EC_Fog.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/EnvironmentModule/</path>
    <filename>_e_c___fog_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_e_c___fog_8h" name="EC_Fog.h" local="yes" imported="no">EC_Fog.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_attribute_metadata_8h" name="AttributeMetadata.h" local="yes" imported="no">AttributeMetadata.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_ogre_world_8h" name="OgreWorld.h" local="yes" imported="no">OgreWorld.h</includes>
    <includes id="_renderer_8h" name="Renderer.h" local="yes" imported="no">Renderer.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>OGRE_INTEROP</name>
      <anchorfile>_e_c___fog_8cpp.html</anchorfile>
      <anchor>a9af2b61539d42b83ffec719b22407071</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EC_Fog.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/EnvironmentModule/</path>
    <filename>_e_c___fog_8h</filename>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_color_8h" name="Color.h" local="yes" imported="no">Color.h</includes>
    <class kind="class">EC_Fog</class>
  </compound>
  <compound kind="file">
    <name>EC_Sky.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/EnvironmentModule/</path>
    <filename>_e_c___sky_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_e_c___sky_8h" name="EC_Sky.h" local="yes" imported="no">EC_Sky.h</includes>
    <includes id="_renderer_8h" name="Renderer.h" local="yes" imported="no">Renderer.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_ogre_material_utils_8h" name="OgreMaterialUtils.h" local="yes" imported="no">OgreMaterialUtils.h</includes>
    <includes id="_ogre_world_8h" name="OgreWorld.h" local="yes" imported="no">OgreWorld.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_texture_asset_8h" name="TextureAsset.h" local="yes" imported="no">TextureAsset.h</includes>
    <includes id="_attribute_metadata_8h" name="AttributeMetadata.h" local="yes" imported="no">AttributeMetadata.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>OGRE_INTEROP</name>
      <anchorfile>_e_c___sky_8cpp.html</anchorfile>
      <anchor>a9af2b61539d42b83ffec719b22407071</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>cSkyBoxTextureCount</name>
      <anchorfile>_e_c___sky_8cpp.html</anchorfile>
      <anchor>a6222cbe86d16eb50457e012731846e59</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EC_Sky.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/EnvironmentModule/</path>
    <filename>_e_c___sky_8h</filename>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_i_attribute_8h" name="IAttribute.h" local="yes" imported="no">IAttribute.h</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Math/Quat.h</includes>
    <includes id="_asset_reference_8h" name="AssetReference.h" local="yes" imported="no">AssetReference.h</includes>
    <includes id="_ogre_module_fwd_8h" name="OgreModuleFwd.h" local="yes" imported="no">OgreModuleFwd.h</includes>
    <includes id="_asset_ref_listener_8h" name="AssetRefListener.h" local="yes" imported="no">AssetRefListener.h</includes>
    <class kind="class">EC_Sky</class>
  </compound>
  <compound kind="file">
    <name>EC_Terrain.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/EnvironmentModule/</path>
    <filename>_e_c___terrain_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_e_c___terrain_8h" name="EC_Terrain.h" local="yes" imported="no">EC_Terrain.h</includes>
    <includes id="_core_exception_8h" name="CoreException.h" local="yes" imported="no">CoreException.h</includes>
    <includes id="_binary_asset_8h" name="BinaryAsset.h" local="yes" imported="no">BinaryAsset.h</includes>
    <includes id="_renderer_8h" name="Renderer.h" local="yes" imported="no">Renderer.h</includes>
    <includes id="_i_module_8h" name="IModule.h" local="yes" imported="no">IModule.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_e_c___placeable_8h" name="EC_Placeable.h" local="yes" imported="no">EC_Placeable.h</includes>
    <includes id="_e_c___mesh_8h" name="EC_Mesh.h" local="yes" imported="no">EC_Mesh.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_i_asset_transfer_8h" name="IAssetTransfer.h" local="yes" imported="no">IAssetTransfer.h</includes>
    <includes id="_ogre_material_utils_8h" name="OgreMaterialUtils.h" local="yes" imported="no">OgreMaterialUtils.h</includes>
    <includes id="_ogre_material_asset_8h" name="OgreMaterialAsset.h" local="yes" imported="no">OgreMaterialAsset.h</includes>
    <includes id="_ogre_conversion_utils_8h" name="OgreConversionUtils.h" local="yes" imported="no">OgreConversionUtils.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_texture_asset_8h" name="TextureAsset.h" local="yes" imported="no">TextureAsset.h</includes>
    <includes id="_attribute_metadata_8h" name="AttributeMetadata.h" local="yes" imported="no">AttributeMetadata.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_ogre_world_8h" name="OgreWorld.h" local="yes" imported="no">OgreWorld.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_disable_memory_leak_check_8h" name="DisableMemoryLeakCheck.h" local="yes" imported="no">DisableMemoryLeakCheck.h</includes>
    <includes id="_enable_memory_leak_check_8h" name="EnableMemoryLeakCheck.h" local="yes" imported="no">EnableMemoryLeakCheck.h</includes>
    <namespace>anonymous_namespace{EC_Terrain.cpp}</namespace>
    <member kind="define">
      <type>#define</type>
      <name>OGRE_INTEROP</name>
      <anchorfile>_e_c___terrain_8cpp.html</anchorfile>
      <anchor>a9af2b61539d42b83ffec719b22407071</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Ogre::Matrix4</type>
      <name>GetWorldTransform</name>
      <anchorfile>namespaceanonymous__namespace_02_e_c___terrain_8cpp_03.html</anchorfile>
      <anchor>ae0c4aefa6dab1832330bac1164e949cf</anchor>
      <arglist>(Ogre::SceneNode *node)</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>ReadU32</name>
      <anchorfile>_e_c___terrain_8cpp.html</anchorfile>
      <anchor>a71234a681e7e43fe94db0ecc4df49986</anchor>
      <arglist>(const char *dataPtr, size_t numBytes, int &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetUnskinnedMeshGeometry</name>
      <anchorfile>_e_c___terrain_8cpp.html</anchorfile>
      <anchor>ac43c04a962f218e9ef661d649ee73af6</anchor>
      <arglist>(Ogre::Mesh *mesh, std::vector&lt; Ogre::Vector3 &gt; &amp;vertices, std::vector&lt; uint &gt; &amp;indices, std::vector&lt; uint &gt; &amp;submeshstartindex)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>FindClosestRayIntersection</name>
      <anchorfile>_e_c___terrain_8cpp.html</anchorfile>
      <anchor>af4e9d970bec05825f0cd826883d67f07</anchor>
      <arglist>(const Ogre::Ray &amp;ray, const std::vector&lt; Ogre::Vector3 &gt; &amp;vertices, const std::vector&lt; uint &gt; &amp;indices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ComputeAABB</name>
      <anchorfile>_e_c___terrain_8cpp.html</anchorfile>
      <anchor>ae265c93a547b39b808e4296966e31340</anchor>
      <arglist>(const std::vector&lt; Ogre::Vector3 &gt; &amp;vertices, Ogre::Vector3 &amp;minExtents, Ogre::Vector3 &amp;maxExtents)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EC_Terrain.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/EnvironmentModule/</path>
    <filename>_e_c___terrain_8h</filename>
    <includes id="_environment_module_api_8h" name="EnvironmentModuleApi.h" local="yes" imported="no">EnvironmentModuleApi.h</includes>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="_transform_8h" name="Transform.h" local="yes" imported="no">Transform.h</includes>
    <includes id="_asset_reference_8h" name="AssetReference.h" local="yes" imported="no">AssetReference.h</includes>
    <includes id="_asset_fwd_8h" name="AssetFwd.h" local="yes" imported="no">AssetFwd.h</includes>
    <includes id="_asset_ref_listener_8h" name="AssetRefListener.h" local="yes" imported="no">AssetRefListener.h</includes>
    <includes id="_ogre_module_fwd_8h" name="OgreModuleFwd.h" local="yes" imported="no">OgreModuleFwd.h</includes>
    <class kind="class">EC_Terrain</class>
    <class kind="struct">EC_Terrain::Patch</class>
    <namespace>Ogre</namespace>
  </compound>
  <compound kind="file">
    <name>EC_WaterPlane.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/EnvironmentModule/</path>
    <filename>_e_c___water_plane_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_e_c___water_plane_8h" name="EC_WaterPlane.h" local="yes" imported="no">EC_WaterPlane.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_e_c___placeable_8h" name="EC_Placeable.h" local="yes" imported="no">EC_Placeable.h</includes>
    <includes id="_i_attribute_8h" name="IAttribute.h" local="yes" imported="no">IAttribute.h</includes>
    <includes id="_attribute_metadata_8h" name="AttributeMetadata.h" local="yes" imported="no">AttributeMetadata.h</includes>
    <includes id="_renderer_8h" name="Renderer.h" local="yes" imported="no">Renderer.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_ogre_material_utils_8h" name="OgreMaterialUtils.h" local="yes" imported="no">OgreMaterialUtils.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_ogre_world_8h" name="OgreWorld.h" local="yes" imported="no">OgreWorld.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_ogre_conversion_utils_8h" name="OgreConversionUtils.h" local="no" imported="no">OgreConversionUtils.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>OGRE_INTEROP</name>
      <anchorfile>_e_c___water_plane_8cpp.html</anchorfile>
      <anchor>a9af2b61539d42b83ffec719b22407071</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EC_WaterPlane.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/EnvironmentModule/</path>
    <filename>_e_c___water_plane_8h</filename>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_color_8h" name="Color.h" local="yes" imported="no">Color.h</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Math/Quat.h</includes>
    <includes id="_ogre_module_fwd_8h" name="OgreModuleFwd.h" local="yes" imported="no">OgreModuleFwd.h</includes>
    <includes id="_asset_reference_8h" name="AssetReference.h" local="yes" imported="no">AssetReference.h</includes>
    <class kind="class">EC_WaterPlane</class>
  </compound>
  <compound kind="file">
    <name>EnvironmentModule.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/EnvironmentModule/</path>
    <filename>_environment_module_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_environment_module_8h" name="EnvironmentModule.h" local="yes" imported="no">EnvironmentModule.h</includes>
    <includes id="_e_c___water_plane_8h" name="EC_WaterPlane.h" local="yes" imported="no">EC_WaterPlane.h</includes>
    <includes id="_e_c___fog_8h" name="EC_Fog.h" local="yes" imported="no">EC_Fog.h</includes>
    <includes id="_e_c___sky_8h" name="EC_Sky.h" local="yes" imported="no">EC_Sky.h</includes>
    <includes id="_e_c___environment_light_8h" name="EC_EnvironmentLight.h" local="yes" imported="no">EC_EnvironmentLight.h</includes>
    <includes id="_e_c___terrain_8h" name="EC_Terrain.h" local="yes" imported="no">EC_Terrain.h</includes>
    <includes id="_scene_a_p_i_8h" name="SceneAPI.h" local="yes" imported="no">SceneAPI.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_generic_asset_factory_8h" name="GenericAssetFactory.h" local="yes" imported="no">GenericAssetFactory.h</includes>
    <includes id="_renderer_8h" name="Renderer.h" local="yes" imported="no">Renderer.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_composition_handler_8h" name="CompositionHandler.h" local="yes" imported="no">CompositionHandler.h</includes>
    <includes id="_e_c___name_8h" name="EC_Name.h" local="yes" imported="no">EC_Name.h</includes>
    <includes id="_i_component_factory_8h" name="IComponentFactory.h" local="yes" imported="no">IComponentFactory.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <namespace>Environment</namespace>
    <member kind="function">
      <type>DLLEXPORT void</type>
      <name>TundraPluginMain</name>
      <anchorfile>_environment_module_8cpp.html</anchorfile>
      <anchor>a5e5a5f8cd7055f51e852059f9ec87e99</anchor>
      <arglist>(Framework *fw)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EnvironmentModule.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/EnvironmentModule/</path>
    <filename>_environment_module_8h</filename>
    <includes id="_environment_module_api_8h" name="EnvironmentModuleApi.h" local="yes" imported="no">EnvironmentModuleApi.h</includes>
    <includes id="_i_module_8h" name="IModule.h" local="yes" imported="no">IModule.h</includes>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <class kind="class">Environment::EnvironmentModule</class>
    <namespace>Environment</namespace>
  </compound>
  <compound kind="file">
    <name>EnvironmentModuleApi.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/EnvironmentModule/</path>
    <filename>_environment_module_api_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>ENVIRONMENT_MODULE_API</name>
      <anchorfile>_environment_module_api_8h.html</anchorfile>
      <anchor>a4a7a5f2e7513f35f8fdebcd66c91f60a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TerrainLabel.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/EnvironmentModule/</path>
    <filename>_terrain_label_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_terrain_label_8h" name="TerrainLabel.h" local="yes" imported="no">TerrainLabel.h</includes>
    <namespace>Environment</namespace>
  </compound>
  <compound kind="file">
    <name>TerrainLabel.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/EnvironmentModule/</path>
    <filename>_terrain_label_8h</filename>
    <class kind="class">Environment::TerrainLabel</class>
    <namespace>Environment</namespace>
  </compound>
  <compound kind="file">
    <name>Application.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_application_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_application_8h" name="Application.h" local="yes" imported="no">Application.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_version_info_8h" name="VersionInfo.h" local="yes" imported="no">VersionInfo.h</includes>
    <includes id="_config_a_p_i_8h" name="ConfigAPI.h" local="yes" imported="no">ConfigAPI.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_core_string_utils_8h" name="CoreStringUtils.h" local="yes" imported="no">CoreStringUtils.h</includes>
    <includes id="_core_exception_8h" name="CoreException.h" local="yes" imported="no">CoreException.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>Application.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_application_8h</filename>
    <class kind="class">Application</class>
  </compound>
  <compound kind="file">
    <name>ArgumentType.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_argument_type_8h</filename>
    <includes id="_core_string_utils_8h" name="CoreStringUtils.h" local="yes" imported="no">CoreStringUtils.h</includes>
    <class kind="class">IArgumentType</class>
    <class kind="class">ArgumentType</class>
    <class kind="class">VoidArgumentType</class>
  </compound>
  <compound kind="file">
    <name>Color.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_color_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_math_func_8h" name="MathFunc.h" local="yes" imported="no">Math/MathFunc.h</includes>
    <class kind="class">Color</class>
  </compound>
  <compound kind="file">
    <name>ConfigAPI.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_config_a_p_i_8cpp</filename>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_config_a_p_i_8h" name="ConfigAPI.h" local="yes" imported="no">ConfigAPI.h</includes>
    <includes id="_application_8h" name="Application.h" local="yes" imported="no">Application.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
  </compound>
  <compound kind="file">
    <name>ConfigAPI.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_config_a_p_i_8h</filename>
    <class kind="class">ConfigData</class>
    <class kind="class">ConfigAPI</class>
  </compound>
  <compound kind="file">
    <name>CoreDefines.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_core_defines_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>DLLEXPORT</name>
      <anchorfile>_core_defines_8h.html</anchorfile>
      <anchor>a808e08638be3cba36e36759e5b150de0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAFE_DELETE</name>
      <anchorfile>_core_defines_8h.html</anchorfile>
      <anchor>a9bbcd82e77c41df827c09759def05c9a</anchor>
      <arglist>(p)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAFE_DELETE_ARRAY</name>
      <anchorfile>_core_defines_8h.html</anchorfile>
      <anchor>a506b3685b3eb05aac751f9e14cbed93b</anchor>
      <arglist>(p)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NUMELEMS</name>
      <anchorfile>_core_defines_8h.html</anchorfile>
      <anchor>acb13da7c4795f57ff42e601407e72752</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNREFERENCED_PARAM</name>
      <anchorfile>_core_defines_8h.html</anchorfile>
      <anchor>a6e4e1b43846b92ee471fa30e712b03f1</anchor>
      <arglist>(P)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAFE_DELETE_LATER</name>
      <anchorfile>_core_defines_8h.html</anchorfile>
      <anchor>a6984b25afde6734a69a0717ef19b03ce</anchor>
      <arglist>(p)</arglist>
    </member>
    <member kind="function">
      <type>Dst</type>
      <name>checked_static_cast</name>
      <anchorfile>_core_defines_8h.html</anchorfile>
      <anchor>a8edaf6c1ef2d6d0c5577c6de5aa770db</anchor>
      <arglist>(Src src)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CoreException.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_core_exception_8h</filename>
    <class kind="class">Exception</class>
  </compound>
  <compound kind="file">
    <name>CoreMath.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_core_math_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <class kind="union">inttofloat</class>
    <member kind="define">
      <type>#define</type>
      <name>F32_AS_S32</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>afc4f1a86cb2a79c560b29ee5edd0f94d</anchor>
      <arglist>(f)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F32_AS_U32</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>afdeb4b30296d2b1dccec72427bdb39f2</anchor>
      <arglist>(f)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F32_AS_U32_POINTER</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>ab5498fea750901e87dfeca4e27425f16</anchor>
      <arglist>(f)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F32_VALUE_0</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>aff2ace8fbd4b2ee6833ae0ed8dd9469a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F32_VALUE_1</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a93465b810662025b38f42244b100fc2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F32_SIGN_BIT</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a58566d4b084b3c9740b3215cf7a607bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F32_EXPON_MANTISSA</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a94abc82f2a2794c8331c9dad9a06958b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AIR</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>aa854d8430e0acc31adb1ddb3647f6534</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEEE_1_0</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a3ec4980c07f6b510c61230356e014d24</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEEE_255_0</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a2b311316554140ac181c31d86f4f3786</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F32_LOWER_0</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>aa86a7d03858f88ebbf9e36592583ced6</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F32_LOWER_EQUAL_0</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a26bc42a9cc1fc775bc588052c32ff9a0</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F32_GREATER_0</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a2fdc9e94ce29e1866ddf64e5903d43a1</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F32_GREATER_EQUAL_0</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a407afe61680cc405bbe04922d36423af</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F32_EQUAL_1</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>ae907baf637203996fb3187581c2def80</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F32_EQUAL_0</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a3c82a09fb606a67c19514b534d364d6c</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F32_A_GREATER_B</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>ab4092d1d22af18e03372117e347b633c</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REALINLINE</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a3695e51e0a187a6c49684ba3206b0d0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>f32</type>
      <name>radToDeg</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a3eb97e7415cf4f9f175d037cdb4cff05</anchor>
      <arglist>(f32 radians)</arglist>
    </member>
    <member kind="function">
      <type>f64</type>
      <name>radToDeg</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a45de4552d7572e42b06275d62d7c2535</anchor>
      <arglist>(f64 radians)</arglist>
    </member>
    <member kind="function">
      <type>f32</type>
      <name>degToRad</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>ab37dd9700f622785a9aa524b38c09dbf</anchor>
      <arglist>(f32 degrees)</arglist>
    </member>
    <member kind="function">
      <type>f64</type>
      <name>degToRad</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a48887a61c2f5c9f8c90b2c9f67c34aec</anchor>
      <arglist>(f64 degrees)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>min_</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a5751c4e7be94bdefcf9574ced6b6a896</anchor>
      <arglist>(const T &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>min_</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a58df4e829bc2d2c9bce894e9348a9024</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const T &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>max_</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>ace83ea7874df55062aa7e836d4cd6364</anchor>
      <arglist>(const T &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>max_</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a5200e9aea215557d94dd1c577edd8a6c</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const T &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>abs_</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>ab7ad3c4aa866e1d4de04d4a045f54829</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lerp</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a3aa42f86332d5949e53636be5825cfdc</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const f32 t)</arglist>
    </member>
    <member kind="function">
      <type>const T</type>
      <name>clamp</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a11dbe9c513a76202e7725bd0852778e3</anchor>
      <arglist>(const T &amp;value, const T &amp;low, const T &amp;high)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equals</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a5d19df97cf3d7b346c9cea600a5bf693</anchor>
      <arglist>(const f64 a, const f64 b, const f64 tolerance=ROUNDING_ERROR_64)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equals</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>ae14015dc9df2b525cc9b1c9043bae27e</anchor>
      <arglist>(const f32 a, const f32 b, const f32 tolerance=ROUNDING_ERROR_32)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equals</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>affd30c1ab89a3c24673ff711d11cf9b8</anchor>
      <arglist>(const s32 a, const s32 b, const s32 tolerance=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equals</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a306f97445d88d7c3b234eafd14598776</anchor>
      <arglist>(const u32 a, const u32 b, const u32 tolerance=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>iszero</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a9286debd83ed20d0ad6a305ccde429de</anchor>
      <arglist>(const f32 a, const f32 tolerance=ROUNDING_ERROR_32)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>iszero</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a424ad7d127cac77f507b6f7e8a139071</anchor>
      <arglist>(const s32 a, const s32 tolerance=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>iszero</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a436bd76ca7f756d8b2cfed4e389f63a2</anchor>
      <arglist>(const u32 a, const u32 tolerance=0)</arglist>
    </member>
    <member kind="function">
      <type>s32</type>
      <name>s32_min</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a788549ae6ee14fba45d819c166e6fdc7</anchor>
      <arglist>(s32 a, s32 b)</arglist>
    </member>
    <member kind="function">
      <type>s32</type>
      <name>s32_max</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a17edd9b4cd441401b99715b426ae69a6</anchor>
      <arglist>(s32 a, s32 b)</arglist>
    </member>
    <member kind="function">
      <type>s32</type>
      <name>s32_clamp</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a1a595bd7e8461416cd9ee0ab3473168b</anchor>
      <arglist>(s32 value, s32 low, s32 high)</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>IR</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>af886cae89140b090483b510a54943802</anchor>
      <arglist>(f32 x)</arglist>
    </member>
    <member kind="function">
      <type>f32</type>
      <name>FR</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a672b250edf270fd206cf93672734f2ac</anchor>
      <arglist>(u32 x)</arglist>
    </member>
    <member kind="function">
      <type>f32</type>
      <name>FR</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a3ba0812e9e42604943408427220f40e3</anchor>
      <arglist>(s32 x)</arglist>
    </member>
    <member kind="function">
      <type>REALINLINE u32</type>
      <name>if_c_a_else_b</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a6845464017fd9358eb28ec8d1c8201ad</anchor>
      <arglist>(const s32 condition, const u32 a, const u32 b)</arglist>
    </member>
    <member kind="function">
      <type>REALINLINE u32</type>
      <name>if_c_a_else_0</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a8e6da3cb13d480b7041c046528e4000f</anchor>
      <arglist>(const s32 condition, const u32 a)</arglist>
    </member>
    <member kind="function">
      <type>REALINLINE void</type>
      <name>setbit_cond</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>abefcb87923b2c0b0080451c59028f8aa</anchor>
      <arglist>(u32 &amp;state, s32 condition, u32 mask)</arglist>
    </member>
    <member kind="function">
      <type>f32</type>
      <name>round_</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a4bf3e2f1ff98b87fdf30f5ca102ebe03</anchor>
      <arglist>(f32 x)</arglist>
    </member>
    <member kind="function">
      <type>REALINLINE void</type>
      <name>clearFPUException</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a7f2b134026112c990c9a3b559ebf3eb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>REALINLINE f32</type>
      <name>reciprocal_squareroot</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>aab5aa252a71363c199a4e7503b933035</anchor>
      <arglist>(const f32 x)</arglist>
    </member>
    <member kind="function">
      <type>REALINLINE f32</type>
      <name>reciprocal</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a09d7f0b6c94f36b522e44c681659f1cf</anchor>
      <arglist>(const f32 f)</arglist>
    </member>
    <member kind="function">
      <type>REALINLINE f32</type>
      <name>reciprocal_approxim</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a638527d284a10927cf63bd1077c2b01b</anchor>
      <arglist>(const f32 p)</arglist>
    </member>
    <member kind="function">
      <type>REALINLINE s32</type>
      <name>floor32</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a3fe781602eda972aee0daf942f0c286d</anchor>
      <arglist>(f32 x)</arglist>
    </member>
    <member kind="function">
      <type>REALINLINE s32</type>
      <name>ceil32</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a396d8a509d488b5983d68788d4a3578f</anchor>
      <arglist>(f32 x)</arglist>
    </member>
    <member kind="function">
      <type>REALINLINE s32</type>
      <name>round32</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>ad3d193fb31d1ca0ee591ad89f752efe1</anchor>
      <arglist>(f32 x)</arglist>
    </member>
    <member kind="function">
      <type>f32</type>
      <name>f32_max3</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a00e23b554f408c4b8a5e091035993a83</anchor>
      <arglist>(const f32 a, const f32 b, const f32 c)</arglist>
    </member>
    <member kind="function">
      <type>f32</type>
      <name>f32_min3</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>ac93dd64d6ecd7da99f4b971afc7c510e</anchor>
      <arglist>(const f32 a, const f32 b, const f32 c)</arglist>
    </member>
    <member kind="function">
      <type>f32</type>
      <name>fract</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a9190fa680c1b791c5b59856f4dd44d3f</anchor>
      <arglist>(f32 x)</arglist>
    </member>
    <member kind="variable">
      <type>const f32</type>
      <name>ROUNDING_ERROR_32</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a640e8d8d20132fa577ee9155d09f4299</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const f64</type>
      <name>ROUNDING_ERROR_64</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a6e3919ad23fa6c4a53308b21d5c4e47e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const f32</type>
      <name>PI</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a560a2f8c6d0a1624930a29e3dc348ec5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const f32</type>
      <name>RECIPROCAL_PI</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a6e0212d6fa3e6308be94ff17638d6b25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const f32</type>
      <name>HALF_PI</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a6e89f253c0893181fc5765f1d7542c16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const f64</type>
      <name>PI64</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a1584229d123c88ab75cdfcdeae13b820</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const f64</type>
      <name>RECIPROCAL_PI64</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>aa0fbde3a45fc5ce8089d3cc84be7bb3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const f32</type>
      <name>DEGTORAD</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a0b0f159873c9c20cf1fc5848deacd26c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const f32</type>
      <name>RADTODEG</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a2d77a296d54ca40535a34329db509ad1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const f64</type>
      <name>DEGTORAD64</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>a1bd2d79eb3595954a676c7fe5e4fc062</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const f64</type>
      <name>RADTODEG64</name>
      <anchorfile>_core_math_8h.html</anchorfile>
      <anchor>afff76752c783346b90ec2b42fdf89956</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CoreStringUtils.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_core_string_utils_8cpp</filename>
    <includes id="_core_string_utils_8h" name="CoreStringUtils.h" local="yes" imported="no">CoreStringUtils.h</includes>
    <member kind="function">
      <type>QString</type>
      <name>QStringfromWCharArray</name>
      <anchorfile>_core_string_utils_8cpp.html</anchorfile>
      <anchor>acc7358e987fc17d369eed6aecf6e75b3</anchor>
      <arglist>(const wchar_t *string, int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>QStringtoWCharArray</name>
      <anchorfile>_core_string_utils_8cpp.html</anchorfile>
      <anchor>a412880b5fb5bf7e5a267cdeeec2a2b5c</anchor>
      <arglist>(QString qstr, wchar_t *array)</arglist>
    </member>
    <member kind="function">
      <type>std::wstring</type>
      <name>QStringToWString</name>
      <anchorfile>_core_string_utils_8cpp.html</anchorfile>
      <anchor>a3986c0c70e5ab63e93ab21141b09cc24</anchor>
      <arglist>(const QString &amp;qstr)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>WStringToQString</name>
      <anchorfile>_core_string_utils_8cpp.html</anchorfile>
      <anchor>a591d8b59b388020b6830158250ef8ab6</anchor>
      <arglist>(const std::wstring &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>std::wstring</type>
      <name>ToWString</name>
      <anchorfile>_core_string_utils_8cpp.html</anchorfile>
      <anchor>a068bbf966d171bd81a50b32d3868cc7b</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>BufferToString</name>
      <anchorfile>_core_string_utils_8cpp.html</anchorfile>
      <anchor>a3e7cd2da219a32ba961bad012701107f</anchor>
      <arglist>(const std::vector&lt; s8 &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; s8 &gt;</type>
      <name>StringToBuffer</name>
      <anchorfile>_core_string_utils_8cpp.html</anchorfile>
      <anchor>adf7be3e9707e6fc0f214886c5a05d61b</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>StringVector</type>
      <name>SplitString</name>
      <anchorfile>_core_string_utils_8cpp.html</anchorfile>
      <anchor>a96918799f43bfdccb976ce2b6b99b102</anchor>
      <arglist>(const std::string &amp;str, char separator)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ReplaceSubstring</name>
      <anchorfile>_core_string_utils_8cpp.html</anchorfile>
      <anchor>a4c9a2afae2d48803b576412d16d1106a</anchor>
      <arglist>(const std::string &amp;str, const std::string &amp;replace_this, const std::string &amp;replace_with)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ReplaceChar</name>
      <anchorfile>_core_string_utils_8cpp.html</anchorfile>
      <anchor>a407fdf4bf25e4e6ea5ac5c971969c2b1</anchor>
      <arglist>(const std::string &amp;str, char replace_this, char replace_with)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReplaceSubstringInplace</name>
      <anchorfile>_core_string_utils_8cpp.html</anchorfile>
      <anchor>a1e5e3388f2f936feda93c049e019aaf2</anchor>
      <arglist>(std::string &amp;str, const std::string &amp;replace_this, const std::string &amp;replace_with)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReplaceCharInplace</name>
      <anchorfile>_core_string_utils_8cpp.html</anchorfile>
      <anchor>acf483e9f1218895f3fbbae0f75630f2b</anchor>
      <arglist>(std::string &amp;str, char replace_this, char replace_with)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>GetHash</name>
      <anchorfile>_core_string_utils_8cpp.html</anchorfile>
      <anchor>a29604acc2c51cc1df3eec149afad0736</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>GetHash</name>
      <anchorfile>_core_string_utils_8cpp.html</anchorfile>
      <anchor>a189501cf8b7a6c0ec4267098cdc40c25</anchor>
      <arglist>(const QString &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ParseBool</name>
      <anchorfile>_core_string_utils_8cpp.html</anchorfile>
      <anchor>aa03e465fafbafbbcdb09a7c64a419370</anchor>
      <arglist>(const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ParseBool</name>
      <anchorfile>_core_string_utils_8cpp.html</anchorfile>
      <anchor>a57a6f28612ea55da08be838345f61d79</anchor>
      <arglist>(const QString &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CoreStringUtils.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_core_string_utils_8h</filename>
    <includes id="_core_defines_8h" name="CoreDefines.h" local="yes" imported="no">CoreDefines.h</includes>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <class kind="class">QStringLessThanNoCase</class>
    <member kind="function">
      <type>QString</type>
      <name>QStringfromWCharArray</name>
      <anchorfile>_core_string_utils_8h.html</anchorfile>
      <anchor>acc7358e987fc17d369eed6aecf6e75b3</anchor>
      <arglist>(const wchar_t *string, int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>QStringtoWCharArray</name>
      <anchorfile>_core_string_utils_8h.html</anchorfile>
      <anchor>a412880b5fb5bf7e5a267cdeeec2a2b5c</anchor>
      <arglist>(QString qstr, wchar_t *array)</arglist>
    </member>
    <member kind="function">
      <type>std::wstring</type>
      <name>QStringToWString</name>
      <anchorfile>_core_string_utils_8h.html</anchorfile>
      <anchor>a3986c0c70e5ab63e93ab21141b09cc24</anchor>
      <arglist>(const QString &amp;qstr)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>WStringToQString</name>
      <anchorfile>_core_string_utils_8h.html</anchorfile>
      <anchor>a591d8b59b388020b6830158250ef8ab6</anchor>
      <arglist>(const std::wstring &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>std::wstring</type>
      <name>ToWString</name>
      <anchorfile>_core_string_utils_8h.html</anchorfile>
      <anchor>a068bbf966d171bd81a50b32d3868cc7b</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ToString</name>
      <anchorfile>_core_string_utils_8h.html</anchorfile>
      <anchor>ae084925a2a0e69c9ccdf326b0b67d78e</anchor>
      <arglist>(const T &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>ParseString</name>
      <anchorfile>_core_string_utils_8h.html</anchorfile>
      <anchor>a732d6205c02174ba1330e20f35793580</anchor>
      <arglist>(const std::string &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>ParseString</name>
      <anchorfile>_core_string_utils_8h.html</anchorfile>
      <anchor>a95dc857d450b4ffc69e4295cc2b45a7c</anchor>
      <arglist>(const std::string &amp;val, T default_value)</arglist>
    </member>
    <member kind="function">
      <type>StringVector</type>
      <name>SplitString</name>
      <anchorfile>_core_string_utils_8h.html</anchorfile>
      <anchor>a96918799f43bfdccb976ce2b6b99b102</anchor>
      <arglist>(const std::string &amp;str, char separator)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ReplaceSubstring</name>
      <anchorfile>_core_string_utils_8h.html</anchorfile>
      <anchor>a4c9a2afae2d48803b576412d16d1106a</anchor>
      <arglist>(const std::string &amp;str, const std::string &amp;replace_this, const std::string &amp;replace_with)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ReplaceChar</name>
      <anchorfile>_core_string_utils_8h.html</anchorfile>
      <anchor>a407fdf4bf25e4e6ea5ac5c971969c2b1</anchor>
      <arglist>(const std::string &amp;str, char replace_this, char replace_with)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReplaceSubstringInplace</name>
      <anchorfile>_core_string_utils_8h.html</anchorfile>
      <anchor>a1e5e3388f2f936feda93c049e019aaf2</anchor>
      <arglist>(std::string &amp;str, const std::string &amp;replace_this, const std::string &amp;replace_with)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReplaceCharInplace</name>
      <anchorfile>_core_string_utils_8h.html</anchorfile>
      <anchor>acf483e9f1218895f3fbbae0f75630f2b</anchor>
      <arglist>(std::string &amp;str, char replace_this, char replace_with)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>BufferToString</name>
      <anchorfile>_core_string_utils_8h.html</anchorfile>
      <anchor>a3e7cd2da219a32ba961bad012701107f</anchor>
      <arglist>(const std::vector&lt; s8 &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; s8 &gt;</type>
      <name>StringToBuffer</name>
      <anchorfile>_core_string_utils_8h.html</anchorfile>
      <anchor>adf7be3e9707e6fc0f214886c5a05d61b</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>GetHash</name>
      <anchorfile>_core_string_utils_8h.html</anchorfile>
      <anchor>a29604acc2c51cc1df3eec149afad0736</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>GetHash</name>
      <anchorfile>_core_string_utils_8h.html</anchorfile>
      <anchor>a189501cf8b7a6c0ec4267098cdc40c25</anchor>
      <arglist>(const QString &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ParseBool</name>
      <anchorfile>_core_string_utils_8h.html</anchorfile>
      <anchor>aa03e465fafbafbbcdb09a7c64a419370</anchor>
      <arglist>(const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ParseBool</name>
      <anchorfile>_core_string_utils_8h.html</anchorfile>
      <anchor>a57a6f28612ea55da08be838345f61d79</anchor>
      <arglist>(const QString &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CoreTypes.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_core_types_8h</filename>
    <member kind="typedef">
      <type>boost::uint8_t</type>
      <name>u8</name>
      <anchorfile>_core_types_8h.html</anchorfile>
      <anchor>a2942ac5b7409aee477dce7bfba39265f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::uint16_t</type>
      <name>u16</name>
      <anchorfile>_core_types_8h.html</anchorfile>
      <anchor>a74b2b1435c17900171c80bf0a77e9b67</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::uint32_t</type>
      <name>u32</name>
      <anchorfile>_core_types_8h.html</anchorfile>
      <anchor>a27f1b8c55d70b756ed9250937807940f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::uint64_t</type>
      <name>u64</name>
      <anchorfile>_core_types_8h.html</anchorfile>
      <anchor>a3b862d3209c00ed8e997d3b258055ec3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::int8_t</type>
      <name>s8</name>
      <anchorfile>_core_types_8h.html</anchorfile>
      <anchor>ad962b91ed5af98b63c273309f996c694</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::int16_t</type>
      <name>s16</name>
      <anchorfile>_core_types_8h.html</anchorfile>
      <anchor>a18e83321ebcd7b92133eeae4565820da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::int32_t</type>
      <name>s32</name>
      <anchorfile>_core_types_8h.html</anchorfile>
      <anchor>ac652ed7ae1935c30c05a5417911aca2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::int64_t</type>
      <name>s64</name>
      <anchorfile>_core_types_8h.html</anchorfile>
      <anchor>a81a645994906d944e02d4c343db16bc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>float</type>
      <name>f32</name>
      <anchorfile>_core_types_8h.html</anchorfile>
      <anchor>a5f6906312a689f27d70e9d086649d3fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>f64</name>
      <anchorfile>_core_types_8h.html</anchorfile>
      <anchor>a94dab5770726ccbef8c7d026cfbdf8e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>uchar</name>
      <anchorfile>_core_types_8h.html</anchorfile>
      <anchor>a65f85814a8290f9797005d3b28e7e5fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>uint</name>
      <anchorfile>_core_types_8h.html</anchorfile>
      <anchor>a91ad9478d81a7aaf2593e8d9c3d06a14</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned long</type>
      <name>ulong</name>
      <anchorfile>_core_types_8h.html</anchorfile>
      <anchor>a718b4eb2652c286f4d42dc18a8e71a1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>entity_id_t</name>
      <anchorfile>_core_types_8h.html</anchorfile>
      <anchor>ae154ca59b33c2788d3a69deb6ab35841</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>component_id_t</name>
      <anchorfile>_core_types_8h.html</anchorfile>
      <anchor>a02d51228dae65d4226ce4bd5be0c6c42</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;</type>
      <name>StringVector</name>
      <anchorfile>_core_types_8h.html</anchorfile>
      <anchor>ab8e1ede88e2ff1c3b448334e6cbd3533</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; StringVector &gt;</type>
      <name>StringVectorPtr</name>
      <anchorfile>_core_types_8h.html</anchorfile>
      <anchor>a46f1d59aef271ea5b44111cce07ab093</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>QVector&lt; QString &gt;</type>
      <name>QStringVector</name>
      <anchorfile>_core_types_8h.html</anchorfile>
      <anchor>a51191784bda8997fd1f8a183c6eb7aaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; std::string &gt;</type>
      <name>StringList</name>
      <anchorfile>_core_types_8h.html</anchorfile>
      <anchor>a4ad7c5c3b662f6ec39c5aaba27a26a78</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; StringList &gt;</type>
      <name>StringListPtr</name>
      <anchorfile>_core_types_8h.html</anchorfile>
      <anchor>ac698d8721af3e7ca6ac41a7ed3b69274</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DebugOperatorNew.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_debug_operator_new_8h</filename>
  </compound>
  <compound kind="file">
    <name>DisableMemoryLeakCheck.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_disable_memory_leak_check_8h</filename>
  </compound>
  <compound kind="file">
    <name>ConfigAPI.dox</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/doc/</path>
    <filename>_config_a_p_i_8dox</filename>
  </compound>
  <compound kind="file">
    <name>Frame.dox</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/doc/</path>
    <filename>_frame_8dox</filename>
  </compound>
  <compound kind="file">
    <name>EnableMemoryLeakCheck.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_enable_memory_leak_check_8h</filename>
  </compound>
  <compound kind="file">
    <name>FrameAPI.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_frame_a_p_i_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_frame_a_p_i_8h" name="FrameAPI.h" local="yes" imported="no">FrameAPI.h</includes>
    <includes id="_high_perf_clock_8h" name="HighPerfClock.h" local="yes" imported="no">HighPerfClock.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>FrameAPI.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_frame_a_p_i_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <class kind="class">FrameAPI</class>
    <class kind="class">DelayedSignal</class>
  </compound>
  <compound kind="file">
    <name>Framework.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_framework_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_i_renderer_8h" name="IRenderer.h" local="yes" imported="no">IRenderer.h</includes>
    <includes id="_core_exception_8h" name="CoreException.h" local="yes" imported="no">CoreException.h</includes>
    <includes id="_application_8h" name="Application.h" local="yes" imported="no">Application.h</includes>
    <includes id="_version_info_8h" name="VersionInfo.h" local="yes" imported="no">VersionInfo.h</includes>
    <includes id="_config_a_p_i_8h" name="ConfigAPI.h" local="yes" imported="no">ConfigAPI.h</includes>
    <includes id="_plugin_a_p_i_8h" name="PluginAPI.h" local="yes" imported="no">PluginAPI.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_i_module_8h" name="IModule.h" local="yes" imported="no">IModule.h</includes>
    <includes id="_frame_a_p_i_8h" name="FrameAPI.h" local="yes" imported="no">FrameAPI.h</includes>
    <includes id="_input_a_p_i_8h" name="InputAPI.h" local="yes" imported="no">InputAPI.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_audio_a_p_i_8h" name="AudioAPI.h" local="yes" imported="no">AudioAPI.h</includes>
    <includes id="_console_a_p_i_8h" name="ConsoleAPI.h" local="yes" imported="no">ConsoleAPI.h</includes>
    <includes id="_scene_a_p_i_8h" name="SceneAPI.h" local="yes" imported="no">SceneAPI.h</includes>
    <includes id="_ui_a_p_i_8h" name="UiAPI.h" local="yes" imported="no">UiAPI.h</includes>
    <includes id="_ui_main_window_8h" name="UiMainWindow.h" local="yes" imported="no">UiMainWindow.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <class kind="struct">CommandLineParameterMap</class>
  </compound>
  <compound kind="file">
    <name>Framework.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_framework_8h</filename>
    <includes id="_framework_fwd_8h" name="FrameworkFwd.h" local="yes" imported="no">FrameworkFwd.h</includes>
    <class kind="class">Framework</class>
  </compound>
  <compound kind="file">
    <name>FrameworkFwd.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_framework_fwd_8h</filename>
  </compound>
  <compound kind="file">
    <name>FunctionInvoker.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_function_invoker_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_core_exception_8h" name="CoreException.h" local="yes" imported="no">CoreException.h</includes>
    <includes id="_function_invoker_8h" name="FunctionInvoker.h" local="yes" imported="no">FunctionInvoker.h</includes>
    <includes id="_argument_type_8h" name="ArgumentType.h" local="yes" imported="no">ArgumentType.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>FunctionInvoker.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_function_invoker_8h</filename>
    <class kind="class">FunctionInvoker</class>
  </compound>
  <compound kind="file">
    <name>HighPerfClock.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_high_perf_clock_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <member kind="typedef">
      <type>u64</type>
      <name>tick_t</name>
      <anchorfile>_high_perf_clock_8h.html</anchorfile>
      <anchor>ae6ecb3dc289c27a8afab7c051c33887b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>tick_t</type>
      <name>GetCurrentClockTime</name>
      <anchorfile>_high_perf_clock_8h.html</anchorfile>
      <anchor>a93f77e9c82e29257931531958f8023fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tick_t</type>
      <name>GetCurrentClockFreq</name>
      <anchorfile>_high_perf_clock_8h.html</anchorfile>
      <anchor>a7e2d06fe3b21516b10dd0dea18982fc2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>IModule.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_i_module_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_i_module_8h" name="IModule.h" local="yes" imported="no">IModule.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>IModule.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_i_module_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_framework_fwd_8h" name="FrameworkFwd.h" local="yes" imported="no">FrameworkFwd.h</includes>
    <class kind="class">IModule</class>
  </compound>
  <compound kind="file">
    <name>IRenderer.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_i_renderer_8h</filename>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Math/Quat.h</includes>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <class kind="class">RaycastResult</class>
    <class kind="class">IRenderer</class>
  </compound>
  <compound kind="file">
    <name>LoggingFunctions.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_logging_functions_8cpp</filename>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_console_a_p_i_8h" name="ConsoleAPI.h" local="yes" imported="no">ConsoleAPI.h</includes>
    <member kind="function">
      <type>void</type>
      <name>PrintLogMessage</name>
      <anchorfile>_logging_functions_8cpp.html</anchorfile>
      <anchor>a11146b1366dd0755b8685770820de6a6</anchor>
      <arglist>(u32 logChannel, const char *str)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLogChannelEnabled</name>
      <anchorfile>_logging_functions_8cpp.html</anchorfile>
      <anchor>acbf89be69f02344028d8c28e53a45f5c</anchor>
      <arglist>(u32 logChannel)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>LoggingFunctions.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_logging_functions_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <member kind="enumeration">
      <name>LogChannel</name>
      <anchorfile>_logging_functions_8h.html</anchorfile>
      <anchor>ac86b236b778c919f6bc8f857c15018c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LogChannelError</name>
      <anchorfile>_logging_functions_8h.html</anchorfile>
      <anchor>ac86b236b778c919f6bc8f857c15018c2ade18c3d92186a7364d197fbb015fd3b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LogChannelWarning</name>
      <anchorfile>_logging_functions_8h.html</anchorfile>
      <anchor>ac86b236b778c919f6bc8f857c15018c2a4c5b68ae41a58944e1f21a7e0610aa2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LogChannelInfo</name>
      <anchorfile>_logging_functions_8h.html</anchorfile>
      <anchor>ac86b236b778c919f6bc8f857c15018c2a89612abec3ca1269340af30e5bb3a461</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LogChannelDebug</name>
      <anchorfile>_logging_functions_8h.html</anchorfile>
      <anchor>ac86b236b778c919f6bc8f857c15018c2a30f42adaec3140b1e09bbb5a2d6a0a38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LogLevelQuiet</name>
      <anchorfile>_logging_functions_8h.html</anchorfile>
      <anchor>ac86b236b778c919f6bc8f857c15018c2a8d35bd9be4ddeb765e5d46ded757de3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LogLevelErrorsOnly</name>
      <anchorfile>_logging_functions_8h.html</anchorfile>
      <anchor>ac86b236b778c919f6bc8f857c15018c2a4007052c94b9e86c60a4941ead419953</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LogLevelErrorWarning</name>
      <anchorfile>_logging_functions_8h.html</anchorfile>
      <anchor>ac86b236b778c919f6bc8f857c15018c2a5a92ae4748314ba910e622ca07524cef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LogLevelErrorWarnInfo</name>
      <anchorfile>_logging_functions_8h.html</anchorfile>
      <anchor>ac86b236b778c919f6bc8f857c15018c2a7aeb22686470392d6be4f60d6e9acaae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LogLevelErrorWarnInfoDebug</name>
      <anchorfile>_logging_functions_8h.html</anchorfile>
      <anchor>ac86b236b778c919f6bc8f857c15018c2ac8e01f7fcc087f5986a8e1e08213b6ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintLogMessage</name>
      <anchorfile>_logging_functions_8h.html</anchorfile>
      <anchor>a11146b1366dd0755b8685770820de6a6</anchor>
      <arglist>(u32 logChannel, const char *str)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLogChannelEnabled</name>
      <anchorfile>_logging_functions_8h.html</anchorfile>
      <anchor>acbf89be69f02344028d8c28e53a45f5c</anchor>
      <arglist>(u32 logChannel)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>LogError</name>
      <anchorfile>_logging_functions_8h.html</anchorfile>
      <anchor>a41fb0c78a1a0699ccf4a72125e52f7b2</anchor>
      <arglist>(const std::string &amp;msg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>LogWarning</name>
      <anchorfile>_logging_functions_8h.html</anchorfile>
      <anchor>a20d4514fca999f6e107e5e4e98c0eaca</anchor>
      <arglist>(const std::string &amp;msg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>LogInfo</name>
      <anchorfile>_logging_functions_8h.html</anchorfile>
      <anchor>acf07ed51aa901ebcd972ad96f17eafbf</anchor>
      <arglist>(const std::string &amp;msg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>LogDebug</name>
      <anchorfile>_logging_functions_8h.html</anchorfile>
      <anchor>a2304ccaa4b8aca3e2c54394a806f9030</anchor>
      <arglist>(const std::string &amp;msg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>LogError</name>
      <anchorfile>_logging_functions_8h.html</anchorfile>
      <anchor>a0d46e62ff8f74124ec9ef8889cb4b7da</anchor>
      <arglist>(const char *msg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>LogWarning</name>
      <anchorfile>_logging_functions_8h.html</anchorfile>
      <anchor>a9817d84b9582dfa5fa707afc5b5f1d12</anchor>
      <arglist>(const char *msg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>LogInfo</name>
      <anchorfile>_logging_functions_8h.html</anchorfile>
      <anchor>a8031a1dfe3a8161b0aca66dbf18dd3fe</anchor>
      <arglist>(const char *msg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>LogDebug</name>
      <anchorfile>_logging_functions_8h.html</anchorfile>
      <anchor>af33e13d0ac2ef48740bf6cc42d72fcbb</anchor>
      <arglist>(const char *msg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>LogError</name>
      <anchorfile>_logging_functions_8h.html</anchorfile>
      <anchor>ac39aff826b7db543bda92283ce3a3ffa</anchor>
      <arglist>(const QString &amp;msg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>LogWarning</name>
      <anchorfile>_logging_functions_8h.html</anchorfile>
      <anchor>a33235fdba56192d58351a4f46eda75cc</anchor>
      <arglist>(const QString &amp;msg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>LogInfo</name>
      <anchorfile>_logging_functions_8h.html</anchorfile>
      <anchor>a20b5040a26b52451a9315b648e434f53</anchor>
      <arglist>(const QString &amp;msg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>LogDebug</name>
      <anchorfile>_logging_functions_8h.html</anchorfile>
      <anchor>a34e0457c645dee913ff5fbae7ebff89f</anchor>
      <arglist>(const QString &amp;msg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AABB.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_a_a_b_b_8cpp</filename>
    <includes id="_math_func_8h" name="MathFunc.h" local="yes" imported="no">MathFunc.h</includes>
    <includes id="_a_a_b_b_8h" name="AABB.h" local="yes" imported="no">AABB.h</includes>
    <includes id="_line_segment_8h" name="LineSegment.h" local="yes" imported="no">LineSegment.h</includes>
    <includes id="_line_8h" name="Line.h" local="yes" imported="no">Line.h</includes>
    <includes id="_ray_8h" name="Ray.h" local="yes" imported="no">Ray.h</includes>
    <includes id="_l_c_g_8h" name="LCG.h" local="yes" imported="no">LCG.h</includes>
    <includes id="_o_b_b_8h" name="OBB.h" local="yes" imported="no">OBB.h</includes>
    <includes id="_plane_8h" name="Plane.h" local="yes" imported="no">Plane.h</includes>
    <includes id="_sphere_8h" name="Sphere.h" local="yes" imported="no">Sphere.h</includes>
    <includes id="float3x3_8h" name="float3x3.h" local="yes" imported="no">float3x3.h</includes>
    <includes id="float3x4_8h" name="float3x4.h" local="yes" imported="no">float3x4.h</includes>
    <includes id="float4_8h" name="float4.h" local="yes" imported="no">float4.h</includes>
    <includes id="float4x4_8h" name="float4x4.h" local="yes" imported="no">float4x4.h</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Quat.h</includes>
    <includes id="_triangle_8h" name="Triangle.h" local="yes" imported="no">Triangle.h</includes>
    <member kind="function">
      <type>void</type>
      <name>AABBTransformAsAABB</name>
      <anchorfile>_a_a_b_b_8cpp.html</anchorfile>
      <anchor>aa049f749363215ce157f9be9e26b0a81</anchor>
      <arglist>(AABB &amp;aabb, Matrix &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IntersectRayAABB</name>
      <anchorfile>_a_a_b_b_8cpp.html</anchorfile>
      <anchor>adfe2050cd174b9455fe0305fdfa53fd9</anchor>
      <arglist>(const float3 &amp;rayPos, const float3 &amp;rayDir, const AABB &amp;aabb, float &amp;tNear, float &amp;tFar)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IntersectLineAABB</name>
      <anchorfile>_a_a_b_b_8cpp.html</anchorfile>
      <anchor>adfa0977a880d1e03f4566ec05b76eb6e</anchor>
      <arglist>(const float3 &amp;linePos, const float3 &amp;lineDir, const AABB &amp;aabb, float &amp;tNear, float &amp;tFar)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AABB.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_a_a_b_b_8h</filename>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">MathFwd.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">float3.h</includes>
    <class kind="class">AABB</class>
  </compound>
  <compound kind="file">
    <name>Alignment.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_alignment_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <namespace>kNet</namespace>
    <member kind="define">
      <type>#define</type>
      <name>IS_POW2</name>
      <anchorfile>_alignment_8h.html</anchorfile>
      <anchor>a78b111fbaddafe70d5586b9375c4585b</anchor>
      <arglist>(value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPow2Aligned</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>a483081a6e031d8e991a52ccdccb70432</anchor>
      <arglist>(uintptr_t pointer, u32 alignment)</arglist>
    </member>
    <member kind="function">
      <type>uintptr_t</type>
      <name>AlignUpPow2</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>a07100282d8516409579154e7bb0c5f41</anchor>
      <arglist>(uintptr_t pointer, u32 alignment)</arglist>
    </member>
    <member kind="function">
      <type>uintptr_t</type>
      <name>AlignDownPow2</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>a2ec71f103131b8ed6dcf9053cd53adf5</anchor>
      <arglist>(uintptr_t pointer, u32 alignment)</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>RoundUpToNextPow2</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>aa1d89d5a81a1487392168704a3ad9174</anchor>
      <arglist>(u32 x)</arglist>
    </member>
    <member kind="function">
      <type>u64</type>
      <name>RoundUpToNextPow2</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>ab85fd627beeff2dae66b96b4e446cb53</anchor>
      <arglist>(u64 x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Allocator.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_allocator_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <namespace>kNet</namespace>
    <member kind="typedef">
      <type>u32</type>
      <name>AllocFlags</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>a78566bdb69648bbe2c8c9703fb29c98a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AFAllocLow</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>a8718051938d47206596f3d813de3f320a13f62914612fada16ce11cef831a0829</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AFAllocHigh</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>a8718051938d47206596f3d813de3f320afaf57f5e97a7249f509c48f45939ec3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Object *</type>
      <name>New</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>a7baa6ab86f61d150e8f0c48b5872dc2b</anchor>
      <arglist>(Allocator *allocator, size_t alignment, const char *nameTag=0, AllocFlags flags=AFAllocLow)</arglist>
    </member>
    <member kind="function">
      <type>Object *</type>
      <name>NewArray</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>af631e2db3ebce1dcf973bf6911755793</anchor>
      <arglist>(size_t numObjects, Allocator *allocator, size_t alignment, const char *nameTag=0, AllocFlags flags=AFAllocLow)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Delete</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>a99c1e848c23136101ae32fed58d2f8d2</anchor>
      <arglist>(Object *ptr, Allocator *allocator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeleteArray</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>a383225b7709dab30bdde6983ab56397c</anchor>
      <arglist>(Object *ptr, Allocator *allocator)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Array.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_array_8h</filename>
    <includes id="_allocator_8h" name="Allocator.h" local="yes" imported="no">Allocator.h</includes>
    <includes id="_std_c_malloc_heap_8h" name="StdCMallocHeap.h" local="yes" imported="no">StdCMallocHeap.h</includes>
    <class kind="class">kNet::ArrayIterator</class>
    <class kind="class">kNet::Array</class>
    <namespace>kNet</namespace>
  </compound>
  <compound kind="file">
    <name>assume.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>assume_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>MATH_ASSERT_ON_ASSUME</name>
      <anchorfile>assume_8h.html</anchorfile>
      <anchor>a794678594ae662bc963f7728e8724dff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ARRAY_LENGTH</name>
      <anchorfile>assume_8h.html</anchorfile>
      <anchor>a4a21612c647552b916d9de1f911995ad</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>assume</name>
      <anchorfile>assume_8h.html</anchorfile>
      <anchor>a32cf720adc95c26d4606894723412ed6</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMathBreakOnAssume</name>
      <anchorfile>assume_8h.html</anchorfile>
      <anchor>a66b155c2afacb1202344006749b1d616</anchor>
      <arglist>(bool isEnabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MathBreakOnAssume</name>
      <anchorfile>assume_8h.html</anchorfile>
      <anchor>a7ae2d272b0387b15780bd65968c8a956</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BitOps.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_bit_ops_8cpp</filename>
    <includes id="_bit_ops_8h" name="BitOps.h" local="yes" imported="no">BitOps.h</includes>
    <member kind="function">
      <type>u32</type>
      <name>BinaryStringToValue</name>
      <anchorfile>_bit_ops_8cpp.html</anchorfile>
      <anchor>afd610892f3361dd5c42b668be32065ef</anchor>
      <arglist>(const char *str)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BitOps.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_bit_ops_8h</filename>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">MathFwd.h</includes>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <class kind="class">LSBT</class>
    <class kind="class">BitMaskT</class>
    <member kind="function">
      <type>u32</type>
      <name>BinaryStringToValue</name>
      <anchorfile>_bit_ops_8h.html</anchorfile>
      <anchor>afd610892f3361dd5c42b668be32065ef</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CountBitsSet</name>
      <anchorfile>_bit_ops_8h.html</anchorfile>
      <anchor>aa5d179f25ed00b64c03303a7e1cafc3a</anchor>
      <arglist>(u32 value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ExtractLSB</name>
      <anchorfile>_bit_ops_8h.html</anchorfile>
      <anchor>a9a2e478c30127254e49b9c2bd566678f</anchor>
      <arglist>(unsigned long *value)</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>LSB</name>
      <anchorfile>_bit_ops_8h.html</anchorfile>
      <anchor>a17ca106ffeb0b2731d5d88aa653ca99a</anchor>
      <arglist>(u32 bits)</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>BitMask</name>
      <anchorfile>_bit_ops_8h.html</anchorfile>
      <anchor>a18e648d1616fbe5862bfafca1f413e44</anchor>
      <arglist>(u32 pos, u32 bits)</arglist>
    </member>
    <member kind="function">
      <type>ResultType</type>
      <name>PackBits</name>
      <anchorfile>_bit_ops_8h.html</anchorfile>
      <anchor>a42ff8c9195e3c624b490182d04edef80</anchor>
      <arglist>(InputType a, InputType r, InputType g, InputType b)</arglist>
    </member>
    <member kind="function">
      <type>ResultType</type>
      <name>PackBits</name>
      <anchorfile>_bit_ops_8h.html</anchorfile>
      <anchor>ac1aef15e945216fa4e8b2d9e678b7843</anchor>
      <arglist>(int APos, int ABits, int RPos, int RBits, int GPos, int GBits, int BPos, int BBits, InputType a, InputType r, InputType g, InputType b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExtractBits</name>
      <anchorfile>_bit_ops_8h.html</anchorfile>
      <anchor>acc31b0d4f9dee5cdc9a9df974a692714</anchor>
      <arglist>(ResultType &amp;out, const InputType &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExtractBits</name>
      <anchorfile>_bit_ops_8h.html</anchorfile>
      <anchor>ad0222ae42a1a6be9697432a8e4951820</anchor>
      <arglist>(int pos, int bits, ResultType &amp;out, const InputType &amp;in)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Circle.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_circle_8cpp</filename>
    <includes id="_circle_8h" name="Circle.h" local="yes" imported="no">Circle.h</includes>
    <includes id="_plane_8h" name="Plane.h" local="yes" imported="no">Plane.h</includes>
    <includes id="_math_func_8h" name="MathFunc.h" local="yes" imported="no">MathFunc.h</includes>
    <includes id="_ray_8h" name="Ray.h" local="yes" imported="no">Ray.h</includes>
    <includes id="_line_segment_8h" name="LineSegment.h" local="yes" imported="no">LineSegment.h</includes>
    <includes id="_line_8h" name="Line.h" local="yes" imported="no">Line.h</includes>
  </compound>
  <compound kind="file">
    <name>Circle.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_circle_8h</filename>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">MathFwd.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">float3.h</includes>
    <class kind="class">Circle</class>
  </compound>
  <compound kind="file">
    <name>Complex.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_complex_8h</filename>
    <class kind="class">Complex</class>
  </compound>
  <compound kind="file">
    <name>Cone.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_cone_8h</filename>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">MathFwd.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">float3.h</includes>
    <class kind="class">Cone</class>
  </compound>
  <compound kind="file">
    <name>CoordinateAxisConvention.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_coordinate_axis_convention_8h</filename>
    <includes id="float3x3_8h" name="float3x3.h" local="yes" imported="no">float3x3.h</includes>
    <includes id="float3x4_8h" name="float3x4.h" local="yes" imported="no">float3x4.h</includes>
    <includes id="float4x4_8h" name="float4x4.h" local="yes" imported="no">float4x4.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">float3.h</includes>
  </compound>
  <compound kind="file">
    <name>Cylinder.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_cylinder_8h</filename>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">MathFwd.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">float3.h</includes>
    <class kind="class">Cylinder</class>
  </compound>
  <compound kind="file">
    <name>Ellipsoid.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_ellipsoid_8h</filename>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">MathFwd.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">float3.h</includes>
    <class kind="class">Ellipsoid</class>
  </compound>
  <compound kind="file">
    <name>FixedPoint.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_fixed_point_8h</filename>
    <class kind="class">math::FixedPoint</class>
    <namespace>math</namespace>
    <member kind="function">
      <type>void</type>
      <name>Add</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>ad01b89eb82a682d3fe1ade9dc54165aa</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;dst, const FixedPoint&lt; T, F2 &gt; &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Add</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a42a6e22992ad1074db9c7afa11fc9c36</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;dst, const T &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Sub</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a82d86a88be5ab7db981aac693a2516c1</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;dst, const FixedPoint&lt; T, F2 &gt; &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Sub</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>aefadd31245567be325f740742aba8a00</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;dst, const T &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Mul</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>ad2fa40717a314d53a309bb755ee39ed0</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;dst, const T &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MulExtraFast</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a5bce4f63685aa6fa85dc09b55d068478</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F2 &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MulFast</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a84dc0c0003d43f2e71c033f67f84bd5c</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MulPrecise</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a5f47615aac7f148153cd1cd44dbfc01d</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Div</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>ad62161140be09cd7ef2a87d95d5b2200</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DivExtraFast</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a1ad737a948ece7d14a0f094c83d4657d</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F2 &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>const FixedPoint&lt; T, F &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>af06dd01373a9cc475ace8a329fc57f98</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>const FixedPoint&lt; T, F &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a516ca798e80e6988aa7f6f26733c123d</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>const FixedPoint&lt; T, F &gt;</type>
      <name>operator+</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a4ee0aec7813e8c2a8a68c5ee32a47051</anchor>
      <arglist>(const FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>const FixedPoint&lt; T, F &gt;</type>
      <name>operator+</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>abd7df11f54168d02066096cc2568927f</anchor>
      <arglist>(const FixedPoint&lt; T, F &gt; &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>const FixedPoint&lt; T, F &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a7413a6b129732e95ba36f5df64fe1596</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>const FixedPoint&lt; T, F &gt;</type>
      <name>operator-</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>aa3de418f09295637f1ea0f8f2c09bd14</anchor>
      <arglist>(const FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>const FixedPoint&lt; T, F &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a0b8eaeb85079e405ecbd961b818c1ee3</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>const FixedPoint&lt; T, F &gt;</type>
      <name>operator*</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a75a01f33fccd083776456f7f12d73510</anchor>
      <arglist>(const FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a4c2fcb9b351511e9dc7e36757b61a837</anchor>
      <arglist>(const FixedPoint&lt; T, F &gt; &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>af37a872120c3038c54f7b10f900f53d2</anchor>
      <arglist>(const FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a7993be54f0a184a69891da1d9f6fdab4</anchor>
      <arglist>(const FixedPoint&lt; T, F &gt; &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>ae2126c60c2f684ff7ba7154ada4ea079</anchor>
      <arglist>(const FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a1fd591b6cf7f6d63ecca9e0a0464ba37</anchor>
      <arglist>(const FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F &gt; &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>float2.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>float2_8cpp</filename>
    <includes id="float2_8h" name="float2.h" local="yes" imported="no">float2.h</includes>
    <includes id="_math_func_8h" name="MathFunc.h" local="yes" imported="no">MathFunc.h</includes>
    <includes id="_l_c_g_8h" name="LCG.h" local="yes" imported="no">LCG.h</includes>
    <includes id="assume_8h" name="assume.h" local="yes" imported="no">assume.h</includes>
    <class kind="class">SortByPolarAngle</class>
    <member kind="function">
      <type>float2</type>
      <name>operator*</name>
      <anchorfile>float2_8cpp.html</anchorfile>
      <anchor>ad0ba6718718e18c19c5ce57440c450ed</anchor>
      <arglist>(float scalar, const float2 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>operator/</name>
      <anchorfile>float2_8cpp.html</anchorfile>
      <anchor>acacbb404bc6b24d0c9469c49a6fcedbd</anchor>
      <arglist>(float scalar, const float2 &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>float2.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>float2_8h</filename>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">MathFwd.h</includes>
    <class kind="class">float2</class>
    <member kind="function">
      <type>float2</type>
      <name>operator*</name>
      <anchorfile>float2_8h.html</anchorfile>
      <anchor>ad0ba6718718e18c19c5ce57440c450ed</anchor>
      <arglist>(float scalar, const float2 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Dot</name>
      <anchorfile>float2_8h.html</anchorfile>
      <anchor>aac5070efed4e64b92b4961e730f332a8</anchor>
      <arglist>(const float2 &amp;a, const float2 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Abs</name>
      <anchorfile>float2_8h.html</anchorfile>
      <anchor>a8eacde15853d997349f4387197444c48</anchor>
      <arglist>(const float2 &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Min</name>
      <anchorfile>float2_8h.html</anchorfile>
      <anchor>a506d38bbcb707f99e45a922be8ff91ac</anchor>
      <arglist>(const float2 &amp;a, const float2 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Max</name>
      <anchorfile>float2_8h.html</anchorfile>
      <anchor>aac8056d432f0fbab6e2189a5879f463a</anchor>
      <arglist>(const float2 &amp;a, const float2 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Clamp</name>
      <anchorfile>float2_8h.html</anchorfile>
      <anchor>a38f74bbf3d199b47df903793cd3b9bac</anchor>
      <arglist>(const float2 &amp;a, float floor, float ceil)</arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Clamp</name>
      <anchorfile>float2_8h.html</anchorfile>
      <anchor>a1abd75044d6f4fa5d5e6b716e5f898e4</anchor>
      <arglist>(const float2 &amp;a, const float2 &amp;floor, const float2 &amp;ceil)</arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Clamp01</name>
      <anchorfile>float2_8h.html</anchorfile>
      <anchor>add2295c6cf6e5cfbd39efba5263e5dd5</anchor>
      <arglist>(const float2 &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Lerp</name>
      <anchorfile>float2_8h.html</anchorfile>
      <anchor>a125b396d519d00f8f66c0bc7ffbf85d7</anchor>
      <arglist>(const float2 &amp;a, const float2 &amp;b, float t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>float2x2.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>float2x2_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>float2x2.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>float2x2_8h</filename>
  </compound>
  <compound kind="file">
    <name>float2x3.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>float2x3_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>float2x3.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>float2x3_8h</filename>
  </compound>
  <compound kind="file">
    <name>float3.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>float3_8cpp</filename>
    <includes id="float2_8h" name="float2.h" local="yes" imported="no">float2.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">float3.h</includes>
    <includes id="float4_8h" name="float4.h" local="yes" imported="no">float4.h</includes>
    <includes id="float3x3_8h" name="float3x3.h" local="yes" imported="no">float3x3.h</includes>
    <includes id="_sphere_8h" name="Sphere.h" local="yes" imported="no">Sphere.h</includes>
    <includes id="_a_a_b_b_8h" name="AABB.h" local="yes" imported="no">AABB.h</includes>
    <includes id="_math_func_8h" name="MathFunc.h" local="yes" imported="no">MathFunc.h</includes>
    <member kind="function">
      <type>float3</type>
      <name>operator*</name>
      <anchorfile>float3_8cpp.html</anchorfile>
      <anchor>a7ff11c486e2b12301dbbfa24436411ca</anchor>
      <arglist>(float scalar, const float3 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator/</name>
      <anchorfile>float3_8cpp.html</anchorfile>
      <anchor>aa171af1f929f6e8e6c14c9c20b8b75cb</anchor>
      <arglist>(float scalar, const float3 &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>float3.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>float3_8h</filename>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">MathFwd.h</includes>
    <class kind="class">float3</class>
    <member kind="function">
      <type>float3</type>
      <name>operator*</name>
      <anchorfile>float3_8h.html</anchorfile>
      <anchor>a7ff11c486e2b12301dbbfa24436411ca</anchor>
      <arglist>(float scalar, const float3 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Dot</name>
      <anchorfile>float3_8h.html</anchorfile>
      <anchor>a0c79bf266f2c14c24e808dddb7998a21</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Cross</name>
      <anchorfile>float3_8h.html</anchorfile>
      <anchor>af8a3ffbe1290079315fbf1d47aec1cd0</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Abs</name>
      <anchorfile>float3_8h.html</anchorfile>
      <anchor>a91b9adde01066d84bbb9a78bf6d15624</anchor>
      <arglist>(const float3 &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Min</name>
      <anchorfile>float3_8h.html</anchorfile>
      <anchor>abe46bd975beefc40b0480c0ba9efac8d</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Max</name>
      <anchorfile>float3_8h.html</anchorfile>
      <anchor>aaa6967be8e9afe4b2c6bc829ad5ce251</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Clamp</name>
      <anchorfile>float3_8h.html</anchorfile>
      <anchor>a7b9d109454c09dbb326ee3ba2eb77272</anchor>
      <arglist>(const float3 &amp;a, float floor, float ceil)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Clamp</name>
      <anchorfile>float3_8h.html</anchorfile>
      <anchor>a56222978dbc72472c28869fbe03650e4</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;floor, const float3 &amp;ceil)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Clamp01</name>
      <anchorfile>float3_8h.html</anchorfile>
      <anchor>ac7a5156f654225267dd0983eddba6de5</anchor>
      <arglist>(const float3 &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Lerp</name>
      <anchorfile>float3_8h.html</anchorfile>
      <anchor>a3723df263adeb3022311bda9aefb9304</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b, float t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>float3x3.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>float3x3_8cpp</filename>
    <includes id="assume_8h" name="assume.h" local="yes" imported="no">assume.h</includes>
    <includes id="_math_func_8h" name="MathFunc.h" local="yes" imported="no">Math/MathFunc.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="float4_8h" name="float4.h" local="yes" imported="no">Math/float4.h</includes>
    <includes id="float3x3_8h" name="float3x3.h" local="yes" imported="no">Math/float3x3.h</includes>
    <includes id="float3x4_8h" name="float3x4.h" local="yes" imported="no">Math/float3x4.h</includes>
    <includes id="float4x4_8h" name="float4x4.h" local="yes" imported="no">Math/float4x4.h</includes>
    <includes id="_matrix_8inl" name="Matrix.inl" local="yes" imported="no">Matrix.inl</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Math/Quat.h</includes>
    <includes id="_l_c_g_8h" name="LCG.h" local="yes" imported="no">LCG.h</includes>
    <includes id="_plane_8h" name="Plane.h" local="yes" imported="no">Plane.h</includes>
    <includes id="_transform_ops_8h" name="TransformOps.h" local="yes" imported="no">TransformOps.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SKIPNUM</name>
      <anchorfile>float3x3_8cpp.html</anchorfile>
      <anchor>a9e41609db1f67e1406ee225355d9fbcd</anchor>
      <arglist>(val, skip)</arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>operator*</name>
      <anchorfile>float3x3_8cpp.html</anchorfile>
      <anchor>a89f8130b584992e6bad92d3065ce880d</anchor>
      <arglist>(const Quat &amp;lhs, const float3x3 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator*</name>
      <anchorfile>float3x3_8cpp.html</anchorfile>
      <anchor>a694d8ef91d2b5395724f4a6f749f1dae</anchor>
      <arglist>(const float3 &amp;lhs, const float3x3 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>operator*</name>
      <anchorfile>float3x3_8cpp.html</anchorfile>
      <anchor>a66eb3bc711841024410b33a2dc8352b8</anchor>
      <arglist>(const float4 &amp;lhs, const float3x3 &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>float3x3.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>float3x3_8h</filename>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">Math/MathFwd.h</includes>
    <includes id="_matrix_proxy_8h" name="MatrixProxy.h" local="yes" imported="no">MatrixProxy.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="_coordinate_axis_convention_8h" name="CoordinateAxisConvention.h" local="yes" imported="no">CoordinateAxisConvention.h</includes>
    <class kind="class">float3x3</class>
    <member kind="function">
      <type>float3x3</type>
      <name>operator*</name>
      <anchorfile>float3x3_8h.html</anchorfile>
      <anchor>a89f8130b584992e6bad92d3065ce880d</anchor>
      <arglist>(const Quat &amp;lhs, const float3x3 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator*</name>
      <anchorfile>float3x3_8h.html</anchorfile>
      <anchor>a694d8ef91d2b5395724f4a6f749f1dae</anchor>
      <arglist>(const float3 &amp;lhs, const float3x3 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>operator*</name>
      <anchorfile>float3x3_8h.html</anchorfile>
      <anchor>a66eb3bc711841024410b33a2dc8352b8</anchor>
      <arglist>(const float4 &amp;lhs, const float3x3 &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>float3x4.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>float3x4_8cpp</filename>
    <includes id="_math_func_8h" name="MathFunc.h" local="yes" imported="no">Math/MathFunc.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="float4_8h" name="float4.h" local="yes" imported="no">Math/float4.h</includes>
    <includes id="float3x3_8h" name="float3x3.h" local="yes" imported="no">Math/float3x3.h</includes>
    <includes id="float3x4_8h" name="float3x4.h" local="yes" imported="no">Math/float3x4.h</includes>
    <includes id="float4x4_8h" name="float4x4.h" local="yes" imported="no">Math/float4x4.h</includes>
    <includes id="_matrix_8inl" name="Matrix.inl" local="yes" imported="no">Matrix.inl</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Math/Quat.h</includes>
    <includes id="_l_c_g_8h" name="LCG.h" local="yes" imported="no">LCG.h</includes>
    <includes id="_plane_8h" name="Plane.h" local="yes" imported="no">Plane.h</includes>
    <includes id="_transform_ops_8h" name="TransformOps.h" local="yes" imported="no">TransformOps.h</includes>
    <member kind="function">
      <type>float3x4</type>
      <name>operator*</name>
      <anchorfile>float3x4_8cpp.html</anchorfile>
      <anchor>a33e924c10949ea2b200501c65770a962</anchor>
      <arglist>(const Quat &amp;lhs, const float3x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>operator*</name>
      <anchorfile>float3x4_8cpp.html</anchorfile>
      <anchor>a0bf8334fdc199ac333c77b499841e7a4</anchor>
      <arglist>(const float3x3 &amp;lhs, const float3x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>operator*</name>
      <anchorfile>float3x4_8cpp.html</anchorfile>
      <anchor>a9a77be136173c491e4aeae5c82cccb38</anchor>
      <arglist>(const float4 &amp;lhs, const float3x4 &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>float3x4.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>float3x4_8h</filename>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">Math/MathFwd.h</includes>
    <includes id="_matrix_proxy_8h" name="MatrixProxy.h" local="yes" imported="no">MatrixProxy.h</includes>
    <includes id="_coordinate_axis_convention_8h" name="CoordinateAxisConvention.h" local="yes" imported="no">CoordinateAxisConvention.h</includes>
    <class kind="class">float3x4</class>
    <member kind="function">
      <type>float3x4</type>
      <name>operator*</name>
      <anchorfile>float3x4_8h.html</anchorfile>
      <anchor>a33e924c10949ea2b200501c65770a962</anchor>
      <arglist>(const Quat &amp;lhs, const float3x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>operator*</name>
      <anchorfile>float3x4_8h.html</anchorfile>
      <anchor>a0bf8334fdc199ac333c77b499841e7a4</anchor>
      <arglist>(const float3x3 &amp;lhs, const float3x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>operator*</name>
      <anchorfile>float3x4_8h.html</anchorfile>
      <anchor>a9a77be136173c491e4aeae5c82cccb38</anchor>
      <arglist>(const float4 &amp;lhs, const float3x4 &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>float4.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>float4_8cpp</filename>
    <includes id="float2_8h" name="float2.h" local="yes" imported="no">float2.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">float3.h</includes>
    <includes id="float4_8h" name="float4.h" local="yes" imported="no">float4.h</includes>
    <includes id="_sphere_8h" name="Sphere.h" local="yes" imported="no">Sphere.h</includes>
    <includes id="_l_c_g_8h" name="LCG.h" local="yes" imported="no">LCG.h</includes>
    <includes id="float4x4_8h" name="float4x4.h" local="yes" imported="no">float4x4.h</includes>
    <includes id="_math_func_8h" name="MathFunc.h" local="yes" imported="no">MathFunc.h</includes>
    <member kind="function">
      <type>float4</type>
      <name>operator*</name>
      <anchorfile>float4_8cpp.html</anchorfile>
      <anchor>a260e8f76cce7929019f592f4a0499edd</anchor>
      <arglist>(float scalar, const float4 &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>float4.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>float4_8h</filename>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">MathFwd.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">float3.h</includes>
    <class kind="class">float4</class>
    <member kind="function">
      <type>float4</type>
      <name>operator*</name>
      <anchorfile>float4_8h.html</anchorfile>
      <anchor>a260e8f76cce7929019f592f4a0499edd</anchor>
      <arglist>(float scalar, const float4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Dot3</name>
      <anchorfile>float4_8h.html</anchorfile>
      <anchor>ac0ccfdeba5d16a82d25f0c2f6ce8dbca</anchor>
      <arglist>(const float4 &amp;a, const float4 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Dot4</name>
      <anchorfile>float4_8h.html</anchorfile>
      <anchor>a265579414e0c122c7a6cb5d1fbb9a19a</anchor>
      <arglist>(const float4 &amp;a, const float4 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Cross3</name>
      <anchorfile>float4_8h.html</anchorfile>
      <anchor>ab3dbf8c6bd3b394dcfe99e335841b3f0</anchor>
      <arglist>(const float4 &amp;a, const float4 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Abs</name>
      <anchorfile>float4_8h.html</anchorfile>
      <anchor>a31dbd1197deabc16ff3efa3a0a02635a</anchor>
      <arglist>(const float4 &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Min</name>
      <anchorfile>float4_8h.html</anchorfile>
      <anchor>a44c59e48bab007d6533f65dd1a9bae86</anchor>
      <arglist>(const float4 &amp;a, const float4 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Max</name>
      <anchorfile>float4_8h.html</anchorfile>
      <anchor>aab77eea1ff95fc9ee1a6dc9ff569af6b</anchor>
      <arglist>(const float4 &amp;a, const float4 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Clamp</name>
      <anchorfile>float4_8h.html</anchorfile>
      <anchor>af44b572dcfad644709f265b87c0f8eaf</anchor>
      <arglist>(const float4 &amp;a, float floor, float ceil)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Clamp</name>
      <anchorfile>float4_8h.html</anchorfile>
      <anchor>a689272fa968fc9cc9b548748934b9dce</anchor>
      <arglist>(const float4 &amp;a, const float4 &amp;floor, const float4 &amp;ceil)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Clamp01</name>
      <anchorfile>float4_8h.html</anchorfile>
      <anchor>a016adb311f814000a0a00517d6826a15</anchor>
      <arglist>(const float4 &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Lerp</name>
      <anchorfile>float4_8h.html</anchorfile>
      <anchor>a3a9fb766e9c020e30c613fdf5a2a756f</anchor>
      <arglist>(const float4 &amp;a, const float4 &amp;b, float t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>float4x4.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>float4x4_8cpp</filename>
    <includes id="_math_func_8h" name="MathFunc.h" local="yes" imported="no">Math/MathFunc.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="float4_8h" name="float4.h" local="yes" imported="no">Math/float4.h</includes>
    <includes id="float3x3_8h" name="float3x3.h" local="yes" imported="no">Math/float3x3.h</includes>
    <includes id="float3x4_8h" name="float3x4.h" local="yes" imported="no">Math/float3x4.h</includes>
    <includes id="float4x4_8h" name="float4x4.h" local="yes" imported="no">Math/float4x4.h</includes>
    <includes id="_matrix_8inl" name="Matrix.inl" local="yes" imported="no">Matrix.inl</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Math/Quat.h</includes>
    <includes id="_transform_ops_8h" name="TransformOps.h" local="yes" imported="no">TransformOps.h</includes>
    <includes id="_plane_8h" name="Plane.h" local="yes" imported="no">Plane.h</includes>
    <includes id="_l_c_g_8h" name="LCG.h" local="yes" imported="no">LCG.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SKIPNUM</name>
      <anchorfile>float4x4_8cpp.html</anchorfile>
      <anchor>a9e41609db1f67e1406ee225355d9fbcd</anchor>
      <arglist>(val, skip)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>operator*</name>
      <anchorfile>float4x4_8cpp.html</anchorfile>
      <anchor>a8fb0ad1dde9fe8cd8fef00d069b524e9</anchor>
      <arglist>(const Quat &amp;lhs, const float4x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>operator*</name>
      <anchorfile>float4x4_8cpp.html</anchorfile>
      <anchor>a01638cfed91347a9a1c7066ff19c3dd3</anchor>
      <arglist>(const float3x3 &amp;lhs, const float4x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>operator*</name>
      <anchorfile>float4x4_8cpp.html</anchorfile>
      <anchor>a391c6bd9fc269917e354f76791978163</anchor>
      <arglist>(const float3x4 &amp;lhs, const float4x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>operator*</name>
      <anchorfile>float4x4_8cpp.html</anchorfile>
      <anchor>a95d417a391e2ee4a14c15e0436265b14</anchor>
      <arglist>(const float4 &amp;lhs, const float4x4 &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>float4x4.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>float4x4_8h</filename>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">Math/MathFwd.h</includes>
    <includes id="_matrix_proxy_8h" name="MatrixProxy.h" local="yes" imported="no">MatrixProxy.h</includes>
    <includes id="_coordinate_axis_convention_8h" name="CoordinateAxisConvention.h" local="yes" imported="no">CoordinateAxisConvention.h</includes>
    <class kind="class">float4x4</class>
    <member kind="function">
      <type>float4x4</type>
      <name>operator*</name>
      <anchorfile>float4x4_8h.html</anchorfile>
      <anchor>a8fb0ad1dde9fe8cd8fef00d069b524e9</anchor>
      <arglist>(const Quat &amp;lhs, const float4x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>operator*</name>
      <anchorfile>float4x4_8h.html</anchorfile>
      <anchor>a391c6bd9fc269917e354f76791978163</anchor>
      <arglist>(const float3x4 &amp;lhs, const float4x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>operator*</name>
      <anchorfile>float4x4_8h.html</anchorfile>
      <anchor>a01638cfed91347a9a1c7066ff19c3dd3</anchor>
      <arglist>(const float3x3 &amp;lhs, const float4x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>operator*</name>
      <anchorfile>float4x4_8h.html</anchorfile>
      <anchor>a95d417a391e2ee4a14c15e0436265b14</anchor>
      <arglist>(const float4 &amp;lhs, const float4x4 &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FloatCmp.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_float_cmp_8h</filename>
    <member kind="function">
      <type>bool</type>
      <name>Equal</name>
      <anchorfile>_float_cmp_8h.html</anchorfile>
      <anchor>a8957f554de5f9473096c5f619e470189</anchor>
      <arglist>(double a, double b, double epsilon=1e-6)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Frustum.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_frustum_8cpp</filename>
    <includes id="_a_a_b_b_8h" name="AABB.h" local="yes" imported="no">AABB.h</includes>
    <includes id="_circle_8h" name="Circle.h" local="yes" imported="no">Circle.h</includes>
    <includes id="_math_func_8h" name="MathFunc.h" local="yes" imported="no">MathFunc.h</includes>
    <includes id="_frustum_8h" name="Frustum.h" local="yes" imported="no">Frustum.h</includes>
    <includes id="_plane_8h" name="Plane.h" local="yes" imported="no">Plane.h</includes>
    <includes id="_line_8h" name="Line.h" local="yes" imported="no">Line.h</includes>
    <includes id="_o_b_b_8h" name="OBB.h" local="yes" imported="no">OBB.h</includes>
    <includes id="_ray_8h" name="Ray.h" local="yes" imported="no">Ray.h</includes>
    <includes id="_sphere_8h" name="Sphere.h" local="yes" imported="no">Sphere.h</includes>
    <includes id="_triangle_8h" name="Triangle.h" local="yes" imported="no">Triangle.h</includes>
    <includes id="_line_segment_8h" name="LineSegment.h" local="yes" imported="no">LineSegment.h</includes>
    <includes id="float2_8h" name="float2.h" local="yes" imported="no">float2.h</includes>
    <includes id="float3x3_8h" name="float3x3.h" local="yes" imported="no">float3x3.h</includes>
    <includes id="float3x4_8h" name="float3x4.h" local="yes" imported="no">float3x4.h</includes>
    <includes id="float4_8h" name="float4.h" local="yes" imported="no">float4.h</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Quat.h</includes>
  </compound>
  <compound kind="file">
    <name>Frustum.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_frustum_8h</filename>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">MathFwd.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">float3.h</includes>
    <class kind="class">Frustum</class>
    <member kind="enumeration">
      <name>FrustumType</name>
      <anchorfile>_frustum_8h.html</anchorfile>
      <anchor>aa17cd92c3d3256b9eece4f3202b33a58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InvalidFrustum</name>
      <anchorfile>_frustum_8h.html</anchorfile>
      <anchor>aa17cd92c3d3256b9eece4f3202b33a58a46fdd5bbc249980b4085e847ccc838d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OrthographicFrustum</name>
      <anchorfile>_frustum_8h.html</anchorfile>
      <anchor>aa17cd92c3d3256b9eece4f3202b33a58a547056ed9c593d09b978323f3a4e5d41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PerspectiveFrustum</name>
      <anchorfile>_frustum_8h.html</anchorfile>
      <anchor>aa17cd92c3d3256b9eece4f3202b33a58a56003ce0ee5f7b2fb275e68f36457a88</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HitInfo.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_hit_info_8h</filename>
    <class kind="struct">HitInfo</class>
  </compound>
  <compound kind="file">
    <name>LCG.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_l_c_g_8cpp</filename>
    <includes id="_math_func_8h" name="MathFunc.h" local="yes" imported="no">MathFunc.h</includes>
    <includes id="_l_c_g_8h" name="LCG.h" local="yes" imported="no">LCG.h</includes>
    <includes id="_high_perf_clock_8h" name="HighPerfClock.h" local="yes" imported="no">HighPerfClock.h</includes>
  </compound>
  <compound kind="file">
    <name>LCG.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_l_c_g_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <class kind="class">LCG</class>
  </compound>
  <compound kind="file">
    <name>Line.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_line_8cpp</filename>
    <includes id="_line_8h" name="Line.h" local="yes" imported="no">Line.h</includes>
    <includes id="_ray_8h" name="Ray.h" local="yes" imported="no">Ray.h</includes>
    <includes id="_line_segment_8h" name="LineSegment.h" local="yes" imported="no">LineSegment.h</includes>
    <includes id="float3x3_8h" name="float3x3.h" local="yes" imported="no">float3x3.h</includes>
    <includes id="float3x4_8h" name="float3x4.h" local="yes" imported="no">float3x4.h</includes>
    <includes id="float4x4_8h" name="float4x4.h" local="yes" imported="no">float4x4.h</includes>
    <includes id="_o_b_b_8h" name="OBB.h" local="yes" imported="no">OBB.h</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Quat.h</includes>
    <includes id="_triangle_8h" name="Triangle.h" local="yes" imported="no">Triangle.h</includes>
    <includes id="_plane_8h" name="Plane.h" local="yes" imported="no">Plane.h</includes>
    <includes id="_sphere_8h" name="Sphere.h" local="yes" imported="no">Sphere.h</includes>
    <includes id="_a_a_b_b_8h" name="AABB.h" local="yes" imported="no">AABB.h</includes>
    <includes id="_math_func_8h" name="MathFunc.h" local="yes" imported="no">MathFunc.h</includes>
    <member kind="function">
      <type>float</type>
      <name>Dmnop</name>
      <anchorfile>_line_8cpp.html</anchorfile>
      <anchor>a75646fced7b8e11b1acc00ac272ae07b</anchor>
      <arglist>(const float3 *v, int m, int n, int o, int p)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>LineLine</name>
      <anchorfile>_line_8cpp.html</anchorfile>
      <anchor>afdc98b11a60d9dd402c05274caa908de</anchor>
      <arglist>(float3 start0, float3 end0, float3 start1, float3 end1, float *d, float *d2)</arglist>
    </member>
    <member kind="function">
      <type>Line</type>
      <name>operator*</name>
      <anchorfile>_line_8cpp.html</anchorfile>
      <anchor>ae08bb802ec375e48ad0bfceb42602673</anchor>
      <arglist>(const float3x3 &amp;transform, const Line &amp;l)</arglist>
    </member>
    <member kind="function">
      <type>Line</type>
      <name>operator*</name>
      <anchorfile>_line_8cpp.html</anchorfile>
      <anchor>abada7c22d780dbf6bc8e6ecda595574f</anchor>
      <arglist>(const float3x4 &amp;transform, const Line &amp;l)</arglist>
    </member>
    <member kind="function">
      <type>Line</type>
      <name>operator*</name>
      <anchorfile>_line_8cpp.html</anchorfile>
      <anchor>a71e3d3ae507be4e38e95ffa540447532</anchor>
      <arglist>(const float4x4 &amp;transform, const Line &amp;l)</arglist>
    </member>
    <member kind="function">
      <type>Line</type>
      <name>operator*</name>
      <anchorfile>_line_8cpp.html</anchorfile>
      <anchor>a30dba77009fd41ce9c0d6d5ec9109679</anchor>
      <arglist>(const Quat &amp;transform, const Line &amp;l)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Line.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_line_8h</filename>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">MathFwd.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">float3.h</includes>
    <class kind="class">Line</class>
    <member kind="function">
      <type>Line</type>
      <name>operator*</name>
      <anchorfile>_line_8h.html</anchorfile>
      <anchor>ae00fbdf9a3478ab08d8acae669599558</anchor>
      <arglist>(const float3x3 &amp;transform, const Line &amp;line)</arglist>
    </member>
    <member kind="function">
      <type>Line</type>
      <name>operator*</name>
      <anchorfile>_line_8h.html</anchorfile>
      <anchor>adaa72905ec51e2de761d34be800e5c17</anchor>
      <arglist>(const float3x4 &amp;transform, const Line &amp;line)</arglist>
    </member>
    <member kind="function">
      <type>Line</type>
      <name>operator*</name>
      <anchorfile>_line_8h.html</anchorfile>
      <anchor>a5af9a25315a1b67b12f53faa66bb8bc2</anchor>
      <arglist>(const float4x4 &amp;transform, const Line &amp;line)</arglist>
    </member>
    <member kind="function">
      <type>Line</type>
      <name>operator*</name>
      <anchorfile>_line_8h.html</anchorfile>
      <anchor>ad784d9e57eaeed4c4d4980a859a5cf52</anchor>
      <arglist>(const Quat &amp;transform, const Line &amp;line)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Dmnop</name>
      <anchorfile>_line_8h.html</anchorfile>
      <anchor>a75646fced7b8e11b1acc00ac272ae07b</anchor>
      <arglist>(const float3 *v, int m, int n, int o, int p)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>LineLine</name>
      <anchorfile>_line_8h.html</anchorfile>
      <anchor>afdc98b11a60d9dd402c05274caa908de</anchor>
      <arglist>(float3 start0, float3 end0, float3 start1, float3 end1, float *d, float *d2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>LineSegment.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_line_segment_8cpp</filename>
    <includes id="_math_func_8h" name="MathFunc.h" local="yes" imported="no">MathFunc.h</includes>
    <includes id="_a_a_b_b_8h" name="AABB.h" local="yes" imported="no">AABB.h</includes>
    <includes id="_line_segment_8h" name="LineSegment.h" local="yes" imported="no">LineSegment.h</includes>
    <includes id="_ray_8h" name="Ray.h" local="yes" imported="no">Ray.h</includes>
    <includes id="_line_8h" name="Line.h" local="yes" imported="no">Line.h</includes>
    <includes id="_plane_8h" name="Plane.h" local="yes" imported="no">Plane.h</includes>
    <includes id="float3x3_8h" name="float3x3.h" local="yes" imported="no">float3x3.h</includes>
    <includes id="float3x4_8h" name="float3x4.h" local="yes" imported="no">float3x4.h</includes>
    <includes id="float4x4_8h" name="float4x4.h" local="yes" imported="no">float4x4.h</includes>
    <includes id="_o_b_b_8h" name="OBB.h" local="yes" imported="no">OBB.h</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Quat.h</includes>
    <includes id="_sphere_8h" name="Sphere.h" local="yes" imported="no">Sphere.h</includes>
    <includes id="_triangle_8h" name="Triangle.h" local="yes" imported="no">Triangle.h</includes>
    <member kind="function">
      <type>LineSegment</type>
      <name>operator*</name>
      <anchorfile>_line_segment_8cpp.html</anchorfile>
      <anchor>a3ac78332d11a81eeb147bb349d668ef7</anchor>
      <arglist>(const float3x3 &amp;transform, const LineSegment &amp;l)</arglist>
    </member>
    <member kind="function">
      <type>LineSegment</type>
      <name>operator*</name>
      <anchorfile>_line_segment_8cpp.html</anchorfile>
      <anchor>adf08902e9f5e0da129e548757fd2bb92</anchor>
      <arglist>(const float3x4 &amp;transform, const LineSegment &amp;l)</arglist>
    </member>
    <member kind="function">
      <type>LineSegment</type>
      <name>operator*</name>
      <anchorfile>_line_segment_8cpp.html</anchorfile>
      <anchor>a9563f30f52fdfdd9dfb9f75edbebd017</anchor>
      <arglist>(const float4x4 &amp;transform, const LineSegment &amp;l)</arglist>
    </member>
    <member kind="function">
      <type>LineSegment</type>
      <name>operator*</name>
      <anchorfile>_line_segment_8cpp.html</anchorfile>
      <anchor>ac3204c2827bb2a1834af1bb067313d5b</anchor>
      <arglist>(const Quat &amp;transform, const LineSegment &amp;l)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>LineSegment.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_line_segment_8h</filename>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">MathFwd.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">float3.h</includes>
    <class kind="class">LineSegment</class>
    <member kind="function">
      <type>LineSegment</type>
      <name>operator*</name>
      <anchorfile>_line_segment_8h.html</anchorfile>
      <anchor>ae2ab5883c2b362a7d2df695bc7e69c5e</anchor>
      <arglist>(const float3x3 &amp;transform, const LineSegment &amp;line)</arglist>
    </member>
    <member kind="function">
      <type>LineSegment</type>
      <name>operator*</name>
      <anchorfile>_line_segment_8h.html</anchorfile>
      <anchor>a91e83d7a04120f8525f1f1b1d50a9946</anchor>
      <arglist>(const float3x4 &amp;transform, const LineSegment &amp;line)</arglist>
    </member>
    <member kind="function">
      <type>LineSegment</type>
      <name>operator*</name>
      <anchorfile>_line_segment_8h.html</anchorfile>
      <anchor>af98262883a21f8416ffba0b16a75f481</anchor>
      <arglist>(const float4x4 &amp;transform, const LineSegment &amp;line)</arglist>
    </member>
    <member kind="function">
      <type>LineSegment</type>
      <name>operator*</name>
      <anchorfile>_line_segment_8h.html</anchorfile>
      <anchor>a683d0db25952a99590ed83bd2b3d8e67</anchor>
      <arglist>(const Quat &amp;transform, const LineSegment &amp;line)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MathConstants.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_math_constants_8h</filename>
    <member kind="variable">
      <type>const float</type>
      <name>recipSqrt2Pi</name>
      <anchorfile>_math_constants_8h.html</anchorfile>
      <anchor>a209557842a81c7538dbdd5fa14e856eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const float</type>
      <name>cos1</name>
      <anchorfile>_math_constants_8h.html</anchorfile>
      <anchor>aee5de832dab293296a45148ba2af97c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const float</type>
      <name>ln2</name>
      <anchorfile>_math_constants_8h.html</anchorfile>
      <anchor>ae83e5030253f51f2b5370310d392abfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const float</type>
      <name>cbrt3</name>
      <anchorfile>_math_constants_8h.html</anchorfile>
      <anchor>a6d9e40005062366deea75c1c3ba6088c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const float</type>
      <name>recipLn2</name>
      <anchorfile>_math_constants_8h.html</anchorfile>
      <anchor>a9d79a83f4a2384514688295c8a8609b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const float</type>
      <name>phi</name>
      <anchorfile>_math_constants_8h.html</anchorfile>
      <anchor>a1e1dcf0e9e30cecc4be610ccedf39162</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const float</type>
      <name>ln10</name>
      <anchorfile>_math_constants_8h.html</anchorfile>
      <anchor>a0457d6b5e39020935028c4459a8b9c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const float</type>
      <name>e</name>
      <anchorfile>_math_constants_8h.html</anchorfile>
      <anchor>a4225a7492f7d468ad5b985282c8ee7b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const float</type>
      <name>pi</name>
      <anchorfile>_math_constants_8h.html</anchorfile>
      <anchor>abce8f0db8a5282e441988c8d2e73f79e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const float</type>
      <name>e2</name>
      <anchorfile>_math_constants_8h.html</anchorfile>
      <anchor>adb7ce5cfc534576cd12efa607dc7e3b1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MathFunc.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_math_func_8cpp</filename>
    <includes id="_math_func_8h" name="MathFunc.h" local="yes" imported="no">MathFunc.h</includes>
    <member kind="function">
      <type>void</type>
      <name>SetMathBreakOnAssume</name>
      <anchorfile>_math_func_8cpp.html</anchorfile>
      <anchor>a66b155c2afacb1202344006749b1d616</anchor>
      <arglist>(bool isEnabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MathBreakOnAssume</name>
      <anchorfile>_math_func_8cpp.html</anchorfile>
      <anchor>a7ae2d272b0387b15780bd65968c8a956</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Factorial</name>
      <anchorfile>_math_func_8cpp.html</anchorfile>
      <anchor>a0e7da4d7a69c5b5afb707807aa177017</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CombinatorialRec</name>
      <anchorfile>_math_func_8cpp.html</anchorfile>
      <anchor>a7dace71cdf9b9e7b3297a6cec5bc93ee</anchor>
      <arglist>(int n, int k)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CombinatorialTab</name>
      <anchorfile>_math_func_8cpp.html</anchorfile>
      <anchor>ab04af431a63f29c0e20f5a67c15f25b6</anchor>
      <arglist>(int n, int k)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>PowUInt</name>
      <anchorfile>_math_func_8cpp.html</anchorfile>
      <anchor>aa5efeff5a30fb8c0f27b98ce1dae7971</anchor>
      <arglist>(float base, u32 exponent)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>PowInt</name>
      <anchorfile>_math_func_8cpp.html</anchorfile>
      <anchor>a7d4f6ec790e5c466fcda5bc3aa53b970</anchor>
      <arglist>(float base, int exponent)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mathBreakOnAssume</name>
      <anchorfile>_math_func_8cpp.html</anchorfile>
      <anchor>a5a45b270036ff608f1f207d487f23b5a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MathFunc.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_math_func_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_math_constants_8h" name="MathConstants.h" local="yes" imported="no">MathConstants.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">float3.h</includes>
    <includes id="assume_8h" name="assume.h" local="yes" imported="no">assume.h</includes>
    <class kind="class">PowIntT</class>
    <class kind="class">FactorialT</class>
    <class kind="class">CombinatorialT</class>
    <member kind="define">
      <type>#define</type>
      <name>DOT2</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a34d9834116303b2239a9c47cc42eef8f</anchor>
      <arglist>(v1, v2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DOT3</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a6c5ac2caca1bcc3fc310eb18d7764d4a</anchor>
      <arglist>(v1, v2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ABSDOT3</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>acfd6d0735ddb5e088fe9f39f0bdfba69</anchor>
      <arglist>(v1, v2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DOT3_xyz</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>abc2bd907f1eafc827e03d3c036545957</anchor>
      <arglist>(v1, x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DOT3STRIDED</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>ae5e18fa5e87f2a78a0f5f972ffee3279</anchor>
      <arglist>(v1, v2, stride)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DOT4</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a29a4af063591f55216c65b59d75d3dde</anchor>
      <arglist>(v1, v2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DOT4STRIDED</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a50716388e9d680ed0050c7995bf65d9e</anchor>
      <arglist>(v1, v2, stride)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DOT4POS</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a7dbeae6ed8941fb9f800f01d4e15aa6d</anchor>
      <arglist>(vec4D, vecPos)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DOT4POS_xyz</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a403586e5f91731e0c871ab0d89972379</anchor>
      <arglist>(vec4D, x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DOT4DIR</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>ac8233b137621c5897ec3bb41f7142259</anchor>
      <arglist>(vec4D, vecDir)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DOT4DIR_xyz</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a5582d5131d2192727ae2cfde5d23a5ee</anchor>
      <arglist>(vec4D, x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FLOAT_MAX</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a2124ca619b2968b0cc8429e2a7036869</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FLOAT_NAN</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a5d44c195a8722bab20bb0953a1114e3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FLOAT_INF</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>ac93cd804695f999a50f816740b18182d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>isfinite</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a256d70a32c03904ce13c999c1e9dc35d</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>DegToRad</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>acfd5668fc781d74859693a79d086024d</anchor>
      <arglist>(const float3 &amp;degrees)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>DegToRad</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a06f07dbc9a347a218d730140560e8e87</anchor>
      <arglist>(float degrees)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>RadToDeg</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a8b727df85fa0fc5b1cdff9bddb59e6bd</anchor>
      <arglist>(const float3 &amp;radians)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>RadToDeg</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a90955dc7ffb04f2514cbf86bb64d87ea</anchor>
      <arglist>(float radians)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Cos</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a386e3fbef0409028b9236e949f18b7cd</anchor>
      <arglist>(float angleRadians)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Sin</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a0c9ba19f74b19cd71f780c899a1a72da</anchor>
      <arglist>(float angleRadians)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Sqrt</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a28313dfeda7c503b70ae96a4e3ab1bc3</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Pow</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a31011e04d8be8d674c381cabe763b487</anchor>
      <arglist>(float base, float exp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Factorial</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a0e7da4d7a69c5b5afb707807aa177017</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CombinatorialRec</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a7dace71cdf9b9e7b3297a6cec5bc93ee</anchor>
      <arglist>(int n, int k)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CombinatorialTab</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>ab04af431a63f29c0e20f5a67c15f25b6</anchor>
      <arglist>(int n, int k)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>PowInt</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a7d4f6ec790e5c466fcda5bc3aa53b970</anchor>
      <arglist>(float base, int exponent)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>Clamp</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a9c60ccc90ff7ef802120690641f10a97</anchor>
      <arglist>(const T &amp;val, const T &amp;floor, const T &amp;ceil)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>Clamp01</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a1d4228565f696e68e406411d76db4a4f</anchor>
      <arglist>(const T &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>const T</type>
      <name>Min</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a8c78ae8bc128aecf4b8fe72340d9b762</anchor>
      <arglist>(const T &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>const T</type>
      <name>Max</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a048a477198404d615d405d8903c9baf8</anchor>
      <arglist>(const T &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Swap</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a18bb2ab30f4b96791dcbfae0a99d9e85</anchor>
      <arglist>(T &amp;a, T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GreaterThan</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a354b535df0864a20cf4df6c0ead4ce75</anchor>
      <arglist>(const T &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LessThan</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>ac55978463f0e516e8d01f33190747827</anchor>
      <arglist>(const T &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>const T</type>
      <name>Abs</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a22b8fffc2cd81667d69e4cd66b4a7067</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Equal</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a50b19901d5b163abec166d112e9e338c</anchor>
      <arglist>(const T &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EqualAbsT</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a9a26d85c73a857472acbd9ceee1962cf</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const T &amp;epsilon)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EqualAbs</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a11dbe8861e2959f7e0b90a7ab75dcf7b</anchor>
      <arglist>(float a, float b, float epsilon=1e-6f)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EqualRelT</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>af1cbd39a4f1e5a1aacf230ff703f3ad7</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const T &amp;maxRelError)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EqualRel</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>aa597488fc5fcd5f6ec2d2677f26b235e</anchor>
      <arglist>(float a, float b, float maxRelError=1e-5f)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EqualUlps</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a47f0b718fb5f39a0298cb283c6d83dcb</anchor>
      <arglist>(float a, float b, int maxUlps=10000)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFiniteNumber</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a464f3461fcd2cd7a833bfae8ea09f7d2</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFiniteNumber&lt; float &gt;</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a476218b12233a3ff1bdbfbdae8bacce2</anchor>
      <arglist>(const float &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFiniteNumber&lt; double &gt;</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a9d6f9be601c669bf13dcded6fb0cf318</anchor>
      <arglist>(const double &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFiniteNumber&lt; long double &gt;</name>
      <anchorfile>_math_func_8h.html</anchorfile>
      <anchor>a690937f337ca17cf23ecfb37059a57ad</anchor>
      <arglist>(const long double &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MathFwd.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_math_fwd_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>CONST_WIN32</name>
      <anchorfile>_math_fwd_8h.html</anchorfile>
      <anchor>a4d9e4a48aaf6992c6a22989751be38f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>assert</name>
      <anchorfile>_math_fwd_8h.html</anchorfile>
      <anchor>af576bf8ffa22a44e53018c67095ffbf0</anchor>
      <arglist>(x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MathOps.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_math_ops_8cpp</filename>
    <includes id="_math_func_8h" name="MathFunc.h" local="yes" imported="no">MathFunc.h</includes>
    <member kind="function">
      <type>bool</type>
      <name>EqualAbs</name>
      <anchorfile>_math_ops_8cpp.html</anchorfile>
      <anchor>a088d63ff623e10af46d0df67d4fab962</anchor>
      <arglist>(float a, float b, float epsilon)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EqualRel</name>
      <anchorfile>_math_ops_8cpp.html</anchorfile>
      <anchor>ae7572e18da20af842c7af8eaea797a9f</anchor>
      <arglist>(float a, float b, float maxRelError)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EqualUlps</name>
      <anchorfile>_math_ops_8cpp.html</anchorfile>
      <anchor>a10ccb7bd69558bc4709fa068c40da824</anchor>
      <arglist>(float a, float b, int maxUlps)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Matrix.inl</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_matrix_8inl</filename>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Quat.h</includes>
    <member kind="function">
      <type>void</type>
      <name>Set3x3PartRotateX</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a7f525bb8ce9c17060a98564693793920</anchor>
      <arglist>(Matrix &amp;m, float angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set3x3PartRotateY</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>ab674743d405eb8df298bc93023b2ff38</anchor>
      <arglist>(Matrix &amp;m, float angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set3x3PartRotateZ</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>abf382e1bc65e0ef0f84c189fa0b71a90</anchor>
      <arglist>(Matrix &amp;m, float angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set3x3PartRotateEulerXYZ</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a1314eecdfbcaab6d9590dc54638ab4fe</anchor>
      <arglist>(Matrix &amp;m, float x, float y, float z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExtractEulerXYZ</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a92bb9a0f3983933fb5f9ec6a3d9e2db6</anchor>
      <arglist>(Matrix &amp;m, float &amp;x, float &amp;y, float &amp;z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set3x3PartRotateEulerXZY</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a12358d51c9056104c233624f08090946</anchor>
      <arglist>(Matrix &amp;m, float &amp;x, float &amp;z, float &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExtractEulerXZY</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a5d9fd4f4e1c4a987dbb313a3e5c1c5c3</anchor>
      <arglist>(Matrix &amp;m, float &amp;x, float &amp;z, float &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set3x3PartRotateEulerYXZ</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a79d7ee51800b482b25edeab34b1137bb</anchor>
      <arglist>(Matrix &amp;m, float &amp;y, float &amp;x, float &amp;z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExtractEulerYXZ</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a719bc14384a2ea84de07d08b5bf9d0a1</anchor>
      <arglist>(Matrix &amp;m, float &amp;y, float &amp;x, float &amp;z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set3x3PartRotateEulerYZX</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a6b6b920daf37201eab27362ff3122511</anchor>
      <arglist>(Matrix &amp;m, float &amp;y, float &amp;z, float &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExtractEulerYZX</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a49929cf81f1d319b117e2c46940b5471</anchor>
      <arglist>(Matrix &amp;m, float &amp;y, float &amp;z, float &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set3x3PartRotateEulerZXY</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>abcfe3ad03b24f65a99b19d516cfae853</anchor>
      <arglist>(Matrix &amp;m, float &amp;z, float &amp;x, float &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExtractEulerZXY</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>ad9c445ceebb41e3931458c0017bd54e9</anchor>
      <arglist>(Matrix &amp;m, float &amp;z, float &amp;x, float &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set3x3PartRotateEulerZYX</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>ae33e80d0f66f8278faaea8dbecbb4a28</anchor>
      <arglist>(Matrix &amp;m, float &amp;z, float &amp;y, float &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExtractEulerZYX</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>ac15e2c22544cb0a363fbd3b9c93dd474</anchor>
      <arglist>(Matrix &amp;m, float &amp;z, float &amp;y, float &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set3x3PartRotateEulerXYX</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a2252f3c6f2bb8e2b714e718d24b419ed</anchor>
      <arglist>(Matrix &amp;m, float &amp;x2, float &amp;y, float &amp;x1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExtractEulerXYX</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>ad401f20902379cd69dd3c9a7124b517a</anchor>
      <arglist>(Matrix &amp;m, float &amp;x2, float &amp;y, float &amp;x1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set3x3PartRotateEulerXZX</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a79f92e2e54dc22e05853a3a8e5b72114</anchor>
      <arglist>(Matrix &amp;m, float &amp;x2, float &amp;z, float &amp;x1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExtractEulerXZX</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a0d61fd14d342b29976007c2dcf80da38</anchor>
      <arglist>(Matrix &amp;m, float &amp;x2, float &amp;z, float &amp;x1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set3x3PartRotateEulerYXY</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a23aa23423c25e301466652f6d3b4957f</anchor>
      <arglist>(Matrix &amp;m, float &amp;y2, float &amp;x, float &amp;y1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExtractEulerYXY</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a39d5726269f3eedaf533106506512828</anchor>
      <arglist>(Matrix &amp;m, float &amp;y2, float &amp;x, float &amp;y1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set3x3PartRotateEulerYZY</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a1e62ecc112339dd82b87d431a6f3f809</anchor>
      <arglist>(Matrix &amp;m, float &amp;y2, float &amp;z, float &amp;y1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExtractEulerYZY</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a3d76c2eee5eb72972cda1ef423d6274f</anchor>
      <arglist>(Matrix &amp;m, float &amp;y2, float &amp;z, float &amp;y1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set3x3PartRotateEulerZXZ</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a9516f79b62b69d3e60b53fb9bb404de8</anchor>
      <arglist>(Matrix &amp;m, float &amp;z2, float &amp;x, float &amp;z1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExtractEulerZXZ</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a8f57b00cf7bd161d0176472565a6310a</anchor>
      <arglist>(Matrix &amp;m, float &amp;z2, float &amp;x, float &amp;z1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set3x3PartRotateEulerZYZ</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>ad289b313d5f4a102fa2a8b1aa5af7747</anchor>
      <arglist>(Matrix &amp;m, float &amp;z2, float &amp;y, float &amp;z1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExtractEulerZYZ</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a4f2ddf2250fee547b6672c0d67f27005</anchor>
      <arglist>(Matrix &amp;m, float &amp;z2, float &amp;y, float &amp;z1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIdentity3x3</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a9a27dfa75a7551416bd06ae194668ba5</anchor>
      <arglist>(Matrix &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InverseAffineMatrixNoScale</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>abd7f4eabcf3819e7f4418ae392742133</anchor>
      <arglist>(Matrix &amp;mat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InverseAffineMatrixUniformScale</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>accef1045a62b1f029bced51eb54f7da0</anchor>
      <arglist>(Matrix &amp;mat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InverseAffineMatrixNonuniformScale</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>ac9c0c844ce7961418d88d24502a4d8d1</anchor>
      <arglist>(Matrix &amp;mat)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>InverseMatrix</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a24f591c94ae1f3d45ee768fdd0e02048</anchor>
      <arglist>(Matrix &amp;mat)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LUDecomposeMatrix</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a278a6eacbaec1de4aa559cccdac23a55</anchor>
      <arglist>(const Matrix &amp;mat, Matrix &amp;lower, Matrix &amp;upper)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CholeskyDecomposeMatrix</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a1f59a0535befe569d374dcc3c38b403e</anchor>
      <arglist>(const Matrix &amp;mat, Matrix &amp;lower)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMatrixRotatePart</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a63b256dd26016b4063ec15fa21081054</anchor>
      <arglist>(Matrix &amp;m, const Quat &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMatrix3x3LinearPlaneReflect</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a0c1b659f24f30740c61b78a36e4933ce</anchor>
      <arglist>(Matrix &amp;m, float x, float y, float z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMatrix3x4AffinePlaneReflect</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a8c514c253bd84530fe927b93c67598b9</anchor>
      <arglist>(Matrix &amp;m, float x, float y, float z, float d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMatrix3x3LinearPlaneProject</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a6e779def5df5815d8d894aa989d12242</anchor>
      <arglist>(Matrix &amp;m, float x, float y, float z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMatrix3x4AffinePlaneProject</name>
      <anchorfile>_matrix_8inl.html</anchorfile>
      <anchor>a0a02f99b059e642ed2a4dc3004ec8462</anchor>
      <arglist>(Matrix &amp;m, float x, float y, float z, float d)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MatrixProxy.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_matrix_proxy_8h</filename>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">MathFwd.h</includes>
    <class kind="class">MatrixProxy</class>
  </compound>
  <compound kind="file">
    <name>OBB.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_o_b_b_8cpp</filename>
    <includes id="_math_func_8h" name="MathFunc.h" local="yes" imported="no">MathFunc.h</includes>
    <includes id="_o_b_b_8h" name="OBB.h" local="yes" imported="no">OBB.h</includes>
    <includes id="_a_a_b_b_8h" name="AABB.h" local="yes" imported="no">AABB.h</includes>
    <includes id="_l_c_g_8h" name="LCG.h" local="yes" imported="no">LCG.h</includes>
    <includes id="_line_segment_8h" name="LineSegment.h" local="yes" imported="no">LineSegment.h</includes>
    <includes id="_line_8h" name="Line.h" local="yes" imported="no">Line.h</includes>
    <includes id="_plane_8h" name="Plane.h" local="yes" imported="no">Plane.h</includes>
    <includes id="_sphere_8h" name="Sphere.h" local="yes" imported="no">Sphere.h</includes>
    <includes id="float3x3_8h" name="float3x3.h" local="yes" imported="no">float3x3.h</includes>
    <includes id="float3x4_8h" name="float3x4.h" local="yes" imported="no">float3x4.h</includes>
    <includes id="float4_8h" name="float4.h" local="yes" imported="no">float4.h</includes>
    <includes id="float4x4_8h" name="float4x4.h" local="yes" imported="no">float4x4.h</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Quat.h</includes>
    <includes id="_ray_8h" name="Ray.h" local="yes" imported="no">Ray.h</includes>
    <includes id="_triangle_8h" name="Triangle.h" local="yes" imported="no">Triangle.h</includes>
    <member kind="function">
      <type>void</type>
      <name>OBBSetFrom</name>
      <anchorfile>_o_b_b_8cpp.html</anchorfile>
      <anchor>a8adc3731d4dcc7ec50c12237ca83a749</anchor>
      <arglist>(OBB &amp;obb, const AABB &amp;aabb, const Matrix &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OBBTransform</name>
      <anchorfile>_o_b_b_8cpp.html</anchorfile>
      <anchor>aaa0c2136a395f342514e91f16ab78c4a</anchor>
      <arglist>(OBB &amp;o, const Matrix &amp;transform)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OBB.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_o_b_b_8h</filename>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">MathFwd.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">float3.h</includes>
    <class kind="class">OBB</class>
  </compound>
  <compound kind="file">
    <name>Plane.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_plane_8cpp</filename>
    <includes id="_a_a_b_b_8h" name="AABB.h" local="yes" imported="no">AABB.h</includes>
    <includes id="_circle_8h" name="Circle.h" local="yes" imported="no">Circle.h</includes>
    <includes id="_math_func_8h" name="MathFunc.h" local="yes" imported="no">MathFunc.h</includes>
    <includes id="_plane_8h" name="Plane.h" local="yes" imported="no">Plane.h</includes>
    <includes id="_line_8h" name="Line.h" local="yes" imported="no">Line.h</includes>
    <includes id="_o_b_b_8h" name="OBB.h" local="yes" imported="no">OBB.h</includes>
    <includes id="_ray_8h" name="Ray.h" local="yes" imported="no">Ray.h</includes>
    <includes id="_sphere_8h" name="Sphere.h" local="yes" imported="no">Sphere.h</includes>
    <includes id="_triangle_8h" name="Triangle.h" local="yes" imported="no">Triangle.h</includes>
    <includes id="_line_segment_8h" name="LineSegment.h" local="yes" imported="no">LineSegment.h</includes>
    <includes id="float3x3_8h" name="float3x3.h" local="yes" imported="no">float3x3.h</includes>
    <includes id="float3x4_8h" name="float3x4.h" local="yes" imported="no">float3x4.h</includes>
    <includes id="float4_8h" name="float4.h" local="yes" imported="no">float4.h</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Quat.h</includes>
    <includes id="_frustum_8h" name="Frustum.h" local="yes" imported="no">Frustum.h</includes>
    <member kind="function">
      <type>bool</type>
      <name>IntersectLinePlane</name>
      <anchorfile>_plane_8cpp.html</anchorfile>
      <anchor>ab71d09a2a437c8014a210a153b4ad5cd</anchor>
      <arglist>(const float3 &amp;ptOnPlane, const float3 &amp;planeNormal, const float3 &amp;lineStart, const float3 &amp;lineDir, float *t)</arglist>
    </member>
    <member kind="function">
      <type>Plane</type>
      <name>operator*</name>
      <anchorfile>_plane_8cpp.html</anchorfile>
      <anchor>a22556bb30a3bb2dbfe8962a9fc89f57a</anchor>
      <arglist>(const float3x3 &amp;transform, const Plane &amp;plane)</arglist>
    </member>
    <member kind="function">
      <type>Plane</type>
      <name>operator*</name>
      <anchorfile>_plane_8cpp.html</anchorfile>
      <anchor>a2fcab5de138426494149507999605ccd</anchor>
      <arglist>(const float3x4 &amp;transform, const Plane &amp;plane)</arglist>
    </member>
    <member kind="function">
      <type>Plane</type>
      <name>operator*</name>
      <anchorfile>_plane_8cpp.html</anchorfile>
      <anchor>afaee9dee725c537792f835e0be480d83</anchor>
      <arglist>(const float4x4 &amp;transform, const Plane &amp;plane)</arglist>
    </member>
    <member kind="function">
      <type>Plane</type>
      <name>operator*</name>
      <anchorfile>_plane_8cpp.html</anchorfile>
      <anchor>a92bf82f126d6a6320da23bea8b18bf14</anchor>
      <arglist>(const Quat &amp;transform, const Plane &amp;plane)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Plane.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_plane_8h</filename>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">MathFwd.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">float3.h</includes>
    <class kind="class">Plane</class>
    <member kind="function">
      <type>Plane</type>
      <name>operator*</name>
      <anchorfile>_plane_8h.html</anchorfile>
      <anchor>a22556bb30a3bb2dbfe8962a9fc89f57a</anchor>
      <arglist>(const float3x3 &amp;transform, const Plane &amp;plane)</arglist>
    </member>
    <member kind="function">
      <type>Plane</type>
      <name>operator*</name>
      <anchorfile>_plane_8h.html</anchorfile>
      <anchor>a2fcab5de138426494149507999605ccd</anchor>
      <arglist>(const float3x4 &amp;transform, const Plane &amp;plane)</arglist>
    </member>
    <member kind="function">
      <type>Plane</type>
      <name>operator*</name>
      <anchorfile>_plane_8h.html</anchorfile>
      <anchor>afaee9dee725c537792f835e0be480d83</anchor>
      <arglist>(const float4x4 &amp;transform, const Plane &amp;plane)</arglist>
    </member>
    <member kind="function">
      <type>Plane</type>
      <name>operator*</name>
      <anchorfile>_plane_8h.html</anchorfile>
      <anchor>a92bf82f126d6a6320da23bea8b18bf14</anchor>
      <arglist>(const Quat &amp;transform, const Plane &amp;plane)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Polygon.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_polygon_8cpp</filename>
    <includes id="_polygon_8h" name="Polygon.h" local="yes" imported="no">Polygon.h</includes>
    <includes id="_plane_8h" name="Plane.h" local="yes" imported="no">Plane.h</includes>
    <includes id="_line_8h" name="Line.h" local="yes" imported="no">Line.h</includes>
    <includes id="_line_segment_8h" name="LineSegment.h" local="yes" imported="no">LineSegment.h</includes>
    <includes id="_math_func_8h" name="MathFunc.h" local="yes" imported="no">MathFunc.h</includes>
  </compound>
  <compound kind="file">
    <name>Polygon.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_polygon_8h</filename>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">MathFwd.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">float3.h</includes>
    <class kind="class">Polygon</class>
  </compound>
  <compound kind="file">
    <name>Polynomial.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_polynomial_8h</filename>
    <class kind="class">Polynomial</class>
  </compound>
  <compound kind="file">
    <name>Quat.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_quat_8cpp</filename>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Math/Quat.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="float4_8h" name="float4.h" local="yes" imported="no">Math/float4.h</includes>
    <includes id="float3x3_8h" name="float3x3.h" local="yes" imported="no">Math/float3x3.h</includes>
    <includes id="float3x4_8h" name="float3x4.h" local="yes" imported="no">Math/float3x4.h</includes>
    <includes id="float4x4_8h" name="float4x4.h" local="yes" imported="no">Math/float4x4.h</includes>
    <includes id="_l_c_g_8h" name="LCG.h" local="yes" imported="no">LCG.h</includes>
    <includes id="assume_8h" name="assume.h" local="yes" imported="no">assume.h</includes>
    <includes id="_math_func_8h" name="MathFunc.h" local="yes" imported="no">Math/MathFunc.h</includes>
    <member kind="function">
      <type>Quat</type>
      <name>Lerp</name>
      <anchorfile>_quat_8cpp.html</anchorfile>
      <anchor>a3376f63d4c665d0fb8c22d3a35efb289</anchor>
      <arglist>(const Quat &amp;a, const Quat &amp;b, float t)</arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>Slerp</name>
      <anchorfile>_quat_8cpp.html</anchorfile>
      <anchor>a1bb096ca6d18eb2b273aa9b3edda889e</anchor>
      <arglist>(const Quat &amp;a, const Quat &amp;b, float t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetQuatFrom</name>
      <anchorfile>_quat_8cpp.html</anchorfile>
      <anchor>a1cec247178b39849ee00ee97bd63d7e3</anchor>
      <arglist>(Quat &amp;q, const M &amp;m)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Quat.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_quat_8h</filename>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">Math/MathFwd.h</includes>
    <class kind="class">Quat</class>
    <member kind="function">
      <type>Quat</type>
      <name>Lerp</name>
      <anchorfile>_quat_8h.html</anchorfile>
      <anchor>a3376f63d4c665d0fb8c22d3a35efb289</anchor>
      <arglist>(const Quat &amp;a, const Quat &amp;b, float t)</arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>Slerp</name>
      <anchorfile>_quat_8h.html</anchorfile>
      <anchor>a1bb096ca6d18eb2b273aa9b3edda889e</anchor>
      <arglist>(const Quat &amp;a, const Quat &amp;b, float t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Ray.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_ray_8cpp</filename>
    <includes id="_a_a_b_b_8h" name="AABB.h" local="yes" imported="no">AABB.h</includes>
    <includes id="_line_8h" name="Line.h" local="yes" imported="no">Line.h</includes>
    <includes id="_ray_8h" name="Ray.h" local="yes" imported="no">Ray.h</includes>
    <includes id="_line_segment_8h" name="LineSegment.h" local="yes" imported="no">LineSegment.h</includes>
    <includes id="float3x3_8h" name="float3x3.h" local="yes" imported="no">float3x3.h</includes>
    <includes id="float3x4_8h" name="float3x4.h" local="yes" imported="no">float3x4.h</includes>
    <includes id="float4x4_8h" name="float4x4.h" local="yes" imported="no">float4x4.h</includes>
    <includes id="_o_b_b_8h" name="OBB.h" local="yes" imported="no">OBB.h</includes>
    <includes id="_plane_8h" name="Plane.h" local="yes" imported="no">Plane.h</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Quat.h</includes>
    <includes id="_sphere_8h" name="Sphere.h" local="yes" imported="no">Sphere.h</includes>
    <includes id="_triangle_8h" name="Triangle.h" local="yes" imported="no">Triangle.h</includes>
    <includes id="_math_func_8h" name="MathFunc.h" local="yes" imported="no">MathFunc.h</includes>
    <member kind="function">
      <type>Ray</type>
      <name>operator*</name>
      <anchorfile>_ray_8cpp.html</anchorfile>
      <anchor>ab9763649eebd92cadd9b1a727eee4b2b</anchor>
      <arglist>(const float3x3 &amp;transform, const Ray &amp;ray)</arglist>
    </member>
    <member kind="function">
      <type>Ray</type>
      <name>operator*</name>
      <anchorfile>_ray_8cpp.html</anchorfile>
      <anchor>af13304396e4ac823e76eda6893da9252</anchor>
      <arglist>(const float3x4 &amp;transform, const Ray &amp;ray)</arglist>
    </member>
    <member kind="function">
      <type>Ray</type>
      <name>operator*</name>
      <anchorfile>_ray_8cpp.html</anchorfile>
      <anchor>ad6d87ac185a5851ae0de860157f5010d</anchor>
      <arglist>(const float4x4 &amp;transform, const Ray &amp;ray)</arglist>
    </member>
    <member kind="function">
      <type>Ray</type>
      <name>operator*</name>
      <anchorfile>_ray_8cpp.html</anchorfile>
      <anchor>ab3e20905e080aeafddbf6de6b78a9bd0</anchor>
      <arglist>(const Quat &amp;transform, const Ray &amp;ray)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Ray.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_ray_8h</filename>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">MathFwd.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">float3.h</includes>
    <class kind="class">Ray</class>
    <member kind="function">
      <type>Ray</type>
      <name>operator*</name>
      <anchorfile>_ray_8h.html</anchorfile>
      <anchor>ab9763649eebd92cadd9b1a727eee4b2b</anchor>
      <arglist>(const float3x3 &amp;transform, const Ray &amp;ray)</arglist>
    </member>
    <member kind="function">
      <type>Ray</type>
      <name>operator*</name>
      <anchorfile>_ray_8h.html</anchorfile>
      <anchor>af13304396e4ac823e76eda6893da9252</anchor>
      <arglist>(const float3x4 &amp;transform, const Ray &amp;ray)</arglist>
    </member>
    <member kind="function">
      <type>Ray</type>
      <name>operator*</name>
      <anchorfile>_ray_8h.html</anchorfile>
      <anchor>ad6d87ac185a5851ae0de860157f5010d</anchor>
      <arglist>(const float4x4 &amp;transform, const Ray &amp;ray)</arglist>
    </member>
    <member kind="function">
      <type>Ray</type>
      <name>operator*</name>
      <anchorfile>_ray_8h.html</anchorfile>
      <anchor>ab3e20905e080aeafddbf6de6b78a9bd0</anchor>
      <arglist>(const Quat &amp;transform, const Ray &amp;ray)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Rect.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_rect_8h</filename>
    <class kind="class">Rect</class>
  </compound>
  <compound kind="file">
    <name>Sphere.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_sphere_8cpp</filename>
    <includes id="_math_func_8h" name="MathFunc.h" local="yes" imported="no">MathFunc.h</includes>
    <includes id="_array_8h" name="Array.h" local="yes" imported="no">Array.h</includes>
    <includes id="_o_b_b_8h" name="OBB.h" local="yes" imported="no">OBB.h</includes>
    <includes id="_a_a_b_b_8h" name="AABB.h" local="yes" imported="no">AABB.h</includes>
    <includes id="_l_c_g_8h" name="LCG.h" local="yes" imported="no">LCG.h</includes>
    <includes id="_line_segment_8h" name="LineSegment.h" local="yes" imported="no">LineSegment.h</includes>
    <includes id="_line_8h" name="Line.h" local="yes" imported="no">Line.h</includes>
    <includes id="_ray_8h" name="Ray.h" local="yes" imported="no">Ray.h</includes>
    <includes id="_plane_8h" name="Plane.h" local="yes" imported="no">Plane.h</includes>
    <includes id="_sphere_8h" name="Sphere.h" local="yes" imported="no">Sphere.h</includes>
    <includes id="float2_8h" name="float2.h" local="yes" imported="no">float2.h</includes>
    <includes id="float3x3_8h" name="float3x3.h" local="yes" imported="no">float3x3.h</includes>
    <includes id="float3x4_8h" name="float3x4.h" local="yes" imported="no">float3x4.h</includes>
    <includes id="float4_8h" name="float4.h" local="yes" imported="no">float4.h</includes>
    <includes id="float4x4_8h" name="float4x4.h" local="yes" imported="no">float4x4.h</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Quat.h</includes>
    <includes id="_triangle_8h" name="Triangle.h" local="yes" imported="no">Triangle.h</includes>
    <member kind="function">
      <type>bool</type>
      <name>IntersectLineSphere</name>
      <anchorfile>_sphere_8cpp.html</anchorfile>
      <anchor>adfcf75f0cf0e55c1660202ec5347558a</anchor>
      <arglist>(const float3 &amp;lPos, const float3 &amp;lDir, const Sphere &amp;s, float &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Sphere.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_sphere_8h</filename>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">MathFwd.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">float3.h</includes>
    <class kind="class">Sphere</class>
  </compound>
  <compound kind="file">
    <name>StdCMallocHeap.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_std_c_malloc_heap_8h</filename>
    <includes id="_allocator_8h" name="Allocator.h" local="yes" imported="no">Allocator.h</includes>
    <includes id="_alignment_8h" name="Alignment.h" local="yes" imported="no">Alignment.h</includes>
    <class kind="class">kNet::StdCAlloc</class>
    <namespace>kNet</namespace>
  </compound>
  <compound kind="file">
    <name>TransformOps.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_transform_ops_8cpp</filename>
    <includes id="_transform_ops_8h" name="TransformOps.h" local="yes" imported="no">TransformOps.h</includes>
    <includes id="_math_func_8h" name="MathFunc.h" local="yes" imported="no">MathFunc.h</includes>
    <includes id="float4_8h" name="float4.h" local="yes" imported="no">float4.h</includes>
    <includes id="float3x4_8h" name="float3x4.h" local="yes" imported="no">float3x4.h</includes>
    <includes id="float4x4_8h" name="float4x4.h" local="yes" imported="no">float4x4.h</includes>
    <member kind="function">
      <type>float3x4</type>
      <name>operator*</name>
      <anchorfile>_transform_ops_8cpp.html</anchorfile>
      <anchor>ad7cedd946cd864505ad699f49c81bd6d</anchor>
      <arglist>(const TranslateOp &amp;lhs, const float3x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>operator*</name>
      <anchorfile>_transform_ops_8cpp.html</anchorfile>
      <anchor>afab119c89552543cb11e8d0f3f133f99</anchor>
      <arglist>(const float3x4 &amp;lhs, const TranslateOp &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>operator*</name>
      <anchorfile>_transform_ops_8cpp.html</anchorfile>
      <anchor>ab05712274a07154d153682efdfec690d</anchor>
      <arglist>(const TranslateOp &amp;lhs, const float4x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>operator*</name>
      <anchorfile>_transform_ops_8cpp.html</anchorfile>
      <anchor>ab6dbec6a630806376d4e0682a86f6c4c</anchor>
      <arglist>(const float4x4 &amp;lhs, const TranslateOp &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>operator*</name>
      <anchorfile>_transform_ops_8cpp.html</anchorfile>
      <anchor>a06a506584b553a822dfb539f8fbdcdc1</anchor>
      <arglist>(const ScaleOp &amp;lhs, const float3x3 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>operator*</name>
      <anchorfile>_transform_ops_8cpp.html</anchorfile>
      <anchor>a4b3f1a9c6db37096077613e9c05c17f2</anchor>
      <arglist>(const float3x3 &amp;lhs, const ScaleOp &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>operator*</name>
      <anchorfile>_transform_ops_8cpp.html</anchorfile>
      <anchor>a0c7c9184820418e0de1db83d53d5f9bf</anchor>
      <arglist>(const ScaleOp &amp;lhs, const float3x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>operator*</name>
      <anchorfile>_transform_ops_8cpp.html</anchorfile>
      <anchor>acaa859dd3ac15d17cfa483272a727896</anchor>
      <arglist>(const float3x4 &amp;lhs, const ScaleOp &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>operator*</name>
      <anchorfile>_transform_ops_8cpp.html</anchorfile>
      <anchor>a8450a4f3a01d53256eb5b6a1930afa4e</anchor>
      <arglist>(const ScaleOp &amp;lhs, const float4x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>operator*</name>
      <anchorfile>_transform_ops_8cpp.html</anchorfile>
      <anchor>ae1604055f3d4b54285f2c6c31f4ba0da</anchor>
      <arglist>(const float4x4 &amp;lhs, const ScaleOp &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>operator*</name>
      <anchorfile>_transform_ops_8cpp.html</anchorfile>
      <anchor>a526a7c3997e140041e27de4a497dc5fe</anchor>
      <arglist>(const ScaleOp &amp;lhs, const TranslateOp &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>operator*</name>
      <anchorfile>_transform_ops_8cpp.html</anchorfile>
      <anchor>ab2f3e498874bf48210dc2afacce7e75c</anchor>
      <arglist>(const TranslateOp &amp;lhs, const ScaleOp &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TransformOps.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_transform_ops_8h</filename>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">MathFwd.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">float3.h</includes>
    <class kind="class">TranslateOp</class>
    <class kind="class">ScaleOp</class>
    <member kind="function">
      <type>float3x4</type>
      <name>operator*</name>
      <anchorfile>_transform_ops_8h.html</anchorfile>
      <anchor>ad7cedd946cd864505ad699f49c81bd6d</anchor>
      <arglist>(const TranslateOp &amp;lhs, const float3x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>operator*</name>
      <anchorfile>_transform_ops_8h.html</anchorfile>
      <anchor>afab119c89552543cb11e8d0f3f133f99</anchor>
      <arglist>(const float3x4 &amp;lhs, const TranslateOp &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>operator*</name>
      <anchorfile>_transform_ops_8h.html</anchorfile>
      <anchor>ab05712274a07154d153682efdfec690d</anchor>
      <arglist>(const TranslateOp &amp;lhs, const float4x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>operator*</name>
      <anchorfile>_transform_ops_8h.html</anchorfile>
      <anchor>ab6dbec6a630806376d4e0682a86f6c4c</anchor>
      <arglist>(const float4x4 &amp;lhs, const TranslateOp &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>operator*</name>
      <anchorfile>_transform_ops_8h.html</anchorfile>
      <anchor>a06a506584b553a822dfb539f8fbdcdc1</anchor>
      <arglist>(const ScaleOp &amp;lhs, const float3x3 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>operator*</name>
      <anchorfile>_transform_ops_8h.html</anchorfile>
      <anchor>a4b3f1a9c6db37096077613e9c05c17f2</anchor>
      <arglist>(const float3x3 &amp;lhs, const ScaleOp &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>operator*</name>
      <anchorfile>_transform_ops_8h.html</anchorfile>
      <anchor>a0c7c9184820418e0de1db83d53d5f9bf</anchor>
      <arglist>(const ScaleOp &amp;lhs, const float3x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>operator*</name>
      <anchorfile>_transform_ops_8h.html</anchorfile>
      <anchor>acaa859dd3ac15d17cfa483272a727896</anchor>
      <arglist>(const float3x4 &amp;lhs, const ScaleOp &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>operator*</name>
      <anchorfile>_transform_ops_8h.html</anchorfile>
      <anchor>a8450a4f3a01d53256eb5b6a1930afa4e</anchor>
      <arglist>(const ScaleOp &amp;lhs, const float4x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>operator*</name>
      <anchorfile>_transform_ops_8h.html</anchorfile>
      <anchor>ae1604055f3d4b54285f2c6c31f4ba0da</anchor>
      <arglist>(const float4x4 &amp;lhs, const ScaleOp &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>operator*</name>
      <anchorfile>_transform_ops_8h.html</anchorfile>
      <anchor>a526a7c3997e140041e27de4a497dc5fe</anchor>
      <arglist>(const ScaleOp &amp;lhs, const TranslateOp &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>operator*</name>
      <anchorfile>_transform_ops_8h.html</anchorfile>
      <anchor>ab2f3e498874bf48210dc2afacce7e75c</anchor>
      <arglist>(const TranslateOp &amp;lhs, const ScaleOp &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Triangle.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_triangle_8cpp</filename>
    <includes id="_math_func_8h" name="MathFunc.h" local="yes" imported="no">MathFunc.h</includes>
    <includes id="float2_8h" name="float2.h" local="yes" imported="no">float2.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">float3.h</includes>
    <includes id="float3x3_8h" name="float3x3.h" local="yes" imported="no">float3x3.h</includes>
    <includes id="float3x4_8h" name="float3x4.h" local="yes" imported="no">float3x4.h</includes>
    <includes id="float4x4_8h" name="float4x4.h" local="yes" imported="no">float4x4.h</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Quat.h</includes>
    <includes id="_triangle_8h" name="Triangle.h" local="yes" imported="no">Triangle.h</includes>
    <includes id="_plane_8h" name="Plane.h" local="yes" imported="no">Plane.h</includes>
    <includes id="_line_8h" name="Line.h" local="yes" imported="no">Line.h</includes>
    <includes id="_line_segment_8h" name="LineSegment.h" local="yes" imported="no">LineSegment.h</includes>
    <includes id="_ray_8h" name="Ray.h" local="yes" imported="no">Ray.h</includes>
    <includes id="_sphere_8h" name="Sphere.h" local="yes" imported="no">Sphere.h</includes>
    <includes id="_a_a_b_b_8h" name="AABB.h" local="yes" imported="no">AABB.h</includes>
    <includes id="_o_b_b_8h" name="OBB.h" local="yes" imported="no">OBB.h</includes>
    <member kind="function">
      <type>bool</type>
      <name>IntersectLineTri</name>
      <anchorfile>_triangle_8cpp.html</anchorfile>
      <anchor>a72b061a6c36be253da80d51d98ca1935</anchor>
      <arglist>(const float3 &amp;linePos, const float3 &amp;lineDir, const float3 &amp;v0, const float3 &amp;v1, const float3 &amp;v2, float &amp;u, float &amp;v, float &amp;t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>FindIntersectingLineSegments</name>
      <anchorfile>_triangle_8cpp.html</anchorfile>
      <anchor>ada6ea58d31cf8a38d08188647a99af0d</anchor>
      <arglist>(const Triangle &amp;t, float da, float db, float dc, LineSegment &amp;l1, LineSegment &amp;l2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RangesOverlap</name>
      <anchorfile>_triangle_8cpp.html</anchorfile>
      <anchor>a4d10ee7b03604db361b6b97018271f90</anchor>
      <arglist>(float start1, float end1, float start2, float end2)</arglist>
    </member>
    <member kind="function">
      <type>Triangle</type>
      <name>operator*</name>
      <anchorfile>_triangle_8cpp.html</anchorfile>
      <anchor>a8da4f178514a7810d5916e1a3b586719</anchor>
      <arglist>(const float3x3 &amp;transform, const Triangle &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>Triangle</type>
      <name>operator*</name>
      <anchorfile>_triangle_8cpp.html</anchorfile>
      <anchor>abcc7f8b48e5db8461aaf45fd9ef29a79</anchor>
      <arglist>(const float3x4 &amp;transform, const Triangle &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>Triangle</type>
      <name>operator*</name>
      <anchorfile>_triangle_8cpp.html</anchorfile>
      <anchor>a0b73a3d1122bab5bbfd0d307d87e813a</anchor>
      <arglist>(const float4x4 &amp;transform, const Triangle &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>Triangle</type>
      <name>operator*</name>
      <anchorfile>_triangle_8cpp.html</anchorfile>
      <anchor>a5a0cb6153926240a3a5c39188b20a26d</anchor>
      <arglist>(const Quat &amp;transform, const Triangle &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Triangle.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/Math/</path>
    <filename>_triangle_8h</filename>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">MathFwd.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">float3.h</includes>
    <class kind="class">Triangle</class>
    <member kind="function">
      <type>Triangle</type>
      <name>operator*</name>
      <anchorfile>_triangle_8h.html</anchorfile>
      <anchor>a8da4f178514a7810d5916e1a3b586719</anchor>
      <arglist>(const float3x3 &amp;transform, const Triangle &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>Triangle</type>
      <name>operator*</name>
      <anchorfile>_triangle_8h.html</anchorfile>
      <anchor>abcc7f8b48e5db8461aaf45fd9ef29a79</anchor>
      <arglist>(const float3x4 &amp;transform, const Triangle &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>Triangle</type>
      <name>operator*</name>
      <anchorfile>_triangle_8h.html</anchorfile>
      <anchor>a0b73a3d1122bab5bbfd0d307d87e813a</anchor>
      <arglist>(const float4x4 &amp;transform, const Triangle &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>Triangle</type>
      <name>operator*</name>
      <anchorfile>_triangle_8h.html</anchorfile>
      <anchor>a5a0cb6153926240a3a5c39188b20a26d</anchor>
      <arglist>(const Quat &amp;transform, const Triangle &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MemoryLeakCheck.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_memory_leak_check_8h</filename>
  </compound>
  <compound kind="file">
    <name>PluginAPI.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_plugin_a_p_i_8cpp</filename>
    <includes id="_plugin_a_p_i_8h" name="PluginAPI.h" local="yes" imported="no">PluginAPI.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_application_8h" name="Application.h" local="yes" imported="no">Application.h</includes>
    <member kind="typedef">
      <type>void(*</type>
      <name>TundraPluginMainSignature</name>
      <anchorfile>_plugin_a_p_i_8cpp.html</anchorfile>
      <anchor>a0189d6f87ef8ccb256855739004405c3</anchor>
      <arglist>)(Framework *owner)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>WStringToString</name>
      <anchorfile>_plugin_a_p_i_8cpp.html</anchorfile>
      <anchor>adc960bf7ac978b08016e4a5956f6a192</anchor>
      <arglist>(const std::wstring &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetErrorString</name>
      <anchorfile>_plugin_a_p_i_8cpp.html</anchorfile>
      <anchor>a00894e812967aa6e7859a3048c760b66</anchor>
      <arglist>(int error)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>LookupRelativePath</name>
      <anchorfile>_plugin_a_p_i_8cpp.html</anchorfile>
      <anchor>ae8d93ef842977151e2be0bfb8e06b0f9</anchor>
      <arglist>(QString path)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PluginAPI.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_plugin_a_p_i_8h</filename>
    <class kind="class">PluginAPI</class>
    <class kind="struct">PluginAPI::Plugin</class>
  </compound>
  <compound kind="file">
    <name>Profiler.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_profiler_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_core_defines_8h" name="CoreDefines.h" local="yes" imported="no">CoreDefines.h</includes>
    <includes id="_core_math_8h" name="CoreMath.h" local="yes" imported="no">CoreMath.h</includes>
    <includes id="_core_string_utils_8h" name="CoreStringUtils.h" local="yes" imported="no">CoreStringUtils.h</includes>
    <includes id="_high_perf_clock_8h" name="HighPerfClock.h" local="yes" imported="no">HighPerfClock.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <member kind="function">
      <type>ProfilerNodeTree *</type>
      <name>FindBlockByName</name>
      <anchorfile>_profiler_8cpp.html</anchorfile>
      <anchor>aaad7d37ccbf3567a8685d72569e1bbe5</anchor>
      <arglist>(ProfilerNodeTree *parent, const char *name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Profiler.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_profiler_8h</filename>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_high_perf_clock_8h" name="HighPerfClock.h" local="yes" imported="no">HighPerfClock.h</includes>
    <class kind="class">ProfilerBlock</class>
    <class kind="class">ProfilerNodeTree</class>
    <class kind="class">ProfilerNode</class>
    <class kind="class">ProfilerQObj</class>
    <class kind="class">Profiler</class>
    <class kind="class">ProfilerSection</class>
    <namespace>anonymous_namespace{Profiler.h}</namespace>
    <member kind="define">
      <type>#define</type>
      <name>STARTTIMEDBLOCK</name>
      <anchorfile>_profiler_8h.html</anchorfile>
      <anchor>a07481fe6a355a640f0d1a9346dc25950</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOGTIMEDBLOCK</name>
      <anchorfile>_profiler_8h.html</anchorfile>
      <anchor>a6125407b33e0425e32ef5ca922ec97f3</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROFILE</name>
      <anchorfile>_profiler_8h.html</anchorfile>
      <anchor>a7a56092b972e563986897228aa14463c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ELIFORP</name>
      <anchorfile>_profiler_8h.html</anchorfile>
      <anchor>a220b2ab0b274bc0d1487ecc5cca91878</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RESETPROFILER</name>
      <anchorfile>_profiler_8h.html</anchorfile>
      <anchor>ad6497726c5af244564a74cabdb18b779</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; ProfilerNodeTree &gt;</type>
      <name>ProfilerNodeTreePtr</name>
      <anchorfile>_profiler_8h.html</anchorfile>
      <anchor>ac61216b3dc45bce534b372ea88f90441</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EmptyDeletor</name>
      <anchorfile>namespaceanonymous__namespace_02_profiler_8h_03.html</anchorfile>
      <anchor>a79bb3abb6a7b692502f20c326e8c87e7</anchor>
      <arglist>(ProfilerNodeTree *node)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>QtUtils.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_qt_utils_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_qt_utils_8h" name="QtUtils.h" local="yes" imported="no">QtUtils.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <class kind="class">CustomFileDialog</class>
    <namespace>QtUtils</namespace>
    <member kind="function">
      <type>QFileDialog *</type>
      <name>OpenFileDialogNonModal</name>
      <anchorfile>namespace_qt_utils.html</anchorfile>
      <anchor>af0bdfef7b3c444defe22d89ce252a8a1</anchor>
      <arglist>(const QString &amp;filter, const QString &amp;caption, const QString &amp;dir, QWidget *parent, QObject *initiator, const char *slot, bool multipleFiles=false)</arglist>
    </member>
    <member kind="function">
      <type>QFileDialog *</type>
      <name>SaveFileDialogNonModal</name>
      <anchorfile>namespace_qt_utils.html</anchorfile>
      <anchor>a7290b84024e537b0a8bda86ae6e37b8a</anchor>
      <arglist>(const QString &amp;filter, const QString &amp;caption, const QString &amp;dir, QWidget *parent, QObject *initiator, const char *slot)</arglist>
    </member>
    <member kind="function">
      <type>QFileDialog *</type>
      <name>DirectoryDialogNonModal</name>
      <anchorfile>namespace_qt_utils.html</anchorfile>
      <anchor>a987791158db263ee6517da7e7be9b2cc</anchor>
      <arglist>(const QString &amp;caption, const QString &amp;dir, QWidget *parent, QObject *initiator, const char *slot)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>QtUtils.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_qt_utils_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <namespace>QtUtils</namespace>
    <member kind="function">
      <type>QFileDialog *</type>
      <name>OpenFileDialogNonModal</name>
      <anchorfile>namespace_qt_utils.html</anchorfile>
      <anchor>af0bdfef7b3c444defe22d89ce252a8a1</anchor>
      <arglist>(const QString &amp;filter, const QString &amp;caption, const QString &amp;dir, QWidget *parent, QObject *initiator, const char *slot, bool multipleFiles=false)</arglist>
    </member>
    <member kind="function">
      <type>QFileDialog *</type>
      <name>SaveFileDialogNonModal</name>
      <anchorfile>namespace_qt_utils.html</anchorfile>
      <anchor>a7290b84024e537b0a8bda86ae6e37b8a</anchor>
      <arglist>(const QString &amp;filter, const QString &amp;caption, const QString &amp;dir, QWidget *parent, QObject *initiator, const char *slot)</arglist>
    </member>
    <member kind="function">
      <type>QFileDialog *</type>
      <name>DirectoryDialogNonModal</name>
      <anchorfile>namespace_qt_utils.html</anchorfile>
      <anchor>a987791158db263ee6517da7e7be9b2cc</anchor>
      <arglist>(const QString &amp;caption, const QString &amp;dir, QWidget *parent, QObject *initiator, const char *slot)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>QuatUtils.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_quat_utils_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>QuatUtils.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_quat_utils_8h</filename>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Math/Quat.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
  </compound>
  <compound kind="file">
    <name>Transform.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_transform_8h</filename>
    <includes id="_core_math_8h" name="CoreMath.h" local="yes" imported="no">CoreMath.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="float4_8h" name="float4.h" local="yes" imported="no">Math/float4.h</includes>
    <includes id="float3x4_8h" name="float3x4.h" local="yes" imported="no">Math/float3x4.h</includes>
    <includes id="float4x4_8h" name="float4x4.h" local="yes" imported="no">Math/float4x4.h</includes>
    <includes id="_transform_ops_8h" name="TransformOps.h" local="yes" imported="no">Math/TransformOps.h</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Math/Quat.h</includes>
    <includes id="_math_func_8h" name="MathFunc.h" local="yes" imported="no">Math/MathFunc.h</includes>
    <class kind="class">Transform</class>
  </compound>
  <compound kind="file">
    <name>VersionInfo.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_version_info_8cpp</filename>
    <includes id="_version_info_8h" name="VersionInfo.h" local="yes" imported="no">VersionInfo.h</includes>
  </compound>
  <compound kind="file">
    <name>VersionInfo.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_version_info_8h</filename>
    <class kind="class">ApiVersionInfo</class>
    <class kind="class">ApplicationVersionInfo</class>
  </compound>
  <compound kind="file">
    <name>XMLUtilities.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_x_m_l_utilities_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_x_m_l_utilities_8h" name="XMLUtilities.h" local="yes" imported="no">XMLUtilities.h</includes>
    <includes id="_core_string_utils_8h" name="CoreStringUtils.h" local="yes" imported="no">CoreStringUtils.h</includes>
    <member kind="function">
      <type>float</type>
      <name>ParseReal</name>
      <anchorfile>_x_m_l_utilities_8cpp.html</anchorfile>
      <anchor>a69175b266bfef1528bfb72e93319f93f</anchor>
      <arglist>(const std::string &amp;text, float default_value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ParseInt</name>
      <anchorfile>_x_m_l_utilities_8cpp.html</anchorfile>
      <anchor>ade5470b14d036330ce2729b769b43295</anchor>
      <arglist>(const std::string &amp;text, int default_value)</arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>ParseColor</name>
      <anchorfile>_x_m_l_utilities_8cpp.html</anchorfile>
      <anchor>ab85e08999692d7583e3915503a24ba71</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>WriteBool</name>
      <anchorfile>_x_m_l_utilities_8cpp.html</anchorfile>
      <anchor>aa3bb8e5f3ba60d8d24b171b701b0920e</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>WriteReal</name>
      <anchorfile>_x_m_l_utilities_8cpp.html</anchorfile>
      <anchor>a5b0103eb22c5b5e73d61ae33a20f4876</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>WriteInt</name>
      <anchorfile>_x_m_l_utilities_8cpp.html</anchorfile>
      <anchor>a297592db781a8c779b76cdebce6834c9</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>WriteColor</name>
      <anchorfile>_x_m_l_utilities_8cpp.html</anchorfile>
      <anchor>a6cfce9ae9499a64c52194944afa4e76a</anchor>
      <arglist>(const Color &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttribute</name>
      <anchorfile>_x_m_l_utilities_8cpp.html</anchorfile>
      <anchor>ade14a51478e301e1d5a4e5a3cbbef3f4</anchor>
      <arglist>(QDomElement &amp;elem, const std::string &amp;name, const char *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttribute</name>
      <anchorfile>_x_m_l_utilities_8cpp.html</anchorfile>
      <anchor>abb5d749667c105d561f0367a6dec5de2</anchor>
      <arglist>(QDomElement &amp;elem, const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttribute</name>
      <anchorfile>_x_m_l_utilities_8cpp.html</anchorfile>
      <anchor>ab96eb5c18f3035045173b1caffaa7d2f</anchor>
      <arglist>(QDomElement &amp;elem, const std::string &amp;name, float value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttribute</name>
      <anchorfile>_x_m_l_utilities_8cpp.html</anchorfile>
      <anchor>ad2580ec400416b29ae4de4a60f6f61ad</anchor>
      <arglist>(QDomElement &amp;elem, const std::string &amp;name, bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttribute</name>
      <anchorfile>_x_m_l_utilities_8cpp.html</anchorfile>
      <anchor>a469950dff4f183122fad96e197373540</anchor>
      <arglist>(QDomElement &amp;elem, const std::string &amp;name, int value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>XMLUtilities.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Framework/</path>
    <filename>_x_m_l_utilities_8h</filename>
    <includes id="_core_defines_8h" name="CoreDefines.h" local="yes" imported="no">CoreDefines.h</includes>
    <includes id="_color_8h" name="Color.h" local="yes" imported="no">Color.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Math/Quat.h</includes>
    <member kind="function">
      <type>float</type>
      <name>ParseReal</name>
      <anchorfile>_x_m_l_utilities_8h.html</anchorfile>
      <anchor>ae1e5ca6a2ca74709855cdd5f475786a9</anchor>
      <arglist>(const std::string &amp;text, float default_value=0.0f)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ParseInt</name>
      <anchorfile>_x_m_l_utilities_8h.html</anchorfile>
      <anchor>a96dc3ef7688717a88154dc88bccba3ad</anchor>
      <arglist>(const std::string &amp;text, int default_value=0)</arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>ParseColor</name>
      <anchorfile>_x_m_l_utilities_8h.html</anchorfile>
      <anchor>ab85e08999692d7583e3915503a24ba71</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>WriteBool</name>
      <anchorfile>_x_m_l_utilities_8h.html</anchorfile>
      <anchor>aa3bb8e5f3ba60d8d24b171b701b0920e</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>WriteReal</name>
      <anchorfile>_x_m_l_utilities_8h.html</anchorfile>
      <anchor>a5b0103eb22c5b5e73d61ae33a20f4876</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>WriteInt</name>
      <anchorfile>_x_m_l_utilities_8h.html</anchorfile>
      <anchor>a297592db781a8c779b76cdebce6834c9</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>WriteColor</name>
      <anchorfile>_x_m_l_utilities_8h.html</anchorfile>
      <anchor>a6cfce9ae9499a64c52194944afa4e76a</anchor>
      <arglist>(const Color &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttribute</name>
      <anchorfile>_x_m_l_utilities_8h.html</anchorfile>
      <anchor>ade14a51478e301e1d5a4e5a3cbbef3f4</anchor>
      <arglist>(QDomElement &amp;elem, const std::string &amp;name, const char *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttribute</name>
      <anchorfile>_x_m_l_utilities_8h.html</anchorfile>
      <anchor>abb5d749667c105d561f0367a6dec5de2</anchor>
      <arglist>(QDomElement &amp;elem, const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttribute</name>
      <anchorfile>_x_m_l_utilities_8h.html</anchorfile>
      <anchor>ab96eb5c18f3035045173b1caffaa7d2f</anchor>
      <arglist>(QDomElement &amp;elem, const std::string &amp;name, float value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttribute</name>
      <anchorfile>_x_m_l_utilities_8h.html</anchorfile>
      <anchor>ad2580ec400416b29ae4de4a60f6f61ad</anchor>
      <arglist>(QDomElement &amp;elem, const std::string &amp;name, bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttribute</name>
      <anchorfile>_x_m_l_utilities_8h.html</anchorfile>
      <anchor>a469950dff4f183122fad96e197373540</anchor>
      <arglist>(QDomElement &amp;elem, const std::string &amp;name, int value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EC_InputMapper.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Input/</path>
    <filename>_e_c___input_mapper_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_e_c___input_mapper_8h" name="EC_InputMapper.h" local="yes" imported="no">EC_InputMapper.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_i_attribute_8h" name="IAttribute.h" local="yes" imported="no">IAttribute.h</includes>
    <includes id="_attribute_metadata_8h" name="AttributeMetadata.h" local="yes" imported="no">AttributeMetadata.h</includes>
    <includes id="_input_a_p_i_8h" name="InputAPI.h" local="yes" imported="no">InputAPI.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>EC_InputMapper.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Input/</path>
    <filename>_e_c___input_mapper_8h</filename>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_input_fwd_8h" name="InputFwd.h" local="yes" imported="no">InputFwd.h</includes>
    <includes id="_key_event_8h" name="KeyEvent.h" local="yes" imported="no">KeyEvent.h</includes>
    <includes id="_mouse_event_8h" name="MouseEvent.h" local="yes" imported="no">MouseEvent.h</includes>
    <class kind="class">EC_InputMapper</class>
    <class kind="struct">EC_InputMapper::ActionInvocation</class>
  </compound>
  <compound kind="file">
    <name>GestureEvent.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Input/</path>
    <filename>_gesture_event_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <class kind="class">GestureEvent</class>
  </compound>
  <compound kind="file">
    <name>InputAPI.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Input/</path>
    <filename>_input_a_p_i_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_input_a_p_i_8h" name="InputAPI.h" local="yes" imported="no">InputAPI.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_ui_a_p_i_8h" name="UiAPI.h" local="yes" imported="no">UiAPI.h</includes>
    <includes id="_ui_graphics_view_8h" name="UiGraphicsView.h" local="yes" imported="no">UiGraphicsView.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_core_defines_8h" name="CoreDefines.h" local="yes" imported="no">CoreDefines.h</includes>
    <includes id="_config_a_p_i_8h" name="ConfigAPI.h" local="yes" imported="no">ConfigAPI.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <member kind="function">
      <type>Qt::Key</type>
      <name>StripModifiersFromKey</name>
      <anchorfile>_input_a_p_i_8cpp.html</anchorfile>
      <anchor>a7666a7627959fbced8f50da47a147c4f</anchor>
      <arglist>(int qtKeyWithModifiers)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>InputAPI.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Input/</path>
    <filename>_input_a_p_i_8h</filename>
    <includes id="_input_fwd_8h" name="InputFwd.h" local="yes" imported="no">InputFwd.h</includes>
    <includes id="_key_event_8h" name="KeyEvent.h" local="yes" imported="no">KeyEvent.h</includes>
    <includes id="_mouse_event_8h" name="MouseEvent.h" local="yes" imported="no">MouseEvent.h</includes>
    <includes id="_gesture_event_8h" name="GestureEvent.h" local="yes" imported="no">GestureEvent.h</includes>
    <includes id="_input_context_8h" name="InputContext.h" local="yes" imported="no">InputContext.h</includes>
    <class kind="class">InputAPI</class>
  </compound>
  <compound kind="file">
    <name>InputContext.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Input/</path>
    <filename>_input_context_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_input_context_8h" name="InputContext.h" local="yes" imported="no">InputContext.h</includes>
    <includes id="_input_a_p_i_8h" name="InputAPI.h" local="yes" imported="no">InputAPI.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>InputContext.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Input/</path>
    <filename>_input_context_8h</filename>
    <includes id="_key_event_8h" name="KeyEvent.h" local="yes" imported="no">KeyEvent.h</includes>
    <includes id="_mouse_event_8h" name="MouseEvent.h" local="yes" imported="no">MouseEvent.h</includes>
    <includes id="_gesture_event_8h" name="GestureEvent.h" local="yes" imported="no">GestureEvent.h</includes>
    <includes id="_key_event_signal_8h" name="KeyEventSignal.h" local="yes" imported="no">KeyEventSignal.h</includes>
    <includes id="_input_fwd_8h" name="InputFwd.h" local="yes" imported="no">InputFwd.h</includes>
    <class kind="struct">KeyPressInformation</class>
    <class kind="class">InputContext</class>
    <member kind="typedef">
      <type>std::map&lt; Qt::Key, KeyPressInformation &gt;</type>
      <name>HeldKeysMap</name>
      <anchorfile>_input_context_8h.html</anchorfile>
      <anchor>a774240864a1ad0a2b23b76dc70983db7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>InputFwd.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Input/</path>
    <filename>_input_fwd_8h</filename>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; InputContext &gt;</type>
      <name>InputContextPtr</name>
      <anchorfile>_input_fwd_8h.html</anchorfile>
      <anchor>ae6b68b3a69641cc27a6ea096447fd956</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>KeyBindingsConfigWindow.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Input/</path>
    <filename>_key_bindings_config_window_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_key_bindings_config_window_8h" name="KeyBindingsConfigWindow.h" local="yes" imported="no">KeyBindingsConfigWindow.h</includes>
    <includes id="_input_a_p_i_8h" name="InputAPI.h" local="yes" imported="no">InputAPI.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_application_8h" name="Application.h" local="yes" imported="no">Application.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>KeyBindingsConfigWindow.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Input/</path>
    <filename>_key_bindings_config_window_8h</filename>
    <class kind="class">KeyBindingsConfigWindow</class>
  </compound>
  <compound kind="file">
    <name>KeyEvent.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Input/</path>
    <filename>_key_event_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <class kind="class">KeyEvent</class>
  </compound>
  <compound kind="file">
    <name>KeyEventSignal.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Input/</path>
    <filename>_key_event_signal_8h</filename>
    <includes id="_key_event_8h" name="KeyEvent.h" local="yes" imported="no">KeyEvent.h</includes>
    <includes id="_mouse_event_8h" name="MouseEvent.h" local="yes" imported="no">MouseEvent.h</includes>
    <class kind="class">KeyEventSignal</class>
  </compound>
  <compound kind="file">
    <name>MouseEvent.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Input/</path>
    <filename>_mouse_event_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_mouse_event_8h" name="MouseEvent.h" local="yes" imported="no">MouseEvent.h</includes>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>QtMouseButtonEnumToIndex</name>
      <anchorfile>_mouse_event_8cpp.html</anchorfile>
      <anchor>a6f69555077a9fdc75b64f405c275ec8d</anchor>
      <arglist>(int mouseButton)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MouseEvent.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Input/</path>
    <filename>_mouse_event_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <class kind="class">MouseEvent</class>
    <class kind="struct">MouseEvent::PressPositions</class>
  </compound>
  <compound kind="file">
    <name>CompositionHandler.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_composition_handler_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_composition_handler_8h" name="CompositionHandler.h" local="yes" imported="no">CompositionHandler.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <namespace>OgreRenderer</namespace>
  </compound>
  <compound kind="file">
    <name>CompositionHandler.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_composition_handler_8h</filename>
    <includes id="_ogre_module_api_8h" name="OgreModuleApi.h" local="yes" imported="no">OgreModuleApi.h</includes>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <class kind="class">OgreRenderer::HDRListener</class>
    <class kind="class">OgreRenderer::GaussianListener</class>
    <class kind="class">OgreRenderer::CompositionHandler</class>
    <class kind="struct">OgreRenderer::CompositionHandler::Compositor</class>
    <namespace>OgreRenderer</namespace>
  </compound>
  <compound kind="file">
    <name>OgreRenderingModule.dox</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/doc/</path>
    <filename>_ogre_rendering_module_8dox</filename>
  </compound>
  <compound kind="file">
    <name>EC_AnimationController.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_e_c___animation_controller_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_e_c___mesh_8h" name="EC_Mesh.h" local="yes" imported="no">EC_Mesh.h</includes>
    <includes id="_e_c___animation_controller_8h" name="EC_AnimationController.h" local="yes" imported="no">EC_AnimationController.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_frame_a_p_i_8h" name="FrameAPI.h" local="yes" imported="no">FrameAPI.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_core_string_utils_8h" name="CoreStringUtils.h" local="yes" imported="no">CoreStringUtils.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <member kind="function">
      <type>Ogre::AnimationState *</type>
      <name>OgreAnimStateSetFindNoCase</name>
      <anchorfile>_e_c___animation_controller_8cpp.html</anchorfile>
      <anchor>ae2d92b6185e388874f352a7049d9b965</anchor>
      <arglist>(Ogre::AnimationStateSet *set, const QString &amp;animState)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EC_AnimationController.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_e_c___animation_controller_8h</filename>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_ogre_module_api_8h" name="OgreModuleApi.h" local="yes" imported="no">OgreModuleApi.h</includes>
    <includes id="_ogre_module_fwd_8h" name="OgreModuleFwd.h" local="yes" imported="no">OgreModuleFwd.h</includes>
    <includes id="_core_string_utils_8h" name="CoreStringUtils.h" local="yes" imported="no">CoreStringUtils.h</includes>
    <class kind="class">EC_AnimationController</class>
    <class kind="struct">EC_AnimationController::Animation</class>
  </compound>
  <compound kind="file">
    <name>EC_Camera.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_e_c___camera_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_e_c___camera_8h" name="EC_Camera.h" local="yes" imported="no">EC_Camera.h</includes>
    <includes id="_e_c___mesh_8h" name="EC_Mesh.h" local="yes" imported="no">EC_Mesh.h</includes>
    <includes id="_e_c___placeable_8h" name="EC_Placeable.h" local="yes" imported="no">EC_Placeable.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_ogre_world_8h" name="OgreWorld.h" local="yes" imported="no">OgreWorld.h</includes>
    <includes id="_renderer_8h" name="Renderer.h" local="yes" imported="no">Renderer.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_frame_a_p_i_8h" name="FrameAPI.h" local="yes" imported="no">FrameAPI.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>OGRE_INTEROP</name>
      <anchorfile>_e_c___camera_8cpp.html</anchorfile>
      <anchor>a9af2b61539d42b83ffec719b22407071</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EC_Camera.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_e_c___camera_8h</filename>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_ogre_module_api_8h" name="OgreModuleApi.h" local="yes" imported="no">OgreModuleApi.h</includes>
    <includes id="_ogre_module_fwd_8h" name="OgreModuleFwd.h" local="yes" imported="no">OgreModuleFwd.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="_ray_8h" name="Ray.h" local="yes" imported="no">Math/Ray.h</includes>
    <class kind="class">EC_Camera</class>
    <namespace>Ogre</namespace>
  </compound>
  <compound kind="file">
    <name>EC_Light.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_e_c___light_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_e_c___light_8h" name="EC_Light.h" local="yes" imported="no">EC_Light.h</includes>
    <includes id="_renderer_8h" name="Renderer.h" local="yes" imported="no">Renderer.h</includes>
    <includes id="_e_c___placeable_8h" name="EC_Placeable.h" local="yes" imported="no">EC_Placeable.h</includes>
    <includes id="_ogre_conversion_utils_8h" name="OgreConversionUtils.h" local="yes" imported="no">OgreConversionUtils.h</includes>
    <includes id="_i_module_8h" name="IModule.h" local="yes" imported="no">IModule.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_x_m_l_utilities_8h" name="XMLUtilities.h" local="yes" imported="no">XMLUtilities.h</includes>
    <includes id="_attribute_metadata_8h" name="AttributeMetadata.h" local="yes" imported="no">AttributeMetadata.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_ogre_world_8h" name="OgreWorld.h" local="yes" imported="no">OgreWorld.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>OGRE_INTEROP</name>
      <anchorfile>_e_c___light_8cpp.html</anchorfile>
      <anchor>a9af2b61539d42b83ffec719b22407071</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EC_Light.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_e_c___light_8h</filename>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_i_attribute_8h" name="IAttribute.h" local="yes" imported="no">IAttribute.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="_color_8h" name="Color.h" local="yes" imported="no">Color.h</includes>
    <includes id="_ogre_module_fwd_8h" name="OgreModuleFwd.h" local="yes" imported="no">OgreModuleFwd.h</includes>
    <class kind="class">EC_Light</class>
    <namespace>Ogre</namespace>
  </compound>
  <compound kind="file">
    <name>EC_Material.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_e_c___material_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_e_c___material_8h" name="EC_Material.h" local="yes" imported="no">EC_Material.h</includes>
    <includes id="_e_c___mesh_8h" name="EC_Mesh.h" local="yes" imported="no">EC_Mesh.h</includes>
    <includes id="_ogre_material_asset_8h" name="OgreMaterialAsset.h" local="yes" imported="no">OgreMaterialAsset.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_frame_a_p_i_8h" name="FrameAPI.h" local="yes" imported="no">FrameAPI.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_asset_reference_8h" name="AssetReference.h" local="yes" imported="no">AssetReference.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>EC_Material.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_e_c___material_8h</filename>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_core_defines_8h" name="CoreDefines.h" local="yes" imported="no">CoreDefines.h</includes>
    <includes id="_ogre_module_api_8h" name="OgreModuleApi.h" local="yes" imported="no">OgreModuleApi.h</includes>
    <includes id="_asset_ref_listener_8h" name="AssetRefListener.h" local="yes" imported="no">AssetRefListener.h</includes>
    <class kind="class">EC_Material</class>
  </compound>
  <compound kind="file">
    <name>EC_Mesh.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_e_c___mesh_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_ogre_world_8h" name="OgreWorld.h" local="yes" imported="no">OgreWorld.h</includes>
    <includes id="_renderer_8h" name="Renderer.h" local="yes" imported="no">Renderer.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_e_c___placeable_8h" name="EC_Placeable.h" local="yes" imported="no">EC_Placeable.h</includes>
    <includes id="_e_c___mesh_8h" name="EC_Mesh.h" local="yes" imported="no">EC_Mesh.h</includes>
    <includes id="_ogre_conversion_utils_8h" name="OgreConversionUtils.h" local="yes" imported="no">OgreConversionUtils.h</includes>
    <includes id="_ogre_skeleton_asset_8h" name="OgreSkeletonAsset.h" local="yes" imported="no">OgreSkeletonAsset.h</includes>
    <includes id="_ogre_mesh_asset_8h" name="OgreMeshAsset.h" local="yes" imported="no">OgreMeshAsset.h</includes>
    <includes id="_ogre_material_asset_8h" name="OgreMaterialAsset.h" local="yes" imported="no">OgreMaterialAsset.h</includes>
    <includes id="_i_asset_transfer_8h" name="IAssetTransfer.h" local="yes" imported="no">IAssetTransfer.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_attribute_metadata_8h" name="AttributeMetadata.h" local="yes" imported="no">AttributeMetadata.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>OGRE_INTEROP</name>
      <anchorfile>_e_c___mesh_8cpp.html</anchorfile>
      <anchor>a9af2b61539d42b83ffec719b22407071</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EC_Mesh.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_e_c___mesh_8h</filename>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_ogre_module_api_8h" name="OgreModuleApi.h" local="yes" imported="no">OgreModuleApi.h</includes>
    <includes id="_ogre_module_fwd_8h" name="OgreModuleFwd.h" local="yes" imported="no">OgreModuleFwd.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Math/Quat.h</includes>
    <includes id="_o_b_b_8h" name="OBB.h" local="yes" imported="no">Math/OBB.h</includes>
    <includes id="_a_a_b_b_8h" name="AABB.h" local="yes" imported="no">Math/AABB.h</includes>
    <includes id="_transform_8h" name="Transform.h" local="yes" imported="no">Transform.h</includes>
    <includes id="_asset_reference_8h" name="AssetReference.h" local="yes" imported="no">AssetReference.h</includes>
    <includes id="_asset_ref_listener_8h" name="AssetRefListener.h" local="yes" imported="no">AssetRefListener.h</includes>
    <class kind="class">EC_Mesh</class>
    <namespace>Ogre</namespace>
  </compound>
  <compound kind="file">
    <name>EC_OgreCompositor.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_e_c___ogre_compositor_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_e_c___ogre_compositor_8h" name="EC_OgreCompositor.h" local="yes" imported="no">EC_OgreCompositor.h</includes>
    <includes id="_renderer_8h" name="Renderer.h" local="yes" imported="no">Renderer.h</includes>
    <includes id="_frame_a_p_i_8h" name="FrameAPI.h" local="yes" imported="no">FrameAPI.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_composition_handler_8h" name="CompositionHandler.h" local="yes" imported="no">CompositionHandler.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>EC_OgreCompositor.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_e_c___ogre_compositor_8h</filename>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_core_defines_8h" name="CoreDefines.h" local="yes" imported="no">CoreDefines.h</includes>
    <includes id="_ogre_module_api_8h" name="OgreModuleApi.h" local="yes" imported="no">OgreModuleApi.h</includes>
    <class kind="class">EC_OgreCompositor</class>
    <namespace>OgreRenderer</namespace>
  </compound>
  <compound kind="file">
    <name>EC_OgreCustomObject.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_e_c___ogre_custom_object_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_ogre_world_8h" name="OgreWorld.h" local="yes" imported="no">OgreWorld.h</includes>
    <includes id="_renderer_8h" name="Renderer.h" local="yes" imported="no">Renderer.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_e_c___placeable_8h" name="EC_Placeable.h" local="yes" imported="no">EC_Placeable.h</includes>
    <includes id="_e_c___ogre_custom_object_8h" name="EC_OgreCustomObject.h" local="yes" imported="no">EC_OgreCustomObject.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>EC_OgreCustomObject.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_e_c___ogre_custom_object_8h</filename>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_ogre_module_api_8h" name="OgreModuleApi.h" local="yes" imported="no">OgreModuleApi.h</includes>
    <includes id="_ogre_module_fwd_8h" name="OgreModuleFwd.h" local="yes" imported="no">OgreModuleFwd.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <class kind="class">EC_OgreCustomObject</class>
  </compound>
  <compound kind="file">
    <name>EC_Placeable.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_e_c___placeable_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_e_c___mesh_8h" name="EC_Mesh.h" local="yes" imported="no">EC_Mesh.h</includes>
    <includes id="_e_c___placeable_8h" name="EC_Placeable.h" local="yes" imported="no">EC_Placeable.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_ogre_world_8h" name="OgreWorld.h" local="yes" imported="no">OgreWorld.h</includes>
    <includes id="_renderer_8h" name="Renderer.h" local="yes" imported="no">Renderer.h</includes>
    <includes id="_attribute_metadata_8h" name="AttributeMetadata.h" local="yes" imported="no">AttributeMetadata.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Math/Quat.h</includes>
    <includes id="float3x3_8h" name="float3x3.h" local="yes" imported="no">Math/float3x3.h</includes>
    <includes id="float3x4_8h" name="float3x4.h" local="yes" imported="no">Math/float3x4.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_disable_memory_leak_check_8h" name="DisableMemoryLeakCheck.h" local="yes" imported="no">DisableMemoryLeakCheck.h</includes>
    <includes id="_enable_memory_leak_check_8h" name="EnableMemoryLeakCheck.h" local="yes" imported="no">EnableMemoryLeakCheck.h</includes>
    <class kind="class">CustomTagPoint</class>
    <class kind="struct">BoneAttachment</class>
    <class kind="class">BoneAttachmentListener</class>
    <member kind="define">
      <type>#define</type>
      <name>OGRE_INTEROP</name>
      <anchorfile>_e_c___placeable_8cpp.html</anchorfile>
      <anchor>a9af2b61539d42b83ffec719b22407071</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowBoundingBoxRecursive</name>
      <anchorfile>_e_c___placeable_8cpp.html</anchorfile>
      <anchor>a195a88cf193eda56afd1ae0681ed806d</anchor>
      <arglist>(Ogre::SceneNode *node, bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DumpChildHierarchy</name>
      <anchorfile>_e_c___placeable_8cpp.html</anchorfile>
      <anchor>a793660b83fa6358e0da517b529443c4b</anchor>
      <arglist>(EC_Placeable *placeable, int indent)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static BoneAttachmentListener</type>
      <name>attachmentListener</name>
      <anchorfile>_e_c___placeable_8cpp.html</anchorfile>
      <anchor>a0ab2441bfc88a1c951a31d87c270c07f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EC_Placeable.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_e_c___placeable_8h</filename>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_i_attribute_8h" name="IAttribute.h" local="yes" imported="no">IAttribute.h</includes>
    <includes id="_entity_reference_8h" name="EntityReference.h" local="yes" imported="no">EntityReference.h</includes>
    <includes id="_ogre_module_api_8h" name="OgreModuleApi.h" local="yes" imported="no">OgreModuleApi.h</includes>
    <includes id="_ogre_module_fwd_8h" name="OgreModuleFwd.h" local="yes" imported="no">OgreModuleFwd.h</includes>
    <includes id="_transform_8h" name="Transform.h" local="yes" imported="no">Transform.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">Math/MathFwd.h</includes>
    <class kind="class">EC_Placeable</class>
    <namespace>Ogre</namespace>
  </compound>
  <compound kind="file">
    <name>EC_RttTarget.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_e_c___rtt_target_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_e_c___rtt_target_8h" name="EC_RttTarget.h" local="yes" imported="no">EC_RttTarget.h</includes>
    <includes id="_e_c___camera_8h" name="EC_Camera.h" local="yes" imported="no">EC_Camera.h</includes>
    <includes id="_ogre_material_utils_8h" name="OgreMaterialUtils.h" local="yes" imported="no">OgreMaterialUtils.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_frame_a_p_i_8h" name="FrameAPI.h" local="yes" imported="no">FrameAPI.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>EC_RttTarget.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_e_c___rtt_target_8h</filename>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_ogre_module_api_8h" name="OgreModuleApi.h" local="yes" imported="no">OgreModuleApi.h</includes>
    <class kind="class">EC_RttTarget</class>
  </compound>
  <compound kind="file">
    <name>EC_SelectionBox.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_e_c___selection_box_8cpp</filename>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_renderer_8h" name="Renderer.h" local="yes" imported="no">Renderer.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_e_c___selection_box_8h" name="EC_SelectionBox.h" local="yes" imported="no">EC_SelectionBox.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_ogre_conversion_utils_8h" name="OgreConversionUtils.h" local="yes" imported="no">OgreConversionUtils.h</includes>
    <includes id="_ogre_world_8h" name="OgreWorld.h" local="yes" imported="no">OgreWorld.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>EC_SelectionBox.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_e_c___selection_box_8h</filename>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_ogre_module_api_8h" name="OgreModuleApi.h" local="yes" imported="no">OgreModuleApi.h</includes>
    <includes id="_ogre_module_fwd_8h" name="OgreModuleFwd.h" local="yes" imported="no">OgreModuleFwd.h</includes>
    <class kind="class">EC_SelectionBox</class>
  </compound>
  <compound kind="file">
    <name>OgreConversionUtils.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_ogre_conversion_utils_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_core_string_utils_8h" name="CoreStringUtils.h" local="yes" imported="no">CoreStringUtils.h</includes>
    <includes id="_ogre_conversion_utils_8h" name="OgreConversionUtils.h" local="yes" imported="no">OgreConversionUtils.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <namespace>OgreRenderer</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>AddDoubleQuotesIfNecessary</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>ae319180e8bff881610d31fa27392ff10</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DesanitateAssetIds</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a9a811e0492b3cfbea6dd3d66894a3f28</anchor>
      <arglist>(std::string &amp;script, const QStringList &amp;keywords)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OgreConversionUtils.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_ogre_conversion_utils_8h</filename>
    <includes id="_ogre_module_api_8h" name="OgreModuleApi.h" local="yes" imported="no">OgreModuleApi.h</includes>
    <namespace>OgreRenderer</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>AddDoubleQuotesIfNecessary</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>ae319180e8bff881610d31fa27392ff10</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DesanitateAssetIds</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a9a811e0492b3cfbea6dd3d66894a3f28</anchor>
      <arglist>(std::string &amp;script, const QStringList &amp;keywords)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OgreLocalResourceUtils.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_ogre_local_resource_utils_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_ogre_local_resource_utils_8h" name="OgreLocalResourceUtils.h" local="yes" imported="no">OgreLocalResourceUtils.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <namespace>OgreRenderer</namespace>
    <member kind="function">
      <type>Ogre::MeshPtr</type>
      <name>GetLocalMesh</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a2d5d18b223a5e85e28de93d62b320a7b</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::SkeletonPtr</type>
      <name>GetLocalSkeleton</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a6dbdacb468b479af253ae10228960358</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::MaterialPtr</type>
      <name>GetLocalMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a08719648d0c2d3f449cabc6d5715a24d</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::TexturePtr</type>
      <name>GetLocalTexture</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a6173be4a44e1c63d47c9b2b8d3eb17be</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OgreLocalResourceUtils.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_ogre_local_resource_utils_8h</filename>
    <includes id="_ogre_module_api_8h" name="OgreModuleApi.h" local="yes" imported="no">OgreModuleApi.h</includes>
    <namespace>OgreRenderer</namespace>
    <member kind="function">
      <type>Ogre::MeshPtr</type>
      <name>GetLocalMesh</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a2d5d18b223a5e85e28de93d62b320a7b</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::SkeletonPtr</type>
      <name>GetLocalSkeleton</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a6dbdacb468b479af253ae10228960358</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::MaterialPtr</type>
      <name>GetLocalMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a08719648d0c2d3f449cabc6d5715a24d</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::TexturePtr</type>
      <name>GetLocalTexture</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a6173be4a44e1c63d47c9b2b8d3eb17be</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OgreMaterialAsset.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_ogre_material_asset_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_ogre_material_asset_8h" name="OgreMaterialAsset.h" local="yes" imported="no">OgreMaterialAsset.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_ogre_conversion_utils_8h" name="OgreConversionUtils.h" local="yes" imported="no">OgreConversionUtils.h</includes>
    <includes id="_ogre_material_utils_8h" name="OgreMaterialUtils.h" local="yes" imported="no">OgreMaterialUtils.h</includes>
    <includes id="_renderer_8h" name="Renderer.h" local="yes" imported="no">Renderer.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_texture_asset_8h" name="TextureAsset.h" local="yes" imported="no">TextureAsset.h</includes>
    <includes id="_i_asset_transfer_8h" name="IAssetTransfer.h" local="yes" imported="no">IAssetTransfer.h</includes>
    <includes id="_x_m_l_utilities_8h" name="XMLUtilities.h" local="yes" imported="no">XMLUtilities.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_disable_memory_leak_check_8h" name="DisableMemoryLeakCheck.h" local="yes" imported="no">DisableMemoryLeakCheck.h</includes>
    <includes id="_enable_memory_leak_check_8h" name="EnableMemoryLeakCheck.h" local="yes" imported="no">EnableMemoryLeakCheck.h</includes>
    <class kind="struct">EnumStr</class>
    <member kind="define">
      <type>#define</type>
      <name>OGRE_INTEROP</name>
      <anchorfile>_ogre_material_asset_8cpp.html</anchorfile>
      <anchor>a9af2b61539d42b83ffec719b22407071</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>GetEnumValue</name>
      <anchorfile>_ogre_material_asset_8cpp.html</anchorfile>
      <anchor>a1038a8737c9c05c7f18b9377fa327561</anchor>
      <arglist>(const QString &amp;name, EnumStr *enums)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBoolValue</name>
      <anchorfile>_ogre_material_asset_8cpp.html</anchorfile>
      <anchor>af609443b6b34a22849fc70d168337e57</anchor>
      <arglist>(const QString &amp;value)</arglist>
    </member>
    <member kind="variable">
      <type>EnumStr</type>
      <name>sceneBlendTypes</name>
      <anchorfile>_ogre_material_asset_8cpp.html</anchorfile>
      <anchor>abe07f7c68849830a69c867873cf09dc7</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>EnumStr</type>
      <name>sceneBlendFactors</name>
      <anchorfile>_ogre_material_asset_8cpp.html</anchorfile>
      <anchor>a054859c6e09c6f9776ef534f58c88a38</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>EnumStr</type>
      <name>compareFunctions</name>
      <anchorfile>_ogre_material_asset_8cpp.html</anchorfile>
      <anchor>a81b208fb36c21e6ceef0b8ecab901c12</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>EnumStr</type>
      <name>cullingModes</name>
      <anchorfile>_ogre_material_asset_8cpp.html</anchorfile>
      <anchor>ace319818e3da38349f6a423e2fdbce4f</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>EnumStr</type>
      <name>shadingModes</name>
      <anchorfile>_ogre_material_asset_8cpp.html</anchorfile>
      <anchor>a78d15820b803ccaee85c81cc67abcc78</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>EnumStr</type>
      <name>polygonModes</name>
      <anchorfile>_ogre_material_asset_8cpp.html</anchorfile>
      <anchor>a744c69c0256be2232b950dfd1c881121</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>EnumStr</type>
      <name>texAddressModes</name>
      <anchorfile>_ogre_material_asset_8cpp.html</anchorfile>
      <anchor>a08d6a4d16cc1965a0003ddcb11ac5b18</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>EnumStr</type>
      <name>texFilterOptions</name>
      <anchorfile>_ogre_material_asset_8cpp.html</anchorfile>
      <anchor>a7842b046d5c697a4fd3e980770c5ce5f</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>EnumStr</type>
      <name>envMapTypes</name>
      <anchorfile>_ogre_material_asset_8cpp.html</anchorfile>
      <anchor>a4fbf182205aeffb3cd36b5d6b13c4443</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>EnumStr</type>
      <name>textureTransformTypes</name>
      <anchorfile>_ogre_material_asset_8cpp.html</anchorfile>
      <anchor>ab34b7dfdf2c3cd8cb6ef797778a92cd4</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>EnumStr</type>
      <name>waveformTypes</name>
      <anchorfile>_ogre_material_asset_8cpp.html</anchorfile>
      <anchor>af696f6e724c440e6859e77ad146c4d02</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OgreMaterialAsset.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_ogre_material_asset_8h</filename>
    <includes id="_i_asset_8h" name="IAsset.h" local="yes" imported="no">IAsset.h</includes>
    <includes id="_color_8h" name="Color.h" local="yes" imported="no">Color.h</includes>
    <includes id="_ogre_module_api_8h" name="OgreModuleApi.h" local="yes" imported="no">OgreModuleApi.h</includes>
    <class kind="class">OgreMaterialAsset</class>
    <class kind="struct">OgreMaterialAsset::PendingTextureApply</class>
  </compound>
  <compound kind="file">
    <name>OgreMaterialUtils.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_ogre_material_utils_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_ogre_material_utils_8h" name="OgreMaterialUtils.h" local="yes" imported="no">OgreMaterialUtils.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_ogre_conversion_utils_8h" name="OgreConversionUtils.h" local="yes" imported="no">OgreConversionUtils.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <namespace>OgreRenderer</namespace>
    <member kind="function">
      <type>bool</type>
      <name>IsMaterialSuffixValid</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a69bacf0251ed9d9fd79750a93d4a5277</anchor>
      <arglist>(const std::string &amp;suffix)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetMaterialSuffix</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>ae0efe76389fb78cbdbf46c6fc97c37a0</anchor>
      <arglist>(uint variation)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>GetMaterialVariation</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>aa5d02a31d4dbf8911a32d9ac7ce95beb</anchor>
      <arglist>(const std::string &amp;suffix)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::MaterialPtr</type>
      <name>CloneMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a0b91039592ecf5ce407ec07b7cea0cd4</anchor>
      <arglist>(const std::string &amp;sourceMaterialName, const std::string &amp;newName)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::MaterialPtr</type>
      <name>GetOrCreateLitTexturedMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a7d4e5623027f48086835943c350d39d5</anchor>
      <arglist>(const std::string &amp;materialName)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::MaterialPtr</type>
      <name>GetOrCreateUnlitTexturedMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a2509d75a87f531327918334eda3c0795</anchor>
      <arglist>(const std::string &amp;materialName)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::MaterialPtr</type>
      <name>GetOrCreateLegacyMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>aeb9f2c39ba4e0c85d3a7ad82911195f0</anchor>
      <arglist>(const std::string &amp;textureName, const std::string &amp;suffix)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::MaterialPtr</type>
      <name>GetOrCreateLegacyMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>ac512f4370041971a4bb0c36ac2a7af7a</anchor>
      <arglist>(const std::string &amp;textureName, uint variation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateLegacyMaterials</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a34cf1bc48dd09715d2b0fe88d3b058b7</anchor>
      <arglist>(const std::string &amp;texture_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTextureUnitOnMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a4b1547c5c8e4250a4a190caa4af88502</anchor>
      <arglist>(Ogre::MaterialPtr material, const std::string &amp;texture_name, uint index=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReplaceTextureOnMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a0d35939e0b9bfcae1f6b35248c338dc0</anchor>
      <arglist>(Ogre::MaterialPtr material, const std::string &amp;original_name, const std::string &amp;texture_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetTextureNamesFromMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>ad0eb23264f2f4815e15f865a42e508d9</anchor>
      <arglist>(Ogre::MaterialPtr material, StringVector &amp;textures)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>ae74a5dd2af66de31e3485f1feb86c96e</anchor>
      <arglist>(Ogre::MaterialPtr &amp;material)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ProcessBraces</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>ac9069a6d5052f4d23d95421c22257f48</anchor>
      <arglist>(const std::string &amp;line, int &amp;braceLevel)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>BaseMaterials</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a3772f0c1663cb1e9ca32db3e044b753c</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>AlphaBaseMaterials</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>acec127bfbb9d01c7b31aeafab51fb3d6</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>MaterialSuffix</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a848bf4202ca6f1a20f0fdae906496d3a</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OgreMaterialUtils.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_ogre_material_utils_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_ogre_module_api_8h" name="OgreModuleApi.h" local="yes" imported="no">OgreModuleApi.h</includes>
    <namespace>OgreRenderer</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>GetMaterialSuffix</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>ae0efe76389fb78cbdbf46c6fc97c37a0</anchor>
      <arglist>(uint variation)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>GetMaterialVariation</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>aa5d02a31d4dbf8911a32d9ac7ce95beb</anchor>
      <arglist>(const std::string &amp;suffix)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMaterialSuffixValid</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a69bacf0251ed9d9fd79750a93d4a5277</anchor>
      <arglist>(const std::string &amp;suffix)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::MaterialPtr</type>
      <name>GetOrCreateUnlitTexturedMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a2509d75a87f531327918334eda3c0795</anchor>
      <arglist>(const std::string &amp;materialName)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::MaterialPtr</type>
      <name>GetOrCreateLitTexturedMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a7d4e5623027f48086835943c350d39d5</anchor>
      <arglist>(const std::string &amp;materialName)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::MaterialPtr</type>
      <name>CloneMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a0b91039592ecf5ce407ec07b7cea0cd4</anchor>
      <arglist>(const std::string &amp;sourceMaterialName, const std::string &amp;newName)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::MaterialPtr</type>
      <name>GetOrCreateLegacyMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>ac512f4370041971a4bb0c36ac2a7af7a</anchor>
      <arglist>(const std::string &amp;textureName, uint variation)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::MaterialPtr</type>
      <name>GetOrCreateLegacyMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>aeb9f2c39ba4e0c85d3a7ad82911195f0</anchor>
      <arglist>(const std::string &amp;textureName, const std::string &amp;suffix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateLegacyMaterials</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a34cf1bc48dd09715d2b0fe88d3b058b7</anchor>
      <arglist>(const std::string &amp;texture_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTextureUnitOnMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a4b1547c5c8e4250a4a190caa4af88502</anchor>
      <arglist>(Ogre::MaterialPtr material, const std::string &amp;texture_name, uint index=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReplaceTextureOnMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a0d35939e0b9bfcae1f6b35248c338dc0</anchor>
      <arglist>(Ogre::MaterialPtr material, const std::string &amp;original_name, const std::string &amp;texture_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetTextureNamesFromMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>ad0eb23264f2f4815e15f865a42e508d9</anchor>
      <arglist>(Ogre::MaterialPtr material, StringVector &amp;textures)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>ae74a5dd2af66de31e3485f1feb86c96e</anchor>
      <arglist>(Ogre::MaterialPtr &amp;material)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ProcessBraces</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>ac9069a6d5052f4d23d95421c22257f48</anchor>
      <arglist>(const std::string &amp;line, int &amp;braceLevel)</arglist>
    </member>
    <member kind="variable">
      <type>const uint</type>
      <name>LEGACYMAT_NORMAL</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a3a664da650ef7efb571380176a75b800</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint</type>
      <name>LEGACYMAT_FULLBRIGHT</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>ae940f81164bda9c86490e9a10cfa6b83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint</type>
      <name>LEGACYMAT_ADDITIVE</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a07b86bddcead54210352c16b14ce2197</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint</type>
      <name>LEGACYMAT_ALPHA</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>ab72063660ad3084a1d13ebcdd9b523d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint</type>
      <name>LEGACYMAT_VERTEXCOL</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a2c8c7a86262b4ac28743c51c9c98a0e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint</type>
      <name>LEGACYMAT_VERTEXCOLALPHA</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a52dd22c240d8ccba255563a6f85236cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint</type>
      <name>MAX_MATERIAL_VARIATIONS</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>afb2fe03db79c99c244791ae0fb44cab8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OgreMeshAsset.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_ogre_mesh_asset_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_ogre_mesh_asset_8h" name="OgreMeshAsset.h" local="yes" imported="no">OgreMeshAsset.h</includes>
    <includes id="_ogre_conversion_utils_8h" name="OgreConversionUtils.h" local="yes" imported="no">OgreConversionUtils.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_asset_cache_8h" name="AssetCache.h" local="yes" imported="no">AssetCache.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_disable_memory_leak_check_8h" name="DisableMemoryLeakCheck.h" local="yes" imported="no">DisableMemoryLeakCheck.h</includes>
    <includes id="_enable_memory_leak_check_8h" name="EnableMemoryLeakCheck.h" local="yes" imported="no">EnableMemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>OgreMeshAsset.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_ogre_mesh_asset_8h</filename>
    <includes id="_i_asset_8h" name="IAsset.h" local="yes" imported="no">IAsset.h</includes>
    <includes id="_ogre_module_api_8h" name="OgreModuleApi.h" local="yes" imported="no">OgreModuleApi.h</includes>
    <class kind="class">OgreMeshAsset</class>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; OgreMeshAsset &gt;</type>
      <name>OgreMeshAssetPtr</name>
      <anchorfile>_ogre_mesh_asset_8h.html</anchorfile>
      <anchor>acbcf24085fd05446c38dbbb71a21cf8d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OgreModuleApi.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_ogre_module_api_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>OGRE_MODULE_API</name>
      <anchorfile>_ogre_module_api_8h.html</anchorfile>
      <anchor>ab8bc1d7ed886f331db84c395edf92c3d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OgreModuleFwd.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_ogre_module_fwd_8h</filename>
    <namespace>Ogre</namespace>
    <namespace>OgreRenderer</namespace>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Renderer &gt;</type>
      <name>RendererPtr</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>acd18f894da3dcd6bc9f4d3b4425ecb3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; Renderer &gt;</type>
      <name>RendererWeakPtr</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a472796ef0d8bafebe800b7dcc0498ed9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Ogre::Root &gt;</type>
      <name>OgreRootPtr</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a70fb8766879663dff764c73269b63173</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; ResourceHandler &gt;</type>
      <name>ResourceHandlerPtr</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a06f6435cdc6d572863e877c9b454f35c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; RenderableListener &gt;</type>
      <name>RenderableListenerPtr</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a3677fbdf62b6c533d28c6ed72f835940</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; OgreWorld &gt;</type>
      <name>OgreWorldPtr</name>
      <anchorfile>_ogre_module_fwd_8h.html</anchorfile>
      <anchor>a8a85cdf327677df24c04715e6b332feb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; OgreWorld &gt;</type>
      <name>OgreWorldWeakPtr</name>
      <anchorfile>_ogre_module_fwd_8h.html</anchorfile>
      <anchor>af5e95c0c54924361f71edee8e3a06c92</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OgreParticleAsset.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_ogre_particle_asset_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_ogre_conversion_utils_8h" name="OgreConversionUtils.h" local="yes" imported="no">OgreConversionUtils.h</includes>
    <includes id="_ogre_particle_asset_8h" name="OgreParticleAsset.h" local="yes" imported="no">OgreParticleAsset.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_ogre_material_utils_8h" name="OgreMaterialUtils.h" local="yes" imported="no">OgreMaterialUtils.h</includes>
    <includes id="_renderer_8h" name="Renderer.h" local="yes" imported="no">Renderer.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_disable_memory_leak_check_8h" name="DisableMemoryLeakCheck.h" local="yes" imported="no">DisableMemoryLeakCheck.h</includes>
    <includes id="_enable_memory_leak_check_8h" name="EnableMemoryLeakCheck.h" local="yes" imported="no">EnableMemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>OgreParticleAsset.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_ogre_particle_asset_8h</filename>
    <includes id="_i_asset_8h" name="IAsset.h" local="yes" imported="no">IAsset.h</includes>
    <includes id="_ogre_module_api_8h" name="OgreModuleApi.h" local="yes" imported="no">OgreModuleApi.h</includes>
    <class kind="class">OgreParticleAsset</class>
  </compound>
  <compound kind="file">
    <name>OgreRenderingModule.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_ogre_rendering_module_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_application_8h" name="Application.h" local="yes" imported="no">Application.h</includes>
    <includes id="_version_info_8h" name="VersionInfo.h" local="yes" imported="no">VersionInfo.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_renderer_8h" name="Renderer.h" local="yes" imported="no">Renderer.h</includes>
    <includes id="_e_c___placeable_8h" name="EC_Placeable.h" local="yes" imported="no">EC_Placeable.h</includes>
    <includes id="_e_c___mesh_8h" name="EC_Mesh.h" local="yes" imported="no">EC_Mesh.h</includes>
    <includes id="_e_c___ogre_custom_object_8h" name="EC_OgreCustomObject.h" local="yes" imported="no">EC_OgreCustomObject.h</includes>
    <includes id="_e_c___animation_controller_8h" name="EC_AnimationController.h" local="yes" imported="no">EC_AnimationController.h</includes>
    <includes id="_e_c___camera_8h" name="EC_Camera.h" local="yes" imported="no">EC_Camera.h</includes>
    <includes id="_e_c___light_8h" name="EC_Light.h" local="yes" imported="no">EC_Light.h</includes>
    <includes id="_e_c___ogre_compositor_8h" name="EC_OgreCompositor.h" local="yes" imported="no">EC_OgreCompositor.h</includes>
    <includes id="_e_c___rtt_target_8h" name="EC_RttTarget.h" local="yes" imported="no">EC_RttTarget.h</includes>
    <includes id="_e_c___selection_box_8h" name="EC_SelectionBox.h" local="yes" imported="no">EC_SelectionBox.h</includes>
    <includes id="_e_c___material_8h" name="EC_Material.h" local="yes" imported="no">EC_Material.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_renderer_settings_8h" name="RendererSettings.h" local="yes" imported="no">RendererSettings.h</includes>
    <includes id="_ogre_world_8h" name="OgreWorld.h" local="yes" imported="no">OgreWorld.h</includes>
    <includes id="_ogre_mesh_asset_8h" name="OgreMeshAsset.h" local="yes" imported="no">OgreMeshAsset.h</includes>
    <includes id="_ogre_particle_asset_8h" name="OgreParticleAsset.h" local="yes" imported="no">OgreParticleAsset.h</includes>
    <includes id="_ogre_skeleton_asset_8h" name="OgreSkeletonAsset.h" local="yes" imported="no">OgreSkeletonAsset.h</includes>
    <includes id="_ogre_material_asset_8h" name="OgreMaterialAsset.h" local="yes" imported="no">OgreMaterialAsset.h</includes>
    <includes id="_texture_asset_8h" name="TextureAsset.h" local="yes" imported="no">TextureAsset.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_asset_cache_8h" name="AssetCache.h" local="yes" imported="no">AssetCache.h</includes>
    <includes id="_generic_asset_factory_8h" name="GenericAssetFactory.h" local="yes" imported="no">GenericAssetFactory.h</includes>
    <includes id="_null_asset_factory_8h" name="NullAssetFactory.h" local="yes" imported="no">NullAssetFactory.h</includes>
    <includes id="_console_a_p_i_8h" name="ConsoleAPI.h" local="yes" imported="no">ConsoleAPI.h</includes>
    <includes id="_config_a_p_i_8h" name="ConfigAPI.h" local="yes" imported="no">ConfigAPI.h</includes>
    <includes id="_scene_a_p_i_8h" name="SceneAPI.h" local="yes" imported="no">SceneAPI.h</includes>
    <includes id="_i_component_factory_8h" name="IComponentFactory.h" local="yes" imported="no">IComponentFactory.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_ui_a_p_i_8h" name="UiAPI.h" local="yes" imported="no">UiAPI.h</includes>
    <includes id="_ui_main_window_8h" name="UiMainWindow.h" local="yes" imported="no">UiMainWindow.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <namespace>OgreRenderer</namespace>
    <member kind="function">
      <type>DLLEXPORT void</type>
      <name>TundraPluginMain</name>
      <anchorfile>_ogre_rendering_module_8cpp.html</anchorfile>
      <anchor>a5e5a5f8cd7055f51e852059f9ec87e99</anchor>
      <arglist>(Framework *fw)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OgreRenderingModule.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_ogre_rendering_module_8h</filename>
    <includes id="_i_module_8h" name="IModule.h" local="yes" imported="no">IModule.h</includes>
    <includes id="_ogre_module_api_8h" name="OgreModuleApi.h" local="yes" imported="no">OgreModuleApi.h</includes>
    <includes id="_ogre_module_fwd_8h" name="OgreModuleFwd.h" local="yes" imported="no">OgreModuleFwd.h</includes>
    <class kind="class">OgreRenderer::OgreRenderingModule</class>
    <namespace>OgreRenderer</namespace>
  </compound>
  <compound kind="file">
    <name>OgreShadowCameraSetupFocusedPSSM.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_ogre_shadow_camera_setup_focused_p_s_s_m_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_ogre_shadow_camera_setup_focused_p_s_s_m_8h" name="OgreShadowCameraSetupFocusedPSSM.h" local="yes" imported="no">OgreShadowCameraSetupFocusedPSSM.h</includes>
  </compound>
  <compound kind="file">
    <name>OgreShadowCameraSetupFocusedPSSM.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_ogre_shadow_camera_setup_focused_p_s_s_m_8h</filename>
    <class kind="class">OgreShadowCameraSetupFocusedPSSM</class>
  </compound>
  <compound kind="file">
    <name>OgreSkeletonAsset.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_ogre_skeleton_asset_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_ogre_skeleton_asset_8h" name="OgreSkeletonAsset.h" local="yes" imported="no">OgreSkeletonAsset.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_ogre_conversion_utils_8h" name="OgreConversionUtils.h" local="yes" imported="no">OgreConversionUtils.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_asset_cache_8h" name="AssetCache.h" local="yes" imported="no">AssetCache.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_disable_memory_leak_check_8h" name="DisableMemoryLeakCheck.h" local="yes" imported="no">DisableMemoryLeakCheck.h</includes>
    <includes id="_enable_memory_leak_check_8h" name="EnableMemoryLeakCheck.h" local="yes" imported="no">EnableMemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>OgreSkeletonAsset.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_ogre_skeleton_asset_8h</filename>
    <includes id="_i_asset_8h" name="IAsset.h" local="yes" imported="no">IAsset.h</includes>
    <includes id="_ogre_module_api_8h" name="OgreModuleApi.h" local="yes" imported="no">OgreModuleApi.h</includes>
    <class kind="class">OgreSkeletonAsset</class>
  </compound>
  <compound kind="file">
    <name>OgreWorld.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_ogre_world_8cpp</filename>
    <includes id="_ogre_world_8h" name="OgreWorld.h" local="yes" imported="no">OgreWorld.h</includes>
    <includes id="_renderer_8h" name="Renderer.h" local="yes" imported="no">Renderer.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_e_c___camera_8h" name="EC_Camera.h" local="yes" imported="no">EC_Camera.h</includes>
    <includes id="_e_c___placeable_8h" name="EC_Placeable.h" local="yes" imported="no">EC_Placeable.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_composition_handler_8h" name="CompositionHandler.h" local="yes" imported="no">CompositionHandler.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_config_a_p_i_8h" name="ConfigAPI.h" local="yes" imported="no">ConfigAPI.h</includes>
    <includes id="_frame_a_p_i_8h" name="FrameAPI.h" local="yes" imported="no">FrameAPI.h</includes>
    <includes id="_ogre_shadow_camera_setup_focused_p_s_s_m_8h" name="OgreShadowCameraSetupFocusedPSSM.h" local="yes" imported="no">OgreShadowCameraSetupFocusedPSSM.h</includes>
    <includes id="_disable_memory_leak_check_8h" name="DisableMemoryLeakCheck.h" local="yes" imported="no">DisableMemoryLeakCheck.h</includes>
    <includes id="_enable_memory_leak_check_8h" name="EnableMemoryLeakCheck.h" local="yes" imported="no">EnableMemoryLeakCheck.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>OGRE_INTEROP</name>
      <anchorfile>_ogre_world_8cpp.html</anchorfile>
      <anchor>a9af2b61539d42b83ffec719b22407071</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>GetSubmeshFromIndexRange</name>
      <anchorfile>_ogre_world_8cpp.html</anchorfile>
      <anchor>ab03c7c8e642153e9120ae5a8a60a0f4e</anchor>
      <arglist>(uint index, const std::vector&lt; uint &gt; &amp;submeshstartindex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetMeshInformation</name>
      <anchorfile>_ogre_world_8cpp.html</anchorfile>
      <anchor>a1d744119754f67eef0ab56e6838323e7</anchor>
      <arglist>(Ogre::Entity *entity, std::vector&lt; Ogre::Vector3 &gt; &amp;vertices, std::vector&lt; Ogre::Vector2 &gt; &amp;texcoords, std::vector&lt; uint &gt; &amp;indices, std::vector&lt; uint &gt; &amp;submeshstartindex, const Ogre::Vector3 &amp;position, const Ogre::Quaternion &amp;orient, const Ogre::Vector3 &amp;scale)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::Vector2</type>
      <name>FindUVs</name>
      <anchorfile>_ogre_world_8cpp.html</anchorfile>
      <anchor>a4a29225baa25047725bff97fe331ef6f</anchor>
      <arglist>(const Ogre::Ray &amp;ray, float distance, const std::vector&lt; Ogre::Vector3 &gt; &amp;vertices, const std::vector&lt; Ogre::Vector2 &gt; &amp;texcoords, const std::vector&lt; uint &gt; indices, uint foundindex)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OgreWorld.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_ogre_world_8h</filename>
    <includes id="_core_defines_8h" name="CoreDefines.h" local="yes" imported="no">CoreDefines.h</includes>
    <includes id="_i_renderer_8h" name="IRenderer.h" local="yes" imported="no">IRenderer.h</includes>
    <includes id="_ogre_module_api_8h" name="OgreModuleApi.h" local="yes" imported="no">OgreModuleApi.h</includes>
    <includes id="_ogre_module_fwd_8h" name="OgreModuleFwd.h" local="yes" imported="no">OgreModuleFwd.h</includes>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <class kind="class">OgreWorld</class>
  </compound>
  <compound kind="file">
    <name>Renderer.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_renderer_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_application_8h" name="Application.h" local="yes" imported="no">Application.h</includes>
    <includes id="_renderer_8h" name="Renderer.h" local="yes" imported="no">Renderer.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_ogre_conversion_utils_8h" name="OgreConversionUtils.h" local="yes" imported="no">OgreConversionUtils.h</includes>
    <includes id="_ogre_world_8h" name="OgreWorld.h" local="yes" imported="no">OgreWorld.h</includes>
    <includes id="_e_c___placeable_8h" name="EC_Placeable.h" local="yes" imported="no">EC_Placeable.h</includes>
    <includes id="_e_c___camera_8h" name="EC_Camera.h" local="yes" imported="no">EC_Camera.h</includes>
    <includes id="_render_window_8h" name="RenderWindow.h" local="yes" imported="no">RenderWindow.h</includes>
    <includes id="_ui_graphics_view_8h" name="UiGraphicsView.h" local="yes" imported="no">UiGraphicsView.h</includes>
    <includes id="_ogre_shadow_camera_setup_focused_p_s_s_m_8h" name="OgreShadowCameraSetupFocusedPSSM.h" local="yes" imported="no">OgreShadowCameraSetupFocusedPSSM.h</includes>
    <includes id="_composition_handler_8h" name="CompositionHandler.h" local="yes" imported="no">CompositionHandler.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_core_exception_8h" name="CoreException.h" local="yes" imported="no">CoreException.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_scene_a_p_i_8h" name="SceneAPI.h" local="yes" imported="no">SceneAPI.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_ui_a_p_i_8h" name="UiAPI.h" local="yes" imported="no">UiAPI.h</includes>
    <includes id="_ui_main_window_8h" name="UiMainWindow.h" local="yes" imported="no">UiMainWindow.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_config_a_p_i_8h" name="ConfigAPI.h" local="yes" imported="no">ConfigAPI.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_disable_memory_leak_check_8h" name="DisableMemoryLeakCheck.h" local="yes" imported="no">DisableMemoryLeakCheck.h</includes>
    <includes id="_enable_memory_leak_check_8h" name="EnableMemoryLeakCheck.h" local="yes" imported="no">EnableMemoryLeakCheck.h</includes>
    <class kind="class">OgreRenderer::OgreLogListener</class>
    <namespace>OgreRenderer</namespace>
    <member kind="variable" static="yes">
      <type>static const float</type>
      <name>MAX_FRAME_TIME</name>
      <anchorfile>_renderer_8cpp.html</anchorfile>
      <anchor>a7f60cec9194d205d8836cf6b8a8f585e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Renderer.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_renderer_8h</filename>
    <includes id="_i_renderer_8h" name="IRenderer.h" local="yes" imported="no">IRenderer.h</includes>
    <includes id="_ogre_module_api_8h" name="OgreModuleApi.h" local="yes" imported="no">OgreModuleApi.h</includes>
    <includes id="_ogre_module_fwd_8h" name="OgreModuleFwd.h" local="yes" imported="no">OgreModuleFwd.h</includes>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <includes id="_high_perf_clock_8h" name="HighPerfClock.h" local="yes" imported="no">HighPerfClock.h</includes>
    <class kind="class">OgreRenderer::Renderer</class>
    <namespace>OgreRenderer</namespace>
    <member kind="enumeration">
      <name>ShadowQuality</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>aad0833469aa8af821b4dc8c0fce29d17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Shadows_Off</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>aad0833469aa8af821b4dc8c0fce29d17a15767242844b5dc44ecbc401a9c31e56</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Shadows_Low</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>aad0833469aa8af821b4dc8c0fce29d17a513e2a301fd9f4601ddc0b3bcdb04d68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Shadows_High</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>aad0833469aa8af821b4dc8c0fce29d17a04b73f7ae474c141d61aa68b6f3859fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>TextureQuality</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a3a501a39b10a82505d11f5c3fb8e8c96</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Texture_Low</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a3a501a39b10a82505d11f5c3fb8e8c96a205374209fb462e9833fcb52ef52124b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Texture_Normal</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a3a501a39b10a82505d11f5c3fb8e8c96ad5e7d45f2b9fcca1a319d17671344603</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RendererSettings.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_renderer_settings_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_renderer_settings_8h" name="RendererSettings.h" local="yes" imported="no">RendererSettings.h</includes>
    <includes id="_renderer_8h" name="Renderer.h" local="yes" imported="no">Renderer.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_application_8h" name="Application.h" local="yes" imported="no">Application.h</includes>
    <includes id="_input_a_p_i_8h" name="InputAPI.h" local="yes" imported="no">InputAPI.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <namespace>OgreRenderer</namespace>
  </compound>
  <compound kind="file">
    <name>RendererSettings.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_renderer_settings_8h</filename>
    <includes id="_input_fwd_8h" name="InputFwd.h" local="yes" imported="no">InputFwd.h</includes>
    <class kind="class">OgreRenderer::RendererSettingsWindow</class>
    <namespace>OgreRenderer</namespace>
  </compound>
  <compound kind="file">
    <name>RenderWindow.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_render_window_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_render_window_8h" name="RenderWindow.h" local="yes" imported="no">RenderWindow.h</includes>
    <includes id="_core_string_utils_8h" name="CoreStringUtils.h" local="yes" imported="no">CoreStringUtils.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <namespace>anonymous_namespace{RenderWindow.cpp}</namespace>
    <member kind="variable">
      <type>const char</type>
      <name>rttTextureName</name>
      <anchorfile>namespaceanonymous__namespace_02_render_window_8cpp_03.html</anchorfile>
      <anchor>a99419111272211a2d58d671beb475e35</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>const char</type>
      <name>rttMaterialName</name>
      <anchorfile>namespaceanonymous__namespace_02_render_window_8cpp_03.html</anchorfile>
      <anchor>adf0b9f2f9a58274dc28f317ef109c62e</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RenderWindow.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_render_window_8h</filename>
    <includes id="_ogre_module_api_8h" name="OgreModuleApi.h" local="yes" imported="no">OgreModuleApi.h</includes>
    <class kind="class">RenderWindow</class>
    <namespace>Ogre</namespace>
  </compound>
  <compound kind="file">
    <name>TextureAsset.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_texture_asset_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_texture_asset_8h" name="TextureAsset.h" local="yes" imported="no">TextureAsset.h</includes>
    <includes id="_ogre_conversion_utils_8h" name="OgreConversionUtils.h" local="yes" imported="no">OgreConversionUtils.h</includes>
    <includes id="_asset_cache_8h" name="AssetCache.h" local="yes" imported="no">AssetCache.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_disable_memory_leak_check_8h" name="DisableMemoryLeakCheck.h" local="yes" imported="no">DisableMemoryLeakCheck.h</includes>
    <includes id="_enable_memory_leak_check_8h" name="EnableMemoryLeakCheck.h" local="yes" imported="no">EnableMemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>TextureAsset.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/OgreRenderingModule/</path>
    <filename>_texture_asset_8h</filename>
    <includes id="_i_asset_8h" name="IAsset.h" local="yes" imported="no">IAsset.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_ogre_module_api_8h" name="OgreModuleApi.h" local="yes" imported="no">OgreModuleApi.h</includes>
    <class kind="class">TextureAsset</class>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; TextureAsset &gt;</type>
      <name>TextureAssetPtr</name>
      <anchorfile>_texture_asset_8h.html</anchorfile>
      <anchor>ad184928e46c621b3546e0cb173bf49b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CollisionShapeUtils.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/PhysicsModule/</path>
    <filename>_collision_shape_utils_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_collision_shape_utils_8h" name="CollisionShapeUtils.h" local="yes" imported="no">CollisionShapeUtils.h</includes>
    <includes id="_convex_hull_8h" name="ConvexHull.h" local="yes" imported="no">ConvexHull.h</includes>
    <includes id="_physics_utils_8h" name="PhysicsUtils.h" local="yes" imported="no">PhysicsUtils.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="hull_8h" name="hull.h" local="yes" imported="no">hull.h</includes>
    <namespace>Physics</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BULLET_INTEROP</name>
      <anchorfile>_collision_shape_utils_8cpp.html</anchorfile>
      <anchor>ae64ca30ef9ec9bb2d8800c337c476abb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GenerateTriangleMesh</name>
      <anchorfile>namespace_physics.html</anchorfile>
      <anchor>a74c39cc83879daa2902f2be2bb809683</anchor>
      <arglist>(Ogre::Mesh *mesh, btTriangleMesh *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GenerateConvexHullSet</name>
      <anchorfile>namespace_physics.html</anchorfile>
      <anchor>abd1761300fc9fb7a08439d1c75c10519</anchor>
      <arglist>(Ogre::Mesh *mesh, ConvexHullSet *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetTrianglesFromMesh</name>
      <anchorfile>namespace_physics.html</anchorfile>
      <anchor>a8f5800493f4602f189a0a947312c02ba</anchor>
      <arglist>(Ogre::Mesh *mesh, std::vector&lt; float3 &gt; &amp;dest)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CollisionShapeUtils.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/PhysicsModule/</path>
    <filename>_collision_shape_utils_8h</filename>
    <includes id="_core_defines_8h" name="CoreDefines.h" local="yes" imported="no">CoreDefines.h</includes>
    <includes id="_physics_module_api_8h" name="PhysicsModuleApi.h" local="yes" imported="no">PhysicsModuleApi.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <namespace>Ogre</namespace>
    <namespace>Physics</namespace>
    <member kind="function">
      <type>void</type>
      <name>GenerateTriangleMesh</name>
      <anchorfile>namespace_physics.html</anchorfile>
      <anchor>a74c39cc83879daa2902f2be2bb809683</anchor>
      <arglist>(Ogre::Mesh *mesh, btTriangleMesh *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetTrianglesFromMesh</name>
      <anchorfile>namespace_physics.html</anchorfile>
      <anchor>a8f5800493f4602f189a0a947312c02ba</anchor>
      <arglist>(Ogre::Mesh *mesh, std::vector&lt; float3 &gt; &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GenerateConvexHullSet</name>
      <anchorfile>namespace_physics.html</anchorfile>
      <anchor>abd1761300fc9fb7a08439d1c75c10519</anchor>
      <arglist>(Ogre::Mesh *mesh, ConvexHullSet *ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ConvexHull.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/PhysicsModule/</path>
    <filename>_convex_hull_8h</filename>
    <includes id="_core_defines_8h" name="CoreDefines.h" local="yes" imported="no">CoreDefines.h</includes>
    <includes id="_physics_module_api_8h" name="PhysicsModuleApi.h" local="yes" imported="no">PhysicsModuleApi.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <class kind="struct">Physics::ConvexHull</class>
    <class kind="struct">Physics::ConvexHullSet</class>
    <namespace>Physics</namespace>
  </compound>
  <compound kind="file">
    <name>EC_RigidBody.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/PhysicsModule/</path>
    <filename>_e_c___rigid_body_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_e_c___rigid_body_8h" name="EC_RigidBody.h" local="yes" imported="no">EC_RigidBody.h</includes>
    <includes id="_convex_hull_8h" name="ConvexHull.h" local="yes" imported="no">ConvexHull.h</includes>
    <includes id="_physics_module_8h" name="PhysicsModule.h" local="yes" imported="no">PhysicsModule.h</includes>
    <includes id="_physics_utils_8h" name="PhysicsUtils.h" local="yes" imported="no">PhysicsUtils.h</includes>
    <includes id="_physics_world_8h" name="PhysicsWorld.h" local="yes" imported="no">PhysicsWorld.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_ogre_mesh_asset_8h" name="OgreMeshAsset.h" local="yes" imported="no">OgreMeshAsset.h</includes>
    <includes id="_ogre_conversion_utils_8h" name="OgreConversionUtils.h" local="yes" imported="no">OgreConversionUtils.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_e_c___mesh_8h" name="EC_Mesh.h" local="yes" imported="no">EC_Mesh.h</includes>
    <includes id="_e_c___placeable_8h" name="EC_Placeable.h" local="yes" imported="no">EC_Placeable.h</includes>
    <includes id="_e_c___terrain_8h" name="EC_Terrain.h" local="yes" imported="no">EC_Terrain.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_i_asset_transfer_8h" name="IAssetTransfer.h" local="yes" imported="no">IAssetTransfer.h</includes>
    <includes id="_attribute_metadata_8h" name="AttributeMetadata.h" local="yes" imported="no">AttributeMetadata.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>OGRE_INTEROP</name>
      <anchorfile>_e_c___rigid_body_8cpp.html</anchorfile>
      <anchor>a9af2b61539d42b83ffec719b22407071</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BULLET_INTEROP</name>
      <anchorfile>_e_c___rigid_body_8cpp.html</anchorfile>
      <anchor>ae64ca30ef9ec9bb2d8800c337c476abb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float</type>
      <name>cForceThreshold</name>
      <anchorfile>_e_c___rigid_body_8cpp.html</anchorfile>
      <anchor>a5b43b86fd3fd90f1583608a891f5e458</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float</type>
      <name>cImpulseThreshold</name>
      <anchorfile>_e_c___rigid_body_8cpp.html</anchorfile>
      <anchor>a0b30ac6ab3c3764b2df02ac6ce4b8e34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float</type>
      <name>cTorqueThreshold</name>
      <anchorfile>_e_c___rigid_body_8cpp.html</anchorfile>
      <anchor>a3526d2d8c58326cffea947a4546514a6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EC_RigidBody.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/PhysicsModule/</path>
    <filename>_e_c___rigid_body_8h</filename>
    <includes id="_core_defines_8h" name="CoreDefines.h" local="yes" imported="no">CoreDefines.h</includes>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_asset_reference_8h" name="AssetReference.h" local="yes" imported="no">AssetReference.h</includes>
    <includes id="_asset_fwd_8h" name="AssetFwd.h" local="yes" imported="no">AssetFwd.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="_physics_module_api_8h" name="PhysicsModuleApi.h" local="yes" imported="no">PhysicsModuleApi.h</includes>
    <class kind="class">EC_RigidBody</class>
    <namespace>Physics</namespace>
  </compound>
  <compound kind="file">
    <name>EC_VolumeTrigger.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/PhysicsModule/</path>
    <filename>_e_c___volume_trigger_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_e_c___volume_trigger_8h" name="EC_VolumeTrigger.h" local="yes" imported="no">EC_VolumeTrigger.h</includes>
    <includes id="_e_c___rigid_body_8h" name="EC_RigidBody.h" local="yes" imported="no">EC_RigidBody.h</includes>
    <includes id="_e_c___placeable_8h" name="EC_Placeable.h" local="yes" imported="no">EC_Placeable.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_physics_module_8h" name="PhysicsModule.h" local="yes" imported="no">PhysicsModule.h</includes>
    <includes id="_physics_world_8h" name="PhysicsWorld.h" local="yes" imported="no">PhysicsWorld.h</includes>
    <includes id="_physics_utils_8h" name="PhysicsUtils.h" local="yes" imported="no">PhysicsUtils.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>EC_VolumeTrigger.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/PhysicsModule/</path>
    <filename>_e_c___volume_trigger_8h</filename>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_core_defines_8h" name="CoreDefines.h" local="yes" imported="no">CoreDefines.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <class kind="class">EC_VolumeTrigger</class>
    <namespace>Physics</namespace>
  </compound>
  <compound kind="file">
    <name>hull.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/PhysicsModule/</path>
    <filename>hull_8cpp</filename>
    <includes id="hull_8h" name="hull.h" local="yes" imported="no">hull.h</includes>
    <class kind="class">StanHull::int3</class>
    <class kind="class">StanHull::float2</class>
    <class kind="class">StanHull::float3</class>
    <class kind="class">StanHull::float3x3</class>
    <class kind="class">StanHull::float4</class>
    <class kind="class">StanHull::float4x4</class>
    <class kind="class">StanHull::Quaternion</class>
    <class kind="class">StanHull::Plane</class>
    <class kind="class">StanHull::Array</class>
    <class kind="class">StanHull::ArrayRet</class>
    <class kind="class">StanHull::PHullResult</class>
    <class kind="class">StanHull::ConvexH</class>
    <class kind="class">StanHull::ConvexH::HalfEdge</class>
    <class kind="class">StanHull::VertFlag</class>
    <class kind="class">StanHull::EdgeFlag</class>
    <class kind="class">StanHull::PlaneFlag</class>
    <class kind="class">StanHull::Coplanar</class>
    <class kind="class">StanHull::Tri</class>
    <class kind="class">StanHull::int4</class>
    <namespace>StanHull</namespace>
    <member kind="define">
      <type>#define</type>
      <name>PI</name>
      <anchorfile>hull_8cpp.html</anchorfile>
      <anchor>a598a3330b3c21701223ee0ca14316eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEG2RAD</name>
      <anchorfile>hull_8cpp.html</anchorfile>
      <anchor>af7e8592d0a634bd3642e9fd508ea8022</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAD2DEG</name>
      <anchorfile>hull_8cpp.html</anchorfile>
      <anchor>ac5a945020d3528355cda82d383676736</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SQRT_OF_2</name>
      <anchorfile>hull_8cpp.html</anchorfile>
      <anchor>a85a9c2da9c2b871cfc0097857fd5f4dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OFFSET</name>
      <anchorfile>hull_8cpp.html</anchorfile>
      <anchor>ac46da97055bd48335768203b95ddeca5</anchor>
      <arglist>(Class, Member)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REAL3</name>
      <anchorfile>hull_8cpp.html</anchorfile>
      <anchor>acfcd495831db0913eb46c91e637147b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REAL</name>
      <anchorfile>hull_8cpp.html</anchorfile>
      <anchor>a4b654506f18b8bfd61ad2a29a7e38c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COPLANAR</name>
      <anchorfile>hull_8cpp.html</anchorfile>
      <anchor>a4d33a5696640598aec2f9c636c3bcb6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNDER</name>
      <anchorfile>hull_8cpp.html</anchorfile>
      <anchor>a7c9ecf37d9c0efbd8dfdcad158e7138b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OVER</name>
      <anchorfile>hull_8cpp.html</anchorfile>
      <anchor>a445259ff261bfd080384fec196b1a69e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPLIT</name>
      <anchorfile>hull_8cpp.html</anchorfile>
      <anchor>ab9b059654b97e4d2d1ec92692e49dace</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PAPERWIDTH</name>
      <anchorfile>hull_8cpp.html</anchorfile>
      <anchor>ac1f0f2dd3e6f0b97fcf0b5ae0cc01f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPSILON</name>
      <anchorfile>hull_8cpp.html</anchorfile>
      <anchor>a002b2f4894492820fe708b1b7e7c5e70</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ConvexH::HalfEdge</type>
      <name>HalfEdge</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a64c17e94b1fce4bad35353b51253e48a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>argmin</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ae9299df1178786acfbff6a0fe8e39f8f</anchor>
      <arglist>(float a[], int n)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>sqr</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a63e0342dcd6fbc5248b1884400f6f097</anchor>
      <arglist>(float a)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>clampf</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ae3bcd2906eae0e9068a88507291584d8</anchor>
      <arglist>(float a)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Round</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>af26251f128c8a6ceeff2e20bae801f05</anchor>
      <arglist>(float a, float precision)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Interpolate</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>aec519ec40683f9a0a3cfd84c9f5c2fd6</anchor>
      <arglist>(const float &amp;f0, const float &amp;f1, float alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Swap</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a36678f39688e573ef730c974dd24fe4f</anchor>
      <arglist>(T &amp;a, T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>Max</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a97e5fb8d08d6c0994f2df4e028c5f37d</anchor>
      <arglist>(const T &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>Min</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ab3fb3bba06707ff1d984beebbf2a0d8b</anchor>
      <arglist>(const T &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>operator-</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>afc0c5bc41786ef13e10dcf3f5569a5d1</anchor>
      <arglist>(const float2 &amp;a, const float2 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>operator+</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a5cc338d0e7897e8bdc5cd0c9499029cc</anchor>
      <arglist>(const float2 &amp;a, const float2 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3 &amp;</type>
      <name>operator+=</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ab105ef8e10d2fbfe8e1d41724beb2ee6</anchor>
      <arglist>(float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3 &amp;</type>
      <name>operator-=</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>aa63ff9b56759746e0f54046e44d014a1</anchor>
      <arglist>(float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3 &amp;</type>
      <name>operator*=</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>aeeaf8152acd0edafd9733cf636066cab</anchor>
      <arglist>(float3 &amp;v, const float s)</arglist>
    </member>
    <member kind="function">
      <type>float3 &amp;</type>
      <name>operator/=</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>adc64726852cc0947fdf3ac341a974dbb</anchor>
      <arglist>(float3 &amp;v, const float s)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>magnitude</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a0181b447eca8d443132bda7ce5a0cf04</anchor>
      <arglist>(const float3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>normalize</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a94403f13b0531f2219c11c0e38848414</anchor>
      <arglist>(const float3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>safenormalize</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a367b06c542289ba8d25e23e9474c4e86</anchor>
      <arglist>(const float3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>vabs</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a5c467f46f4321c71e425e1ae54fb5a4a</anchor>
      <arglist>(const float3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator+</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a7725b78cd385231932817663f1da5d63</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator-</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a29137151e81f8ff225483f7071de6a1d</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator-</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>af054eb0931e83d0fadebad2febeffe94</anchor>
      <arglist>(const float3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a779c1451a6438d1e34160085a5abe5e0</anchor>
      <arglist>(const float3 &amp;v, const float s)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a99d4164a4e4824cffc5261a2a5b35430</anchor>
      <arglist>(const float s, const float3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator/</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a77f36643e606e2bbd5bc5f44d17fce81</anchor>
      <arglist>(const float3 &amp;v, const float s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>operator==</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a814a2db4f8aa492a9eb980027b0ebf00</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>operator!=</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a8bf6b8a5d6062e3af85cb882698dfa14</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dot</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a0d4c80348748162f7aa838a0572aadfb</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>cmul</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a3f38a529e96d31327d71f442f0eb24a8</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>cross</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a8c9a941e3624ebd4e2f572f788fd0cbf</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Interpolate</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ab27acf4c351c29ddab6343eaa1edb1b5</anchor>
      <arglist>(const float3 &amp;v0, const float3 &amp;v1, float alpha)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Round</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a0c1e78d7f944694248cf3a35d4890bce</anchor>
      <arglist>(const float3 &amp;a, float precision)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>VectorMax</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a04f62372145cbedb5f6aba6f3bf07c20</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>VectorMin</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a2e9c797c1f4434655fe3371fc67d1515</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>Transpose</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>af13d8bda737fbc70eca36259081d3874</anchor>
      <arglist>(const float3x3 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a088ab33a0e78b76468212160455a54e8</anchor>
      <arglist>(const float3 &amp;v, const float3x3 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a17ca225e25471abb20d9b7609f06b1c2</anchor>
      <arglist>(const float3x3 &amp;m, const float3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>aec830acdd41873f709fdb5b55530b81b</anchor>
      <arglist>(const float3x3 &amp;m, const float &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a817f4b1a6a39c900c8d5db6506498be3</anchor>
      <arglist>(const float3x3 &amp;ma, const float3x3 &amp;mb)</arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>operator/</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ad9bc84fcb986deab889b5261485528fb</anchor>
      <arglist>(const float3x3 &amp;a, const float &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>operator+</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a3130317959d3664324167d8082ffe4de</anchor>
      <arglist>(const float3x3 &amp;a, const float3x3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>operator-</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>aa4c601f2c522e982a8ac60db7b06cf98</anchor>
      <arglist>(const float3x3 &amp;a, const float3x3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3x3 &amp;</type>
      <name>operator+=</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>aab54d2b3646955979394678342ec4a30</anchor>
      <arglist>(float3x3 &amp;a, const float3x3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3x3 &amp;</type>
      <name>operator-=</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ac1e2f12270431acc33ec9b74adc29c8f</anchor>
      <arglist>(float3x3 &amp;a, const float3x3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3x3 &amp;</type>
      <name>operator*=</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>aab19b8a97678c00857ce5160a54c6fa1</anchor>
      <arglist>(float3x3 &amp;a, const float &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Determinant</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a4b6f44f975bc7d7f92b644d0e07572e0</anchor>
      <arglist>(const float3x3 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>Inverse</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a7615b729b4f0f065dbd5be49a2542706</anchor>
      <arglist>(const float3x3 &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>operator==</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a3ad17b9f6c3e61cc08ebeba1d2658fb3</anchor>
      <arglist>(const float4 &amp;a, const float4 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Homogenize</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a251ba08d9fbd2e5140865652c0f643d3</anchor>
      <arglist>(const float3 &amp;v3, const float &amp;w=1.0f)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>cmul</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a2f813e2897073d73b6602e8c3ddce4fa</anchor>
      <arglist>(const float4 &amp;a, const float4 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a61972b4c9caf30d35cffffb1e6a24f5e</anchor>
      <arglist>(const float4 &amp;v, float s)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a718889a0984c80a89e78fbb4226f7497</anchor>
      <arglist>(float s, const float4 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>operator+</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a89aeb181f3287dff91b3bc9cf5ded3c9</anchor>
      <arglist>(const float4 &amp;a, const float4 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>operator-</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a149a2ec75509846291103e33a6910a7c</anchor>
      <arglist>(const float4 &amp;a, const float4 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>aa2d6c6b1180b7032ee096c9ee0c863cd</anchor>
      <arglist>(const float4x4 &amp;a, const float4x4 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a8a37e7d09337389f5135534b833e3354</anchor>
      <arglist>(const float4 &amp;v, const float4x4 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>Inverse</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a68d51690a5aa4719b7361e4aabb0eaec</anchor>
      <arglist>(const float4x4 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>MatrixRigidInverse</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>aa0c00be7c74bfd9957448dd7976f9e9c</anchor>
      <arglist>(const float4x4 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>MatrixTranspose</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a0d5cc726c6adb8bfcd12ca81793cacc9</anchor>
      <arglist>(const float4x4 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>MatrixPerspectiveFov</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a6d02e09854d724d5255b870587c106a3</anchor>
      <arglist>(float fovy, float Aspect, float zn, float zf)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>MatrixTranslation</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a06c5d4dd01823571a1818fe88ce13590</anchor>
      <arglist>(const float3 &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>MatrixRotationZ</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a0a15518344a6258d39d736c36fd631d2</anchor>
      <arglist>(const float angle_radians)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>MatrixLookAt</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ade369df00fe031e7147152f04843b15d</anchor>
      <arglist>(const float3 &amp;eye, const float3 &amp;at, const float3 &amp;up)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>operator==</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a2110d707aa928abb15d503a7437cc382</anchor>
      <arglist>(const float4x4 &amp;a, const float4x4 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion &amp;</type>
      <name>operator*=</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a5918482038fe07a21207e2c633ba7363</anchor>
      <arglist>(Quaternion &amp;a, float s)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ab06069b53e378041f09358ca38ce1cd0</anchor>
      <arglist>(const Quaternion &amp;a, float s)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a0ecd41bf8f245af888e88796b5b14986</anchor>
      <arglist>(const Quaternion &amp;a, const Quaternion &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion</type>
      <name>operator+</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ad28268d44063a89b17c9ace7686b0323</anchor>
      <arglist>(const Quaternion &amp;a, const Quaternion &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion</type>
      <name>normalize</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a3bc457190463f476d65b0ad7860be894</anchor>
      <arglist>(Quaternion a)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dot</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a32848025a0a2ffd9e8ff9ffa5584d484</anchor>
      <arglist>(const Quaternion &amp;a, const Quaternion &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a004c2f83cb47d7df0d9efa18799950c0</anchor>
      <arglist>(const Quaternion &amp;q, const float3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a199a61b581a63b7278c27f07c332dac1</anchor>
      <arglist>(const float3 &amp;v, const Quaternion &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion</type>
      <name>slerp</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>acf2f06971912b6f8e573769b02c22db1</anchor>
      <arglist>(Quaternion a, const Quaternion &amp;b, float interp)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion</type>
      <name>Interpolate</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a4f5e333b953d88e2a1ff7ada5d63c0a8</anchor>
      <arglist>(const Quaternion &amp;q0, const Quaternion &amp;q1, float alpha)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion</type>
      <name>RotationArc</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>abf427671bf8daaf97e0a51b63c6887ac</anchor>
      <arglist>(float3 v0, float3 v1)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion</type>
      <name>Inverse</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>add2fae3adc88e89c9d3b2bbafc9cb682</anchor>
      <arglist>(const Quaternion &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>MatrixFromQuatVec</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a1393398c362aa0cd59cf8a4664b93529</anchor>
      <arglist>(const Quaternion &amp;q, const float3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion</type>
      <name>YawPitchRoll</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a39d35ed9ccc506946584491b4ed10d01</anchor>
      <arglist>(float yaw, float pitch, float roll)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Yaw</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a609b1a74c26a23e9be622a3af3adadcc</anchor>
      <arglist>(const Quaternion &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Pitch</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a8fb65578a2c4a593781c71203d5c5c33</anchor>
      <arglist>(const Quaternion &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Roll</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a853013d9131e182d328adf52a094d58c</anchor>
      <arglist>(Quaternion q)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Yaw</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a68d6cb6ad972f9318c010079931ee3e1</anchor>
      <arglist>(const float3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Pitch</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a51f6429f03b5323a025702a9d300b6bc</anchor>
      <arglist>(const float3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Plane</type>
      <name>PlaneFlip</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ad39652f1897dfd6fbccb0934cfe3e05a</anchor>
      <arglist>(const Plane &amp;plane)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>operator==</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ab3c68d9a04e32a71b516aa858753b6d7</anchor>
      <arglist>(const Plane &amp;a, const Plane &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>coplanar</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a454235a72f3bc5756475a6e80956329f</anchor>
      <arglist>(const Plane &amp;a, const Plane &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>PlaneLineIntersection</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a7e40f64b63457151d66cd29e53c3ec11</anchor>
      <arglist>(const Plane &amp;plane, const float3 &amp;p0, const float3 &amp;p1)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>PlaneProject</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a7e186fde65053ae96276022282464f62</anchor>
      <arglist>(const Plane &amp;plane, const float3 &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>LineProject</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ada31ac6abbbfab82c183ca9fe55a8121</anchor>
      <arglist>(const float3 &amp;p0, const float3 &amp;p1, const float3 &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>LineProjectTime</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>abb41076ecb85885c11c36a58053cba1f</anchor>
      <arglist>(const float3 &amp;p0, const float3 &amp;p1, const float3 &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ThreePlaneIntersection</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a353e9d8a1f35c101a68bc451410e562a</anchor>
      <arglist>(const Plane &amp;p0, const Plane &amp;p1, const Plane &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>PolyHit</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a4fc0759c3ccf7e82970d3f852efc3ac3</anchor>
      <arglist>(const float3 *vert, const int n, const float3 &amp;v0, const float3 &amp;v1, float3 *impact=NULL, float3 *normal=NULL)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>BoxInside</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>abf9a8682ccf5955aa5cd939cef06986d</anchor>
      <arglist>(const float3 &amp;p, const float3 &amp;bmin, const float3 &amp;bmax)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>BoxIntersect</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a3ff3f2fab7e23a087737d7c6cae9decb</anchor>
      <arglist>(const float3 &amp;v0, const float3 &amp;v1, const float3 &amp;bmin, const float3 &amp;bmax, float3 *impact)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>DistanceBetweenLines</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a45925a68916b0be77880f426d1e7a43f</anchor>
      <arglist>(const float3 &amp;ustart, const float3 &amp;udir, const float3 &amp;vstart, const float3 &amp;vdir, float3 *upoint=NULL, float3 *vpoint=NULL)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>TriNormal</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ac3c14476cae0ef73e6bf4664b082fac4</anchor>
      <arglist>(const float3 &amp;v0, const float3 &amp;v1, const float3 &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>NormalOf</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a2acca86a40d96f8cc657f4064be00db7</anchor>
      <arglist>(const float3 *vert, const int n)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion</type>
      <name>VirtualTrackBall</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a3452a7804bf62399cd985da23be1b84a</anchor>
      <arglist>(const float3 &amp;cop, const float3 &amp;cor, const float3 &amp;dir0, const float3 &amp;dir1)</arglist>
    </member>
    <member kind="function">
      <type>ConvexH *</type>
      <name>ConvexHDup</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a4fdbd2f75b0a9dc2e4bc7f848e8c206c</anchor>
      <arglist>(ConvexH *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>PlaneTest</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ab161ceaa67f5cb0209b460bc37ec7e24</anchor>
      <arglist>(const Plane &amp;p, const REAL3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SplitTest</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a8d271b2b91220a033025636a0d416ff2</anchor>
      <arglist>(ConvexH &amp;convex, const Plane &amp;plane)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>AssertIntact</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a6aa1ec917d30adb205071a4949074140</anchor>
      <arglist>(ConvexH &amp;convex)</arglist>
    </member>
    <member kind="function">
      <type>ConvexH *</type>
      <name>test_btbq</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a2d17ba0b734dd2621dcc8c36c9250849</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConvexH *</type>
      <name>test_cube</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a98e750d288f1368e5969a81e98b33d8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConvexH *</type>
      <name>ConvexHMakeCube</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a1af768b9461da3e11b99b6e30b02367f</anchor>
      <arglist>(const REAL3 &amp;bmin, const REAL3 &amp;bmax)</arglist>
    </member>
    <member kind="function">
      <type>ConvexH *</type>
      <name>ConvexHCrop</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a2ae9e7360faa5542f8d9aebd3d424199</anchor>
      <arglist>(ConvexH &amp;convex, const Plane &amp;slice)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>candidateplane</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a028f54efb29a0a1cdbf4803a1dadb334</anchor>
      <arglist>(Plane *planes, int planes_count, ConvexH *convex, float epsilon)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maxdir</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ac2d0b561976370ef505346a5746eee90</anchor>
      <arglist>(const T *p, int count, const T &amp;dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maxdirfiltered</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a50498b77bfbadae0fef77794e4737109</anchor>
      <arglist>(const T *p, int count, const T &amp;dir, Array&lt; int &gt; &amp;allow)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>orth</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a2783270bed4a04b127298974c10a3e2f</anchor>
      <arglist>(const float3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maxdirsterid</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a9809b1c878f8e6a9ba1c0048dfe5fa52</anchor>
      <arglist>(const T *p, int count, const T &amp;dir, Array&lt; int &gt; &amp;allow)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>operator==</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a977b4e9d4f56040e9d909bc0f639aa69</anchor>
      <arglist>(const int3 &amp;a, const int3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>int3</type>
      <name>roll3</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a7ec545d7aac216a294715a2d70823915</anchor>
      <arglist>(int3 a)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>isa</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a74bf1f3fa3f07b3f58db0db47ca0b5d6</anchor>
      <arglist>(const int3 &amp;a, const int3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>b2b</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a53753c51ae95b873a1953aee87f0acc5</anchor>
      <arglist>(const int3 &amp;a, const int3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>above</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ab0528345eccc581733b82125b63f170e</anchor>
      <arglist>(float3 *vertices, const int3 &amp;t, const float3 &amp;p, float epsilon)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hasedge</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a7256f74c27e8a789540b2e1e9ae117fc</anchor>
      <arglist>(const int3 &amp;t, int a, int b)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hasvert</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a4cea851b62036157eb45f3ad5a40e445</anchor>
      <arglist>(const int3 &amp;t, int v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>shareedge</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a3aa8c87bbd1ff46ffa285c36a93583a5</anchor>
      <arglist>(const int3 &amp;a, const int3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>b2bfix</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a84bc5348d0e957d69813e01250902ba9</anchor>
      <arglist>(Tri *s, Tri *t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeb2b</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ae5912e11d2f11892e571cc1cf8873022</anchor>
      <arglist>(Tri *s, Tri *t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkit</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a34567992ecac8d2f489fe7412248e733</anchor>
      <arglist>(Tri *t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extrude</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a6fb6f38eac82eb82b3b7c7412b51836f</anchor>
      <arglist>(Tri *t0, int v)</arglist>
    </member>
    <member kind="function">
      <type>Tri *</type>
      <name>extrudable</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a1a5de73098443921293da4375470c078</anchor>
      <arglist>(float epsilon)</arglist>
    </member>
    <member kind="function">
      <type>int4</type>
      <name>FindSimplex</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ad9b5d31344d85eb3f0efcbdeca0b0d47</anchor>
      <arglist>(float3 *verts, int verts_count, Array&lt; int &gt; &amp;allow)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>calchullgen</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a74d1627400eccc64bb4ca414180b743d</anchor>
      <arglist>(float3 *verts, int verts_count, int vlimit)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>calchull</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ad467cfb69f29b0d322ea14c49f767fdc</anchor>
      <arglist>(float3 *verts, int verts_count, int *&amp;tris_out, int &amp;tris_count, int vlimit)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>calchullpbev</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ae43c922729c3829081f499a1a8303e5d</anchor>
      <arglist>(float3 *verts, int verts_count, int vlimit, Array&lt; Plane &gt; &amp;planes, float bevangle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>overhull</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>afd85ef34e25e29252703b41e1491a861</anchor>
      <arglist>(Plane *planes, int planes_count, float3 *verts, int verts_count, int maxplanes, float3 *&amp;verts_out, int &amp;verts_count_out, int *&amp;faces_out, int &amp;faces_count_out, float inflate)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>overhullv</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a257460e051780aa759b456f9673193ee</anchor>
      <arglist>(float3 *verts, int verts_count, int maxplanes, float3 *&amp;verts_out, int &amp;verts_count_out, int *&amp;faces_out, int &amp;faces_count_out, float inflate, float bevangle, int vlimit)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ComputeHull</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>afaa15b6b51ca0a95c49dc02b4a7a8716</anchor>
      <arglist>(unsigned int vcount, const float *vertices, PHullResult &amp;result, unsigned int vlimit, float inflate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReleaseHull</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a948443c392f1962fa09bb28fa498276d</anchor>
      <arglist>(PHullResult &amp;result)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddPoint</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>abf433f048a1ab4c7c61df02e2aeeb695</anchor>
      <arglist>(unsigned int &amp;vcount, float *p, float x, float y, float z)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetDist</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a2f704aceb5a83db7d7d32223d6864691</anchor>
      <arglist>(float px, float py, float pz, const float *p2)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>countpolyhit</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ab12597d2807b33215b0b23eb70d5519f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>planetestepsilon</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a64a2eb9b2caedf03f207a58066a98b35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; Tri * &gt;</type>
      <name>tris</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ab34b44104d6e4c0bfa123f546baa46d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hull.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/PhysicsModule/</path>
    <filename>hull_8h</filename>
    <class kind="class">StanHull::HullResult</class>
    <class kind="class">StanHull::HullDesc</class>
    <class kind="class">StanHull::HullLibrary</class>
    <namespace>StanHull</namespace>
    <member kind="enumeration">
      <name>HullFlag</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a1441db78350dcf3622daae83acabc359</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QF_TRIANGLES</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a1441db78350dcf3622daae83acabc359ac81188e83a158425df76a94763b0bcc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QF_REVERSE_ORDER</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a1441db78350dcf3622daae83acabc359a252b4eb0e3de454bd7df4c5591312f7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QF_SKIN_WIDTH</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a1441db78350dcf3622daae83acabc359a42a4391921c42c39914181a2509436fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QF_DEFAULT</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a1441db78350dcf3622daae83acabc359ac6a009ef1d30ee42ff69793d77ba5cb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>HullError</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>aa0e34eb30ca5a21b8f40c6b52e501704</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QE_OK</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>aa0e34eb30ca5a21b8f40c6b52e501704a9e55f83a1bc4a4f81cc19760122eaa3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QE_FAIL</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>aa0e34eb30ca5a21b8f40c6b52e501704a26bc81336069a0154c96d4b253c511e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OgreBulletCollisionsDebugLines.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/PhysicsModule/</path>
    <filename>_ogre_bullet_collisions_debug_lines_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_ogre_bullet_collisions_debug_lines_8h" name="OgreBulletCollisionsDebugLines.h" local="yes" imported="no">OgreBulletCollisionsDebugLines.h</includes>
  </compound>
  <compound kind="file">
    <name>OgreBulletCollisionsDebugLines.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/PhysicsModule/</path>
    <filename>_ogre_bullet_collisions_debug_lines_8h</filename>
    <class kind="struct">DebugLine</class>
    <class kind="class">DebugLines</class>
  </compound>
  <compound kind="file">
    <name>PhysicsModule.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/PhysicsModule/</path>
    <filename>_physics_module_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_physics_module_8h" name="PhysicsModule.h" local="yes" imported="no">PhysicsModule.h</includes>
    <includes id="_physics_world_8h" name="PhysicsWorld.h" local="yes" imported="no">PhysicsWorld.h</includes>
    <includes id="_collision_shape_utils_8h" name="CollisionShapeUtils.h" local="yes" imported="no">CollisionShapeUtils.h</includes>
    <includes id="_convex_hull_8h" name="ConvexHull.h" local="yes" imported="no">ConvexHull.h</includes>
    <includes id="_e_c___rigid_body_8h" name="EC_RigidBody.h" local="yes" imported="no">EC_RigidBody.h</includes>
    <includes id="_e_c___volume_trigger_8h" name="EC_VolumeTrigger.h" local="yes" imported="no">EC_VolumeTrigger.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_e_c___mesh_8h" name="EC_Mesh.h" local="yes" imported="no">EC_Mesh.h</includes>
    <includes id="_e_c___placeable_8h" name="EC_Placeable.h" local="yes" imported="no">EC_Placeable.h</includes>
    <includes id="_e_c___terrain_8h" name="EC_Terrain.h" local="yes" imported="no">EC_Terrain.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_scene_a_p_i_8h" name="SceneAPI.h" local="yes" imported="no">SceneAPI.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_renderer_8h" name="Renderer.h" local="yes" imported="no">Renderer.h</includes>
    <includes id="_console_a_p_i_8h" name="ConsoleAPI.h" local="yes" imported="no">ConsoleAPI.h</includes>
    <includes id="_i_component_factory_8h" name="IComponentFactory.h" local="yes" imported="no">IComponentFactory.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_disable_memory_leak_check_8h" name="DisableMemoryLeakCheck.h" local="yes" imported="no">DisableMemoryLeakCheck.h</includes>
    <includes id="_enable_memory_leak_check_8h" name="EnableMemoryLeakCheck.h" local="yes" imported="no">EnableMemoryLeakCheck.h</includes>
    <namespace>Physics</namespace>
    <member kind="function">
      <type></type>
      <name>Q_DECLARE_METATYPE</name>
      <anchorfile>_physics_module_8cpp.html</anchorfile>
      <anchor>acd96af06be64d98bd0464b8ec7e9be86</anchor>
      <arglist>(Physics::PhysicsModule *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Q_DECLARE_METATYPE</name>
      <anchorfile>_physics_module_8cpp.html</anchorfile>
      <anchor>aa3b45527af7bd15b630511d27fdb15a2</anchor>
      <arglist>(Physics::PhysicsWorld *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Q_DECLARE_METATYPE</name>
      <anchorfile>_physics_module_8cpp.html</anchorfile>
      <anchor>aa76b81b6a5b444acced51a71f18682b5</anchor>
      <arglist>(PhysicsRaycastResult *)</arglist>
    </member>
    <member kind="function">
      <type>QScriptValue</type>
      <name>qScriptValueFromQObject</name>
      <anchorfile>_physics_module_8cpp.html</anchorfile>
      <anchor>a4252a8cd4827f8f440ef0b60dc8b2c43</anchor>
      <arglist>(QScriptEngine *engine, Tp const &amp;qobject)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>qScriptValueToQObject</name>
      <anchorfile>_physics_module_8cpp.html</anchorfile>
      <anchor>a598a2c5b5f8b3a3b9f7e94758a1fee3a</anchor>
      <arglist>(const QScriptValue &amp;value, Tp &amp;qobject)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>qScriptRegisterQObjectMetaType</name>
      <anchorfile>_physics_module_8cpp.html</anchorfile>
      <anchor>a9d759f8cf936621ebb1cd1bc028e0f65</anchor>
      <arglist>(QScriptEngine *engine, const QScriptValue &amp;prototype=QScriptValue(), Tp *=0)</arglist>
    </member>
    <member kind="function">
      <type>DLLEXPORT void</type>
      <name>TundraPluginMain</name>
      <anchorfile>_physics_module_8cpp.html</anchorfile>
      <anchor>a5e5a5f8cd7055f51e852059f9ec87e99</anchor>
      <arglist>(Framework *fw)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PhysicsModule.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/PhysicsModule/</path>
    <filename>_physics_module_8h</filename>
    <includes id="_physics_module_api_8h" name="PhysicsModuleApi.h" local="yes" imported="no">PhysicsModuleApi.h</includes>
    <includes id="_i_module_8h" name="IModule.h" local="yes" imported="no">IModule.h</includes>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <class kind="class">Physics::PhysicsModule</class>
    <namespace>Ogre</namespace>
    <namespace>Physics</namespace>
  </compound>
  <compound kind="file">
    <name>PhysicsModuleApi.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/PhysicsModule/</path>
    <filename>_physics_module_api_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>PHYSICS_MODULE_API</name>
      <anchorfile>_physics_module_api_8h.html</anchorfile>
      <anchor>a23010fdde61b74ebe7521c235925a1ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PhysicsUtils.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/PhysicsModule/</path>
    <filename>_physics_utils_8h</filename>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <member kind="function">
      <type>bool</type>
      <name>RayTestSingle</name>
      <anchorfile>_physics_utils_8h.html</anchorfile>
      <anchor>a4f1df4ab6e43a715f5684c97650d6ab0</anchor>
      <arglist>(const float3 &amp;rayFrom, const float3 &amp;rayTo, btRigidBody *body)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PhysicsWorld.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/PhysicsModule/</path>
    <filename>_physics_world_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_physics_module_8h" name="PhysicsModule.h" local="yes" imported="no">PhysicsModule.h</includes>
    <includes id="_physics_world_8h" name="PhysicsWorld.h" local="yes" imported="no">PhysicsWorld.h</includes>
    <includes id="_physics_utils_8h" name="PhysicsUtils.h" local="yes" imported="no">PhysicsUtils.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_ogre_world_8h" name="OgreWorld.h" local="yes" imported="no">OgreWorld.h</includes>
    <includes id="_ogre_bullet_collisions_debug_lines_8h" name="OgreBulletCollisionsDebugLines.h" local="yes" imported="no">OgreBulletCollisionsDebugLines.h</includes>
    <includes id="_e_c___rigid_body_8h" name="EC_RigidBody.h" local="yes" imported="no">EC_RigidBody.h</includes>
    <includes id="_transform_8h" name="Transform.h" local="yes" imported="no">Transform.h</includes>
    <includes id="float3x4_8h" name="float3x4.h" local="yes" imported="no">Math/float3x4.h</includes>
    <includes id="_a_a_b_b_8h" name="AABB.h" local="yes" imported="no">Math/AABB.h</includes>
    <includes id="_o_b_b_8h" name="OBB.h" local="yes" imported="no">Math/OBB.h</includes>
    <includes id="_line_segment_8h" name="LineSegment.h" local="yes" imported="no">Math/LineSegment.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="_circle_8h" name="Circle.h" local="yes" imported="no">Math/Circle.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_disable_memory_leak_check_8h" name="DisableMemoryLeakCheck.h" local="yes" imported="no">DisableMemoryLeakCheck.h</includes>
    <includes id="_enable_memory_leak_check_8h" name="EnableMemoryLeakCheck.h" local="yes" imported="no">EnableMemoryLeakCheck.h</includes>
    <namespace>Physics</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BULLET_INTEROP</name>
      <anchorfile>_physics_world_8cpp.html</anchorfile>
      <anchor>ae64ca30ef9ec9bb2d8800c337c476abb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TickCallback</name>
      <anchorfile>namespace_physics.html</anchorfile>
      <anchor>a01e43ddbc43ad99af8d15290e9166afb</anchor>
      <arglist>(btDynamicsWorld *world, btScalar timeStep)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float</type>
      <name>cMinFps</name>
      <anchorfile>namespace_physics.html</anchorfile>
      <anchor>a21f396d3ab727e4428c68583c2382b7f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PhysicsWorld.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/PhysicsModule/</path>
    <filename>_physics_world_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <includes id="_physics_module_api_8h" name="PhysicsModuleApi.h" local="yes" imported="no">PhysicsModuleApi.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="_math_fwd_8h" name="MathFwd.h" local="yes" imported="no">Math/MathFwd.h</includes>
    <class kind="class">PhysicsRaycastResult</class>
    <class kind="class">Physics::PhysicsWorld</class>
    <namespace>Physics</namespace>
  </compound>
  <compound kind="file">
    <name>AttributeChangeType.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_attribute_change_type_8h</filename>
    <class kind="class">AttributeChange</class>
  </compound>
  <compound kind="file">
    <name>AttributeMetadata.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_attribute_metadata_8h</filename>
    <class kind="class">AttributeMetadata</class>
    <class kind="struct">AttributeMetadata::ButtonInfo</class>
  </compound>
  <compound kind="file">
    <name>ChangeRequest.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_change_request_8cpp</filename>
    <includes id="_change_request_8h" name="ChangeRequest.h" local="yes" imported="no">ChangeRequest.h</includes>
  </compound>
  <compound kind="file">
    <name>ChangeRequest.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_change_request_8h</filename>
    <class kind="class">ChangeRequest</class>
  </compound>
  <compound kind="file">
    <name>QmlScene.dox</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/doc/</path>
    <filename>_qml_scene_8dox</filename>
  </compound>
  <compound kind="file">
    <name>Scene.dox</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/doc/</path>
    <filename>_scene_8dox</filename>
  </compound>
  <compound kind="file">
    <name>EC_DynamicComponent.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_e_c___dynamic_component_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_e_c___dynamic_component_8h" name="EC_DynamicComponent.h" local="yes" imported="no">EC_DynamicComponent.h</includes>
    <includes id="_scene_a_p_i_8h" name="SceneAPI.h" local="yes" imported="no">SceneAPI.h</includes>
    <includes id="_i_module_8h" name="IModule.h" local="yes" imported="no">IModule.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <class kind="struct">DeserializeData</class>
    <member kind="function">
      <type>bool</type>
      <name>CmpAttributeByName</name>
      <anchorfile>_e_c___dynamic_component_8cpp.html</anchorfile>
      <anchor>aea19a55f8669a931524789e4c0fcd9cc</anchor>
      <arglist>(const IAttribute *a, const IAttribute *b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CmpAttributeDataByName</name>
      <anchorfile>_e_c___dynamic_component_8cpp.html</anchorfile>
      <anchor>a641071bbab253acec69593e2e480d5cb</anchor>
      <arglist>(const DeserializeData &amp;a, const DeserializeData &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EC_DynamicComponent.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_e_c___dynamic_component_8h</filename>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_i_attribute_8h" name="IAttribute.h" local="yes" imported="no">IAttribute.h</includes>
    <class kind="class">EC_DynamicComponent</class>
    <namespace>kNet</namespace>
  </compound>
  <compound kind="file">
    <name>EC_Name.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_e_c___name_8h</filename>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <class kind="class">EC_Name</class>
  </compound>
  <compound kind="file">
    <name>Entity.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_entity_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_e_c___name_8h" name="EC_Name.h" local="yes" imported="no">EC_Name.h</includes>
    <includes id="_scene_a_p_i_8h" name="SceneAPI.h" local="yes" imported="no">SceneAPI.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_core_string_utils_8h" name="CoreStringUtils.h" local="yes" imported="no">CoreStringUtils.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>Entity.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_entity_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_i_attribute_8h" name="IAttribute.h" local="yes" imported="no">IAttribute.h</includes>
    <includes id="_entity_action_8h" name="EntityAction.h" local="yes" imported="no">EntityAction.h</includes>
    <includes id="_unique_id_generator_8h" name="UniqueIdGenerator.h" local="yes" imported="no">UniqueIdGenerator.h</includes>
    <includes id="_entity_8inl" name="Entity.inl" local="yes" imported="no">Entity.inl</includes>
    <class kind="class">Entity</class>
  </compound>
  <compound kind="file">
    <name>Entity.inl</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_entity_8inl</filename>
  </compound>
  <compound kind="file">
    <name>EntityAction.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_entity_action_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_entity_action_8h" name="EntityAction.h" local="yes" imported="no">EntityAction.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>EntityAction.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_entity_action_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <class kind="class">EntityAction</class>
  </compound>
  <compound kind="file">
    <name>EntityReference.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_entity_reference_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_entity_reference_8h" name="EntityReference.h" local="yes" imported="no">EntityReference.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_e_c___name_8h" name="EC_Name.h" local="yes" imported="no">EC_Name.h</includes>
    <includes id="_scene_a_p_i_8h" name="SceneAPI.h" local="yes" imported="no">SceneAPI.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_core_string_utils_8h" name="CoreStringUtils.h" local="yes" imported="no">CoreStringUtils.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>EntityReference.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_entity_reference_8h</filename>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <class kind="struct">EntityReference</class>
  </compound>
  <compound kind="file">
    <name>IAttribute.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_i_attribute_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_i_attribute_8h" name="IAttribute.h" local="yes" imported="no">IAttribute.h</includes>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_core_defines_8h" name="CoreDefines.h" local="yes" imported="no">CoreDefines.h</includes>
    <includes id="_transform_8h" name="Transform.h" local="yes" imported="no">Transform.h</includes>
    <includes id="_asset_reference_8h" name="AssetReference.h" local="yes" imported="no">AssetReference.h</includes>
    <includes id="_entity_reference_8h" name="EntityReference.h" local="yes" imported="no">EntityReference.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_color_8h" name="Color.h" local="yes" imported="no">Color.h</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Math/Quat.h</includes>
    <includes id="float2_8h" name="float2.h" local="yes" imported="no">Math/float2.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>IAttribute.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_i_attribute_8h</filename>
    <includes id="_core_defines_8h" name="CoreDefines.h" local="yes" imported="no">CoreDefines.h</includes>
    <includes id="_core_string_utils_8h" name="CoreStringUtils.h" local="yes" imported="no">CoreStringUtils.h</includes>
    <includes id="_attribute_change_type_8h" name="AttributeChangeType.h" local="yes" imported="no">AttributeChangeType.h</includes>
    <class kind="class">IAttribute</class>
    <class kind="class">Attribute</class>
    <namespace>kNet</namespace>
    <member kind="typedef">
      <type>std::vector&lt; IAttribute * &gt;</type>
      <name>AttributeVector</name>
      <anchorfile>_i_attribute_8h.html</anchorfile>
      <anchor>ad516d82c3ced384acb0fd5fa07b8d9bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>cAttributeNone</name>
      <anchorfile>_i_attribute_8h.html</anchorfile>
      <anchor>a6e9ffb5b2fe5d3c3d3adf0acb0238164</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>cAttributeString</name>
      <anchorfile>_i_attribute_8h.html</anchorfile>
      <anchor>a4fac09ef5b0251433fef6302d1511ed2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>cAttributeInt</name>
      <anchorfile>_i_attribute_8h.html</anchorfile>
      <anchor>a2114243a141259732f7c386236621aee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>cAttributeReal</name>
      <anchorfile>_i_attribute_8h.html</anchorfile>
      <anchor>a2be2ba48e533a3224defd5ad641166a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>cAttributeColor</name>
      <anchorfile>_i_attribute_8h.html</anchorfile>
      <anchor>a5e5f3e8afb759c7851366811944e3418</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>cAttributeFloat2</name>
      <anchorfile>_i_attribute_8h.html</anchorfile>
      <anchor>a9c35a7fe1c4820254535e1f03daa8940</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>cAttributeFloat3</name>
      <anchorfile>_i_attribute_8h.html</anchorfile>
      <anchor>af1290982542ad0447ac07786ab3d0d82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>cAttributeFloat4</name>
      <anchorfile>_i_attribute_8h.html</anchorfile>
      <anchor>a72880a29aaed4bf0f4de5e522da2ca5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>cAttributeBool</name>
      <anchorfile>_i_attribute_8h.html</anchorfile>
      <anchor>ad76a34509d1a27591920d21b4aef9cc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>cAttributeUInt</name>
      <anchorfile>_i_attribute_8h.html</anchorfile>
      <anchor>ab800860bb3049e079801ad6ca84cc4e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>cAttributeQuat</name>
      <anchorfile>_i_attribute_8h.html</anchorfile>
      <anchor>a337c444f9b78eb66e321174798146c30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>cAttributeAssetReference</name>
      <anchorfile>_i_attribute_8h.html</anchorfile>
      <anchor>a05be43cedabdb3abe01e929c61bfcb9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>cAttributeAssetReferenceList</name>
      <anchorfile>_i_attribute_8h.html</anchorfile>
      <anchor>a37799f7ea951f3749ace848c4f748bf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>cAttributeEntityReference</name>
      <anchorfile>_i_attribute_8h.html</anchorfile>
      <anchor>ab674e7eb71c40422ea325d2fb37400ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>cAttributeQVariant</name>
      <anchorfile>_i_attribute_8h.html</anchorfile>
      <anchor>a9d4e2dc97705e6117c706a8a3cfe4d67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>cAttributeQVariantList</name>
      <anchorfile>_i_attribute_8h.html</anchorfile>
      <anchor>aebb7242400a409733bc1eca2eb010136</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>cAttributeTransform</name>
      <anchorfile>_i_attribute_8h.html</anchorfile>
      <anchor>ad3306ca1108d2d0d10f66ad663c1cc62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>cAttributeQPoint</name>
      <anchorfile>_i_attribute_8h.html</anchorfile>
      <anchor>a7d3779e8da06fff2f6f24db577d1fde7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>cNumAttributeTypes</name>
      <anchorfile>_i_attribute_8h.html</anchorfile>
      <anchor>a455d78886970a2e56d1d5107d8bea7b2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>IComponent.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_i_component_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_core_string_utils_8h" name="CoreStringUtils.h" local="yes" imported="no">CoreStringUtils.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_scene_a_p_i_8h" name="SceneAPI.h" local="yes" imported="no">SceneAPI.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <member kind="function">
      <type>bool</type>
      <name>HasAttribute</name>
      <anchorfile>_i_component_8cpp.html</anchorfile>
      <anchor>aeb703026da5c3ef71d619f1c442d9ea4</anchor>
      <arglist>(QDomElement &amp;comp_element, const QString &amp;name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>IComponent.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_i_component_8h</filename>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <includes id="_attribute_change_type_8h" name="AttributeChangeType.h" local="yes" imported="no">AttributeChangeType.h</includes>
    <includes id="_i_attribute_8h" name="IAttribute.h" local="yes" imported="no">IAttribute.h</includes>
    <class kind="class">IComponent</class>
    <member kind="define">
      <type>#define</type>
      <name>COMPONENT_NAME</name>
      <anchorfile>_i_component_8h.html</anchorfile>
      <anchor>a62fd9da1532b2af3c320a827ff024747</anchor>
      <arglist>(componentName, componentTypeId)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EXPOSE_ATTRIBUTE_AS_QPROPERTY</name>
      <anchorfile>_i_component_8h.html</anchorfile>
      <anchor>a48e92047175e367181af7ea49d9ebfbf</anchor>
      <arglist>(type, attribute)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>_i_component_8h.html</anchorfile>
      <anchor>a04a0de7ad454e55bc56cb36f7e41833e</anchor>
      <arglist>(type, attribute)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>IComponentFactory.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_i_component_factory_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <class kind="class">IComponentFactory</class>
    <class kind="class">GenericComponentFactory</class>
  </compound>
  <compound kind="file">
    <name>Scene.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_scene_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_scene_a_p_i_8h" name="SceneAPI.h" local="yes" imported="no">SceneAPI.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_scene_desc_8h" name="SceneDesc.h" local="yes" imported="no">SceneDesc.h</includes>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_i_attribute_8h" name="IAttribute.h" local="yes" imported="no">IAttribute.h</includes>
    <includes id="_e_c___name_8h" name="EC_Name.h" local="yes" imported="no">EC_Name.h</includes>
    <includes id="_attribute_metadata_8h" name="AttributeMetadata.h" local="yes" imported="no">AttributeMetadata.h</includes>
    <includes id="_change_request_8h" name="ChangeRequest.h" local="yes" imported="no">ChangeRequest.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_frame_a_p_i_8h" name="FrameAPI.h" local="yes" imported="no">FrameAPI.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>Scene.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_scene_8h</filename>
    <includes id="_core_defines_8h" name="CoreDefines.h" local="yes" imported="no">CoreDefines.h</includes>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <includes id="_attribute_change_type_8h" name="AttributeChangeType.h" local="yes" imported="no">AttributeChangeType.h</includes>
    <includes id="_entity_action_8h" name="EntityAction.h" local="yes" imported="no">EntityAction.h</includes>
    <includes id="_scene_desc_8h" name="SceneDesc.h" local="yes" imported="no">SceneDesc.h</includes>
    <includes id="_unique_id_generator_8h" name="UniqueIdGenerator.h" local="yes" imported="no">UniqueIdGenerator.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="_change_request_8h" name="ChangeRequest.h" local="yes" imported="no">ChangeRequest.h</includes>
    <class kind="struct">AttributeInterpolation</class>
    <class kind="class">Scene</class>
  </compound>
  <compound kind="file">
    <name>SceneAPI.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_scene_a_p_i_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_scene_a_p_i_8h" name="SceneAPI.h" local="yes" imported="no">SceneAPI.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_i_component_factory_8h" name="IComponentFactory.h" local="yes" imported="no">IComponentFactory.h</includes>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_i_renderer_8h" name="IRenderer.h" local="yes" imported="no">IRenderer.h</includes>
    <includes id="_asset_reference_8h" name="AssetReference.h" local="yes" imported="no">AssetReference.h</includes>
    <includes id="_entity_reference_8h" name="EntityReference.h" local="yes" imported="no">EntityReference.h</includes>
    <includes id="_scene_interact_8h" name="SceneInteract.h" local="yes" imported="no">SceneInteract.h</includes>
    <includes id="_color_8h" name="Color.h" local="yes" imported="no">Color.h</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Math/Quat.h</includes>
    <includes id="float2_8h" name="float2.h" local="yes" imported="no">Math/float2.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="float4_8h" name="float4.h" local="yes" imported="no">Math/float4.h</includes>
    <includes id="_transform_8h" name="Transform.h" local="yes" imported="no">Transform.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>SceneAPI.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_scene_a_p_i_8h</filename>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_core_string_utils_8h" name="CoreStringUtils.h" local="yes" imported="no">CoreStringUtils.h</includes>
    <class kind="class">SceneAPI</class>
  </compound>
  <compound kind="file">
    <name>SceneDesc.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_scene_desc_8h</filename>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <class kind="struct">SceneDesc</class>
    <class kind="struct">EntityDesc</class>
    <class kind="struct">ComponentDesc</class>
    <class kind="struct">AttributeDesc</class>
    <class kind="struct">AssetDesc</class>
    <member kind="define">
      <type>#define</type>
      <name>LEX_CMP</name>
      <anchorfile>_scene_desc_8h.html</anchorfile>
      <anchor>aede8afa65b64a2e980141a0a6bc2645a</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LEX_CMP</name>
      <anchorfile>_scene_desc_8h.html</anchorfile>
      <anchor>aede8afa65b64a2e980141a0a6bc2645a</anchor>
      <arglist>(a, b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SceneFwd.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_scene_fwd_8h</filename>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Scene &gt;</type>
      <name>ScenePtr</name>
      <anchorfile>_scene_fwd_8h.html</anchorfile>
      <anchor>afb4d94a778b7dfb146de03d1830ed8bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; Scene &gt;</type>
      <name>SceneWeakPtr</name>
      <anchorfile>_scene_fwd_8h.html</anchorfile>
      <anchor>a5bc7d19dd328da065acbc5c43b767779</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; Entity &gt;</type>
      <name>EntityWeakPtr</name>
      <anchorfile>_scene_fwd_8h.html</anchorfile>
      <anchor>ac82d989528b40cfd44a8524511de0a02</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Entity &gt;</type>
      <name>EntityPtr</name>
      <anchorfile>_scene_fwd_8h.html</anchorfile>
      <anchor>ab0e52c981a1bcd04e292959e2e8e1d84</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; EntityPtr &gt;</type>
      <name>EntityList</name>
      <anchorfile>_scene_fwd_8h.html</anchorfile>
      <anchor>a3fcac37d9194f3f3da636338021dca23</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; IComponent &gt;</type>
      <name>ComponentPtr</name>
      <anchorfile>_scene_fwd_8h.html</anchorfile>
      <anchor>a1d333861bc6d24247e302f4536bfae74</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; IComponent &gt;</type>
      <name>ComponentWeakPtr</name>
      <anchorfile>_scene_fwd_8h.html</anchorfile>
      <anchor>a37247382d6bc6aca9103ef4a21f5ee47</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; IComponentFactory &gt;</type>
      <name>ComponentFactoryPtr</name>
      <anchorfile>_scene_fwd_8h.html</anchorfile>
      <anchor>ad33e29ae0a2568801d02c4a7da53d47f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; IAttribute * &gt;</type>
      <name>AttributeVector</name>
      <anchorfile>_scene_fwd_8h.html</anchorfile>
      <anchor>ad516d82c3ced384acb0fd5fa07b8d9bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; QString, ScenePtr &gt;</type>
      <name>SceneMap</name>
      <anchorfile>_scene_fwd_8h.html</anchorfile>
      <anchor>a98f0c46e822c304322528caea594673e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SceneInteract.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_scene_interact_8cpp</filename>
    <includes id="_scene_interact_8h" name="SceneInteract.h" local="yes" imported="no">SceneInteract.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_frame_a_p_i_8h" name="FrameAPI.h" local="yes" imported="no">FrameAPI.h</includes>
    <includes id="_input_a_p_i_8h" name="InputAPI.h" local="yes" imported="no">InputAPI.h</includes>
    <includes id="_i_renderer_8h" name="IRenderer.h" local="yes" imported="no">IRenderer.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
  </compound>
  <compound kind="file">
    <name>SceneInteract.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_scene_interact_8h</filename>
    <includes id="_framework_fwd_8h" name="FrameworkFwd.h" local="yes" imported="no">FrameworkFwd.h</includes>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <includes id="_input_fwd_8h" name="InputFwd.h" local="yes" imported="no">InputFwd.h</includes>
    <class kind="class">SceneInteract</class>
  </compound>
  <compound kind="file">
    <name>UniqueIdGenerator.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Scene/</path>
    <filename>_unique_id_generator_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <class kind="class">UniqueIdGenerator</class>
  </compound>
  <compound kind="file">
    <name>main.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Tundra/</path>
    <filename>main_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_application_8h" name="Application.h" local="yes" imported="no">Application.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <member kind="function">
      <type>int</type>
      <name>run</name>
      <anchorfile>main_8cpp.html</anchorfile>
      <anchor>ac1f545534cdaab9094198a5dc2c2a79f</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>main_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>resource.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Tundra/</path>
    <filename>resource_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>IDI_ICON1</name>
      <anchorfile>resource_8h.html</anchorfile>
      <anchor>a455fef2a9349aae3af8ef8f24f6fc9d8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Client.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_client_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_client_8h" name="Client.h" local="yes" imported="no">Client.h</includes>
    <includes id="_tundra_logic_module_8h" name="TundraLogicModule.h" local="yes" imported="no">TundraLogicModule.h</includes>
    <includes id="_kristalli_protocol_module_8h" name="KristalliProtocolModule.h" local="yes" imported="no">KristalliProtocolModule.h</includes>
    <includes id="_core_string_utils_8h" name="CoreStringUtils.h" local="yes" imported="no">CoreStringUtils.h</includes>
    <includes id="_sync_manager_8h" name="SyncManager.h" local="yes" imported="no">SyncManager.h</includes>
    <includes id="_tundra_messages_8h" name="TundraMessages.h" local="yes" imported="no">TundraMessages.h</includes>
    <includes id="_physics_module_8h" name="PhysicsModule.h" local="yes" imported="no">PhysicsModule.h</includes>
    <includes id="_scene_a_p_i_8h" name="SceneAPI.h" local="yes" imported="no">SceneAPI.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_msg_login_8h" name="MsgLogin.h" local="yes" imported="no">MsgLogin.h</includes>
    <includes id="_msg_login_reply_8h" name="MsgLoginReply.h" local="yes" imported="no">MsgLoginReply.h</includes>
    <includes id="_msg_client_joined_8h" name="MsgClientJoined.h" local="yes" imported="no">MsgClientJoined.h</includes>
    <includes id="_msg_client_left_8h" name="MsgClientLeft.h" local="yes" imported="no">MsgClientLeft.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <namespace>TundraLogic</namespace>
  </compound>
  <compound kind="file">
    <name>Client.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_client_8h</filename>
    <includes id="_core_defines_8h" name="CoreDefines.h" local="yes" imported="no">CoreDefines.h</includes>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_tundra_logic_module_api_8h" name="TundraLogicModuleApi.h" local="yes" imported="no">TundraLogicModuleApi.h</includes>
    <includes id="_user_connected_response_data_8h" name="UserConnectedResponseData.h" local="yes" imported="no">UserConnectedResponseData.h</includes>
    <class kind="class">TundraLogic::Client</class>
    <namespace>kNet</namespace>
    <namespace>KristalliProtocol</namespace>
    <namespace>TundraLogic</namespace>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; UserConnection &gt;</type>
      <name>UserConnectionPtr</name>
      <anchorfile>_client_8h.html</anchorfile>
      <anchor>aa74cdae4ce136186fa0258dfef22e2e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; UserConnectionPtr &gt;</type>
      <name>UserConnectionList</name>
      <anchorfile>_client_8h.html</anchorfile>
      <anchor>afc4f3f2f17492a710d937f2a831c2c24</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>KristalliProtocolModule.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_kristalli_protocol_module_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_kristalli_protocol_module_8h" name="KristalliProtocolModule.h" local="yes" imported="no">KristalliProtocolModule.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_core_string_utils_8h" name="CoreStringUtils.h" local="yes" imported="no">CoreStringUtils.h</includes>
    <includes id="_ui_a_p_i_8h" name="UiAPI.h" local="yes" imported="no">UiAPI.h</includes>
    <includes id="_ui_main_window_8h" name="UiMainWindow.h" local="yes" imported="no">UiMainWindow.h</includes>
    <includes id="_console_a_p_i_8h" name="ConsoleAPI.h" local="yes" imported="no">ConsoleAPI.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_core_exception_8h" name="CoreException.h" local="yes" imported="no">CoreException.h</includes>
    <namespace>KristalliProtocol</namespace>
    <namespace>KristalliProtocol::anonymous_namespace{KristalliProtocolModule.cpp}</namespace>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>cInitialAttempts</name>
      <anchorfile>namespace_kristalli_protocol.html</anchorfile>
      <anchor>af2cc161e3d8ed398b58c7ba76192dd9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>cReconnectAttempts</name>
      <anchorfile>namespace_kristalli_protocol.html</anchorfile>
      <anchor>a85e606b57296a375e14560dd0a088e7b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>KristalliProtocolModule.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_kristalli_protocol_module_8h</filename>
    <includes id="_i_module_8h" name="IModule.h" local="yes" imported="no">IModule.h</includes>
    <includes id="_kristalli_protocol_module_api_8h" name="KristalliProtocolModuleApi.h" local="yes" imported="no">KristalliProtocolModuleApi.h</includes>
    <includes id="_user_connection_8h" name="UserConnection.h" local="yes" imported="no">UserConnection.h</includes>
    <class kind="class">KristalliProtocol::KristalliProtocolModule</class>
    <namespace>KristalliProtocol</namespace>
  </compound>
  <compound kind="file">
    <name>KristalliProtocolModuleApi.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_kristalli_protocol_module_api_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>KRISTALLIPROTOCOL_MODULE_API</name>
      <anchorfile>_kristalli_protocol_module_api_8h.html</anchorfile>
      <anchor>a68a94476f54443f7903f2ff6783337ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MsgAssetDeleted.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_msg_asset_deleted_8h</filename>
    <class kind="struct">MsgAssetDeleted</class>
  </compound>
  <compound kind="file">
    <name>MsgAssetDiscovery.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_msg_asset_discovery_8h</filename>
    <class kind="struct">MsgAssetDiscovery</class>
  </compound>
  <compound kind="file">
    <name>MsgClientJoined.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_msg_client_joined_8h</filename>
    <class kind="struct">MsgClientJoined</class>
  </compound>
  <compound kind="file">
    <name>MsgClientLeft.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_msg_client_left_8h</filename>
    <class kind="struct">MsgClientLeft</class>
  </compound>
  <compound kind="file">
    <name>MsgEntityAction.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_msg_entity_action_8h</filename>
    <class kind="struct">MsgEntityAction</class>
    <class kind="struct">MsgEntityAction::S_parameters</class>
  </compound>
  <compound kind="file">
    <name>MsgLogin.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_msg_login_8h</filename>
    <class kind="struct">MsgLogin</class>
  </compound>
  <compound kind="file">
    <name>MsgLoginReply.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_msg_login_reply_8h</filename>
    <class kind="struct">MsgLoginReply</class>
  </compound>
  <compound kind="file">
    <name>SceneImporter.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_scene_importer_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_scene_importer_8h" name="SceneImporter.h" local="yes" imported="no">SceneImporter.h</includes>
    <includes id="_tundra_logic_module_8h" name="TundraLogicModule.h" local="yes" imported="no">TundraLogicModule.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_scene_desc_8h" name="SceneDesc.h" local="yes" imported="no">SceneDesc.h</includes>
    <includes id="_ogre_material_utils_8h" name="OgreMaterialUtils.h" local="yes" imported="no">OgreMaterialUtils.h</includes>
    <includes id="_core_string_utils_8h" name="CoreStringUtils.h" local="yes" imported="no">CoreStringUtils.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Math/Quat.h</includes>
    <includes id="_e_c___placeable_8h" name="EC_Placeable.h" local="yes" imported="no">EC_Placeable.h</includes>
    <includes id="_e_c___mesh_8h" name="EC_Mesh.h" local="yes" imported="no">EC_Mesh.h</includes>
    <includes id="_e_c___name_8h" name="EC_Name.h" local="yes" imported="no">EC_Name.h</includes>
    <includes id="_renderer_8h" name="Renderer.h" local="yes" imported="no">Renderer.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_scene_a_p_i_8h" name="SceneAPI.h" local="yes" imported="no">SceneAPI.h</includes>
    <includes id="_ogre_rendering_module_8h" name="OgreRenderingModule.h" local="yes" imported="no">OgreRenderingModule.h</includes>
    <includes id="_core_exception_8h" name="CoreException.h" local="yes" imported="no">CoreException.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_disable_memory_leak_check_8h" name="DisableMemoryLeakCheck.h" local="yes" imported="no">DisableMemoryLeakCheck.h</includes>
    <includes id="_enable_memory_leak_check_8h" name="EnableMemoryLeakCheck.h" local="yes" imported="no">EnableMemoryLeakCheck.h</includes>
    <namespace>TundraLogic</namespace>
  </compound>
  <compound kind="file">
    <name>SceneImporter.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_scene_importer_8h</filename>
    <includes id="_tundra_logic_module_api_8h" name="TundraLogicModuleApi.h" local="yes" imported="no">TundraLogicModuleApi.h</includes>
    <includes id="_scene_fwd_8h" name="SceneFwd.h" local="yes" imported="no">SceneFwd.h</includes>
    <includes id="_attribute_change_type_8h" name="AttributeChangeType.h" local="yes" imported="no">AttributeChangeType.h</includes>
    <includes id="float3_8h" name="float3.h" local="yes" imported="no">Math/float3.h</includes>
    <includes id="_quat_8h" name="Quat.h" local="yes" imported="no">Math/Quat.h</includes>
    <class kind="struct">TundraLogic::MaterialInfo</class>
    <class kind="class">TundraLogic::SceneImporter</class>
    <namespace>TundraLogic</namespace>
    <member kind="typedef">
      <type>std::set&lt; MaterialInfo &gt;</type>
      <name>MaterialInfoList</name>
      <anchorfile>namespace_tundra_logic.html</anchorfile>
      <anchor>ab499212ea6b34c84eef904dae841d652</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Server.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_server_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_server_8h" name="Server.h" local="yes" imported="no">Server.h</includes>
    <includes id="_tundra_logic_module_8h" name="TundraLogicModule.h" local="yes" imported="no">TundraLogicModule.h</includes>
    <includes id="_sync_manager_8h" name="SyncManager.h" local="yes" imported="no">SyncManager.h</includes>
    <includes id="_kristalli_protocol_module_8h" name="KristalliProtocolModule.h" local="yes" imported="no">KristalliProtocolModule.h</includes>
    <includes id="_core_string_utils_8h" name="CoreStringUtils.h" local="yes" imported="no">CoreStringUtils.h</includes>
    <includes id="_tundra_messages_8h" name="TundraMessages.h" local="yes" imported="no">TundraMessages.h</includes>
    <includes id="_physics_module_8h" name="PhysicsModule.h" local="yes" imported="no">PhysicsModule.h</includes>
    <includes id="_physics_world_8h" name="PhysicsWorld.h" local="yes" imported="no">PhysicsWorld.h</includes>
    <includes id="_scene_a_p_i_8h" name="SceneAPI.h" local="yes" imported="no">SceneAPI.h</includes>
    <includes id="_config_a_p_i_8h" name="ConfigAPI.h" local="yes" imported="no">ConfigAPI.h</includes>
    <includes id="_msg_login_8h" name="MsgLogin.h" local="yes" imported="no">MsgLogin.h</includes>
    <includes id="_msg_login_reply_8h" name="MsgLoginReply.h" local="yes" imported="no">MsgLoginReply.h</includes>
    <includes id="_msg_client_joined_8h" name="MsgClientJoined.h" local="yes" imported="no">MsgClientJoined.h</includes>
    <includes id="_msg_client_left_8h" name="MsgClientLeft.h" local="yes" imported="no">MsgClientLeft.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <namespace>TundraLogic</namespace>
    <member kind="function">
      <type></type>
      <name>Q_DECLARE_METATYPE</name>
      <anchorfile>_server_8cpp.html</anchorfile>
      <anchor>ad58988f336d34c5536b7a5773be13a61</anchor>
      <arglist>(UserConnection *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Q_DECLARE_METATYPE</name>
      <anchorfile>_server_8cpp.html</anchorfile>
      <anchor>a90dc0b9c3506d2f9a581a11d507f9e57</anchor>
      <arglist>(UserConnectedResponseData *)</arglist>
    </member>
    <member kind="function">
      <type>QScriptValue</type>
      <name>qScriptValueFromQObject</name>
      <anchorfile>_server_8cpp.html</anchorfile>
      <anchor>a4252a8cd4827f8f440ef0b60dc8b2c43</anchor>
      <arglist>(QScriptEngine *engine, Tp const &amp;qobject)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>qScriptValueToQObject</name>
      <anchorfile>_server_8cpp.html</anchorfile>
      <anchor>a598a2c5b5f8b3a3b9f7e94758a1fee3a</anchor>
      <arglist>(const QScriptValue &amp;value, Tp &amp;qobject)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>qScriptRegisterQObjectMetaType</name>
      <anchorfile>_server_8cpp.html</anchorfile>
      <anchor>a9d759f8cf936621ebb1cd1bc028e0f65</anchor>
      <arglist>(QScriptEngine *engine, const QScriptValue &amp;prototype=QScriptValue(), Tp *=0)</arglist>
    </member>
    <member kind="function">
      <type>QScriptValue</type>
      <name>qScriptValueFromNull</name>
      <anchorfile>namespace_tundra_logic.html</anchorfile>
      <anchor>abeb81c08b3aa28bedc92a400f2c637bd</anchor>
      <arglist>(QScriptEngine *engine, const T &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>qScriptValueToNull</name>
      <anchorfile>namespace_tundra_logic.html</anchorfile>
      <anchor>a48f9d392204d85e6ceab71aa513b121a</anchor>
      <arglist>(const QScriptValue &amp;value, T &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Server.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_server_8h</filename>
    <includes id="_core_defines_8h" name="CoreDefines.h" local="yes" imported="no">CoreDefines.h</includes>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <includes id="_tundra_logic_module_api_8h" name="TundraLogicModuleApi.h" local="yes" imported="no">TundraLogicModuleApi.h</includes>
    <includes id="_user_connected_response_data_8h" name="UserConnectedResponseData.h" local="yes" imported="no">UserConnectedResponseData.h</includes>
    <class kind="class">TundraLogic::Server</class>
    <namespace>KristalliProtocol</namespace>
    <namespace>TundraLogic</namespace>
    <member kind="typedef">
      <type>unsigned long</type>
      <name>message_id_t</name>
      <anchorfile>_server_8h.html</anchorfile>
      <anchor>ab18d18318a273989638490c37556a276</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; UserConnection &gt;</type>
      <name>UserConnectionPtr</name>
      <anchorfile>_server_8h.html</anchorfile>
      <anchor>aa74cdae4ce136186fa0258dfef22e2e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; UserConnectionPtr &gt;</type>
      <name>UserConnectionList</name>
      <anchorfile>_server_8h.html</anchorfile>
      <anchor>afc4f3f2f17492a710d937f2a831c2c24</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SyncManager.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_sync_manager_8cpp</filename>
    <includes id="_core_string_utils_8h" name="CoreStringUtils.h" local="yes" imported="no">CoreStringUtils.h</includes>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_kristalli_protocol_module_8h" name="KristalliProtocolModule.h" local="yes" imported="no">KristalliProtocolModule.h</includes>
    <includes id="_sync_manager_8h" name="SyncManager.h" local="yes" imported="no">SyncManager.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_tundra_logic_module_8h" name="TundraLogicModule.h" local="yes" imported="no">TundraLogicModule.h</includes>
    <includes id="_client_8h" name="Client.h" local="yes" imported="no">Client.h</includes>
    <includes id="_server_8h" name="Server.h" local="yes" imported="no">Server.h</includes>
    <includes id="_tundra_messages_8h" name="TundraMessages.h" local="yes" imported="no">TundraMessages.h</includes>
    <includes id="_msg_entity_action_8h" name="MsgEntityAction.h" local="yes" imported="no">MsgEntityAction.h</includes>
    <includes id="_e_c___dynamic_component_8h" name="EC_DynamicComponent.h" local="yes" imported="no">EC_DynamicComponent.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_i_asset_storage_8h" name="IAssetStorage.h" local="yes" imported="no">IAssetStorage.h</includes>
    <includes id="_attribute_metadata_8h" name="AttributeMetadata.h" local="yes" imported="no">AttributeMetadata.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_scene_a_p_i_8h" name="SceneAPI.h" local="yes" imported="no">SceneAPI.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <namespace>TundraLogic</namespace>
    <member kind="variable">
      <type>kNet::MessageConnection *</type>
      <name>currentSender</name>
      <anchorfile>_sync_manager_8cpp.html</anchorfile>
      <anchor>ac8184f03f1363e66ebb0ac0ff214e1b7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SyncManager.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_sync_manager_8h</filename>
    <includes id="_i_component_8h" name="IComponent.h" local="yes" imported="no">IComponent.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_sync_state_8h" name="SyncState.h" local="yes" imported="no">SyncState.h</includes>
    <class kind="struct">TundraLogic::RemovedComponent</class>
    <class kind="class">TundraLogic::SyncManager</class>
    <namespace>kNet</namespace>
    <namespace>TundraLogic</namespace>
  </compound>
  <compound kind="file">
    <name>SyncState.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_sync_state_8h</filename>
    <includes id="_core_types_8h" name="CoreTypes.h" local="yes" imported="no">CoreTypes.h</includes>
    <class kind="struct">ComponentSyncState</class>
    <class kind="struct">EntitySyncState</class>
    <class kind="struct">SceneSyncState</class>
  </compound>
  <compound kind="file">
    <name>TundraLogicModule.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_tundra_logic_module_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_tundra_logic_module_8h" name="TundraLogicModule.h" local="yes" imported="no">TundraLogicModule.h</includes>
    <includes id="_client_8h" name="Client.h" local="yes" imported="no">Client.h</includes>
    <includes id="_server_8h" name="Server.h" local="yes" imported="no">Server.h</includes>
    <includes id="_scene_importer_8h" name="SceneImporter.h" local="yes" imported="no">SceneImporter.h</includes>
    <includes id="_sync_manager_8h" name="SyncManager.h" local="yes" imported="no">SyncManager.h</includes>
    <includes id="_physics_module_8h" name="PhysicsModule.h" local="yes" imported="no">PhysicsModule.h</includes>
    <includes id="_physics_world_8h" name="PhysicsWorld.h" local="yes" imported="no">PhysicsWorld.h</includes>
    <includes id="_profiler_8h" name="Profiler.h" local="yes" imported="no">Profiler.h</includes>
    <includes id="_scene_a_p_i_8h" name="SceneAPI.h" local="yes" imported="no">SceneAPI.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_i_asset_transfer_8h" name="IAssetTransfer.h" local="yes" imported="no">IAssetTransfer.h</includes>
    <includes id="_i_asset_8h" name="IAsset.h" local="yes" imported="no">IAsset.h</includes>
    <includes id="_config_a_p_i_8h" name="ConfigAPI.h" local="yes" imported="no">ConfigAPI.h</includes>
    <includes id="_i_component_factory_8h" name="IComponentFactory.h" local="yes" imported="no">IComponentFactory.h</includes>
    <includes id="_scene_8h" name="Scene.h" local="yes" imported="no">Scene.h</includes>
    <includes id="_application_8h" name="Application.h" local="yes" imported="no">Application.h</includes>
    <includes id="_kristalli_protocol_module_8h" name="KristalliProtocolModule.h" local="yes" imported="no">KristalliProtocolModule.h</includes>
    <includes id="_core_string_utils_8h" name="CoreStringUtils.h" local="yes" imported="no">CoreStringUtils.h</includes>
    <includes id="_console_a_p_i_8h" name="ConsoleAPI.h" local="yes" imported="no">ConsoleAPI.h</includes>
    <includes id="_generic_asset_factory_8h" name="GenericAssetFactory.h" local="yes" imported="no">GenericAssetFactory.h</includes>
    <includes id="_core_exception_8h" name="CoreException.h" local="yes" imported="no">CoreException.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <includes id="_e_c___name_8h" name="EC_Name.h" local="yes" imported="no">EC_Name.h</includes>
    <includes id="_e_c___dynamic_component_8h" name="EC_DynamicComponent.h" local="yes" imported="no">EC_DynamicComponent.h</includes>
    <includes id="_e_c___input_mapper_8h" name="EC_InputMapper.h" local="yes" imported="no">EC_InputMapper.h</includes>
    <includes id="_e_c___camera_8h" name="EC_Camera.h" local="yes" imported="no">EC_Camera.h</includes>
    <includes id="_e_c___placeable_8h" name="EC_Placeable.h" local="yes" imported="no">EC_Placeable.h</includes>
    <includes id="_e_c___animation_controller_8h" name="EC_AnimationController.h" local="yes" imported="no">EC_AnimationController.h</includes>
    <includes id="_e_c___mesh_8h" name="EC_Mesh.h" local="yes" imported="no">EC_Mesh.h</includes>
    <includes id="_e_c___ogre_custom_object_8h" name="EC_OgreCustomObject.h" local="yes" imported="no">EC_OgreCustomObject.h</includes>
    <namespace>TundraLogic</namespace>
    <member kind="function">
      <type>DLLEXPORT void</type>
      <name>TundraPluginMain</name>
      <anchorfile>_tundra_logic_module_8cpp.html</anchorfile>
      <anchor>a5e5a5f8cd7055f51e852059f9ec87e99</anchor>
      <arglist>(Framework *fw)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned short</type>
      <name>cDefaultPort</name>
      <anchorfile>namespace_tundra_logic.html</anchorfile>
      <anchor>acad726ae993708ff9280fbd2987e6334</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TundraLogicModule.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_tundra_logic_module_8h</filename>
    <includes id="_i_module_8h" name="IModule.h" local="yes" imported="no">IModule.h</includes>
    <includes id="_tundra_logic_module_api_8h" name="TundraLogicModuleApi.h" local="yes" imported="no">TundraLogicModuleApi.h</includes>
    <includes id="_asset_fwd_8h" name="AssetFwd.h" local="yes" imported="no">AssetFwd.h</includes>
    <class kind="class">TundraLogic::TundraLogicModule</class>
    <namespace>kNet</namespace>
    <namespace>KristalliProtocol</namespace>
    <namespace>TundraLogic</namespace>
  </compound>
  <compound kind="file">
    <name>TundraLogicModuleApi.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_tundra_logic_module_api_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>TUNDRALOGIC_MODULE_API</name>
      <anchorfile>_tundra_logic_module_api_8h.html</anchorfile>
      <anchor>ab21c9d482a36d656c703a8dc6c81f080</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TundraMessages.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_tundra_messages_8h</filename>
    <member kind="variable">
      <type>const unsigned long</type>
      <name>cLoginMessage</name>
      <anchorfile>_tundra_messages_8h.html</anchorfile>
      <anchor>a9f4f494477f61bfc217f14f08a1a8844</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned long</type>
      <name>cLoginReplyMessage</name>
      <anchorfile>_tundra_messages_8h.html</anchorfile>
      <anchor>a9a8ef79f2c9e11d240441747df676957</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned long</type>
      <name>cClientJoinedMessage</name>
      <anchorfile>_tundra_messages_8h.html</anchorfile>
      <anchor>a40d7da0eb19d0fe54d1febc1a0ab0785</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned long</type>
      <name>cClientLeftMessage</name>
      <anchorfile>_tundra_messages_8h.html</anchorfile>
      <anchor>afb0d2aa5b87cf8eefc9ab52f475a8809</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned long</type>
      <name>cCreateEntityMessage</name>
      <anchorfile>_tundra_messages_8h.html</anchorfile>
      <anchor>ab6f3692d4f2d1bde8ede898f4909f59a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned long</type>
      <name>cCreateComponentsMessage</name>
      <anchorfile>_tundra_messages_8h.html</anchorfile>
      <anchor>a8c0ac568f173066053d9d54df96d7a9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned long</type>
      <name>cCreateAttributesMessage</name>
      <anchorfile>_tundra_messages_8h.html</anchorfile>
      <anchor>a437917a23714a3464af894a7182306be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned long</type>
      <name>cEditAttributesMessage</name>
      <anchorfile>_tundra_messages_8h.html</anchorfile>
      <anchor>a07b441a819b02a70b1c686d3f53ef8ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned long</type>
      <name>cRemoveAttributesMessage</name>
      <anchorfile>_tundra_messages_8h.html</anchorfile>
      <anchor>a1ab4cc38e61d7424347eadb74a899669</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned long</type>
      <name>cRemoveComponentsMessage</name>
      <anchorfile>_tundra_messages_8h.html</anchorfile>
      <anchor>ac29e23817392d53c4f1552ed6fedec26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned long</type>
      <name>cRemoveEntityMessage</name>
      <anchorfile>_tundra_messages_8h.html</anchorfile>
      <anchor>a6b45ef6562fc68d637f5ea8f484d9271</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned long</type>
      <name>cCreateEntityReplyMessage</name>
      <anchorfile>_tundra_messages_8h.html</anchorfile>
      <anchor>a2b927d86ce6b47a2ab040cb0fcc9c37f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned long</type>
      <name>cCreateComponentsReplyMessage</name>
      <anchorfile>_tundra_messages_8h.html</anchorfile>
      <anchor>a0912de54bfd64e575852855aa67a361c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned long</type>
      <name>cEntityActionMessage</name>
      <anchorfile>_tundra_messages_8h.html</anchorfile>
      <anchor>ad96b547c0aba71be9e5b6379055be402</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned long</type>
      <name>cAssetDiscoveryMessage</name>
      <anchorfile>_tundra_messages_8h.html</anchorfile>
      <anchor>a4392e6b49e30635208b2413e3909dfdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned long</type>
      <name>cAssetDeletedMessage</name>
      <anchorfile>_tundra_messages_8h.html</anchorfile>
      <anchor>a0fe359cea8a6472c8c96eebef4f2461f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UserConnectedResponseData.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_user_connected_response_data_8h</filename>
    <class kind="struct">UserConnectedResponseData</class>
  </compound>
  <compound kind="file">
    <name>UserConnection.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_user_connection_8cpp</filename>
    <includes id="_user_connection_8h" name="UserConnection.h" local="yes" imported="no">UserConnection.h</includes>
    <includes id="_entity_8h" name="Entity.h" local="yes" imported="no">Entity.h</includes>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
  </compound>
  <compound kind="file">
    <name>UserConnection.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/TundraProtocolModule/</path>
    <filename>_user_connection_8h</filename>
    <includes id="_kristalli_protocol_module_api_8h" name="KristalliProtocolModuleApi.h" local="yes" imported="no">KristalliProtocolModuleApi.h</includes>
    <class kind="class">UserConnection</class>
    <namespace>kNet</namespace>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; UserConnection &gt;</type>
      <name>UserConnectionPtr</name>
      <anchorfile>_user_connection_8h.html</anchorfile>
      <anchor>aa74cdae4ce136186fa0258dfef22e2e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; UserConnection &gt;</type>
      <name>UserConnectionWeakPtr</name>
      <anchorfile>_user_connection_8h.html</anchorfile>
      <anchor>adf30d9a78b2f04cf0d1f8120b68cb61f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; UserConnectionPtr &gt;</type>
      <name>UserConnectionList</name>
      <anchorfile>_user_connection_8h.html</anchorfile>
      <anchor>afc4f3f2f17492a710d937f2a831c2c24</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>QtUiAsset.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Ui/</path>
    <filename>_qt_ui_asset_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_qt_ui_asset_8h" name="QtUiAsset.h" local="yes" imported="no">QtUiAsset.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_ui_a_p_i_8h" name="UiAPI.h" local="yes" imported="no">UiAPI.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_ui_proxy_widget_8h" name="UiProxyWidget.h" local="yes" imported="no">UiProxyWidget.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>QtUiAsset.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Ui/</path>
    <filename>_qt_ui_asset_8h</filename>
    <includes id="_asset_fwd_8h" name="AssetFwd.h" local="yes" imported="no">AssetFwd.h</includes>
    <includes id="_i_asset_8h" name="IAsset.h" local="yes" imported="no">IAsset.h</includes>
    <includes id="_asset_reference_8h" name="AssetReference.h" local="yes" imported="no">AssetReference.h</includes>
    <class kind="class">QtUiAsset</class>
    <class kind="struct">QtUiAsset::AssetRef</class>
  </compound>
  <compound kind="file">
    <name>RedirectedPaintWidget.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Ui/</path>
    <filename>_redirected_paint_widget_8h</filename>
    <class kind="class">RedirectedPaintWidget</class>
  </compound>
  <compound kind="file">
    <name>UiAPI.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Ui/</path>
    <filename>_ui_a_p_i_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_ui_a_p_i_8h" name="UiAPI.h" local="yes" imported="no">UiAPI.h</includes>
    <includes id="_ui_main_window_8h" name="UiMainWindow.h" local="yes" imported="no">UiMainWindow.h</includes>
    <includes id="_ui_graphics_view_8h" name="UiGraphicsView.h" local="yes" imported="no">UiGraphicsView.h</includes>
    <includes id="_qt_ui_asset_8h" name="QtUiAsset.h" local="yes" imported="no">QtUiAsset.h</includes>
    <includes id="_ui_proxy_widget_8h" name="UiProxyWidget.h" local="yes" imported="no">UiProxyWidget.h</includes>
    <includes id="_application_8h" name="Application.h" local="yes" imported="no">Application.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_asset_a_p_i_8h" name="AssetAPI.h" local="yes" imported="no">AssetAPI.h</includes>
    <includes id="_generic_asset_factory_8h" name="GenericAssetFactory.h" local="yes" imported="no">GenericAssetFactory.h</includes>
    <includes id="_null_asset_factory_8h" name="NullAssetFactory.h" local="yes" imported="no">NullAssetFactory.h</includes>
    <includes id="_logging_functions_8h" name="LoggingFunctions.h" local="yes" imported="no">LoggingFunctions.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
    <class kind="class">SuppressedPaintWidget</class>
  </compound>
  <compound kind="file">
    <name>UiAPI.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Ui/</path>
    <filename>_ui_a_p_i_8h</filename>
    <includes id="_ui_fwd_8h" name="UiFwd.h" local="yes" imported="no">UiFwd.h</includes>
    <includes id="_ui_api_export_8h" name="UiApiExport.h" local="yes" imported="no">UiApiExport.h</includes>
    <class kind="class">UiAPI</class>
  </compound>
  <compound kind="file">
    <name>UiApiExport.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Ui/</path>
    <filename>_ui_api_export_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>UI_API</name>
      <anchorfile>_ui_api_export_8h.html</anchorfile>
      <anchor>a361475d108979212e1cdef3eec471d34</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UiFwd.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Ui/</path>
    <filename>_ui_fwd_8h</filename>
  </compound>
  <compound kind="file">
    <name>UiGraphicsView.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Ui/</path>
    <filename>_ui_graphics_view_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_ui_graphics_view_8h" name="UiGraphicsView.h" local="yes" imported="no">UiGraphicsView.h</includes>
    <includes id="_core_exception_8h" name="CoreException.h" local="yes" imported="no">CoreException.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>UiGraphicsView.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Ui/</path>
    <filename>_ui_graphics_view_8h</filename>
    <includes id="_ui_fwd_8h" name="UiFwd.h" local="yes" imported="no">UiFwd.h</includes>
    <includes id="_ui_api_export_8h" name="UiApiExport.h" local="yes" imported="no">UiApiExport.h</includes>
    <class kind="class">UiGraphicsView</class>
  </compound>
  <compound kind="file">
    <name>UiMainWindow.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Ui/</path>
    <filename>_ui_main_window_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_ui_main_window_8h" name="UiMainWindow.h" local="yes" imported="no">UiMainWindow.h</includes>
    <includes id="_framework_8h" name="Framework.h" local="yes" imported="no">Framework.h</includes>
    <includes id="_version_info_8h" name="VersionInfo.h" local="yes" imported="no">VersionInfo.h</includes>
    <includes id="_config_a_p_i_8h" name="ConfigAPI.h" local="yes" imported="no">ConfigAPI.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>UiMainWindow.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Ui/</path>
    <filename>_ui_main_window_8h</filename>
    <includes id="_ui_fwd_8h" name="UiFwd.h" local="yes" imported="no">UiFwd.h</includes>
    <includes id="_ui_api_export_8h" name="UiApiExport.h" local="yes" imported="no">UiApiExport.h</includes>
    <class kind="class">UiMainWindow</class>
  </compound>
  <compound kind="file">
    <name>UiProxyWidget.cpp</name>
    <path>E:/Projects/TundraLCNew/src/Core/Ui/</path>
    <filename>_ui_proxy_widget_8cpp</filename>
    <includes id="_debug_operator_new_8h" name="DebugOperatorNew.h" local="yes" imported="no">DebugOperatorNew.h</includes>
    <includes id="_ui_proxy_widget_8h" name="UiProxyWidget.h" local="yes" imported="no">UiProxyWidget.h</includes>
    <includes id="_memory_leak_check_8h" name="MemoryLeakCheck.h" local="yes" imported="no">MemoryLeakCheck.h</includes>
  </compound>
  <compound kind="file">
    <name>UiProxyWidget.h</name>
    <path>E:/Projects/TundraLCNew/src/Core/Ui/</path>
    <filename>_ui_proxy_widget_8h</filename>
    <class kind="class">UiProxyWidget</class>
  </compound>
  <compound kind="page">
    <name>SettingUpWebdav</name>
    <title>Setting up an http asset storage with WebDAV</title>
    <filename>_setting_up_webdav</filename>
  </compound>
  <compound kind="page">
    <name>DebugConsole</name>
    <title>Debug console</title>
    <filename>_debug_console</filename>
  </compound>
  <compound kind="page">
    <name>ec_editormodule</name>
    <title>EC_EditorModule</title>
    <filename>ec_editormodule</filename>
    <docanchor file="ec_editormodule">Class</docanchor>
    <docanchor file="ec_editormodule">How</docanchor>
  </compound>
  <compound kind="page">
    <name>FrameAPI</name>
    <title>The Frame API</title>
    <filename>_frame_a_p_i</filename>
    <docanchor file="_frame_a_p_i">FrameAPI_Cont</docanchor>
  </compound>
  <compound kind="page">
    <name>OgreRenderingModule</name>
    <title>Using the Ogre renderer module</title>
    <filename>_ogre_rendering_module</filename>
    <docanchor file="_ogre_rendering_module">windowresized_ORM</docanchor>
    <docanchor file="_ogre_rendering_module">ogreec_ORM</docanchor>
    <docanchor file="_ogre_rendering_module">ogrespecific_ORM</docanchor>
    <docanchor file="_ogre_rendering_module">postrender_ORM</docanchor>
    <docanchor file="_ogre_rendering_module">renderservice_ORM</docanchor>
    <docanchor file="_ogre_rendering_module">windowclosed_ORM</docanchor>
    <docanchor file="_ogre_rendering_module">rendererevents_ORM</docanchor>
    <docanchor file="_ogre_rendering_module">ogreresources_ORM</docanchor>
  </compound>
  <compound kind="page">
    <name>QmlScenePage</name>
    <title>Accessing the scene from Qml</title>
    <filename>_qml_scene_page</filename>
  </compound>
  <compound kind="page">
    <name>SceneModelPage</name>
    <title>Scenes, entities and components.</title>
    <filename>_scene_model_page</filename>
    <docanchor file="_scene_model_page">scene_sec</docanchor>
    <docanchor file="_scene_model_page">usage_scene_sec</docanchor>
    <docanchor file="_scene_model_page">entity_scene_sec</docanchor>
    <docanchor file="_scene_model_page">component_scene_sec</docanchor>
  </compound>
  <compound kind="group">
    <name>ECEditorModuleClient</name>
    <title>ECEditorModule Client interface.</title>
    <filename>group___e_c_editor_module_client.html</filename>
    <class kind="class">ECAttributeEditorBase</class>
    <class kind="class">ECBrowser</class>
    <class kind="class">ECComponentEditor</class>
    <class kind="class">EntityListWidgetItem</class>
    <class kind="class">ECEditorWindow</class>
    <class kind="class">EcXmlEditorWidget</class>
    <class kind="class">MultiEditPropertyFactory</class>
    <class kind="class">MultiEditPropertyManager</class>
  </compound>
  <compound kind="group">
    <name>OgreRenderingModuleClient</name>
    <title>OgreRenderingModule Client Interface</title>
    <filename>group___ogre_rendering_module_client.html</filename>
    <class kind="class">EC_Camera</class>
    <class kind="class">EC_OgreCustomObject</class>
    <class kind="class">EC_SelectionBox</class>
    <class kind="class">OgreSkeletonAsset</class>
    <class kind="class">OgreRenderer::Renderer</class>
  </compound>
  <compound kind="class">
    <name>AABB</name>
    <filename>class_a_a_b_b.html</filename>
    <member kind="function">
      <type></type>
      <name>AABB</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a5f5baf6c533905aa1456b3a3eb57bab2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AABB</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a63c8b9b5d0bd60b789ea272d0acab3c4</anchor>
      <arglist>(const float3 &amp;minPoint, const float3 &amp;maxPoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AABB</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a0a4859ebfc8d67f3464da0857a9f0e20</anchor>
      <arglist>(const OBB &amp;obb)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AABB</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a822c45c0623344bd53c088ec332f5597</anchor>
      <arglist>(const Sphere &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>MinX</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a7d923d072b97bf634a01ea63d345f688</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>MinY</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>ae6ea87979fc4ae9248893506b372abca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>MinZ</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>aab22b19c7ee22894bb818943b9d779f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>MaxX</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>aba87b55c458b9e8773c757b479af6bfd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>MaxY</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a04d17d44e25f0eac1a8ace9dd9413814</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>MaxZ</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a369adc89a763ad95c4b79f514aed2295</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNegativeInfinity</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a0d4bfded40c554173695f7664831ac71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCenter</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>af0b81a44931e9f9d0ec6eaa39322f2bc</anchor>
      <arglist>(const float3 &amp;center, const float3 &amp;halfSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFrom</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>ac8e2ad915ddca7f43e7a3d8873f6a8f2</anchor>
      <arglist>(const OBB &amp;obb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFrom</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a416d3f5d258a28685c3f517ebc704a7d</anchor>
      <arglist>(const Sphere &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFrom</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a82b6afb1df146dbe770661d213dd7db0</anchor>
      <arglist>(const float3 *pointArray, int numPoints)</arglist>
    </member>
    <member kind="function">
      <type>OBB</type>
      <name>ToOBB</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>ab99b6fbd3d5a298930db55ba4f9ce67b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Sphere</type>
      <name>MinimalEnclosingSphere</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a836432081d347c3c255e7004d478741d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Sphere</type>
      <name>MaximalContainedSphere</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a8c4e6a1778d9c374f53b392de01ea46d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFinite</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>ab588d203ea38c0d3986aa80dfa5a4c0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDegenerate</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a0649e3b4b6c2990f35e9f42ae18df576</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>CenterPoint</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a6b37f3c7c8ba8d777584b721529959b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>PointInside</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a09f897e0f254db385ec696b0cdf040da</anchor>
      <arglist>(float x, float y, float z) const </arglist>
    </member>
    <member kind="function">
      <type>LineSegment</type>
      <name>Edge</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>afd7c921ad2ac2d4d3b6410994f7168b3</anchor>
      <arglist>(int edgeIndex) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>CornerPoint</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>aeb955228e07312fa1a876c0be3daea4d</anchor>
      <arglist>(int cornerIndex) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>PointOnEdge</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a50f0f1f5c3073e2a940b1f9d10d37c5a</anchor>
      <arglist>(int edgeIndex, float u) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>FaceCenterPoint</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>ae9ca5c23293393fd44cf4e778c850819</anchor>
      <arglist>(int faceIndex) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>FacePoint</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a6e43bed4196255e23593ac65d2dab531</anchor>
      <arglist>(int faceIndex, float u, float v) const </arglist>
    </member>
    <member kind="function">
      <type>Plane</type>
      <name>FacePlane</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a5ce5fd2eb134c88acf803e7a16da888e</anchor>
      <arglist>(int faceIndex) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetCornerPoints</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>abaf0f74eb1ff91301437c37e831d525d</anchor>
      <arglist>(float3 *outPointArray) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetFacePlanes</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>ab2ac1f16fe9b1fc630af3d4931638cce</anchor>
      <arglist>(Plane *outPlaneArray) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Size</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>ab52b349f4a9d38a6cb32fc396126a018</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>HalfSize</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>ac73011c769237dd79798e5f6bcc173ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Diagonal</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a5e7033a3b2af54717692a7938e4b18a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>HalfDiagonal</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a574924031bb7ad64f0ea9c8add3d4501</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Volume</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a97dc5d286137d3ecdf9e49d63b0f37ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>SurfaceArea</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a05b50f66773a9bbe18e0cb897954c7ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>RandomPointInside</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>ad9671ea9bf91af08bf30e11502e8363f</anchor>
      <arglist>(LCG &amp;rng) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>RandomPointOnSurface</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a8383759d666ca9bae1c801fc3d2e9268</anchor>
      <arglist>(LCG &amp;rng) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>RandomPointOnEdge</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a29df86839092c0181bdeb2d2940d6ab4</anchor>
      <arglist>(LCG &amp;rng) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>RandomCornerPoint</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a2f1f064b726e44ace99acf8b959bc0a9</anchor>
      <arglist>(LCG &amp;rng) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Translate</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a375a0f03ed5bc788fc848e4ceff184d2</anchor>
      <arglist>(const float3 &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Scale</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>aa88ebc691d4abd1e4d0399649c606b1a</anchor>
      <arglist>(const float3 &amp;centerPoint, float scaleFactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Scale</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>ab7f835a70c96d4f650764ebbad3b0abb</anchor>
      <arglist>(const float3 &amp;centerPoint, const float3 &amp;scaleFactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TransformAsAABB</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a4c2c0dbfc63789e60c173ab9e905c201</anchor>
      <arglist>(const float3x3 &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TransformAsAABB</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>aefe37c93264e135bbd5a146a6507f382</anchor>
      <arglist>(const float3x4 &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TransformAsAABB</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>ad10eda61151359769fb5c4f497fdf147</anchor>
      <arglist>(const float4x4 &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TransformAsAABB</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a69521cc4d0050dd89ae05c822fc4e6ae</anchor>
      <arglist>(const Quat &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>OBB</type>
      <name>Transform</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a91df81faa5320fb15262572a0a0b1df6</anchor>
      <arglist>(const float3x3 &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>OBB</type>
      <name>Transform</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a7d16b3a56a92e51cb818249c242e7d3b</anchor>
      <arglist>(const float3x4 &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>OBB</type>
      <name>Transform</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>af1feb1211f7183d5546365d879b71063</anchor>
      <arglist>(const float4x4 &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>OBB</type>
      <name>Transform</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>abc72bac50d0ee509986b4e33316b5a3f</anchor>
      <arglist>(const Quat &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ClosestPoint</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>ad46023c503f947dc30c27bbf9882e69b</anchor>
      <arglist>(const float3 &amp;targetPoint) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>af5e9b69e98f94863a16264f585cd5fa9</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Contains</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a3499e195b83eb40e56d69d2b5dab3135</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Contains</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>ab360bbb49893116a86c36fd94e3d6e3c</anchor>
      <arglist>(const LineSegment &amp;lineSegment) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Contains</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a24349e56215dda7faca9cd92a218461b</anchor>
      <arglist>(const AABB &amp;aabb) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>adb29d6d2f0f8ce9262a98732d19712e9</anchor>
      <arglist>(const Ray &amp;ray, float *dNear, float *dFar) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a51dde03e6ec70b07ef685cfdd8fd9e45</anchor>
      <arglist>(const Line &amp;line, float *dNear, float *dFar) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>ab9d8bf21b0c527851538513069cece55</anchor>
      <arglist>(const LineSegment &amp;lineSegment, float *dNear, float *dFar) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a35c00e874eb5836bdf836c6a4bffd928</anchor>
      <arglist>(const Plane &amp;plane) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a6c420ade812932be95a03b73802ef101</anchor>
      <arglist>(const OBB &amp;obb) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a20f1f8c5ba050b35fdd09e55eacff42f</anchor>
      <arglist>(const Sphere &amp;sphere, float3 *closestPointOnAABB) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a7059bff5e82514236f08b7c73d55e61a</anchor>
      <arglist>(const Triangle &amp;triangle) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProjectToAxis</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>aed74616b30c876ab69af71a5a8a82e25</anchor>
      <arglist>(const float3 &amp;axis, float &amp;dMin, float &amp;dMax) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Enclose</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a86c31c44947f6d1ed68c3c6520723b10</anchor>
      <arglist>(const float3 &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Enclose</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a9b11ae811796ceaf647bd0a77933c8a1</anchor>
      <arglist>(const LineSegment &amp;lineSegment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Enclose</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a7db432ac9ce79c07c5b32ae5a0da759d</anchor>
      <arglist>(const AABB &amp;aabb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Enclose</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>aa5324bee7e088b9accbbb0e930ed42e9</anchor>
      <arglist>(const OBB &amp;obb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Enclose</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a6bb0b46bd9e94b9f7c68c94a08cc99c1</anchor>
      <arglist>(const Sphere &amp;sphere)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Enclose</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a24a7e3dd754abeb47143e821c94d3742</anchor>
      <arglist>(const float3 *pointArray, int numPoints)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator QString</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a9668c777c12a2496e0ba42f2c8f11bda</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>toString</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a65eacaf8dc9f4385fee17eb8d5169a54</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AABB</type>
      <name>Intersection</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>acc6a1e39214efd3c478f6c1749a03205</anchor>
      <arglist>(const AABB &amp;aabb) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static AABB</type>
      <name>MinimalEnclosingAABB</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>af9fb7abc87d68fd52c586d10c894af28</anchor>
      <arglist>(const float3 *pointArray, int numPoints)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ExtremePointsAlongAABB</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a8cb707ff5df76dbdb64137a511c1f45f</anchor>
      <arglist>(const float3 *pointArray, int numPoints, int &amp;minx, int &amp;maxx, int &amp;miny, int &amp;maxy, int &amp;minz, int &amp;maxz)</arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>minPoint</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>a985df52d816938465cdb389631d0931a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>maxPoint</name>
      <anchorfile>class_a_a_b_b.html</anchorfile>
      <anchor>ae5bc483ab64d371554322a5a6e50da6f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AddComponentDialog</name>
    <filename>class_add_component_dialog.html</filename>
    <member kind="slot">
      <type>QString</type>
      <name>GetTypeName</name>
      <anchorfile>class_add_component_dialog.html</anchorfile>
      <anchor>aa03ef6c7f12b09bf96ab9fe12d26025d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>GetName</name>
      <anchorfile>class_add_component_dialog.html</anchorfile>
      <anchor>ac564a74e08ce4229fa0175f0e93d797f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>GetSynchronization</name>
      <anchorfile>class_add_component_dialog.html</anchorfile>
      <anchor>a03f45ac133509d0dbc1d64da64e7d841</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>GetTemporary</name>
      <anchorfile>class_add_component_dialog.html</anchorfile>
      <anchor>acc3ba6a9e0a399215a7e045df9bf4e86</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QList&lt; entity_id_t &gt;</type>
      <name>GetEntityIds</name>
      <anchorfile>class_add_component_dialog.html</anchorfile>
      <anchor>af9d9a50155fa532c3174bfa5cfd7be01</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AddComponentDialog</name>
      <anchorfile>class_add_component_dialog.html</anchorfile>
      <anchor>adce89e816c725db8c2e1be19aeefd7bb</anchor>
      <arglist>(Framework *fw, const QList&lt; entity_id_t &gt; &amp;ids, QWidget *parent=0, Qt::WindowFlags f=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AddComponentDialog</name>
      <anchorfile>class_add_component_dialog.html</anchorfile>
      <anchor>a99ca93ecf7e838e51cc45b4c9e3b4c6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetComponentList</name>
      <anchorfile>class_add_component_dialog.html</anchorfile>
      <anchor>ae1fe02fb34111c88401bce5ee7237463</anchor>
      <arglist>(const QStringList &amp;component_types)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetComponentName</name>
      <anchorfile>class_add_component_dialog.html</anchorfile>
      <anchor>a9e857c790f4308d34ae1fc36943f560f</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>hideEvent</name>
      <anchorfile>class_add_component_dialog.html</anchorfile>
      <anchor>aecb4646854680f7040893df94e2860f7</anchor>
      <arglist>(QHideEvent *event)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>QList&lt; entity_id_t &gt;</type>
      <name>EntityIdList</name>
      <anchorfile>class_add_component_dialog.html</anchorfile>
      <anchor>a4f517fa106863c211f4be2f60867cdd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>CheckComponentName</name>
      <anchorfile>class_add_component_dialog.html</anchorfile>
      <anchor>ab0f9c61e8ca273432e3e210ee48d1084</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QLineEdit *</type>
      <name>name_line_edit_</name>
      <anchorfile>class_add_component_dialog.html</anchorfile>
      <anchor>a81599ed15f82fc2259106b6a10ba017e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QComboBox *</type>
      <name>type_combo_box_</name>
      <anchorfile>class_add_component_dialog.html</anchorfile>
      <anchor>a97f4c02a24aeb35ffcdbb2ea5a3e74a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QCheckBox *</type>
      <name>sync_check_box_</name>
      <anchorfile>class_add_component_dialog.html</anchorfile>
      <anchor>ae95e16095aabae13f7eed013500443e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QCheckBox *</type>
      <name>temp_check_box_</name>
      <anchorfile>class_add_component_dialog.html</anchorfile>
      <anchor>a64fd8f47f1a4667887897895129927c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QPushButton *</type>
      <name>ok_button_</name>
      <anchorfile>class_add_component_dialog.html</anchorfile>
      <anchor>a456a384b464e15966ba1013bdd4e9b2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QPushButton *</type>
      <name>cancel_button_</name>
      <anchorfile>class_add_component_dialog.html</anchorfile>
      <anchor>a09f1f741aea94ec6f2de025fe36265b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EntityIdList</type>
      <name>entities_</name>
      <anchorfile>class_add_component_dialog.html</anchorfile>
      <anchor>ad69b0f027464a75ba460cb72dc45760c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework_</name>
      <anchorfile>class_add_component_dialog.html</anchorfile>
      <anchor>ad49b3fa387b7fdd5cede5a48e92ed7a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AddContentWindow</name>
    <filename>class_add_content_window.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>Completed</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a57b13a72a8873377212d635a357129fc</anchor>
      <arglist>(bool contentAdded, const QString &amp;uploadBaseUrl)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AddContentWindow</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a1282a1862c8ea64b436744c19b723257</anchor>
      <arglist>(Framework *fw, const ScenePtr &amp;dest, QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AddContentWindow</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>aa8af464e50905da1d1aa5766031ab546</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddDescription</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>aa15697cde4a09d5212132dcc00c4959d</anchor>
      <arglist>(const SceneDesc &amp;desc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFiles</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>ab0dce555bdf55a6620cb62c17caeddc0</anchor>
      <arglist>(const QStringList &amp;fileNames)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddPosition</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>af1d67aa35df5890d6b3140143d2174e4</anchor>
      <arglist>(const float3 &amp;pos)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>showEvent</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>ac75ed6769f1787f062fe8a9ec24efa98</anchor>
      <arglist>(QShowEvent *e)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>SelectAllEntities</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a5c518581040f54e545544adc2dc45617</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>DeselectAllEntities</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>ae2bc44c9d967b07032fcade47a4831cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>SelectAllAssets</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>adc2742b7b4f4f7ea2085351117f1e2f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>DeselectAllAssets</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a39dba37ae29d0789f0b4aa9232f990bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>AddContent</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>ae711e2a431e28dea090833f97b35178f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>bool</type>
      <name>CreateNewDesctiption</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>afd6b339754a5b2f1173e5c67567bcdf6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>bool</type>
      <name>UploadAssets</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>af2f94b711c4bd1e3aa3de529f0600cd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>AddEntities</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>ace6c923afddb6f3aca7f265d0b682837</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>CenterToMainWindow</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a45a6450d97e01e4900ecd178a95ff7e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>SetEntitiesVisible</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>ae6df9e5e149650acb43a58124836a81a</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>SetAssetsVisible</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>ae473e48d502328d28a422eadb7e0ae83</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>Close</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>af21e7faadad4802214e0081ba97c5abb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>CheckIfColumnIsEditable</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a883a3e405db4a6483e586c44c6d18caf</anchor>
      <arglist>(QTreeWidgetItem *item, int column)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>RewriteDestinationNames</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a2a99c0070e7c694010d9bb770856777a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleUploadCompleted</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>ae7824101df4653b296f669f603f2acf4</anchor>
      <arglist>(IAssetUploadTransfer *transfer)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleUploadFailed</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a4f95aaf6c4ca92a73be1b2eeb9fb84d3</anchor>
      <arglist>(IAssetUploadTransfer *trasnfer)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>UpdateUploadStatus</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a3c94b224d08b8d5614a4d35f752eb1c3</anchor>
      <arglist>(bool succesfull, const QString &amp;assetRef)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>CheckUploadTotals</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a44c92eadae1d3f3a5fdfe47434d9a82d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>AddEntities</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a00c89257bbac6d0fc81c5503b8b3aa0e</anchor>
      <arglist>(const QList&lt; EntityDesc &gt; &amp;entityDescs)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>AddAssets</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a314b698a7a0e5c48a1bc74d0932c5c13</anchor>
      <arglist>(const SceneDesc::AssetMap &amp;assetDescs)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>RewriteAssetReferences</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a87c06b307195408e88c0ff4eda1b75d6</anchor>
      <arglist>(SceneDesc &amp;sceneDesc, const AssetStoragePtr &amp;dest, bool useDefaultStorage)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>QString</type>
      <name>GetCurrentStorageName</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>aedafa8816dd5412e7c195d304015d6cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>GenerateStorageComboBoxContents</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a1cd950018714d4eb6e282e6a211d3c69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QTreeWidget *</type>
      <name>entityTreeWidget</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>abb4b3c68b177343f7a66d7fbc06be32d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QTreeWidget *</type>
      <name>assetTreeWidget</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>ab36113f1e3f1361ab46f3cf80cb9e6f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a8d82ead2ed276e7265cfd5203a780309</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SceneWeakPtr</type>
      <name>scene</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a0bd50f8af6b25bfe4cee1dc71643cb9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SceneDesc</type>
      <name>sceneDesc</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a79ad6ca2956eda1594554decd06963d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QPushButton *</type>
      <name>addContentButton</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a858a12517f7695fd7b580ea9ad866983</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QPushButton *</type>
      <name>cancelButton</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a5641c33a6a015ff21875f053f03cb1b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QComboBox *</type>
      <name>storageComboBox</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>ae9aaa0c77233f14e0503f5eb0f48df78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>float3</type>
      <name>position</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a8f869a686565a6da30bbc9d0bd493af9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QLabel *</type>
      <name>uploadStatus_</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a4b688ba6fc95cf84373babdbd09796ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QProgressBar *</type>
      <name>uploadProgress_</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a2f1ab94933502f78b8b01109e3be6e9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>progressStep_</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a3d12e5e88fb9851ed65ef3ebb3432e02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>failedUploads_</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a0627a6a1788e7fbc45c6b1bb765140cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>successfullUploads_</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>ac62a1a849b9fbd7091b4e4aeea2f7902</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>totalUploads_</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a54c8b6166ab51d6222008ea3a7d8044d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QLabel *</type>
      <name>entitiesStatus_</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a0875df6e9a0da03d817308ec12ac19be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QProgressBar *</type>
      <name>entitiesProgress_</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>af1375721ddc5884c3892500854a9251f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QWidget *</type>
      <name>parentEntities_</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a92e5f170749eb54255a08b4298d57aed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QWidget *</type>
      <name>parentAssets_</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a9b727d4071a00924f42c3f38798ad7ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SceneDesc</type>
      <name>newDesc_</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a63b0fe53d54f04bc754c557604d566e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>contentAdded_</name>
      <anchorfile>class_add_content_window.html</anchorfile>
      <anchor>a376c80b9488274d2085bb69bf5205f72</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ApiVersionInfo</name>
    <filename>class_api_version_info.html</filename>
    <member kind="slot">
      <type>QString</type>
      <name>GetFullIdentifier</name>
      <anchorfile>class_api_version_info.html</anchorfile>
      <anchor>a379d6e478fa75b748073b0a07f0d479c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>toString</name>
      <anchorfile>class_api_version_info.html</anchorfile>
      <anchor>ac5b85da96bc6eeec095080fce30f96ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>uint</type>
      <name>GetMajor</name>
      <anchorfile>class_api_version_info.html</anchorfile>
      <anchor>a539164440cc390cb07d373b062947846</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>uint</type>
      <name>GetMinor</name>
      <anchorfile>class_api_version_info.html</anchorfile>
      <anchor>a66a61359c41cbcd2109274a3f2f8c16f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>uint</type>
      <name>GetMajorPatch</name>
      <anchorfile>class_api_version_info.html</anchorfile>
      <anchor>a5175524cb6a06efad34e32b7ed7170b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>uint</type>
      <name>GetMinorPatch</name>
      <anchorfile>class_api_version_info.html</anchorfile>
      <anchor>a045c968d27a07ace3acab3abd53c678c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>std::vector&lt; uint &gt;</type>
      <name>GetNumbers</name>
      <anchorfile>class_api_version_info.html</anchorfile>
      <anchor>a6b70a6db8968bac4bdd4e881fb9567a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ApiVersionInfo</name>
      <anchorfile>class_api_version_info.html</anchorfile>
      <anchor>ac1d8c52f999a1ac2e74a5d04d144c47c</anchor>
      <arglist>(uint major, uint minor, uint majorpatch, uint minorpatch)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ApiVersionInfo</name>
      <anchorfile>class_api_version_info.html</anchorfile>
      <anchor>a2318dfa913424dc8d3945665bb867ee7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>major</name>
      <anchorfile>class_api_version_info.html</anchorfile>
      <anchor>aaf7537471516b90142c4f98d5422381f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>minor</name>
      <anchorfile>class_api_version_info.html</anchorfile>
      <anchor>a257d3d271d0105a6bc44b263a98bfc20</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>majorpatch</name>
      <anchorfile>class_api_version_info.html</anchorfile>
      <anchor>a20606feb3c7b7acd195a7a0c8cc35057</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>minorpatch</name>
      <anchorfile>class_api_version_info.html</anchorfile>
      <anchor>a95983f297e4c42c9f9844db472eb9fc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; uint &gt;</type>
      <name>versionNumbers_</name>
      <anchorfile>class_api_version_info.html</anchorfile>
      <anchor>a100e6f6706feef8ada48117e96c2c3e5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Application</name>
    <filename>class_application.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>UpdateFrame</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a59580fb9f576e4cc842cae311c603f68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ChangeLanguage</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>ad94cbeac1461281f3b5949da8a7da50f</anchor>
      <arglist>(const QString &amp;file)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>AboutToExit</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a629b6838c5e67c0295ab14e6ad81bde8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetSplashMessage</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a2f25b98e5436a6d4d64c123a01329f7e</anchor>
      <arglist>(const QString &amp;message)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>LanguageChanged</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>ac26c0d66381d2ced94eec6ff3c1ea450</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ExitRequested</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>aa7a8728ec2e69272049dbd3ff87270be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Application</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a0792028e40b55557678da610064bd664</anchor>
      <arglist>(Framework *owner, int &amp;argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Application</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a748bca84fefb9c12661cfaa2f623748d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>notify</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>abd93896006b3b725a07b9c164011e4c1</anchor>
      <arglist>(QObject *receiver, QEvent *e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Go</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a1db23bcd641b23dfcc01d2bdc3905219</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Message</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a6acdb70137eeae34930599cb27e9f3a3</anchor>
      <arglist>(const std::string &amp;title, const std::string &amp;text)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Message</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>ad1209edfa302987d4853e0abcee022fe</anchor>
      <arglist>(const std::wstring &amp;title, const std::wstring &amp;text)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetCurrentWorkingDirectory</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>ab2bd5200905faf9d4959f15f39f2a982</anchor>
      <arglist>(QString newCwd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>CurrentWorkingDirectory</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>ad2bec4a28f73474277403e0620d2df50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>InstallationDirectory</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a2d1f530d8ad926e157c234b1b7ab9b44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>UserDataDirectory</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a3b0227c6f83fb3e30f565e5747d5bb1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>UserDocumentsDirectory</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a909797a3fdbe3ef73050a617976274e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>eventFilter</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a056d377671eaa9da64188927b5f11b1c</anchor>
      <arglist>(QObject *obj, QEvent *event)</arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>currentWorkingDirectory</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>aa333b85fcfecb5b855e39c2aeb1dee33</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>installationDirectory</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a0f77e7bdb3345d3618462a49bd0b23b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>userDataDirectory</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>aff65991068428b1b19b5df6dc2caabdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>userDocumentsDirectory</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a370af88ce3695991ba2c06d8a9e79b11</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>QStringList</type>
      <name>GetQmFiles</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>ae64b051011fad829caea44f8fef0c811</anchor>
      <arglist>(const QDir &amp;dir)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>InitializeSplash</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>aaa32658bb58c9b263838e08ea5678ded</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a4edb805e926da0c1cb817975f5336eaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>appActivated</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a78f575639435889308c6cbf8d0792c72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QSplashScreen *</type>
      <name>splashScreen</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a39de3eadb80716fe96849db4675da41b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QTimer</type>
      <name>frameUpdateTimer</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a085c6490dbbad6fcb3ee489ca69b5765</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QTranslator *</type>
      <name>nativeTranslator</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a4ebf0b12524a539ca7b385c96e29dd5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QTranslator *</type>
      <name>appTranslator</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a6cdce3e169e018161e0a12e873fa1115</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ApplicationVersionInfo</name>
    <filename>class_application_version_info.html</filename>
    <member kind="slot">
      <type>QString</type>
      <name>GetFullIdentifier</name>
      <anchorfile>class_application_version_info.html</anchorfile>
      <anchor>adfe5f31470846de281aebcb83a262bbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>toString</name>
      <anchorfile>class_application_version_info.html</anchorfile>
      <anchor>a1bb2cf43ad853e0a6ddd909505a98f02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>GetOrganization</name>
      <anchorfile>class_application_version_info.html</anchorfile>
      <anchor>a3bef9f5887f9c922e271f22b1cb5afdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>GetName</name>
      <anchorfile>class_application_version_info.html</anchorfile>
      <anchor>aa9633c51b9be5577732b8fc3857a5a8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>GetVersion</name>
      <anchorfile>class_application_version_info.html</anchorfile>
      <anchor>a3dc26ea84711464b0a48abb623b812b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>uint</type>
      <name>GetMajor</name>
      <anchorfile>class_application_version_info.html</anchorfile>
      <anchor>ad6a9389a47fae3c11ed50e356b70eac7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>uint</type>
      <name>GetMinor</name>
      <anchorfile>class_application_version_info.html</anchorfile>
      <anchor>acae335d285b794774299e990919535cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>uint</type>
      <name>GetMajorPatch</name>
      <anchorfile>class_application_version_info.html</anchorfile>
      <anchor>adf17c0a638ca2cd1f2658965a1b682f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>uint</type>
      <name>GetMinorPatch</name>
      <anchorfile>class_application_version_info.html</anchorfile>
      <anchor>a24c80151addf095b17fa2efb0f12e1b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>std::vector&lt; uint &gt;</type>
      <name>GetNumbers</name>
      <anchorfile>class_application_version_info.html</anchorfile>
      <anchor>a4a0ce4135fe00a6d065ec795a92ea5eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ApplicationVersionInfo</name>
      <anchorfile>class_application_version_info.html</anchorfile>
      <anchor>afaada1531fb841a322d533498c88bdf6</anchor>
      <arglist>(uint major, uint minor, uint majorpatch, uint minorpatch, const QString &amp;organization, const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ApplicationVersionInfo</name>
      <anchorfile>class_application_version_info.html</anchorfile>
      <anchor>a953db4aaa1e7b7a71ccd8bdfd5e11a1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>major</name>
      <anchorfile>class_application_version_info.html</anchorfile>
      <anchor>a9b54d7023e92c9ab9a491af9bad4f94b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>minor</name>
      <anchorfile>class_application_version_info.html</anchorfile>
      <anchor>a5a1e404c9948cbfd023f98163a234984</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>majorpatch</name>
      <anchorfile>class_application_version_info.html</anchorfile>
      <anchor>a4eb1af2b59722c9c743e0cad8ea52191</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>minorpatch</name>
      <anchorfile>class_application_version_info.html</anchorfile>
      <anchor>a92d49aae1e82fffe64eefb0dfec26182</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>organization</name>
      <anchorfile>class_application_version_info.html</anchorfile>
      <anchor>afdb65ef7d25b5f8da6d04293aca080a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_application_version_info.html</anchorfile>
      <anchor>ac51bc736f822e7b47ea9801f5eaf67a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>QString</type>
      <name>GetVersionString</name>
      <anchorfile>class_application_version_info.html</anchorfile>
      <anchor>aa6fd5af8d15b77f0ad31f5667b92cdf5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; uint &gt;</type>
      <name>versionNumbers_</name>
      <anchorfile>class_application_version_info.html</anchorfile>
      <anchor>a2973233611648455fc37b05fb27ab04c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QString</type>
      <name>name_</name>
      <anchorfile>class_application_version_info.html</anchorfile>
      <anchor>ac948566179b8817e86055e9c596cd687</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QString</type>
      <name>organization_</name>
      <anchorfile>class_application_version_info.html</anchorfile>
      <anchor>a2709d584aeefec2c8bffc677e5e93147</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArgumentType</name>
    <filename>class_argument_type.html</filename>
    <base>IArgumentType</base>
    <member kind="function">
      <type></type>
      <name>ArgumentType</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a76662c628cc34d4ff96ecca0c741714e</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QWidget *</type>
      <name>CreateEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>ad0e234ba488f8252c8e4eb6a65461152</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>UpdateValueFromEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a802268724489e5aee883c09e00ac76c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>UpdateValueToEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a80274930c522810a7f5b311555daf75d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetValue</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>ab49bdf87fc8cccc331238e6983823f3b</anchor>
      <arglist>(void *val)</arglist>
    </member>
    <member kind="function">
      <type>QGenericArgument</type>
      <name>Value</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>aba27c9749c238f902e6e3b3de6fd7a6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QGenericReturnArgument</type>
      <name>ReturnValue</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a8241e73bc417944dc88a18641d8e1e74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QString</type>
      <name>ToString</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>abd05cec8d9438f807fa7fb25ff444ee7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QVariant</type>
      <name>ToQVariant</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a0de26f30d5a23ba1f928919f9661d508</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>FromQVariant</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a07b412074a1bbfdd2fa4bb46308f0337</anchor>
      <arglist>(const QVariant &amp;var)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>FromString</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a4d4a02e02ad00621c69df8c75bc8716c</anchor>
      <arglist>(const QString &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>QWidget *</type>
      <name>CreateEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a131ff771a004e3b04d350f5cfdfa0e5b</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateValueFromEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>aa2846bce6db3c159f4b27642610239a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateValueToEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>af75ba533037a864a02298f58465ebce1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>ToString</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a908c58f292fafe5b273735475fd1c9df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>aa858c44903d9eccbc7bffc4a00241973</anchor>
      <arglist>(const QString &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>QWidget *</type>
      <name>CreateEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a0c0a3dfe55a7d3f8a0393998a71815df</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateValueFromEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a1a94d35f53896fa7cbe2f446349a4d40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateValueToEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>ae72ce811afd2fab1ce2b0e8804ddd004</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>ToString</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>ad02c108b4b4690e2b4a9c68e1ab99a59</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a66641b1db5f5096ece6dd78f58d5a57d</anchor>
      <arglist>(const QString &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>QWidget *</type>
      <name>CreateEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a2386ddf74db372c16aab2ba4650d06e9</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateValueFromEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>ad8036b720fee416ed31bf841c76312c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateValueToEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a7f57f9090189b5a8689e120043b15cf6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>ToString</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a22eeceebcdff2ca3ffe2af89fed100de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>afbfd3b89592e57f401533ed7bc946346</anchor>
      <arglist>(const QString &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>ToQVariant</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a765d3a9e1a6f83861e16eac28b138a9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromQVariant</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a1287988df1ac39d036e80c170c181b82</anchor>
      <arglist>(const QVariant &amp;var)</arglist>
    </member>
    <member kind="function">
      <type>QWidget *</type>
      <name>CreateEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>ae793b2bf8ad912911e143eeb1ff1e65c</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateValueFromEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a7ea1cdda8cedae5b64f8c81fd6518e3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateValueToEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a43fef8526edc07e4f6ad381957b0e260</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>ToString</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a1225bf202f445d8aac5a7c5651ed6829</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a5b25df469f369eb1cfd606497a758aaa</anchor>
      <arglist>(const QString &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>QWidget *</type>
      <name>CreateEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a9d4a647e03394d5bb205d6355424b3d2</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateValueFromEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a44710ca0a37029d30bb3deb8f2b0284f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateValueToEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a85ede695a8fd4b55187cb2d116847d10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>ToString</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a5e0b63e44bf3da4cb6d3495adad6b5f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>ad881c18bf9206b2d2b81b9fd1e350e27</anchor>
      <arglist>(const QString &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>QWidget *</type>
      <name>CreateEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a4412357c5a2f8a85d6926cd1b1d4be77</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateValueFromEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a208f55128651c7d5963b8ae2bc63bdb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateValueToEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>aad2247a68e142e9540961424cd513d6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>ToString</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a7e196eb5675ac26d8111d65fa599621d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>ad0a971eaa76ce505d9b01ea999aa4fa9</anchor>
      <arglist>(const QString &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>QWidget *</type>
      <name>CreateEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a07d98c6972ac41a1ef292a41420fd857</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateValueFromEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a3f9c262dac1f1d4342a0cb38f1c49d0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateValueToEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a75f6e9885a769566983d4da8b17e7a18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>ToString</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>acb8d0bb31505bbbc196ef6561f3d5638</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a0410d20c9d2e43c0f522709148ba534f</anchor>
      <arglist>(const QString &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>QWidget *</type>
      <name>CreateEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a7aaa3d60517d6f2adf879788f4cad37e</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateValueFromEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>ac2301a73950d19f95aa1946e6463e829</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateValueToEditor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>ab1c1a4b123c340b54f6163dde4654526</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>ToString</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>abcf0c3292cb00dc5f104d58fad6832a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a3d93fe198a5ca6a868a5022c338e2ca8</anchor>
      <arglist>(const QString &amp;str)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>typeName</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>aaae6160d223bfcc86e909bbcf7de4471</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T</type>
      <name>value</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>ab3ea3e0c85385f76b254f4157ce42911</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QWidget *</type>
      <name>editor</name>
      <anchorfile>class_argument_type.html</anchorfile>
      <anchor>a98e58bc16a664b15d3957117d1237ae5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AssetAPI</name>
    <filename>class_asset_a_p_i.html</filename>
    <class kind="struct">AssetAPI::PendingDownloadRequest</class>
    <member kind="enumeration">
      <name>FileQueryResult</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a6d59eedf0f41688ac1ccd7f1a50080cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FileQueryLocalFileFound</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a6d59eedf0f41688ac1ccd7f1a50080cfaede68e2ccc6356f314d35460584e854a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FileQueryLocalFileMissing</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a6d59eedf0f41688ac1ccd7f1a50080cfa6b160f98bed903a4fa442db3cca14457</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FileQueryExternalFile</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a6d59eedf0f41688ac1ccd7f1a50080cfa54dde1cf8026b36fe580cb3f4ee4c27e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>AssetRefType</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ada85b0bd8a3ba09f094a63df9ffd3beb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AssetRefInvalid</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ada85b0bd8a3ba09f094a63df9ffd3beba1a0b3a5a76f686edc181bca7c12cd5ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AssetRefLocalPath</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ada85b0bd8a3ba09f094a63df9ffd3beba93076e3c36161597e13618ef3776f394</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AssetRefRelativePath</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ada85b0bd8a3ba09f094a63df9ffd3bebaca7a29afe6107b5eab4723d6603166c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AssetRefLocalUrl</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ada85b0bd8a3ba09f094a63df9ffd3bebad567663afc8d8c365276a4ccaffd3fa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AssetRefExternalUrl</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ada85b0bd8a3ba09f094a63df9ffd3bebaac667073cebf9d114f20bf3b3a47f188</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AssetRefNamedStorage</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ada85b0bd8a3ba09f094a63df9ffd3bebaebc9609ddd716281f5e1c3c7cc92e637</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; QString, AssetTransferPtr, QStringLessThanNoCase &gt;</type>
      <name>AssetTransferMap</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a3bf079c74e76f6a672fff104782122ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::pair&lt; QString, QString &gt; &gt;</type>
      <name>AssetDependenciesMap</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a5d967b4a5fee63119e0ce97deebab49f</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>AssetMap</type>
      <name>GetAllAssets</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a38388a991e17be6b2b3f489692afc0f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>AssetStorageVector</type>
      <name>GetAssetStorages</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a68dd808f5a2dd2c5fb910923f8760938</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>OpenAssetCache</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a7503c69d9f7fcd60f3828140745aefa6</anchor>
      <arglist>(QString directory)</arglist>
    </member>
    <member kind="slot">
      <type>AssetTransferPtr</type>
      <name>RequestAsset</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>aa888e8ec0bebf935fc86fc30460548e7</anchor>
      <arglist>(QString assetRef, QString assetType=&quot;&quot;, bool forceTransfer=false)</arglist>
    </member>
    <member kind="slot">
      <type>AssetTransferPtr</type>
      <name>RequestAsset</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>af27e99b257106326fc9a98201ed6860a</anchor>
      <arglist>(const AssetReference &amp;ref, bool forceTransfer=false)</arglist>
    </member>
    <member kind="slot">
      <type>AssetProviderPtr</type>
      <name>GetProviderForAssetRef</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ad33d0f42287625d073b42fbd46117188</anchor>
      <arglist>(QString assetRef, QString assetType=&quot;&quot;)</arglist>
    </member>
    <member kind="slot">
      <type>AssetPtr</type>
      <name>CreateNewAsset</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a77a0752d18444da1ee8d33c6d3ce40de</anchor>
      <arglist>(QString type, QString name)</arglist>
    </member>
    <member kind="slot">
      <type>AssetPtr</type>
      <name>CreateAssetFromFile</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ad90405f6c012c83b3047a4cb32e4017b</anchor>
      <arglist>(QString assetType, QString assetFile)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>GenerateUniqueAssetName</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ad40d22802c6837e880b882f95d34d5d1</anchor>
      <arglist>(QString assetTypePrefix, QString assetNamePrefix)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>GenerateTemporaryNonexistingAssetFilename</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a92e3655cef920a8783ad5cb84537b2f8</anchor>
      <arglist>(QString filename)</arglist>
    </member>
    <member kind="slot">
      <type>AssetTypeFactoryPtr</type>
      <name>GetAssetTypeFactory</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a9426d59fa1804a58e4b9d37a5c40b90e</anchor>
      <arglist>(QString typeName)</arglist>
    </member>
    <member kind="slot">
      <type>AssetPtr</type>
      <name>GetAsset</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>af568558fdbea7a72c48e635f95edb397</anchor>
      <arglist>(QString assetRef)</arglist>
    </member>
    <member kind="slot">
      <type>AssetCache *</type>
      <name>GetAssetCache</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a08e256884bb098e14c46f0ae86c12e28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>AssetStoragePtr</type>
      <name>GetAssetStorageByName</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ae8ba710ca526164685f8d4a98fcd1ac1</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>AssetStoragePtr</type>
      <name>GetStorageForAssetRef</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a0a1d9a2b5e34ad7c209e68ed65a1ca2d</anchor>
      <arglist>(const QString &amp;ref) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>RemoveAssetStorage</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a35c10f9761fc9590b31837bbb555ee1a</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="slot">
      <type>AssetStoragePtr</type>
      <name>DeserializeAssetStorageFromString</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>aa20ca36e9b8bd80217a7bd6d0b96f1af</anchor>
      <arglist>(const QString &amp;storage)</arglist>
    </member>
    <member kind="slot">
      <type>AssetStoragePtr</type>
      <name>GetDefaultAssetStorage</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a56be64a7d99f60af3c17919fc8d4bf0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetDefaultAssetStorage</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a22f791a8cb6aa31fae3b5e144cb2e113</anchor>
      <arglist>(const AssetStoragePtr &amp;storage)</arglist>
    </member>
    <member kind="slot" static="yes">
      <type>static QString</type>
      <name>ExtractFilenameFromAssetRef</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a076862bb3b573510fbde215c62d70676</anchor>
      <arglist>(QString ref)</arglist>
    </member>
    <member kind="slot" static="yes">
      <type>static QString</type>
      <name>GetResourceTypeFromAssetRef</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>acaacf16e84f5d291301e0d7769ffd50a</anchor>
      <arglist>(QString assetRef)</arglist>
    </member>
    <member kind="slot" static="yes">
      <type>static QString</type>
      <name>GetResourceTypeFromAssetRef</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a40a7154a7cd63f203d5e384e87536bea</anchor>
      <arglist>(const AssetReference &amp;ref)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>ResolveAssetRef</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a23b2c28aa068ae6c2e4df1123d14d7cf</anchor>
      <arglist>(QString context, QString ref)</arglist>
    </member>
    <member kind="slot">
      <type>FileQueryResult</type>
      <name>ResolveLocalAssetPath</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a994e494ac82bafffe080407965836679</anchor>
      <arglist>(QString ref, QString baseDirectoryContext, QString &amp;outFilePath, QString *subAssetName=0)</arglist>
    </member>
    <member kind="slot" static="yes">
      <type>static QString</type>
      <name>RecursiveFindFile</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ae3f65bfc13bd6dbe07d2fda804d5066e</anchor>
      <arglist>(QString basePath, QString filename)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ForgetAsset</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ac79325c4d58ccff7293386a7dad36840</anchor>
      <arglist>(QString assetRef, bool removeDiskSource)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ForgetAsset</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a98e5187c3afe66b9143dfb274f2d352d</anchor>
      <arglist>(AssetPtr asset, bool removeDiskSource)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>DeleteAssetFromStorage</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>aa15bf2831a3cb6f618df8ca194f37025</anchor>
      <arglist>(QString assetRef)</arglist>
    </member>
    <member kind="slot">
      <type>AssetUploadTransferPtr</type>
      <name>UploadAssetFromFile</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a5c29604650cc6ae7683c709d48aa55ff</anchor>
      <arglist>(const QString &amp;filename, const QString &amp;storageName, const QString &amp;assetName=&quot;&quot;)</arglist>
    </member>
    <member kind="slot">
      <type>AssetUploadTransferPtr</type>
      <name>UploadAssetFromFile</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ab8967d7ac1f52b515b78e7fc4125143c</anchor>
      <arglist>(const char *filename, AssetStoragePtr destination, const char *assetName)</arglist>
    </member>
    <member kind="slot">
      <type>AssetUploadTransferPtr</type>
      <name>UploadAssetFromFileInMemory</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>acf1e310f32c7f38c510991b0b81b4b13</anchor>
      <arglist>(const QByteArray &amp;data, const QString &amp;storageName, const QString &amp;assetName)</arglist>
    </member>
    <member kind="slot">
      <type>AssetUploadTransferPtr</type>
      <name>UploadAssetFromFileInMemory</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a204decc49c760aefb7ac97337c498234</anchor>
      <arglist>(const u8 *data, size_t numBytes, AssetStoragePtr destination, const char *assetName)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ForgetAllAssets</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ad1be42c2840954dd546c492d69bd5791</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Reset</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a8d5b6293979fd37153d2ded4aa8fb36a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>AssetTransferPtr</type>
      <name>GetPendingTransfer</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a3e7d2a3b8ee2ca381e2c6ff36a454b8f</anchor>
      <arglist>(QString assetRef)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RequestAssetDependencies</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a4657185f3f11ce66de367df840ac0288</anchor>
      <arglist>(AssetPtr transfer)</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumPendingDependencies</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>acf448aae00e4677c4b0eb6673908caba</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>ShouldReplicateAssetDiscovery</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ae03d7f0fbc57cd5688d142ccdd94afe4</anchor>
      <arglist>(const QString &amp;assetRef)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>HandleAssetDiscovery</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>af8d6dc6a095d76e38615cd746439f9a7</anchor>
      <arglist>(const QString &amp;assetRef, const QString &amp;assetType)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>HandleAssetDeleted</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>aea9a149596afb7f5bfbb83546509bbd9</anchor>
      <arglist>(const QString &amp;assetRef)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAssetDeletedFromStorage</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ad19ed038d58fa567671057ab13d6e4b4</anchor>
      <arglist>(const QString &amp;assetRef)</arglist>
    </member>
    <member kind="slot">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ab47033138beebde3980a8eccf0cee1bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>const AssetTransferMap &amp;</type>
      <name>GetCurrentTransfers</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ac20c5c2b960f68362e67055ba2092da4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>const AssetDependenciesMap &amp;</type>
      <name>DebugGetAssetDependencies</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a32d0815882b120e71b7e07a89391bca0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>const std::vector&lt; AssetTransferPtr &gt;</type>
      <name>DebugGetReadyTransfers</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ae8c8e2805623e5d5d14f81e6f57d4810</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AssetCreated</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a049c34731353414ab69b75f3581ceade</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AssetAboutToBeRemoved</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a8e5c13802508c18771a143770b365cd6</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>DiskSourceAboutToBeRemoved</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ab46546e38d62dd21e709eefcfabefe77</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AssetUploaded</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a1e0fa9809bc67754a6a4eb1d0f7e5906</anchor>
      <arglist>(const QString &amp;assetRef)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AssetDeletedFromStorage</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a29aae6f985161969b68ada16fd001f36</anchor>
      <arglist>(const QString &amp;assetRef)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AssetStorageAdded</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>af9ef796dcfc5d1aae27e9428e93dd1ae</anchor>
      <arglist>(AssetStoragePtr storage)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AssetAPI</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a9a9616328ef92dc3ce6947ceee2bdcca</anchor>
      <arglist>(Framework *fw, bool isHeadless)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AssetAPI</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ab21fe14ac2a3bcc50a8528010b8aac10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAssetTypeFactoryRegistered</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ae82cdba51caad2937576adfd06f6b5c2</anchor>
      <arglist>(const QString &amp;typeName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RegisterAssetTypeFactory</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a51a1f204532c963bec5d56d2e642f507</anchor>
      <arglist>(AssetTypeFactoryPtr factory)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; AssetTypeFactoryPtr &gt;</type>
      <name>GetAssetTypeFactories</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ab803dd12d6f617cc1d05c289e616e2ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boost::shared_ptr&lt; T &gt;</type>
      <name>GetAssetProvider</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a2e539cceedfab18d2bb6fe7a83d06709</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RegisterAssetProvider</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a3d5b3a7829ff1203928eb269de70cf4b</anchor>
      <arglist>(AssetProviderPtr provider)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; AssetProviderPtr &gt;</type>
      <name>GetAssetProviders</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a41c749d404d5039a8ec2e9d1ec09f281</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; AssetTransferPtr &gt;</type>
      <name>PendingTransfers</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a806a55df140731718395c5dd842d7579</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a3846ed02797bfb4adaef78b05d0f3589</anchor>
      <arglist>(f64 frametime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssetTransferCompleted</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>afa4c37aebec5798c183a17a09f06b6d6</anchor>
      <arglist>(IAssetTransfer *transfer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssetTransferFailed</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a342a40ee60f6150ac6081d35ae4dfbbe</anchor>
      <arglist>(IAssetTransfer *transfer, QString reason)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssetLoadCompleted</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a3d02fa4b3d2fee4608cc64c601e044c7</anchor>
      <arglist>(const QString assetRef)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssetLoadFailed</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>aa2d2daec24384266780d97e8874837ec</anchor>
      <arglist>(const QString assetRef)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssetUploadTransferCompleted</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a7164c83e1ac4c4ec8fd84103d5c69ac9</anchor>
      <arglist>(IAssetUploadTransfer *transfer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssetDependenciesCompleted</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a069da88ea0c7b4ca210b5089975be8ba</anchor>
      <arglist>(AssetTransferPtr transfer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NotifyAssetDependenciesChanged</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a2f6e5cd97d670628851bb30159d4e82d</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsHeadless</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a72d9605bad5b633fb5c4948631cceaf4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; AssetPtr &gt;</type>
      <name>FindDependents</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a804fb6ed20752c1a09c6dab8bd19da52</anchor>
      <arglist>(QString dependeeAssetRef)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static AssetRefType</type>
      <name>ParseAssetRef</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>aaa8b2fba333242c0605f4c712cada65a</anchor>
      <arglist>(QString assetRef, QString *outProtocolPart=0, QString *outNamedStorage=0, QString *outProtocol_Path=0, QString *outPath_Filename_SubAssetName=0, QString *outPath_Filename=0, QString *outPath=0, QString *outFilename=0, QString *outSubAssetName=0, QString *outFullRef=0, QString *outFullRefNoSubAssetName=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>SanitateAssetRef</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>aa3ac9563a88af439bcb2013c6ca7174c</anchor>
      <arglist>(const QString &amp;ref)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>DesanitateAssetRef</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a237ac99c2b1a94c7cb87f2ad53dbd116</anchor>
      <arglist>(const QString &amp;ref)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>SanitateAssetRef</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ac990d3b9087c47bb1102e8b1cbac6a8d</anchor>
      <arglist>(const std::string &amp;ref)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>DesanitateAssetRef</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a98ea3c44f3573951aa0fb3a70c3eaba6</anchor>
      <arglist>(const std::string &amp;ref)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QMap&lt; QString, QString &gt;</type>
      <name>ParseAssetStorageString</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a3990aa7b04b39d60bd8fc1e3a5991fef</anchor>
      <arglist>(QString storageString)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; QString, AssetUploadTransferPtr, QStringLessThanNoCase &gt;</type>
      <name>AssetUploadTransferMap</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a62c51ec5d36cf3077c8eb38f0238e7a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; QString, PendingDownloadRequest, QStringLessThanNoCase &gt;</type>
      <name>PendingDownloadRequestMap</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>aa7670978b7a4f3233b83096415d29f2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnAssetLoaded</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a484a64a4534baf4b2032f228347f1930</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnAssetDiskSourceChanged</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a6b9901d5cc6851b6c63d555cd3caf5e8</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnAssetStorageRefsChanged</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a55b41053e3f100062d1ec7965ca13f0e</anchor>
      <arglist>(AssetStoragePtr storage)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>AssetTransferMap::iterator</type>
      <name>FindTransferIterator</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a95734797712f21daf2d887ce40bbb66b</anchor>
      <arglist>(QString assetRef)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>AssetTransferMap::iterator</type>
      <name>FindTransferIterator</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a9553e664dd4e2866233abc2144095901</anchor>
      <arglist>(IAssetTransfer *transfer)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>RemoveAssetDependencies</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a2a6f0e109382e7798b771b9088d66de3</anchor>
      <arglist>(QString asset)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleAssetDiscovery</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ab48e697b699c5b69009e8e332a41ad3f</anchor>
      <arglist>(const QString &amp;assetRef, const QString &amp;assetType, AssetStoragePtr storage)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>AssetPtr</type>
      <name>CreateNewAsset</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>aaba81ade7cb4dbb2e6106679c65fe8c2</anchor>
      <arglist>(QString type, QString name, AssetStoragePtr storage)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isHeadless_</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a9179eae2d24ba5b484b5316f346ee6dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AssetTransferMap</type>
      <name>currentTransfers</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a3b339c1ab294cde9ff244fd6a32f1d33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AssetUploadTransferMap</type>
      <name>currentUploadTransfers</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>ac5741c89aedf8f2587aa8b191402dce4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AssetDependenciesMap</type>
      <name>assetDependencies</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a11d5ac5de73c93e5565050035e7f179b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; AssetTransferPtr &gt;</type>
      <name>readyTransfers</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a63793bdb84242fe8ceeb00bd9d8db603</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AssetStorageWeakPtr</type>
      <name>defaultStorage</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a981d0f2e17ea4407a3ac7b4ab08f2fa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; AssetTypeFactoryPtr &gt;</type>
      <name>assetTypeFactories</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a8e1062e9ab82437b9f45fdc32dadefa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PendingDownloadRequestMap</type>
      <name>pendingDownloadRequests</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>acb0e1f700be3f49c530ed9dd48b27245</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AssetMap</type>
      <name>assets</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a143095905ac51a7186fc01690fd11938</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QFileSystemWatcher *</type>
      <name>diskSourceChangeWatcher</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a3b49fcd2312d1bda09c95d59178f616a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; AssetProviderPtr &gt;</type>
      <name>providers</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a21fa9fb893716e289e47c04860335ee9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AssetCache *</type>
      <name>assetCache</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>a612e208056cde487d209454a73bf63d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>fw</name>
      <anchorfile>class_asset_a_p_i.html</anchorfile>
      <anchor>adf63be76cc91ff526cce2b48c29575ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AssetAPI::PendingDownloadRequest</name>
    <filename>struct_asset_a_p_i_1_1_pending_download_request.html</filename>
    <member kind="variable">
      <type>QString</type>
      <name>assetRef</name>
      <anchorfile>struct_asset_a_p_i_1_1_pending_download_request.html</anchorfile>
      <anchor>adeb6b0439de028408bd81999d8fb07b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>assetType</name>
      <anchorfile>struct_asset_a_p_i_1_1_pending_download_request.html</anchorfile>
      <anchor>a948d5242eab0ede9e4555f838e562135</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AssetTransferPtr</type>
      <name>transfer</name>
      <anchorfile>struct_asset_a_p_i_1_1_pending_download_request.html</anchorfile>
      <anchor>a5140a1b7cb86df319f3c2bdc6d9040cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AssetCache</name>
    <filename>class_asset_cache.html</filename>
    <member kind="slot">
      <type>QString</type>
      <name>FindInCache</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>affd09f73eb300358c807a7d7db62bc58</anchor>
      <arglist>(const QString &amp;assetRef)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>GetDiskSourceByRef</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>ad3798a22b917e88c4cec4f2e1f6b3647</anchor>
      <arglist>(const QString &amp;assetRef)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>GetCacheDirectory</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>ad912dd2936ebb85d6417d845603ea0a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>StoreAsset</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>a4a048268bee911ff448e78642cd27621</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>StoreAsset</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>a07baa2e4ac0c0cbe7578d23551f33daf</anchor>
      <arglist>(const u8 *data, size_t numBytes, const QString &amp;assetName)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>DeleteAsset</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>a7636f98b9382ce6d6ef953ba296535eb</anchor>
      <arglist>(const QString &amp;assetRef)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>DeleteAsset</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>a946a51f73d0288cd38a9920ccc7473d3</anchor>
      <arglist>(const QUrl &amp;assetUrl)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ClearAssetCache</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>aaf73a8e3fb6543075892e829815313f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AssetCache</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>a905c334f501bccaa2e7f6ff2f27cc9d1</anchor>
      <arglist>(AssetAPI *owner, QString assetCacheDirectory)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QIODevice *</type>
      <name>data</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>abcd47a56c7a2a89c47675aa5a82c9234</anchor>
      <arglist>(const QUrl &amp;url)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insert</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>a5642d09699f3493995ad18df17046ee5</anchor>
      <arglist>(QIODevice *device)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QIODevice *</type>
      <name>prepare</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>a825055127ee601f6ec94f6aeb7abd7dc</anchor>
      <arglist>(const QNetworkCacheMetaData &amp;metaData)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>remove</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>a3c4197f3431a11df4ceec37b8f754c96</anchor>
      <arglist>(const QUrl &amp;url)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QNetworkCacheMetaData</type>
      <name>metaData</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>ae2f66336ce2c18bc47f6c573b15d5027</anchor>
      <arglist>(const QUrl &amp;url)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateMetaData</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>a6b1b54f3af61741ed8d90250c60a6eed</anchor>
      <arglist>(const QNetworkCacheMetaData &amp;metaData)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>a9b56c5cff8b57b7cd37ad7b230f140fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual qint64</type>
      <name>expire</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>aedbf18e33b92b20872ea75d8e9eb4f0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>bool</type>
      <name>WriteMetadata</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>ae8f5284dd8e0931e570225b62e6a768e</anchor>
      <arglist>(const QString &amp;filePath, const QNetworkCacheMetaData &amp;metaData)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>QString</type>
      <name>GetAbsoluteFilePath</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>aa5f3b8421ed98926a8acdd4f72aa5ece</anchor>
      <arglist>(bool isMetaData, const QUrl &amp;url)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>QString</type>
      <name>GetAbsoluteDataFilePath</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>a505ffbd38db52e8fe0a57062a3916fe0</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>ClearDirectory</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>a23da0d6947d0c745ddeb48ff985c291d</anchor>
      <arglist>(const QString &amp;absoluteDirPath)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QString</type>
      <name>cacheDirectory</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>a601b849cf37e5ebfd804f851a2a6a74c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AssetAPI *</type>
      <name>assetAPI</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>a44e3d8e794887af4d5edc2b8b6fefbb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QDir</type>
      <name>assetDataDir</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>a751b75e89759e765c78ccb27e99d4e1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QDir</type>
      <name>assetMetaDataDir</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>a0bf0999dfbac18cd30ef23fb603dee91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QHash&lt; QString, QFile * &gt;</type>
      <name>preparedItems</name>
      <anchorfile>class_asset_cache.html</anchorfile>
      <anchor>aa4dce3dea2e313d03c9fe5f094c5e3ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AssetDesc</name>
    <filename>struct_asset_desc.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>struct_asset_desc.html</anchorfile>
      <anchor>a5ed168380ecfed03ccbc5b57126e25db</anchor>
      <arglist>(const AssetDesc &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>struct_asset_desc.html</anchorfile>
      <anchor>a3eda6f8bd6173c7f24320cdf5da2c3f5</anchor>
      <arglist>(const AssetDesc &amp;rhs) const </arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>source</name>
      <anchorfile>struct_asset_desc.html</anchorfile>
      <anchor>add0d599045a3444976b0aa1f5fa3cd85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QByteArray</type>
      <name>data</name>
      <anchorfile>struct_asset_desc.html</anchorfile>
      <anchor>a50adb8ba947629240c16a765813dce14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>dataInMemory</name>
      <anchorfile>struct_asset_desc.html</anchorfile>
      <anchor>af44d789c9c11b462906e1f39e6c6711e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>subname</name>
      <anchorfile>struct_asset_desc.html</anchorfile>
      <anchor>a8bb6cb03d6d6b32dcca9248ff4275c9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>struct_asset_desc.html</anchorfile>
      <anchor>a9051710118f8ebf552225bafa796a8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>destinationName</name>
      <anchorfile>struct_asset_desc.html</anchorfile>
      <anchor>a3276a6ffa248887f966e5e7444604516</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AssetItem</name>
    <filename>class_asset_item.html</filename>
    <member kind="function">
      <type></type>
      <name>AssetItem</name>
      <anchorfile>class_asset_item.html</anchorfile>
      <anchor>a3374235812b6110075710b430f733b07</anchor>
      <arglist>(const AssetPtr &amp;asset, QTreeWidgetItem *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>AssetPtr</type>
      <name>Asset</name>
      <anchorfile>class_asset_item.html</anchorfile>
      <anchor>a3a1e6132720ffda87e86fa66af6a8155</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MarkUnloaded</name>
      <anchorfile>class_asset_item.html</anchorfile>
      <anchor>a879ae81dfa5ae39d755c7fa7e83162ad</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AssetWeakPtr</type>
      <name>assetPtr</name>
      <anchorfile>class_asset_item.html</anchorfile>
      <anchor>a3e360ee5987c037e9600597a0987016d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AssetReference</name>
    <filename>struct_asset_reference.html</filename>
    <member kind="function">
      <type></type>
      <name>AssetReference</name>
      <anchorfile>struct_asset_reference.html</anchorfile>
      <anchor>a3a4c91f283b336f63f674c1ca6860dfc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AssetReference</name>
      <anchorfile>struct_asset_reference.html</anchorfile>
      <anchor>aa7d453a1db76e29c750741e87a74441a</anchor>
      <arglist>(const QString &amp;reference)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AssetReference</name>
      <anchorfile>struct_asset_reference.html</anchorfile>
      <anchor>aced0b279ff2af2c522908f6c01e505d0</anchor>
      <arglist>(const std::string &amp;reference)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AssetReference</name>
      <anchorfile>struct_asset_reference.html</anchorfile>
      <anchor>aee16bde9be337cd5f875491b3d43edb1</anchor>
      <arglist>(const char *reference)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AssetReference</name>
      <anchorfile>struct_asset_reference.html</anchorfile>
      <anchor>aa14d8768f18df956ea125101c9a1677c</anchor>
      <arglist>(const QString &amp;reference, const QString &amp;type_)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>struct_asset_reference.html</anchorfile>
      <anchor>a7c6664a2e01d51804a3e0f4becc9ff83</anchor>
      <arglist>(const AssetReference &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>struct_asset_reference.html</anchorfile>
      <anchor>acfe2e77581fe23d379192a700e58e5a5</anchor>
      <arglist>(const AssetReference &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>struct_asset_reference.html</anchorfile>
      <anchor>a7db081fa147d14bf49455bace962feeb</anchor>
      <arglist>(const AssetReference &amp;rhs) const </arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>ref</name>
      <anchorfile>struct_asset_reference.html</anchorfile>
      <anchor>a7fa8c727099ee21cc6c2e073944d5718</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>type</name>
      <anchorfile>struct_asset_reference.html</anchorfile>
      <anchor>af3773dc2658f5ceede4c04993815364d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AssetReferenceAttributeEditor</name>
    <filename>class_asset_reference_attribute_editor.html</filename>
    <base>ECAttributeEditor&lt; AssetReference &gt;</base>
    <member kind="function">
      <type></type>
      <name>AssetReferenceAttributeEditor</name>
      <anchorfile>class_asset_reference_attribute_editor.html</anchorfile>
      <anchor>abad34c9f16978030b2ba14ac4b453c17</anchor>
      <arglist>(QtAbstractPropertyBrowser *owner, ComponentPtr component, const QString &amp;name, const QString &amp;type, QObject *parent=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetValue</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a594ee7429437754c7da324b5424bb1b2</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetValue</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a3e7a8368e169e2fc11e53c91ad00d4f8</anchor>
      <arglist>(const ComponentPtr &amp;comp, const T &amp;value)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>aec9e6763cb5494905ffdd64c316101d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a9402576d72a6665c118e915739419f04</anchor>
      <arglist>(IAttribute *attr=0)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OpenAssetsWindow</name>
      <anchorfile>class_asset_reference_attribute_editor.html</anchorfile>
      <anchor>aff198f52232515c06c83adc6510fc9e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleNewEditor</name>
      <anchorfile>class_asset_reference_attribute_editor.html</anchorfile>
      <anchor>aa81a144192dbe010b4d04efdcd40b0c3</anchor>
      <arglist>(QtProperty *prop, QObject *)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleAssetPicked</name>
      <anchorfile>class_asset_reference_attribute_editor.html</anchorfile>
      <anchor>a235f2783b73fd7c0cfa543f9bf101cdf</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>RestoreOriginalValue</name>
      <anchorfile>class_asset_reference_attribute_editor.html</anchorfile>
      <anchor>ac86a5ee4855a1faaaa092054edf68151</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OpenEditor</name>
      <anchorfile>class_asset_reference_attribute_editor.html</anchorfile>
      <anchor>a75338b13fd8ce2e9e58daedeff2f7f52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>fw</name>
      <anchorfile>class_asset_reference_attribute_editor.html</anchorfile>
      <anchor>a18df343a4c850bb1220c644de2ae2043</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QMap&lt; ComponentWeakPtr, AssetReference &gt;</type>
      <name>originalValues</name>
      <anchorfile>class_asset_reference_attribute_editor.html</anchorfile>
      <anchor>a1c16ff5c5e367be784f97c65bac29fa5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AssetReferenceList</name>
    <filename>struct_asset_reference_list.html</filename>
    <member kind="function">
      <type></type>
      <name>AssetReferenceList</name>
      <anchorfile>struct_asset_reference_list.html</anchorfile>
      <anchor>a7a2077ecd53451943ffb407b44f2bfe6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AssetReferenceList</name>
      <anchorfile>struct_asset_reference_list.html</anchorfile>
      <anchor>a3d1f33db6ebd1fa127452cbf10244e0a</anchor>
      <arglist>(const QString &amp;preferredType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveLast</name>
      <anchorfile>struct_asset_reference_list.html</anchorfile>
      <anchor>a8204909600eaba5bf01a2fb56c69d749</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveEmpty</name>
      <anchorfile>struct_asset_reference_list.html</anchorfile>
      <anchor>acc60822eef60d94e5b14124ee2d3595f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Size</name>
      <anchorfile>struct_asset_reference_list.html</anchorfile>
      <anchor>aea29f58cbc7b184827676316d612e8b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Append</name>
      <anchorfile>struct_asset_reference_list.html</anchorfile>
      <anchor>a01c18d8ab7c83addd25731b9f9efec9e</anchor>
      <arglist>(const AssetReference &amp;ref)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>struct_asset_reference_list.html</anchorfile>
      <anchor>a90653484ce349659de0cebc886c2312f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>struct_asset_reference_list.html</anchorfile>
      <anchor>a4b5ddc4fd9c3429f0915779406dae182</anchor>
      <arglist>(int i, AssetReference ref)</arglist>
    </member>
    <member kind="function">
      <type>const AssetReference</type>
      <name>operator[]</name>
      <anchorfile>struct_asset_reference_list.html</anchorfile>
      <anchor>ac807fc902f1dc183542093e8074fed61</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>const AssetReference</type>
      <name>operator[]</name>
      <anchorfile>struct_asset_reference_list.html</anchorfile>
      <anchor>a0d8ff42debe52083e3f17906cb126fc8</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>struct_asset_reference_list.html</anchorfile>
      <anchor>aad4ff5f0d05a72cc449883b4d86e4af6</anchor>
      <arglist>(const AssetReferenceList &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>struct_asset_reference_list.html</anchorfile>
      <anchor>a57406d72ffb2633520729a2128f51ec4</anchor>
      <arglist>(const AssetReferenceList &amp;rhs) const </arglist>
    </member>
    <member kind="variable">
      <type>QVariantList</type>
      <name>refs</name>
      <anchorfile>struct_asset_reference_list.html</anchorfile>
      <anchor>a0bed9258bb7445d49b673be753f5f809</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>type</name>
      <anchorfile>struct_asset_reference_list.html</anchorfile>
      <anchor>a01147454b76c6e0187876f0f56458b2a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AssetReferenceListAttributeEditor</name>
    <filename>class_asset_reference_list_attribute_editor.html</filename>
    <base>ECAttributeEditor&lt; AssetReferenceList &gt;</base>
    <member kind="function">
      <type></type>
      <name>AssetReferenceListAttributeEditor</name>
      <anchorfile>class_asset_reference_list_attribute_editor.html</anchorfile>
      <anchor>abdb423d716e4b3c407ae931a78785dda</anchor>
      <arglist>(QtAbstractPropertyBrowser *owner, ComponentPtr component, const QString &amp;name, const QString &amp;type, QObject *parent=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetValue</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a594ee7429437754c7da324b5424bb1b2</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetValue</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a3e7a8368e169e2fc11e53c91ad00d4f8</anchor>
      <arglist>(const ComponentPtr &amp;comp, const T &amp;value)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>aec9e6763cb5494905ffdd64c316101d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a9402576d72a6665c118e915739419f04</anchor>
      <arglist>(IAttribute *attr=0)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OpenAssetsWindow</name>
      <anchorfile>class_asset_reference_list_attribute_editor.html</anchorfile>
      <anchor>a65c41ce0cd46804431b7d078ba173add</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleNewEditor</name>
      <anchorfile>class_asset_reference_list_attribute_editor.html</anchorfile>
      <anchor>aeee6601c301040cce98b97a9fac01fc3</anchor>
      <arglist>(QtProperty *prop, QObject *)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleAssetPicked</name>
      <anchorfile>class_asset_reference_list_attribute_editor.html</anchorfile>
      <anchor>a5a0c4bb0884b2c2475e9c1fdebd16723</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>RestoreOriginalValue</name>
      <anchorfile>class_asset_reference_list_attribute_editor.html</anchorfile>
      <anchor>a8ff9d356f79a023eb9061ebdada2b1f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OpenEditor</name>
      <anchorfile>class_asset_reference_list_attribute_editor.html</anchorfile>
      <anchor>a58dbc4e951a4cb7c79b7de8cbbfc8c92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>fw</name>
      <anchorfile>class_asset_reference_list_attribute_editor.html</anchorfile>
      <anchor>a10d86a2cf1d135b6ba0fdc4ca774d104</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>currentIndex</name>
      <anchorfile>class_asset_reference_list_attribute_editor.html</anchorfile>
      <anchor>a0ec21a5b7284ecc26a5dae778a7eeb2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QMap&lt; ComponentWeakPtr, AssetReferenceList &gt;</type>
      <name>originalValues</name>
      <anchorfile>class_asset_reference_list_attribute_editor.html</anchorfile>
      <anchor>a265e58632be078ba6cfe4de18dfc3a2f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AssetRefItem</name>
    <filename>class_asset_ref_item.html</filename>
    <member kind="function">
      <type></type>
      <name>AssetRefItem</name>
      <anchorfile>class_asset_ref_item.html</anchorfile>
      <anchor>ae041bd4d1bf1a02a104556f8ceb7791f</anchor>
      <arglist>(IAttribute *attr, QTreeWidgetItem *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AssetRefItem</name>
      <anchorfile>class_asset_ref_item.html</anchorfile>
      <anchor>a2881d9846d1621608345114c9179d2e4</anchor>
      <arglist>(const QString &amp;name, const QString &amp;ref, QTreeWidgetItem *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetText</name>
      <anchorfile>class_asset_ref_item.html</anchorfile>
      <anchor>a99bd0a6468331972b531ffd9ba187ca9</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_asset_ref_item.html</anchorfile>
      <anchor>aef37178888de53edd773ccde0332d814</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>id</name>
      <anchorfile>class_asset_ref_item.html</anchorfile>
      <anchor>a44a50de027df7bc53ec638450e8ee2c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>type</name>
      <anchorfile>class_asset_ref_item.html</anchorfile>
      <anchor>aef9411eaa35d760b7ebe1a219eb69bdd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AssetRefListener</name>
    <filename>class_asset_ref_listener.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>Downloaded</name>
      <anchorfile>class_asset_ref_listener.html</anchorfile>
      <anchor>ad3e9bd295bcb0e14849a9fdf44335e33</anchor>
      <arglist>(IAssetTransfer *transfer)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Loaded</name>
      <anchorfile>class_asset_ref_listener.html</anchorfile>
      <anchor>aa4b1c14d76164c229fd61a97a0663e09</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>TransferFailed</name>
      <anchorfile>class_asset_ref_listener.html</anchorfile>
      <anchor>ac215aac356a4440f7e0dd339ec393e90</anchor>
      <arglist>(IAssetTransfer *transfer, QString reason)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleAssetRefChange</name>
      <anchorfile>class_asset_ref_listener.html</anchorfile>
      <anchor>a27182e0dbebbb71b7d18a89c1bb6da2b</anchor>
      <arglist>(IAttribute *assetRef, const QString &amp;assetType=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleAssetRefChange</name>
      <anchorfile>class_asset_ref_listener.html</anchorfile>
      <anchor>ae21b988409144d461980fb1447c6eb1b</anchor>
      <arglist>(AssetAPI *assetApi, QString assetRef, const QString &amp;assetType=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>AssetPtr</type>
      <name>Asset</name>
      <anchorfile>class_asset_ref_listener.html</anchorfile>
      <anchor>a13982582d673edbee3affa540ad8b576</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnTransferSucceeded</name>
      <anchorfile>class_asset_ref_listener.html</anchorfile>
      <anchor>aaa0174fd377e1010f95c47f40638d685</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnAssetLoaded</name>
      <anchorfile>class_asset_ref_listener.html</anchorfile>
      <anchor>a1cd1a9121d196c53ba04d61434dc15b8</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnTransferFailed</name>
      <anchorfile>class_asset_ref_listener.html</anchorfile>
      <anchor>ae5c1a4aeafaf6ce28eee38986d34601f</anchor>
      <arglist>(IAssetTransfer *transfer, QString reason)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AssetWeakPtr</type>
      <name>asset</name>
      <anchorfile>class_asset_ref_listener.html</anchorfile>
      <anchor>abaee090cd81fd056bba1bbfef3a2395c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AssetStorageItem</name>
    <filename>class_asset_storage_item.html</filename>
    <member kind="function">
      <type></type>
      <name>AssetStorageItem</name>
      <anchorfile>class_asset_storage_item.html</anchorfile>
      <anchor>a00e41ff30531ef995b0fca48992a63ff</anchor>
      <arglist>(const AssetStoragePtr &amp;storage, QTreeWidgetItem *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>AssetStoragePtr</type>
      <name>Storage</name>
      <anchorfile>class_asset_storage_item.html</anchorfile>
      <anchor>a04b5585b5d0731971ed5b242c4ba6775</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AssetStorageWeakPtr</type>
      <name>assetStorage</name>
      <anchorfile>class_asset_storage_item.html</anchorfile>
      <anchor>a7d8ab6206f60a38935118641c296b4db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AssetsWindow</name>
    <filename>class_assets_window.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>PopulateTreeWidget</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>a6a9590522afe5089064733d911b5b1ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>AddAsset</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>a15c0740a9f3c90a861d085f5a2f50980</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveAsset</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>a9c39c4c5108a9ac00c7eb9950f11321d</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Search</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>a0692b9d1c19d4b43b3642095517aacf5</anchor>
      <arglist>(const QString &amp;filter)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AssetPicked</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>ae23349aef81f2f2bfad0c530e91d5679</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>PickCanceled</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>a18478f4976a84e3a9844b8549a3bfb21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AssetsWindow</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>a4f762fe827938774c9386b8019341fdc</anchor>
      <arglist>(Framework *fw, QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AssetsWindow</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>aa21e64f2f21ffeb9a3d2734423cc8545</anchor>
      <arglist>(const QString &amp;assetType, Framework *fw, QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AssetsWindow</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>a6de585fdebdad925992d267aa323a71d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>ExpandOrCollapseAll</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>a2ccce479c4f3c07de0a3195cbaffd702</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>CheckTreeExpandStatus</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>a9fee717c30efbd17f05c6cdb6bc7448d</anchor>
      <arglist>(QTreeWidgetItem *item)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleAssetLoaded</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>a020392d130911d94bda08a3e9d82fc03</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleAssetUnloaded</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>a891649bc6700dfcb40dc0fb9b3286023</anchor>
      <arglist>(IAsset *asset)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>PickAsset</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>a7c39997938578d4de544c59898014631</anchor>
      <arglist>(QTreeWidgetItem *)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>PickAssetAndClose</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>a7c3598dcd02aef5c65598c5c756bd377</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>Cancel</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>a99930890bbd02e346cbd71199ee705ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>a33bcec9525bb20b18d7dcc4bed30992d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual bool</type>
      <name>eventFilter</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>a00518c39d2fa9b64e6076a55e857644a</anchor>
      <arglist>(QObject *obj, QEvent *e)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>AddChildren</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>a33b48fa264adc961d2556910ef9f1432</anchor>
      <arglist>(const AssetPtr &amp;asset, QTreeWidgetItem *parent)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>a2900968779e6ec93a607ec75191bc558</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AssetTreeWidget *</type>
      <name>treeWidget</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>aa9db219d878f6401bde3f97746e8329a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QTreeWidgetItem *</type>
      <name>noProviderItem</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>a313d47d5c2a90cbd41aee4f6f0a9c62a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; AssetWeakPtr &gt;</type>
      <name>alreadyAdded</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>aad0836c0595e8f43e6e50008bef9ba14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QLineEdit *</type>
      <name>searchField</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>a6fcd81bf1555ee2c5ffcae7d8dc22a12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QPushButton *</type>
      <name>expandAndCollapseButton</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>abd7dfdba9a3429846ed53d4ea89ba32f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QString</type>
      <name>assetType</name>
      <anchorfile>class_assets_window.html</anchorfile>
      <anchor>a42101912e7205ee5129f636621191dd3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AssetTreeWidget</name>
    <filename>class_asset_tree_widget.html</filename>
    <member kind="function">
      <type></type>
      <name>AssetTreeWidget</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>ab988185d3ff766a9a733d2ecfef0283f</anchor>
      <arglist>(Framework *fw, QWidget *parent=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>contextMenuEvent</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>a8cd9ef24dbacc3b65118f5a493862af3</anchor>
      <arglist>(QContextMenuEvent *e)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>dragEnterEvent</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>ae4b19c31125fb753499511c7a84ff672</anchor>
      <arglist>(QDragEnterEvent *e)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>dragMoveEvent</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>a9c77cee54f8f812a97a4611505cf490f</anchor>
      <arglist>(QDragMoveEvent *e)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>dropEvent</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>ad82c53a8b8848661e4b5e7367a50a4a5</anchor>
      <arglist>(QDropEvent *e)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>DeleteFromSource</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>ad3ebaf5cc5a904cfd8034b2f73c1f094</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>DeleteFromCache</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>a047deacc85762f0efe30e86bae3d9334</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>Forget</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>a5bafde8576f1a7fae4f9f3c1a1cb565c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>Unload</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>ace5ccd40542d6d9ce64e775e4679b5af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>ReloadFromCache</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>aa8f59190e21d8d8628f9c72d6757f712</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>ReloadFromSource</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>a48d84d6ae107e301fe059de6c3530ca3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>Import</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>a8ce055c0e2655f9bef409d2795432b7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OpenFileDialogClosed</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>a6dc7b92ed2cc020c55485234077aadb9</anchor>
      <arglist>(int result)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>RequestNewAsset</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>ac4023fba4e68dc3b27faef2c5b1a5989</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>MakeDefaultStorage</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>ad44c85e8b962b3c35d43ff80cb8e4010</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>RemoveStorage</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>a84946d119c935c66c94632e4f6857e27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>RequestNewAssetDialogClosed</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>a65392a0d27d994e2885855e31a830bba</anchor>
      <arglist>(int result)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>Export</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>a5ac9bea12fb9972f261d8704ac6989a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>Clone</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>a51940050cb4a73fa2ff051350d64e639</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>CloneAssetDialogClosed</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>abea1de52783658a9e28d10e3db2e6289</anchor>
      <arglist>(int result)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>SaveAssetDialogClosed</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>a112c0cad3b28597f70165b626f13e873</anchor>
      <arglist>(int result)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>Upload</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>a9fa9009af87ef6842e9e96b291eac816</anchor>
      <arglist>(const QStringList &amp;files)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OpenFileLocation</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>a0b8931761d50066cfefa26199ca1947e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OpenFunctionDialog</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>a9f5acc300dcee8dd33162f43eaad7abe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>FunctionDialogFinished</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>ac662b6c77888f39bc5ab09084c3d5232</anchor>
      <arglist>(int result)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>AddAvailableActions</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>a507025888b4aa50c079c1af559fbc920</anchor>
      <arglist>(QMenu *menu)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>AssetTreeWidgetSelection</type>
      <name>GetSelection</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>a0e0aa7427d58f1058b47763cd813a625</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>a2535c5116adf0e0a29c2fce9654f0bb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QMenu *</type>
      <name>contextMenu</name>
      <anchorfile>class_asset_tree_widget.html</anchorfile>
      <anchor>a3256aebd9a53598dd45c988082f7478a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AssetTreeWidgetSelection</name>
    <filename>struct_asset_tree_widget_selection.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>struct_asset_tree_widget_selection.html</anchorfile>
      <anchor>a63fa3bdf244659f8b4d08864296c08a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasAssets</name>
      <anchorfile>struct_asset_tree_widget_selection.html</anchorfile>
      <anchor>abccfbe07f0e09a596eb4bfd7974234d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasStorages</name>
      <anchorfile>struct_asset_tree_widget_selection.html</anchorfile>
      <anchor>aca718437022e76efe173ac185aed3624</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>QList&lt; AssetItem * &gt;</type>
      <name>assets</name>
      <anchorfile>struct_asset_tree_widget_selection.html</anchorfile>
      <anchor>af649ea55a91e6cb4d1db963790783c33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QList&lt; AssetStorageItem * &gt;</type>
      <name>storages</name>
      <anchorfile>struct_asset_tree_widget_selection.html</anchorfile>
      <anchor>a2fbbaa23b14923a322952a4b69875b41</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AssetWidgetItem</name>
    <filename>class_asset_widget_item.html</filename>
    <member kind="function">
      <type></type>
      <name>AssetWidgetItem</name>
      <anchorfile>class_asset_widget_item.html</anchorfile>
      <anchor>a0c00305bfd04fe990508f9d2576f126a</anchor>
      <arglist>(const AssetDesc &amp;adesc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>class_asset_widget_item.html</anchorfile>
      <anchor>afff469f4e3a41f6b3243684441eec46a</anchor>
      <arglist>(const QTreeWidgetItem &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RewriteText</name>
      <anchorfile>class_asset_widget_item.html</anchorfile>
      <anchor>a66f48c0ce6a4c62c8d9fbdb6e828557e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>AssetDesc</type>
      <name>desc</name>
      <anchorfile>class_asset_widget_item.html</anchorfile>
      <anchor>a00cf72ebac76b0a8eb6229b18b46f1bd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Attribute</name>
    <filename>class_attribute.html</filename>
    <base>IAttribute</base>
    <member kind="function">
      <type></type>
      <name>Attribute</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a9dd64abb9d82cc38cda8bd78bc292114</anchor>
      <arglist>(IComponent *owner, const char *name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Attribute</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a72fcebd19a185627aed041cde8c4b1b8</anchor>
      <arglist>(IComponent *owner, const char *name, const T &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>Get</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>abb4947cf9fb461fd47eae3d797cac416</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a38d4beee48da822b9f306f8a648ef53e</anchor>
      <arglist>(const T &amp;value, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IAttribute *</type>
      <name>Clone</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>aebfb795ee884df6b2a5911b1cd955698</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CopyValue</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a8e6dece5ea0138dab6c356ddd447ff04</anchor>
      <arglist>(IAttribute *source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>ToString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a29b0a5f77f3568cdd83af810c4b0b489</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>FromString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>aad5d00dcf5e2534046c810554c5b112a</anchor>
      <arglist>(const std::string &amp;str, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ToBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a0849abcf67c45a181677e9519c06af50</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>FromBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a73976ab8faa8c6a407f186fb6f108089</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Interpolate</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a9a0a1963a98405574fc2eecaac58d596</anchor>
      <arglist>(IAttribute *start, IAttribute *end, float t, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QString</type>
      <name>TypeName</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a6f4074b72ff10e53f5ef7207f1b863ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual u32</type>
      <name>TypeId</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a53322f32a9eaf2661f74e7eb063eec4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QVariant</type>
      <name>ToQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>af3b882d4d70feaf632ca5ea553b4747c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>FromQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>abd341e3bb2147b2291926b9373e206ce</anchor>
      <arglist>(const QVariant &amp;variant, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>FromScriptValue</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ab68f7d368f7c6e573de231d28981c043</anchor>
      <arglist>(const QScriptValue &amp;value, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>TypeId</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ac2c76ef9707e34913ad11276abb116a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>TypeId</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a2382b7bf0ecd2b7adccf1692510f44ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>TypeId</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a14fb264b765799a1764d38beb65f360a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>TypeId</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a0a00cdf588bab1078bd5b625484c4275</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>TypeId</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a2d7adfaa47e6ac3d0672885e56c28db9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>TypeId</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ab08fe3503db38c14e2d773da03fb83dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>TypeId</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a3576e8d34fead0dbe16fde079e5df57b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>TypeId</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a6a50aa1309bb1f867f3978d5178a4052</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>TypeId</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a4d62570f1266fcb6a82cff79d23e7d47</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>TypeId</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ab8142abad7e8c77de8d5d6796bdd14da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>TypeId</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>aaa35a5eb8fd529c6ff72c84cdba44fe7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>TypeId</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a48f538187686baeafa581ff40f8cfd9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>TypeId</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a4f67fcf6a258a4c287855b5f6f007bf8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>TypeId</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a5877cc10d63fa2ae769e2f04aface6d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>TypeId</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a943a12ef9a00a3b13931971a362f1c56</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>TypeId</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ad93c3b0749b7dc90bd9a0dfbe55d4ef4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>TypeId</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>aca747cd38574dc6ea8f8d0c935c16407</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ToString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a038480c289cf434bf5299a783609b8d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ToString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ae9fb708b97256814ac4f39a1dc8c0230</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ToString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a06e0faacc2625573809391dd02fab75a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ToString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>af7dbe912e118c0e7b7c4fb66cdc1fab0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ToString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>af03ed87e74744f6a907a64551b91d43a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ToString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a2a2996fd51bf79ad7b29951beff0a814</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ToString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>af1831e174ac50a0d5733aa3ecabcc723</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ToString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>adf810d1cb2fe20124f3922f17e4b4ada</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ToString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a4f17807cecdbf81d1be09bbcdf0350cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ToString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a12b635ddcdec112aee46b730270baf6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ToString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ac65d80ffe180f4c54197f5c1c1c09bc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ToString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a085807f3ce94d26a70a575f32f58a053</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ToString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>afe16bf11f75c0a9be3590199dee3d2a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ToString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a7cadfff3ef9a8499ee09e59adaa50d00</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ToString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a634e820e634f3de4c46721061d19b16c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ToString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a23053ec997dde37a5177f2b3ff5cee17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ToString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>adf446e1b90844e5bbac385aabc57547e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>TypeName</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a2acdafcd6e7e55a1e4106a8c9de29001</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>TypeName</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a42cc8342158a22b34a77305ac2ae4a2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>TypeName</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>af0c11e63517f96c436943fc92cfb1e01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>TypeName</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a3593560e13f49cdeb0b7d8fb83798c30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>TypeName</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a0eb69a535deee635718bb428982cae8f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>TypeName</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a12ea037c5d32d698c54d06752f6fc939</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>TypeName</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>aec086f2a753c131b7fe6c62b4a788976</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>TypeName</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>add530a79ada7e2ee484b9ccc36193635</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>TypeName</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a8a43f116babdd5369247bc5026b6aba1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>TypeName</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a6392c1b84f787e3e63418a37467a752e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>TypeName</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a5deb7ea14459ae5b26db194b57ce2baa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>TypeName</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>afdfc8de8082bc721e0c5bad63cb33d13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>TypeName</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a3783b22c4745dfe88bbb8b2410e2bcef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>TypeName</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a1770125d7bd3983164423c243915c7bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>TypeName</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>abb5500a5144809eca1e4d22121f4da48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>TypeName</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a6f8b8e57ade1a32ee5937059eb9fc02b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>TypeName</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a70679830c33050f7ce8b64688ce54dfb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a421d37b9d8439dd916efc61d7a3fcf24</anchor>
      <arglist>(const std::string &amp;str, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a29ebfb651d086c9aed7b8368954ba573</anchor>
      <arglist>(const std::string &amp;str, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a72f1bbc97bbf4054ff4e2f95d3e602fc</anchor>
      <arglist>(const std::string &amp;str, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a479093439b68cce65d7179c5bc32857d</anchor>
      <arglist>(const std::string &amp;str, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ad678cfc7523dc98abcd58a27943b7f37</anchor>
      <arglist>(const std::string &amp;str, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a0fb05996d14a325fdc3a20bdc6e96a39</anchor>
      <arglist>(const std::string &amp;str, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a05cd8aaa9eef9d9e3a722ba578ea3f1d</anchor>
      <arglist>(const std::string &amp;str, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a3264c84fd131a735650aa5f0f2dad533</anchor>
      <arglist>(const std::string &amp;str, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a46f87ab83f0b8bc886e030ec70a7bcdc</anchor>
      <arglist>(const std::string &amp;str, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a21469a9e3789a5a307cccd3705b2bab2</anchor>
      <arglist>(const std::string &amp;str, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a652a7462b978edb22c47b0a2c0d2af51</anchor>
      <arglist>(const std::string &amp;str, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>abe9fb30c758acebb9fe1965d00f21ee8</anchor>
      <arglist>(const std::string &amp;str, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>aa5effc629bcd2cb7f6dbea634f421665</anchor>
      <arglist>(const std::string &amp;str, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ad5f8a53d8f9901afd0b740f850d03d1c</anchor>
      <arglist>(const std::string &amp;str, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a45cacee6ab91cb3e9f45f97295b82b7d</anchor>
      <arglist>(const std::string &amp;str, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>adb73961f23d51bc4347e582ae584ef49</anchor>
      <arglist>(const std::string &amp;str, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>aaa64b8573b90490523ad4a9fe11c1c68</anchor>
      <arglist>(const std::string &amp;str, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ab393fce26d1e694655064edf6338f6e4</anchor>
      <arglist>(const QVariant &amp;variant, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a173d3ae744fbd20f21b72652ebfef8d9</anchor>
      <arglist>(const QVariant &amp;variant, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a958a66df2c9bd522321b54de757e2f81</anchor>
      <arglist>(const QVariant &amp;variant, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a57a85473f310a0b0c753bd704f188838</anchor>
      <arglist>(const QVariant &amp;variant, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a7740a06878d256785baeac10312247ff</anchor>
      <arglist>(const QVariant &amp;variant, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a7e7d3bc1451b18b20b36734c9cfefca6</anchor>
      <arglist>(const QVariant &amp;variant, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>aef8cc2d0b859fe24666481182c89662b</anchor>
      <arglist>(const QVariant &amp;variant, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a606cfff1a7d2fae66fcb7fe55927b1ca</anchor>
      <arglist>(const QVariant &amp;variant, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>abe34dc48c01517174aea06d86ead5411</anchor>
      <arglist>(const QVariant &amp;variant, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ab08c6ab976d1c87099c461d7b56b0e7f</anchor>
      <arglist>(const QVariant &amp;variant, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a1c1935db8f80cab17482a4a0159b16bb</anchor>
      <arglist>(const QVariant &amp;variant, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a9ef3144938216a9be1d807a04349c8a0</anchor>
      <arglist>(const QVariant &amp;variant, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a75dbd828665cf529b652128a70e3884b</anchor>
      <arglist>(const QVariant &amp;variant, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a4efcd361d0668be09e0dc423f74f7f42</anchor>
      <arglist>(const QVariant &amp;variant, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a792dcc81c92e11171d16916cb047592f</anchor>
      <arglist>(const QVariant &amp;variant, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ac70ac9f01399df789244d9aa501ff42c</anchor>
      <arglist>(const QVariant &amp;variant, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a5cf9899c3d0475615c6828d56d3ddd6c</anchor>
      <arglist>(const QVariant &amp;variant, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>ToQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ad5010fdf0fe563eb39ce67d5a23b7355</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>ToQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ad1e7e0798f7fae236d6cdbb3ffa03ad7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>ToQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a6991366054640c173d524cda5e801f44</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>ToQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a2dbc6dbca6736737742e9e88c28e56b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>ToQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a6df9758ef1498028becf96a04da8514d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>ToQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a6a12dca8a96dc7ba97d9fb37dbdd569d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>ToQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a3d99fb409b6120965a1b8661d2929eb6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>ToQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>aabace357ba4e4648d88b01c41fc56c44</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>ToQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a2f1ef525d24ff5323f7fcdf41d3f8012</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>ToQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>acae52fb47de7bdd70ea628a077763c07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>ToQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>aaa080866d56f39553b96f15fe598f6c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>ToQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a4d05e33025eaed5356486d847e4c09ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>ToQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ae0a9e390810cd925db9a6c9e200eae3a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>ToQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a8e0d896ed7c0f26d04407aec0bc80ffc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>ToQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a346262bf1189e8292ff4953cb6fef806</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>ToQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a4be84fa2a9d32e8dbb19bca860fd0d2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>ToQVariant</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a5916ee0bb7075a3991b13cb380befa73</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromScriptValue</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a66d02ff75832af31ec648f0779feb3fd</anchor>
      <arglist>(const QScriptValue &amp;value, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromScriptValue</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a43a2c3e9b96163d5f18d48914d757227</anchor>
      <arglist>(const QScriptValue &amp;value, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromScriptValue</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a703d7bf0e3bbf6d9aa5a09c82b353e93</anchor>
      <arglist>(const QScriptValue &amp;value, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromScriptValue</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a98bd8403b57254334f44f455d1e6e2d7</anchor>
      <arglist>(const QScriptValue &amp;value, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromScriptValue</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a58dc0feacde6b5d898c9c14783013f49</anchor>
      <arglist>(const QScriptValue &amp;value, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromScriptValue</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a8e82f2624f46fe621a6e3fcb9cd79c92</anchor>
      <arglist>(const QScriptValue &amp;value, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromScriptValue</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>aabf3216382d662fe0ff94f9346d0dd51</anchor>
      <arglist>(const QScriptValue &amp;value, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromScriptValue</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a7472a5a581b9ce69c06e4b822fac686d</anchor>
      <arglist>(const QScriptValue &amp;value, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromScriptValue</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a475f7746175f32aa6c07e5e370b8214e</anchor>
      <arglist>(const QScriptValue &amp;value, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromScriptValue</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a15c1aea4f5aab20a314f89cffa6a03b5</anchor>
      <arglist>(const QScriptValue &amp;value, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromScriptValue</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a46ecd62d9c281bcf2b911f752edb52ff</anchor>
      <arglist>(const QScriptValue &amp;value, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromScriptValue</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>aab4b37b554714b49ed55fd795226a334</anchor>
      <arglist>(const QScriptValue &amp;value, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromScriptValue</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a422d036238825fb7c7f4784f85253d0f</anchor>
      <arglist>(const QScriptValue &amp;value, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromScriptValue</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ab133b23613f8ade92130faf830a9fa8c</anchor>
      <arglist>(const QScriptValue &amp;value, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromScriptValue</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>aa9486b2e62a41230a4dbceacf9457ed8</anchor>
      <arglist>(const QScriptValue &amp;value, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromScriptValue</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ac7ba12cf96ca3ef3f683b678ddcd53e5</anchor>
      <arglist>(const QScriptValue &amp;value, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromScriptValue</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a343a7a093c7246e843b68d2b3892048d</anchor>
      <arglist>(const QScriptValue &amp;value, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a1687c1f9bae9921d0eb50430f2394527</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ad1f148b982705f14d05d7b98a721a775</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a64a398b36e566d12263739c9c3626a6e</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a52f3332785c1ad877004c80ea8761f2f</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ac6d140152548038a1690201f8c6433bf</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ab71ed01db999eadf1c540a1555059082</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a501a80d6db06588674f0eacaaed12c8b</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a8a05ed10854aaf12e5d046bf1c484c50</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a92ce5aa9d5583b2e68aceaa11bf4717b</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ac4a78c84d4be9df99ac0d994e9080dfd</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a05615b6cb3490d0902a290a8f428cb72</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a3f02a037fc9f713e20a416b18363dd8d</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a5eb1cc1f98c322d6acc561436ba6ea5d</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a854ec11cada4f0284976b681113e6c40</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a67e798b374bc43d5762819dee74d61ef</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>abcd574b8c26c373c9ca8f6f8123eadde</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ada6adef47197492875015b2d65838cc2</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a901781a258998552bcc6d58a29ea3d98</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a654cd6155865cd822426c3017a2cface</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a0b2dce09b617de1296a76e9361cb3ca7</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>af84dfdef70788407e10a9e31a39d4f00</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>aad87eae53d268e55274cd4b8630dc403</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a54e8a7499c17abcd2cf1c19ec7d14df3</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a5f0c0885817760a01f44396d3b972520</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a6188b11a21a9df6d5829f719c2b1cf04</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>afc094f2cce287635123f059dc5185114</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a009ca1948e5ace8ded8eb7d040e94d2c</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a7df009b5492a075effaed4b21bc05e9e</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ad1dfb80de7ae421ecb356087f582e29b</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ac6059b3e170ed025c430742142052a13</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a4d0d6416627177e62b16e61c085aec8f</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ae56a1c8b37018ba0ec8391e4b35884d6</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>aa6cb3f1b875f946d11a3e553234cdfe2</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromBinary</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a5228e01ce9aba5190856f66a46a30e3a</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Interpolate</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a202ade6611133e0458f1d23feddbcded</anchor>
      <arglist>(IAttribute *start, IAttribute *end, float t, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Interpolate</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a9163f8c11901255e5ea86bd57297f4cd</anchor>
      <arglist>(IAttribute *start, IAttribute *end, float t, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Interpolate</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a577bddaf19ed7ad2e772b88ac090f725</anchor>
      <arglist>(IAttribute *start, IAttribute *end, float t, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Interpolate</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>aa9dcfdb57f5f429396ce40934aac612f</anchor>
      <arglist>(IAttribute *start, IAttribute *end, float t, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Interpolate</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>aef2bc4b4e69e06a7c7b035f8e51797a9</anchor>
      <arglist>(IAttribute *start, IAttribute *end, float t, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Interpolate</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a0cdb2c9b81f3edc538b965ba309d8085</anchor>
      <arglist>(IAttribute *start, IAttribute *end, float t, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Interpolate</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a3d9dc2f3b1cd7376102892535e96a529</anchor>
      <arglist>(IAttribute *start, IAttribute *end, float t, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Interpolate</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a01a4c38b3ff7d15a78557c09259d04ad</anchor>
      <arglist>(IAttribute *start, IAttribute *end, float t, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Interpolate</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a90268ca7e5a85e0bbb347f4bb5c63efb</anchor>
      <arglist>(IAttribute *start, IAttribute *end, float t, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Interpolate</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>abbcb89c3af1bffaa8cad36ade5382187</anchor>
      <arglist>(IAttribute *start, IAttribute *end, float t, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Interpolate</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ac7e3dcba1c443b0666a25722482d167e</anchor>
      <arglist>(IAttribute *start, IAttribute *end, float t, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Interpolate</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a82b8d95adc6fe7d41cbddaad3d323193</anchor>
      <arglist>(IAttribute *start, IAttribute *end, float t, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Interpolate</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>aae55545a18a3b20db38add8e8a0885a5</anchor>
      <arglist>(IAttribute *start, IAttribute *end, float t, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Interpolate</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>aa6b658dd234e998d324ca51741e2fb0a</anchor>
      <arglist>(IAttribute *start, IAttribute *end, float t, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Interpolate</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>ad10f0b0f1864693d6062d8ec6e53a840</anchor>
      <arglist>(IAttribute *start, IAttribute *end, float t, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Interpolate</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a01c34af6612833519cda2670ef229065</anchor>
      <arglist>(IAttribute *start, IAttribute *end, float t, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Interpolate</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>a6d06d26d39ab37008ca87b5faae42b1e</anchor>
      <arglist>(IAttribute *start, IAttribute *end, float t, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>IComponent *</type>
      <name>Owner</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>a6b61179eeb005a354656557959f1331d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>aad8167e9d88fea05f129bc27a9010cfe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMetadata</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>a9c384b4521eb3836b6b1e1d4631dd7c2</anchor>
      <arglist>(AttributeMetadata *meta)</arglist>
    </member>
    <member kind="function">
      <type>AttributeMetadata *</type>
      <name>Metadata</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>ac7a4585681999c01e9de14fd060d4156</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDynamic</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>ab3502a1174db4caf8e9e748626c69250</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>u8</type>
      <name>Index</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>a17f08e4484b4b5ac5826a28c4a14d7fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Changed</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>ac1aa6dd1efd662414a4e47e022e36f7b</anchor>
      <arglist>(AttributeChange::Type change)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IComponent *</type>
      <name>owner</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>a54bcee5a9a7d602499dd749858b62a6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>a424444cdbea0f9c6df264d7ea160984d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AttributeMetadata *</type>
      <name>metadata</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>a7da2a9e1605f986531bfdd6735b845c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>dynamic</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>a5fe6bd36ee0974fa480ec900051f6f41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>u8</type>
      <name>index</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>a7043aa32a06da1ae93b634a6635e99e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T</type>
      <name>value</name>
      <anchorfile>class_attribute.html</anchorfile>
      <anchor>aa548d9213403a3be625cdd28a5889506</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>SceneAPI</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>ac967c6054ece854f41e058fd1af0f506</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>IComponent</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>a5ff52d239b68a851c87a767a9d9a3c55</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AttributeChange</name>
    <filename>class_attribute_change.html</filename>
    <member kind="enumeration">
      <name>Type</name>
      <anchorfile>class_attribute_change.html</anchorfile>
      <anchor>acb0ea3e32e597d279346302e93bd91ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Default</name>
      <anchorfile>class_attribute_change.html</anchorfile>
      <anchor>acb0ea3e32e597d279346302e93bd91edab2eb80866ed4294963453c9491417bf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Disconnected</name>
      <anchorfile>class_attribute_change.html</anchorfile>
      <anchor>acb0ea3e32e597d279346302e93bd91edaf5c7e93f907441b91380a863ec917fb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LocalOnly</name>
      <anchorfile>class_attribute_change.html</anchorfile>
      <anchor>acb0ea3e32e597d279346302e93bd91eda83185c11cdac1386e3c72a5fe8b8a55b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Replicate</name>
      <anchorfile>class_attribute_change.html</anchorfile>
      <anchor>acb0ea3e32e597d279346302e93bd91eda4dd9ea0736a6c80dc248bc0fa7c15dbd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AttributeDesc</name>
    <filename>struct_attribute_desc.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>struct_attribute_desc.html</anchorfile>
      <anchor>a160303b8412dc1fc3f3ae6ce27016d91</anchor>
      <arglist>(const AttributeDesc &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>struct_attribute_desc.html</anchorfile>
      <anchor>ae3795bce704ace60e5ea9a19b3cd7e81</anchor>
      <arglist>(const AttributeDesc &amp;rhs) const </arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>struct_attribute_desc.html</anchorfile>
      <anchor>a845f656c42e8d9a67fbf4a2294e3ac6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>name</name>
      <anchorfile>struct_attribute_desc.html</anchorfile>
      <anchor>a761773127a61a06475751175b94ebdd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>value</name>
      <anchorfile>struct_attribute_desc.html</anchorfile>
      <anchor>a523c0144cfb03188f818776975c4e411</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AttributeInterpolation</name>
    <filename>struct_attribute_interpolation.html</filename>
    <member kind="function">
      <type></type>
      <name>AttributeInterpolation</name>
      <anchorfile>struct_attribute_interpolation.html</anchorfile>
      <anchor>ad8bea3aef5cafd7e64c8c1b2d07c4ccb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>IAttribute *</type>
      <name>dest</name>
      <anchorfile>struct_attribute_interpolation.html</anchorfile>
      <anchor>a81a2ed96427f52286613a253b03d6630</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>IAttribute *</type>
      <name>start</name>
      <anchorfile>struct_attribute_interpolation.html</anchorfile>
      <anchor>a176cacbb453d5c0c5a096603c57ddb02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>IAttribute *</type>
      <name>end</name>
      <anchorfile>struct_attribute_interpolation.html</anchorfile>
      <anchor>accaf7426e63528ca0ff81a662e49710f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>entity_id_t</type>
      <name>entityId</name>
      <anchorfile>struct_attribute_interpolation.html</anchorfile>
      <anchor>a715450fb156867f2ba3d63bce0619c93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>compTypeId</name>
      <anchorfile>struct_attribute_interpolation.html</anchorfile>
      <anchor>a36c1ab3bc81077d067d17bbcf465a0ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>compName</name>
      <anchorfile>struct_attribute_interpolation.html</anchorfile>
      <anchor>a04f8fa39f5b06410af7eb7513d57ef47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>time</name>
      <anchorfile>struct_attribute_interpolation.html</anchorfile>
      <anchor>a7abb11edd47130ed8b8b1ec3c87c12e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>length</name>
      <anchorfile>struct_attribute_interpolation.html</anchorfile>
      <anchor>a36b9ee455965226ab78e676f6a6a000f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AttributeMetadata</name>
    <filename>class_attribute_metadata.html</filename>
    <class kind="struct">AttributeMetadata::ButtonInfo</class>
    <member kind="enumeration">
      <name>InterpolationMode</name>
      <anchorfile>class_attribute_metadata.html</anchorfile>
      <anchor>a98950c88bcdaa1b7ba625f76caaf9adf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>None</name>
      <anchorfile>class_attribute_metadata.html</anchorfile>
      <anchor>a98950c88bcdaa1b7ba625f76caaf9adfab7fddafe80988cf82b4c937eeb4f98f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Interpolate</name>
      <anchorfile>class_attribute_metadata.html</anchorfile>
      <anchor>a98950c88bcdaa1b7ba625f76caaf9adfaedf1346c8329eb85ecfdb674e3acbfac</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>QList&lt; ButtonInfo &gt;</type>
      <name>ButtonInfoList</name>
      <anchorfile>class_attribute_metadata.html</anchorfile>
      <anchor>a32b1adbc66575c15e13bca87d913a8ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; int, std::string &gt;</type>
      <name>EnumDescMap_t</name>
      <anchorfile>class_attribute_metadata.html</anchorfile>
      <anchor>a2b15389f2e70653df9784d5bf0126c2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AttributeMetadata</name>
      <anchorfile>class_attribute_metadata.html</anchorfile>
      <anchor>af2f4e9f89e304ee57a940551514917d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AttributeMetadata</name>
      <anchorfile>class_attribute_metadata.html</anchorfile>
      <anchor>a47ce793b8acb04a95cbeb2e8dca88e17</anchor>
      <arglist>(const QString &amp;desc, const QString &amp;min=&quot;&quot;, const QString &amp;max=&quot;&quot;, const QString &amp;step_=&quot;&quot;, const EnumDescMap_t &amp;enum_desc=EnumDescMap_t(), InterpolationMode interpolation_=None, bool designable_=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AttributeMetadata</name>
      <anchorfile>class_attribute_metadata.html</anchorfile>
      <anchor>a416ea61241377c995e20c83358f29e4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>description</name>
      <anchorfile>class_attribute_metadata.html</anchorfile>
      <anchor>ab10b2c58dc3c616be5e5f6b57dc11210</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>minimum</name>
      <anchorfile>class_attribute_metadata.html</anchorfile>
      <anchor>a816eb4963c6475748b2e02502bbd5d07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>maximum</name>
      <anchorfile>class_attribute_metadata.html</anchorfile>
      <anchor>ac4bdb952e292d258b6dde36d314a04c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>step</name>
      <anchorfile>class_attribute_metadata.html</anchorfile>
      <anchor>a91e16a15711c65aabcce7b70b64bf1e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ButtonInfoList</type>
      <name>buttons</name>
      <anchorfile>class_attribute_metadata.html</anchorfile>
      <anchor>a3adf27b70becc66ee6952a789e2bef3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>elementType</name>
      <anchorfile>class_attribute_metadata.html</anchorfile>
      <anchor>ac33434f56d04abb4b45465b25aa9b76c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>InterpolationMode</type>
      <name>interpolation</name>
      <anchorfile>class_attribute_metadata.html</anchorfile>
      <anchor>a364a671fac9e4ae421b831e86c227b5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EnumDescMap_t</type>
      <name>enums</name>
      <anchorfile>class_attribute_metadata.html</anchorfile>
      <anchor>ad0c903eba0a1c80535a2d4aed2bd64b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>designable</name>
      <anchorfile>class_attribute_metadata.html</anchorfile>
      <anchor>a13956ef4ca62469521eb8c8b240eb839</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>AttributeMetadata</name>
      <anchorfile>class_attribute_metadata.html</anchorfile>
      <anchor>af118090b73abaa88127061fa1432ae84</anchor>
      <arglist>(const AttributeMetadata &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>class_attribute_metadata.html</anchorfile>
      <anchor>a57586f076dbbc49f991e8493363301a2</anchor>
      <arglist>(const AttributeMetadata &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AttributeMetadata::ButtonInfo</name>
    <filename>struct_attribute_metadata_1_1_button_info.html</filename>
    <member kind="function">
      <type></type>
      <name>ButtonInfo</name>
      <anchorfile>struct_attribute_metadata_1_1_button_info.html</anchorfile>
      <anchor>a3937e4b894258cada930129a3c24f95a</anchor>
      <arglist>(const QString &amp;object_name, const QString &amp;button_text, const QString &amp;method_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>struct_attribute_metadata_1_1_button_info.html</anchorfile>
      <anchor>a169f92db2442d490d97dc6552d87e806</anchor>
      <arglist>(const ButtonInfo &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>struct_attribute_metadata_1_1_button_info.html</anchorfile>
      <anchor>a3eba3ef36c5c155618163d4830af4d8c</anchor>
      <arglist>(const ButtonInfo &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>struct_attribute_metadata_1_1_button_info.html</anchorfile>
      <anchor>adfae68b422b681934d385a155cba8686</anchor>
      <arglist>(const ButtonInfo &amp;rhs) const </arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>objectName</name>
      <anchorfile>struct_attribute_metadata_1_1_button_info.html</anchorfile>
      <anchor>a88ab7154e2bc56e5e16ef3eb00733048</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>text</name>
      <anchorfile>struct_attribute_metadata_1_1_button_info.html</anchorfile>
      <anchor>adaf611a6b522d1cb37ea1f60d5ca6657</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>method</name>
      <anchorfile>struct_attribute_metadata_1_1_button_info.html</anchorfile>
      <anchor>aa4b7c6aeff30779fe40323f85a2e6982</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AttributeWeakPtr</name>
    <filename>struct_attribute_weak_ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>AttributeWeakPtr</name>
      <anchorfile>struct_attribute_weak_ptr.html</anchorfile>
      <anchor>a0265519a74686293cb592ed0022f32d5</anchor>
      <arglist>(const ComponentPtr &amp;c, IAttribute *a)</arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>Get</name>
      <anchorfile>struct_attribute_weak_ptr.html</anchorfile>
      <anchor>ae89ba3d3a94b01313dcd9ab55e18918e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>struct_attribute_weak_ptr.html</anchorfile>
      <anchor>a0521cfed2f85a442b562320b8995774a</anchor>
      <arglist>(const AttributeWeakPtr &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>struct_attribute_weak_ptr.html</anchorfile>
      <anchor>af8de105ee60f4f3fc9af93362b39cb22</anchor>
      <arglist>(const AttributeWeakPtr &amp;rhs) const </arglist>
    </member>
    <member kind="variable">
      <type>ComponentWeakPtr</type>
      <name>owner</name>
      <anchorfile>struct_attribute_weak_ptr.html</anchorfile>
      <anchor>a81bc28a4bb29672d2d9ec56551d64b46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>IAttribute *</type>
      <name>attribute</name>
      <anchorfile>struct_attribute_weak_ptr.html</anchorfile>
      <anchor>aa0960ac53c8d6c77d897ca13414f34c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AudioAPI</name>
    <filename>class_audio_a_p_i.html</filename>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetPlaybackDevices</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>a25a3b78b8c90e1b1208fdf5544675bd1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetListener</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>ad31866665e5a78ed88dfa5b9de1d9322</anchor>
      <arglist>(const float3 &amp;position, const Quat &amp;orientation)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetMasterGain</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>a923333d5c516f111714d5480f83cdab6</anchor>
      <arglist>(float master_gain)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetSoundMasterGain</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>a0b9bc653445021b2200287e487eb450a</anchor>
      <arglist>(SoundChannel::SoundType type, float master_gain)</arglist>
    </member>
    <member kind="slot">
      <type>float</type>
      <name>GetMasterGain</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>aeb8a95c70f38867e5ea2283f2f142cc6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>float</type>
      <name>GetSoundMasterGain</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>a5b2a50026e121f49b387cc9b0ac5ce1a</anchor>
      <arglist>(SoundChannel::SoundType type)</arglist>
    </member>
    <member kind="slot">
      <type>SoundChannelPtr</type>
      <name>PlaySound</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>ac66a4f139503e75a97fcac039acc1787</anchor>
      <arglist>(AssetPtr audioAsset, SoundChannel::SoundType type=SoundChannel::Triggered, SoundChannelPtr existingChannel=SoundChannelPtr())</arglist>
    </member>
    <member kind="slot">
      <type>SoundChannelPtr</type>
      <name>PlaySound3D</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>ae08fd19b99979c018bf940552273b54d</anchor>
      <arglist>(const float3 &amp;position, AssetPtr audioAsset, SoundChannel::SoundType type=SoundChannel::Triggered, SoundChannelPtr existingChannel=SoundChannelPtr())</arglist>
    </member>
    <member kind="slot">
      <type>SoundChannelPtr</type>
      <name>PlaySoundBuffer</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>a1d7439ec94d5596f1b5d39d6dc84848c</anchor>
      <arglist>(const SoundBuffer &amp;buffer, SoundChannel::SoundType type=SoundChannel::Triggered, SoundChannelPtr existingChannel=SoundChannelPtr())</arglist>
    </member>
    <member kind="slot">
      <type>SoundChannelPtr</type>
      <name>PlaySoundBuffer3D</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>a681d1d8916f8ca045ea12763c8283b64</anchor>
      <arglist>(const SoundBuffer &amp;buffer, SoundChannel::SoundType type=SoundChannel::Triggered, float3 position=float3(0.0f, 0.0f, 0.0f), SoundChannelPtr existingChannel=SoundChannelPtr())</arglist>
    </member>
    <member kind="slot">
      <type>std::vector&lt; SoundChannelPtr &gt;</type>
      <name>GetActiveSounds</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>acd9abcb7ca0931242024f1f8718e8997</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Stop</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>ad1e2cca8f8c6c8705dcd745dc0b4876f</anchor>
      <arglist>(SoundChannelPtr channel)</arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetRecordingDevices</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>a47101d4adeb2310af3385068bd4cd3f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>AudioAssetPtr</type>
      <name>CreateAudioAssetFromSoundBuffer</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>aca0ecab1abac0dce672d0d75009675a7</anchor>
      <arglist>(const SoundBuffer &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioAPI</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>ad690d92b9bf87abab378fc322a763ec8</anchor>
      <arglist>(Framework *fw, AssetAPI *assetAPI)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioAPI</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>abe224a1d2d439fd24fc0e53647835f13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Initialize</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>af13ef302f0758c9d5966c4acfb06924c</anchor>
      <arglist>(const QString &amp;playbackDeviceName=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Reset</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>ac064d25dea423bc4f30d81ed9b190e6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StartRecording</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>a9edaf6aaba652fe43d69c4acd7839bde</anchor>
      <arglist>(const QString &amp;name, uint frequency, bool sixteenbit, bool stereo, uint buffer_size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StopRecording</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>ac61f14f062a017ac479c8c0e2db97ede</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>GetRecordedSoundSize</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>a556936f008e6063d9870bc86f8ccc3a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>GetRecordedSoundData</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>a6c02e3d03b8e7ed136679a41010ec9a6</anchor>
      <arglist>(void *buffer, uint size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>a9da92f1d4f7d947388b6cef50f3a8255</anchor>
      <arglist>(f64 frametime)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsInitialized</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>a5784d138bb911c4fbf506f5d73228578</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Uninitialize</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>a19e0687b4f72d326603aa1c4e9b9aec2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>sound_id_t</type>
      <name>GetNextSoundChannelID</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>a931eb4cc8b73a8fd066270fa6982972a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ApplyMasterGain</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>aed424462efcf6a419de8041ec26ce580</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AssetAPI *</type>
      <name>assetAPI</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>ae2635b14bee9abb1b27ebe6706563af1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AudioApiImpl *</type>
      <name>impl</name>
      <anchorfile>class_audio_a_p_i.html</anchorfile>
      <anchor>a0ac1d97300481c6b229d9e14f06ea275</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AudioApiImpl</name>
    <filename>struct_audio_api_impl.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioApiImpl</name>
      <anchorfile>struct_audio_api_impl.html</anchorfile>
      <anchor>a701ade4eabc5995f73839171e2e98dff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>initialized</name>
      <anchorfile>struct_audio_api_impl.html</anchorfile>
      <anchor>aecaf940af24017deb7b3ff4eab63a805</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ALCcontext *</type>
      <name>context</name>
      <anchorfile>struct_audio_api_impl.html</anchorfile>
      <anchor>a46856255b79ffaffe5cd13b45481734e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ALCdevice *</type>
      <name>device</name>
      <anchorfile>struct_audio_api_impl.html</anchorfile>
      <anchor>afa3ec6dce30a42e5049b7c9656ae608d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ALCdevice *</type>
      <name>captureDevice</name>
      <anchorfile>struct_audio_api_impl.html</anchorfile>
      <anchor>a9b2afaba15cd936a12af75af8f380a18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>captureSampleSize</name>
      <anchorfile>struct_audio_api_impl.html</anchorfile>
      <anchor>a463156747d564266fad4ce433852d71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SoundChannelMap</type>
      <name>channels</name>
      <anchorfile>struct_audio_api_impl.html</anchorfile>
      <anchor>a6c2440292311b8cd528ba00234bfbbed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sound_id_t</type>
      <name>nextChannelId</name>
      <anchorfile>struct_audio_api_impl.html</anchorfile>
      <anchor>aa0934161f6993cda0ca1b513e27d19e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>listenerPosition</name>
      <anchorfile>struct_audio_api_impl.html</anchorfile>
      <anchor>a8d9467b88b9f534701bd65306ba680c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Quat</type>
      <name>listenerOrientation</name>
      <anchorfile>struct_audio_api_impl.html</anchorfile>
      <anchor>a1dc2b30eb2cd03c078d4646feb8ba309</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>masterGain</name>
      <anchorfile>struct_audio_api_impl.html</anchorfile>
      <anchor>a90c8374b18a074b1d37ef77850ca143a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; SoundChannel::SoundType, float &gt;</type>
      <name>soundMasterGain</name>
      <anchorfile>struct_audio_api_impl.html</anchorfile>
      <anchor>a0fa42a92ed431808ab5226f394f17136</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AudioAsset</name>
    <filename>class_audio_asset.html</filename>
    <base>IAsset</base>
    <member kind="slot">
      <type>QString</type>
      <name>Type</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1ee38592ddb9473b2824a6d39268465f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>Name</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0c3aedda2f04b27a77f90da3cf44eed6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetDiskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a65037aa4ef8ec83d976afd83253f6234</anchor>
      <arglist>(QString diskSource)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>DiskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a21607e4493b017999f35189d82a1587b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>LoadFromFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a6a204f512b26f20f49e7fda9ddfe15ed</anchor>
      <arglist>(QString filename)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>LoadFromCache</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ac1f56599756004172408ff0c40079ab6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Unload</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ab230fc35705c702c9ecf359930b6693f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>afa0a8684b67098c0694e71f1677a6fd0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual AssetPtr</type>
      <name>Clone</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a8bfd7618fbf62b20e106f81cb7648ddb</anchor>
      <arglist>(QString newAssetName) const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual bool</type>
      <name>SaveToFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a43ee1d3d1c9bc8eac79811d2900ed8cf</anchor>
      <arglist>(const QString &amp;filename, const QString &amp;serializationParameters=&quot;&quot;) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SaveCachedCopyToFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>af74f5e730e370db0e54a9cf7308ea32e</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="slot">
      <type>AssetStoragePtr</type>
      <name>GetAssetStorage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a9fd4b8a3353601b0ff47e9042e1e45e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>AssetProviderPtr</type>
      <name>GetAssetProvider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1968beba15e2f64b8aa356261bbe8eec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>ToString</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1ad41ad9fdcc0f036f786e0d0cc1259c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QByteArray</type>
      <name>GetRawData</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a827ca46bb695958627e1e63d7feb0424</anchor>
      <arglist>(const QString serializationParameters=&quot;&quot;) const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Unloaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a51e04b4100d7bdb620c6f0ae440d5f54</anchor>
      <arglist>(IAsset *asset)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Loaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0bf19c4b11e18f5925285231334aa054</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioAsset</name>
      <anchorfile>class_audio_asset.html</anchorfile>
      <anchor>a70c50344d71e9f6692cb9dcd5d9daacd</anchor>
      <arglist>(AssetAPI *owner, const QString &amp;type_, const QString &amp;name_)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioAsset</name>
      <anchorfile>class_audio_asset.html</anchorfile>
      <anchor>a6c308a2ad0a1877501f0293a8525d975</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DoUnload</name>
      <anchorfile>class_audio_asset.html</anchorfile>
      <anchor>a84c9cd70ebb806ada58b2ae5ea7f67c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>DeserializeFromData</name>
      <anchorfile>class_audio_asset.html</anchorfile>
      <anchor>a7375b3c13b8d3de45835c3a4924aef7b</anchor>
      <arglist>(const u8 *data, size_t numBytes, const bool allowAsynchronous)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFromWavFileInMemory</name>
      <anchorfile>class_audio_asset.html</anchorfile>
      <anchor>a9ed4c17e1e6dc5cb68c3a9e7857120dd</anchor>
      <arglist>(const u8 *data, size_t numBytes)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFromOggVorbisFileInMemory</name>
      <anchorfile>class_audio_asset.html</anchorfile>
      <anchor>a5a7e039887b8242effa49fb32df30fba</anchor>
      <arglist>(const u8 *data, size_t numBytes)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFromRawPCMWavData</name>
      <anchorfile>class_audio_asset.html</anchorfile>
      <anchor>a4fa6c6ee9e79c8b62e44fa3b84a74487</anchor>
      <arglist>(const u8 *data, size_t numBytes, bool stereo, bool is16Bit, int frequency)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFromSoundBuffer</name>
      <anchorfile>class_audio_asset.html</anchorfile>
      <anchor>ab3dda142ac35b0e1d341f6f4f7a116d4</anchor>
      <arglist>(const SoundBuffer &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CreateBuffer</name>
      <anchorfile>class_audio_asset.html</anchorfile>
      <anchor>a552c8ae3f9ce6e888f13467e2e0c78f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALuint</type>
      <name>GetHandle</name>
      <anchorfile>class_audio_asset.html</anchorfile>
      <anchor>ad239919f54e637714c9e0813993014fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLoaded</name>
      <anchorfile>class_audio_asset.html</anchorfile>
      <anchor>a199e4f4fef7b58459b6618f4b63a0d1e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFromFileInMemory</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a76fae2e679dc173de78d3dbe2d7b04e3</anchor>
      <arglist>(const u8 *data, size_t numBytes, bool allowAsynchronous=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadCompleted</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a156e1f8df2f868412c3278f27aab16af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DependencyLoaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a8db3fb94d1bd73e184bf3b4e5d0c7153</anchor>
      <arglist>(AssetPtr dependee)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; AssetReference &gt;</type>
      <name>FindReferences</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0e74e3802c3d7cc221ded59de7e5a5c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; AssetReference &gt;</type>
      <name>FindReferencesRecursive</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a43661820be04bb6898b0f6e0c1e60a9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAssetProvider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ab909dddbde3614b811908174a10ddf59</anchor>
      <arglist>(AssetProviderPtr provider)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAssetStorage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ad7cb7c54d73a2677f242dcd318791ce9</anchor>
      <arglist>(AssetStoragePtr storage)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SerializeTo</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>aa81166793934ab10c4c3d30ad1957f83</anchor>
      <arglist>(std::vector&lt; u8 &gt; &amp;data, const QString &amp;serializationParameters=&quot;&quot;) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetAPI *</type>
      <name>assetAPI</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>acfa90de1e91d33066b10e9a983d7f706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetProviderWeakPtr</type>
      <name>provider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a34182317435ed01abcfa86fd1a523a4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetStorageWeakPtr</type>
      <name>storage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0d7711709ea3a5d74097c36eeb53acce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>type</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a9a2cbc25b81810fa610da6a686fd5d03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a19e035f9cfe2559d8ea38c331ca9acfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>diskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ad8db45ff366bec21d66c9f853f0bde67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ALuint</type>
      <name>handle</name>
      <anchorfile>class_audio_asset.html</anchorfile>
      <anchor>a15592757aac657ee34b13f7d65d54198</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BinaryAsset</name>
    <filename>class_binary_asset.html</filename>
    <base>IAsset</base>
    <member kind="slot">
      <type>QString</type>
      <name>Type</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1ee38592ddb9473b2824a6d39268465f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>Name</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0c3aedda2f04b27a77f90da3cf44eed6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetDiskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a65037aa4ef8ec83d976afd83253f6234</anchor>
      <arglist>(QString diskSource)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>DiskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a21607e4493b017999f35189d82a1587b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>LoadFromFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a6a204f512b26f20f49e7fda9ddfe15ed</anchor>
      <arglist>(QString filename)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>LoadFromCache</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ac1f56599756004172408ff0c40079ab6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Unload</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ab230fc35705c702c9ecf359930b6693f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>afa0a8684b67098c0694e71f1677a6fd0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual AssetPtr</type>
      <name>Clone</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a8bfd7618fbf62b20e106f81cb7648ddb</anchor>
      <arglist>(QString newAssetName) const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual bool</type>
      <name>SaveToFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a43ee1d3d1c9bc8eac79811d2900ed8cf</anchor>
      <arglist>(const QString &amp;filename, const QString &amp;serializationParameters=&quot;&quot;) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SaveCachedCopyToFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>af74f5e730e370db0e54a9cf7308ea32e</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="slot">
      <type>AssetStoragePtr</type>
      <name>GetAssetStorage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a9fd4b8a3353601b0ff47e9042e1e45e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>AssetProviderPtr</type>
      <name>GetAssetProvider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1968beba15e2f64b8aa356261bbe8eec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>ToString</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1ad41ad9fdcc0f036f786e0d0cc1259c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QByteArray</type>
      <name>GetRawData</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a827ca46bb695958627e1e63d7feb0424</anchor>
      <arglist>(const QString serializationParameters=&quot;&quot;) const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Unloaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a51e04b4100d7bdb620c6f0ae440d5f54</anchor>
      <arglist>(IAsset *asset)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Loaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0bf19c4b11e18f5925285231334aa054</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BinaryAsset</name>
      <anchorfile>class_binary_asset.html</anchorfile>
      <anchor>adf18ee34dad87c9a5b5bc6c276b44f20</anchor>
      <arglist>(AssetAPI *owner, const QString &amp;type_, const QString &amp;name_)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BinaryAsset</name>
      <anchorfile>class_binary_asset.html</anchorfile>
      <anchor>a954499bddb35d7b2d9d34e9d7eb2c341</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DoUnload</name>
      <anchorfile>class_binary_asset.html</anchorfile>
      <anchor>a0426e5e327dd9f5b915fca8d34c3895c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>DeserializeFromData</name>
      <anchorfile>class_binary_asset.html</anchorfile>
      <anchor>a38ddcacd54c35fe8cd81144651293092</anchor>
      <arglist>(const u8 *data_, size_t numBytes, const bool allowAsynchronous)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SerializeTo</name>
      <anchorfile>class_binary_asset.html</anchorfile>
      <anchor>a30aa0860f409d89db6494530c859f506</anchor>
      <arglist>(std::vector&lt; u8 &gt; &amp;dst, const QString &amp;serializationParameters) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; AssetReference &gt;</type>
      <name>FindReferences</name>
      <anchorfile>class_binary_asset.html</anchorfile>
      <anchor>a962d13006152d441d7efb6ed9d39ce50</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLoaded</name>
      <anchorfile>class_binary_asset.html</anchorfile>
      <anchor>ae58b2f23fe4c5c4f049e5bcc30559fc5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFromFileInMemory</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a76fae2e679dc173de78d3dbe2d7b04e3</anchor>
      <arglist>(const u8 *data, size_t numBytes, bool allowAsynchronous=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadCompleted</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a156e1f8df2f868412c3278f27aab16af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DependencyLoaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a8db3fb94d1bd73e184bf3b4e5d0c7153</anchor>
      <arglist>(AssetPtr dependee)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; AssetReference &gt;</type>
      <name>FindReferencesRecursive</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a43661820be04bb6898b0f6e0c1e60a9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAssetProvider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ab909dddbde3614b811908174a10ddf59</anchor>
      <arglist>(AssetProviderPtr provider)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAssetStorage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ad7cb7c54d73a2677f242dcd318791ce9</anchor>
      <arglist>(AssetStoragePtr storage)</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; u8 &gt;</type>
      <name>data</name>
      <anchorfile>class_binary_asset.html</anchorfile>
      <anchor>a76437b6b43f583f21caf59f2db3dbbc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetAPI *</type>
      <name>assetAPI</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>acfa90de1e91d33066b10e9a983d7f706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetProviderWeakPtr</type>
      <name>provider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a34182317435ed01abcfa86fd1a523a4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetStorageWeakPtr</type>
      <name>storage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0d7711709ea3a5d74097c36eeb53acce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>type</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a9a2cbc25b81810fa610da6a686fd5d03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a19e035f9cfe2559d8ea38c331ca9acfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>diskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ad8db45ff366bec21d66c9f853f0bde67</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BitMaskT</name>
    <filename>class_bit_mask_t.html</filename>
    <member kind="enumvalue">
      <name>val</name>
      <anchorfile>class_bit_mask_t.html</anchorfile>
      <anchor>af35610275a41b5679109a8ccf79d62bba8c32e309b618e2ade10ed4e3a03a1ad8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>BoneAttachment</name>
    <filename>struct_bone_attachment.html</filename>
    <member kind="variable">
      <type>Ogre::Entity *</type>
      <name>entity_</name>
      <anchorfile>struct_bone_attachment.html</anchorfile>
      <anchor>aaa3a129d7a50ece4619b1af1c5dbfcde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Ogre::Bone *</type>
      <name>bone_</name>
      <anchorfile>struct_bone_attachment.html</anchorfile>
      <anchor>aeba759b1f16b9c30bee4dc0c52f03a5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CustomTagPoint *</type>
      <name>tagPoint_</name>
      <anchorfile>struct_bone_attachment.html</anchorfile>
      <anchor>a3d228f39543612f6f2a53e04d56e9725</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BoneAttachmentListener</name>
    <filename>class_bone_attachment_listener.html</filename>
    <member kind="function">
      <type>void</type>
      <name>AddAttachment</name>
      <anchorfile>class_bone_attachment_listener.html</anchorfile>
      <anchor>af0a084ee7497b6397a1137e25aafc8a0</anchor>
      <arglist>(Ogre::Entity *entity, Ogre::Bone *bone, EC_Placeable *placeable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAttachment</name>
      <anchorfile>class_bone_attachment_listener.html</anchorfile>
      <anchor>a37f12f88f3d43941df534b3e673455f0</anchor>
      <arglist>(Ogre::Bone *bone, EC_Placeable *placeable)</arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; Ogre::Bone *, BoneAttachment &gt;</type>
      <name>attachments_</name>
      <anchorfile>class_bone_attachment_listener.html</anchorfile>
      <anchor>a694e2abc040dec938d6fa95aa80573a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ChangeRequest</name>
    <filename>class_change_request.html</filename>
    <member kind="slot">
      <type>bool</type>
      <name>IsAllowed</name>
      <anchorfile>class_change_request.html</anchorfile>
      <anchor>a9a5ec674a62f725577a2c5fd6a50a519</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetAllowed</name>
      <anchorfile>class_change_request.html</anchorfile>
      <anchor>a51db5ef7077da327eff1a8ff182b9a5f</anchor>
      <arglist>(bool allow)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Deny</name>
      <anchorfile>class_change_request.html</anchorfile>
      <anchor>a1b83824d96c9ffdd0cdffc2975d3e59b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ChangeRequest</name>
      <anchorfile>class_change_request.html</anchorfile>
      <anchor>ad24db4b8b3772d7bfd61eb4ddb81d53c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>allowed</name>
      <anchorfile>class_change_request.html</anchorfile>
      <anchor>a771f50c77162d26f369c12240824a0e1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Circle</name>
    <filename>class_circle.html</filename>
    <member kind="function">
      <type></type>
      <name>Circle</name>
      <anchorfile>class_circle.html</anchorfile>
      <anchor>ad1ecfcfc7bf34529c6a6d6c448bf70fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Circle</name>
      <anchorfile>class_circle.html</anchorfile>
      <anchor>a599b8ebb5a840e5d7511e18e0ec34a7f</anchor>
      <arglist>(const float3 &amp;center, const float3 &amp;normal, float radius)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>BasisU</name>
      <anchorfile>class_circle.html</anchorfile>
      <anchor>a26416e1a7faf81cd9aaf343d9b208cd9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>BasisV</name>
      <anchorfile>class_circle.html</anchorfile>
      <anchor>a014e0ee3a4dcf0c20054048ee527ec08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>GetPoint</name>
      <anchorfile>class_circle.html</anchorfile>
      <anchor>a15b0f3855ee73ce1f23c224c957be48a</anchor>
      <arglist>(float angleRadians) const </arglist>
    </member>
    <member kind="function">
      <type>Plane</type>
      <name>ContainingPlane</name>
      <anchorfile>class_circle.html</anchorfile>
      <anchor>a3655c028863c56112df5e1832660b9ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EdgeContains</name>
      <anchorfile>class_circle.html</anchorfile>
      <anchor>abdc862d931201d83f2de28e0f5a4a109</anchor>
      <arglist>(const float3 &amp;point, float maxDistance=1e-6f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DiscContains</name>
      <anchorfile>class_circle.html</anchorfile>
      <anchor>ac5c6d7373889cd284e31e3ed1c33b1d9</anchor>
      <arglist>(const float3 &amp;point, float maxDistance=1e-6f) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>DistanceToEdge</name>
      <anchorfile>class_circle.html</anchorfile>
      <anchor>a1161896b6c9edc85a27223d2bf58d818</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>DistanceToEdge</name>
      <anchorfile>class_circle.html</anchorfile>
      <anchor>ad394eb34c0bb2ce217e1889a5c2c5a6a</anchor>
      <arglist>(const Ray &amp;ray, float *d, float3 *closestPoint) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>DistanceToEdge</name>
      <anchorfile>class_circle.html</anchorfile>
      <anchor>a0d7bc06732748279d8f93ed25e6f4ad2</anchor>
      <arglist>(const LineSegment &amp;lineSegment, float *d, float3 *closestPoint) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>DistanceToEdge</name>
      <anchorfile>class_circle.html</anchorfile>
      <anchor>af641e74523cee803d5643655c6e8fa3d</anchor>
      <arglist>(const Line &amp;line, float *d, float3 *closestPoint) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ClosestPointToEdge</name>
      <anchorfile>class_circle.html</anchorfile>
      <anchor>ae76f859f5ccbae0b2ceee3bd5c4bfca0</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ClosestPointToEdge</name>
      <anchorfile>class_circle.html</anchorfile>
      <anchor>a0d21b61e75f3fac88cff1fc2f3dc47fd</anchor>
      <arglist>(const Ray &amp;ray, float *d) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ClosestPointToEdge</name>
      <anchorfile>class_circle.html</anchorfile>
      <anchor>a2d94105f6263d05e7d80173542ccf1f0</anchor>
      <arglist>(const LineSegment &amp;lineSegment, float *d) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ClosestPointToEdge</name>
      <anchorfile>class_circle.html</anchorfile>
      <anchor>a3c5e6a88e72c786292221a06962ca0b8</anchor>
      <arglist>(const Line &amp;line, float *d) const </arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>pos</name>
      <anchorfile>class_circle.html</anchorfile>
      <anchor>a95f808076bb2ba91377a7ff68490c73f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>normal</name>
      <anchorfile>class_circle.html</anchorfile>
      <anchor>a1a3b3c1fdb0c61e7b4d00811e22bcdb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>r</name>
      <anchorfile>class_circle.html</anchorfile>
      <anchor>a7bdbdaf7361494f294d9a18626d7500f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CloneAssetDialog</name>
    <filename>class_clone_asset_dialog.html</filename>
    <member kind="function">
      <type></type>
      <name>CloneAssetDialog</name>
      <anchorfile>class_clone_asset_dialog.html</anchorfile>
      <anchor>a1359582e328b06c3f8253c4f9af4f017</anchor>
      <arglist>(const AssetPtr &amp;asset, AssetAPI *assetApi, QWidget *parent=0, Qt::WindowFlags f=0)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>NewName</name>
      <anchorfile>class_clone_asset_dialog.html</anchorfile>
      <anchor>a521fda05cc1277fa1847d9dce1f8621b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AssetWeakPtr</type>
      <name>Asset</name>
      <anchorfile>class_clone_asset_dialog.html</anchorfile>
      <anchor>aa84079a174e456b818ea4b16ca26c3e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>hideEvent</name>
      <anchorfile>class_clone_asset_dialog.html</anchorfile>
      <anchor>a152d92f5c3d1950908e740aa65b95cd7</anchor>
      <arglist>(QHideEvent *e)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>ValidateNewName</name>
      <anchorfile>class_clone_asset_dialog.html</anchorfile>
      <anchor>afe35ef162d951de2ff32c48378ff3808</anchor>
      <arglist>(const QString &amp;newName)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QPushButton *</type>
      <name>okButton</name>
      <anchorfile>class_clone_asset_dialog.html</anchorfile>
      <anchor>a66e9c205779a5bc7dafeed165fe74874</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QLineEdit *</type>
      <name>nameLineEdit</name>
      <anchorfile>class_clone_asset_dialog.html</anchorfile>
      <anchor>ad98c477f6e84d5c7c705766d8fc2b7dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QLabel *</type>
      <name>errorLabel</name>
      <anchorfile>class_clone_asset_dialog.html</anchorfile>
      <anchor>a258726228c6dd58cd96f718aae51502d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AssetAPI *</type>
      <name>assetApi</name>
      <anchorfile>class_clone_asset_dialog.html</anchorfile>
      <anchor>a76db0c0212977d4a31b694b3c74649fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AssetWeakPtr</type>
      <name>asset</name>
      <anchorfile>class_clone_asset_dialog.html</anchorfile>
      <anchor>ab4939684f41e6769b44a855b1ef5f160</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Color</name>
    <filename>class_color.html</filename>
    <member kind="function">
      <type></type>
      <name>Color</name>
      <anchorfile>class_color.html</anchorfile>
      <anchor>a9a742cbe9f9f4037f5d9f4e81a9b2428</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color</name>
      <anchorfile>class_color.html</anchorfile>
      <anchor>a7b075d27e3bbdde7cbe648dc3b804261</anchor>
      <arglist>(const Color &amp;color)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color</name>
      <anchorfile>class_color.html</anchorfile>
      <anchor>ac83a3106f164d6ef897228115715648a</anchor>
      <arglist>(float nr, float ng, float nb)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color</name>
      <anchorfile>class_color.html</anchorfile>
      <anchor>aa1bc841e29b4df606d463131f92cc55c</anchor>
      <arglist>(float nr, float ng, float nb, float na)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_color.html</anchorfile>
      <anchor>a7ff176deb54efcef1ac29db67f77703e</anchor>
      <arglist>(const Color &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>class_color.html</anchorfile>
      <anchor>abd5bcd678fb68e64909e3ad33f47a831</anchor>
      <arglist>(const Color &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color</name>
      <anchorfile>class_color.html</anchorfile>
      <anchor>a05d45e8b943da116f6fe889a9dc47f9e</anchor>
      <arglist>(const QColor &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator QColor</name>
      <anchorfile>class_color.html</anchorfile>
      <anchor>a46ecf9eaae9e01186b337742761d64b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>r</name>
      <anchorfile>class_color.html</anchorfile>
      <anchor>a3958a556b47d2de3dd45c75aac833c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>g</name>
      <anchorfile>class_color.html</anchorfile>
      <anchor>a5defbb21620e480e556181772d665f34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>b</name>
      <anchorfile>class_color.html</anchorfile>
      <anchor>a33e482be18d6ea31d2b403bee13683b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>a</name>
      <anchorfile>class_color.html</anchorfile>
      <anchor>a98047aee65fc3d825f88a76da728fd27</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CombinatorialT</name>
    <filename>class_combinatorial_t.html</filename>
    <member kind="enumvalue">
      <name>val</name>
      <anchorfile>class_combinatorial_t.html</anchorfile>
      <anchor>a0a3b95e4ada78c10424406e7541d9defa3742c4eea8f49f05b821698a92a4a1ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>N</name>
      <anchorfile>class_combinatorial_t.html</anchorfile>
      <anchor>a0a3b95e4ada78c10424406e7541d9defac7f854aa6978bb10278640dc67ff3e66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>val</name>
      <anchorfile>class_combinatorial_t.html</anchorfile>
      <anchor>a0a3b95e4ada78c10424406e7541d9defa3742c4eea8f49f05b821698a92a4a1ea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CommandLineParameterMap</name>
    <filename>struct_command_line_parameter_map.html</filename>
    <member kind="function">
      <type>void</type>
      <name>Print</name>
      <anchorfile>struct_command_line_parameter_map.html</anchorfile>
      <anchor>a52e7d07c672f4a04e564e10d3b57f0fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>QMap&lt; QString, QString &gt;</type>
      <name>commands</name>
      <anchorfile>struct_command_line_parameter_map.html</anchorfile>
      <anchor>a8f5e9712f088212a60ced6b8dfa7b04f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Complex</name>
    <filename>class_complex.html</filename>
    <member kind="function">
      <type></type>
      <name>Complex</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>a43b9f07cdf697c71b5fd506a6cc80b8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Complex</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>ab917c6d4e99e2503c54bb00790f11892</anchor>
      <arglist>(float real, float imaginary)</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>Conjugate</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>aa4213153bdd369fbac1dfd99dd1c8e2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Normalize</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>a8e65fcb87005c022a000b8792fe2331c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>Normalized</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>a4de7ae0bf98b3609bd2fcfe690bf8274</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Length</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>aa18f291fe26ff00dcaae146ed52c0117</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>LengthSq</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>a51e55f34bdd03fc84293ed52f3135528</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>operator+</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>a81044da20cb3143ce84895ebcbea3156</anchor>
      <arglist>(float real) const </arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>operator+</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>a85335af4619e9e47aa9c0846d1d149b0</anchor>
      <arglist>(const Complex &amp;c) const </arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>operator-</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>a559b3d4120b0d37f60de47c11c594838</anchor>
      <arglist>(float real) const </arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>operator-</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>a9db6e1faaf7164c809d3567085b5c89f</anchor>
      <arglist>(const Complex &amp;c) const </arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>operator*</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>aad4a05398e755ad5fe50b0dde0410c62</anchor>
      <arglist>(float real) const </arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>operator*</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>a86f4398baa4ea8b9b52c39ad66f0a763</anchor>
      <arglist>(const Complex &amp;c) const </arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>operator/</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>ab36580014a554590f4ffe9af53aa7156</anchor>
      <arglist>(float real) const </arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>operator/</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>a8a4d2bf57c76d1eed742b6385ffce365</anchor>
      <arglist>(const Complex &amp;c) const </arglist>
    </member>
    <member kind="function">
      <type>Complex &amp;</type>
      <name>operator+=</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>a0607a12864f610eb443a59d9d7c891f5</anchor>
      <arglist>(float real)</arglist>
    </member>
    <member kind="function">
      <type>Complex &amp;</type>
      <name>operator+=</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>aaf6afc785a9cfe56d2cf0661a6badf9c</anchor>
      <arglist>(const Complex &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>Complex &amp;</type>
      <name>operator-=</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>a1d48014d816db8be8b59eef27124d4a1</anchor>
      <arglist>(float real)</arglist>
    </member>
    <member kind="function">
      <type>Complex &amp;</type>
      <name>operator-=</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>af1339cb859e35752f440584e13bfcb2c</anchor>
      <arglist>(const Complex &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>Complex &amp;</type>
      <name>operator*=</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>a27936371af53f3728deaa5565efed797</anchor>
      <arglist>(float real)</arglist>
    </member>
    <member kind="function">
      <type>Complex &amp;</type>
      <name>operator*=</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>af14ba5c214174e3a2333dbc84c5ae5bd</anchor>
      <arglist>(const Complex &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>Complex &amp;</type>
      <name>operator/=</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>a9838c4bce6f9e3ce462465b2d3a49859</anchor>
      <arglist>(float real)</arglist>
    </member>
    <member kind="function">
      <type>Complex &amp;</type>
      <name>operator/=</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>a3fc725a2f0507d8925f0194a53324e74</anchor>
      <arglist>(const Complex &amp;c)</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>r</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>a66a574ca3e39bd1476a7fc1670980052</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>i</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>ad64f4aa1d5e37061c106f6d739a2dd7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Complex</type>
      <name>zero</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>a95aa85cdf91d2b184e19036ba6c5fa15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Complex</type>
      <name>unitOne</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>aeffc0ae6e1817c00dc1ec97d8ecb2a09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Complex</type>
      <name>unitI</name>
      <anchorfile>class_complex.html</anchorfile>
      <anchor>af9214bb50251fc14483d59c4e948ce37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ComponentDesc</name>
    <filename>struct_component_desc.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>struct_component_desc.html</anchorfile>
      <anchor>ac70641cca4505696d5ee9a2bfecb0f6f</anchor>
      <arglist>(const ComponentDesc &amp;rhs) const </arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>struct_component_desc.html</anchorfile>
      <anchor>aca7813b6d9d23c94c2e9a4dcdffead4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>name</name>
      <anchorfile>struct_component_desc.html</anchorfile>
      <anchor>a07bc669987b15fff291d1d69e37548f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>sync</name>
      <anchorfile>struct_component_desc.html</anchorfile>
      <anchor>aec27d8e1a58d111bfe22aef59ac56804</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QList&lt; AttributeDesc &gt;</type>
      <name>attributes</name>
      <anchorfile>struct_component_desc.html</anchorfile>
      <anchor>a5f5504154b75487d34c2138ce56d85cb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ComponentGroup</name>
    <filename>struct_component_group.html</filename>
    <member kind="function">
      <type></type>
      <name>ComponentGroup</name>
      <anchorfile>struct_component_group.html</anchorfile>
      <anchor>ac0918ae1690d8548dfe71284f4d6e7dc</anchor>
      <arglist>(ComponentPtr component=ComponentPtr(), ECComponentEditor *editor=0, bool isDynamic=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ComponentGroup</name>
      <anchorfile>struct_component_group.html</anchorfile>
      <anchor>acb01283fd469bc554afe17c300f65bdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValid</name>
      <anchorfile>struct_component_group.html</anchorfile>
      <anchor>acdbbb7ebfb9ddbb35e97727a3454c080</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSameComponent</name>
      <anchorfile>struct_component_group.html</anchorfile>
      <anchor>a81b487053bde2a25209cba679c4c9fd9</anchor>
      <arglist>(ComponentPtr component) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ContainsComponent</name>
      <anchorfile>struct_component_group.html</anchorfile>
      <anchor>a8de42321e2ffe27797612eb84a42a083</anchor>
      <arglist>(ComponentPtr component) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ContainsAttribute</name>
      <anchorfile>struct_component_group.html</anchorfile>
      <anchor>ac3397c40bcf03a90bd80ddc3d5454d88</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddComponent</name>
      <anchorfile>struct_component_group.html</anchorfile>
      <anchor>aa94af451c2058f669ae4c46f29e1dfc4</anchor>
      <arglist>(ComponentPtr comp)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RemoveComponent</name>
      <anchorfile>struct_component_group.html</anchorfile>
      <anchor>a006eb2080a36e85401b22c810a146715</anchor>
      <arglist>(ComponentPtr comp)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDynamic</name>
      <anchorfile>struct_component_group.html</anchorfile>
      <anchor>adfc5140c30ae7d7e429149921a02d627</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasRootProperty</name>
      <anchorfile>struct_component_group.html</anchorfile>
      <anchor>a9a3d852408887a65aeaea0e85de1f552</anchor>
      <arglist>(QtProperty *property) const </arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ComponentWeakPtr &gt;</type>
      <name>components_</name>
      <anchorfile>struct_component_group.html</anchorfile>
      <anchor>a38ea945c71c125b0f98eff7e20b7b5b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECComponentEditor *</type>
      <name>editor_</name>
      <anchorfile>struct_component_group.html</anchorfile>
      <anchor>ae3f8cb6a6c0a3523339de9385087965b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>name_</name>
      <anchorfile>struct_component_group.html</anchorfile>
      <anchor>a4583d60dcc0a805fc2de4e54e195aff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>typeName_</name>
      <anchorfile>struct_component_group.html</anchorfile>
      <anchor>a602fb5ea3a25504a85f9982995b5ab98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isDynamic_</name>
      <anchorfile>struct_component_group.html</anchorfile>
      <anchor>a7de66822f3cc984ce06192cfbfd4af58</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ComponentItem</name>
    <filename>class_component_item.html</filename>
    <member kind="function">
      <type></type>
      <name>ComponentItem</name>
      <anchorfile>class_component_item.html</anchorfile>
      <anchor>ae09d55e806476f148c596545bf704d66</anchor>
      <arglist>(const ComponentPtr &amp;comp, EntityItem *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetText</name>
      <anchorfile>class_component_item.html</anchorfile>
      <anchor>a20d2960302d6bfc018a1771345107c85</anchor>
      <arglist>(IComponent *comp)</arglist>
    </member>
    <member kind="function">
      <type>ComponentPtr</type>
      <name>Component</name>
      <anchorfile>class_component_item.html</anchorfile>
      <anchor>a6f8ec46c60aee5d090a6bd50fc551bb1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EntityItem *</type>
      <name>Parent</name>
      <anchorfile>class_component_item.html</anchorfile>
      <anchor>aeb2cf8159f0f55c0b5c6bf16839f2db4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>class_component_item.html</anchorfile>
      <anchor>ad70e0488fedeea52f72d99675da211d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_component_item.html</anchorfile>
      <anchor>ab050f63c1e68ef4798189255b52ff5d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ComponentWeakPtr</type>
      <name>ptr</name>
      <anchorfile>class_component_item.html</anchorfile>
      <anchor>af9b67fc86abec1802b3230e36d444683</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EntityItem *</type>
      <name>parentItem</name>
      <anchorfile>class_component_item.html</anchorfile>
      <anchor>a95ffbc16dd3f912a074aa88ac10f8033</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ComponentSyncState</name>
    <filename>struct_component_sync_state.html</filename>
    <member kind="function">
      <type></type>
      <name>ComponentSyncState</name>
      <anchorfile>struct_component_sync_state.html</anchorfile>
      <anchor>a5472378382bb1e0fec5ae0b6b9b1895b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MarkAttributeDirty</name>
      <anchorfile>struct_component_sync_state.html</anchorfile>
      <anchor>ae9279999f017ed705394340a5afc6537</anchor>
      <arglist>(u8 attrIndex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MarkAttributeCreated</name>
      <anchorfile>struct_component_sync_state.html</anchorfile>
      <anchor>a241b4bc5ebf23e49ef33aa1438f17f80</anchor>
      <arglist>(u8 attrIndex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MarkAttributeRemoved</name>
      <anchorfile>struct_component_sync_state.html</anchorfile>
      <anchor>a19632af13de097d6f5d0b5a444284deb</anchor>
      <arglist>(u8 attrIndex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DirtyProcessed</name>
      <anchorfile>struct_component_sync_state.html</anchorfile>
      <anchor>ac752e8a6b69ff260d4f84cd6b7eef34b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>dirtyAttributes</name>
      <anchorfile>struct_component_sync_state.html</anchorfile>
      <anchor>a2556fd5b2139a7296e3f79121e07f35c</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; u8, bool &gt;</type>
      <name>newAndRemovedAttributes</name>
      <anchorfile>struct_component_sync_state.html</anchorfile>
      <anchor>aa6509df29807077f6104e45a1d5501c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>component_id_t</type>
      <name>id</name>
      <anchorfile>struct_component_sync_state.html</anchorfile>
      <anchor>ad794ca73e69bb26f6e488354f06d3ca9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>removed</name>
      <anchorfile>struct_component_sync_state.html</anchorfile>
      <anchor>a2198afb7e9d431e72952ea28a3c723ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isNew</name>
      <anchorfile>struct_component_sync_state.html</anchorfile>
      <anchor>aea7c5b0d6ca1af6e0a22b7b1eee1c6b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isInQueue</name>
      <anchorfile>struct_component_sync_state.html</anchorfile>
      <anchor>ae050149ca976fe29a2cad021a3d96081</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cone</name>
    <filename>class_cone.html</filename>
    <member kind="function">
      <type></type>
      <name>Cone</name>
      <anchorfile>class_cone.html</anchorfile>
      <anchor>aec709e915b3271a750d420b14b215bfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Contains</name>
      <anchorfile>class_cone.html</anchorfile>
      <anchor>a73b17955b059aa0d62519f021c06b7d9</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ConfigAPI</name>
    <filename>class_config_a_p_i.html</filename>
    <member kind="slot">
      <type>bool</type>
      <name>HasValue</name>
      <anchorfile>class_config_a_p_i.html</anchorfile>
      <anchor>a54df9b38de5a2c404e707a6e38c97f6c</anchor>
      <arglist>(const ConfigData &amp;data) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>HasValue</name>
      <anchorfile>class_config_a_p_i.html</anchorfile>
      <anchor>af37250e180aa87a06bc2d668e151cc5b</anchor>
      <arglist>(const ConfigData &amp;data, QString key) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>HasValue</name>
      <anchorfile>class_config_a_p_i.html</anchorfile>
      <anchor>a6a2be190166cc307a5c2076ab7e66e44</anchor>
      <arglist>(QString file, QString section, QString key) const </arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>Get</name>
      <anchorfile>class_config_a_p_i.html</anchorfile>
      <anchor>afca57421be66e5c014e7e7e00bbc09c0</anchor>
      <arglist>(const ConfigData &amp;data) const </arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>Get</name>
      <anchorfile>class_config_a_p_i.html</anchorfile>
      <anchor>aa8faece0f9b56384952e93f05adc6ad2</anchor>
      <arglist>(const ConfigData &amp;data, QString key, const QVariant &amp;defaultValue=QVariant()) const </arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>Get</name>
      <anchorfile>class_config_a_p_i.html</anchorfile>
      <anchor>a3562b6b2ff95341e303d78b5f7eda5a9</anchor>
      <arglist>(QString file, QString section, QString key, const QVariant &amp;defaultValue=QVariant()) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_config_a_p_i.html</anchorfile>
      <anchor>a0c96331c014ab4058e2c8f18dd7c2ec3</anchor>
      <arglist>(const ConfigData &amp;data)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_config_a_p_i.html</anchorfile>
      <anchor>aa13e9e7cd0ff71fb4e34efa2d30453ac</anchor>
      <arglist>(const ConfigData &amp;data, QString key, const QVariant &amp;value)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_config_a_p_i.html</anchorfile>
      <anchor>adb3a54000299325194fe5bcf995160c4</anchor>
      <arglist>(QString file, QString section, QString key, const QVariant &amp;value)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>GetConfigFolder</name>
      <anchorfile>class_config_a_p_i.html</anchorfile>
      <anchor>aa090976f18ccb9c5247c12bf2ed9c520</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static QString</type>
      <name>FILE_FRAMEWORK</name>
      <anchorfile>class_config_a_p_i.html</anchorfile>
      <anchor>ada7d6a6dd029ff5bdb4955a274ed23d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static QString</type>
      <name>SECTION_FRAMEWORK</name>
      <anchorfile>class_config_a_p_i.html</anchorfile>
      <anchor>a546f981f16c9edb3a6e735edf252b64e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static QString</type>
      <name>SECTION_SERVER</name>
      <anchorfile>class_config_a_p_i.html</anchorfile>
      <anchor>a83b4aed5223654822d1e1ed1f06de516</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static QString</type>
      <name>SECTION_CLIENT</name>
      <anchorfile>class_config_a_p_i.html</anchorfile>
      <anchor>aec213e562edc120679a2099c526c6ae7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static QString</type>
      <name>SECTION_RENDERING</name>
      <anchorfile>class_config_a_p_i.html</anchorfile>
      <anchor>a6053b0e6f947c1ace57760fc238a239c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static QString</type>
      <name>SECTION_UI</name>
      <anchorfile>class_config_a_p_i.html</anchorfile>
      <anchor>ac8bff566a46ab4d2a87af78156c14fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>QString</type>
      <name>GetFilePath</name>
      <anchorfile>class_config_a_p_i.html</anchorfile>
      <anchor>a0e0b4b71d36654631d68781d7ae4cea2</anchor>
      <arglist>(const QString &amp;file) const </arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>PrepareString</name>
      <anchorfile>class_config_a_p_i.html</anchorfile>
      <anchor>abd38f561785f7f731c234e2c30a2811e</anchor>
      <arglist>(QString &amp;str) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ConfigAPI</name>
      <anchorfile>class_config_a_p_i.html</anchorfile>
      <anchor>ad820d2dc4d8d1e83f677c7f21d1a0d2c</anchor>
      <arglist>(Framework *framework)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>PrepareDataFolder</name>
      <anchorfile>class_config_a_p_i.html</anchorfile>
      <anchor>a5bdbfd20fb769e79f69d886bc40ffaad</anchor>
      <arglist>(const QString &amp;configFolderName)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework_</name>
      <anchorfile>class_config_a_p_i.html</anchorfile>
      <anchor>a0757d29d34f5edd0f5d216ea5e6e53a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QString</type>
      <name>configFolder_</name>
      <anchorfile>class_config_a_p_i.html</anchorfile>
      <anchor>af55ed32b5730ad8b4bcb8b8309dcc344</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Framework</name>
      <anchorfile>class_config_a_p_i.html</anchorfile>
      <anchor>ad3defef37a1222bb2b2a65577a6c4816</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ConfigData</name>
    <filename>class_config_data.html</filename>
    <member kind="slot">
      <type>QString</type>
      <name>getFile</name>
      <anchorfile>class_config_data.html</anchorfile>
      <anchor>a3feb3275b7b2189d4aac6d7d70d676ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>getSection</name>
      <anchorfile>class_config_data.html</anchorfile>
      <anchor>ac5d4967627227e2c17bd2d31087d3b3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>getKey</name>
      <anchorfile>class_config_data.html</anchorfile>
      <anchor>aba5ea50e1459c6d02b94c775702a86b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>getValue</name>
      <anchorfile>class_config_data.html</anchorfile>
      <anchor>ad4296d115e01b7237255b5ac202d56b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>getDefaultValue</name>
      <anchorfile>class_config_data.html</anchorfile>
      <anchor>a5c29c60329eda654f2c331356b027ad3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setFile</name>
      <anchorfile>class_config_data.html</anchorfile>
      <anchor>a73b2e4db78791e1505acd94b0e86c451</anchor>
      <arglist>(const QString &amp;s)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setSection</name>
      <anchorfile>class_config_data.html</anchorfile>
      <anchor>a8809fc4296b7a48b815c5628fa2ac7ba</anchor>
      <arglist>(const QString &amp;s)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setKey</name>
      <anchorfile>class_config_data.html</anchorfile>
      <anchor>a493ac45a4ec4ff4b50865b81fb5067f1</anchor>
      <arglist>(const QString &amp;s)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>class_config_data.html</anchorfile>
      <anchor>a8a0b74e78ba98e7952d67fe8fb8f2353</anchor>
      <arglist>(const QVariant &amp;v)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setDefaultValue</name>
      <anchorfile>class_config_data.html</anchorfile>
      <anchor>a0c8700c346cdb40ef12ea65093b40b74</anchor>
      <arglist>(const QVariant &amp;v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConfigData</name>
      <anchorfile>class_config_data.html</anchorfile>
      <anchor>adb78a42cc714fe0bfdf03d9a1e3d0cc5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConfigData</name>
      <anchorfile>class_config_data.html</anchorfile>
      <anchor>a8ec72ba2c144de1fe5c81bbf58969913</anchor>
      <arglist>(const QString &amp;file, const QString section, const QString &amp;key=QString(), const QVariant &amp;value=QVariant(), const QVariant &amp;defaultValue=QVariant())</arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>file</name>
      <anchorfile>class_config_data.html</anchorfile>
      <anchor>a921668ee5a3a03a11822644d5abebd02</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>section</name>
      <anchorfile>class_config_data.html</anchorfile>
      <anchor>a8e17f135d93f5b1be446443f28c6f542</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>key</name>
      <anchorfile>class_config_data.html</anchorfile>
      <anchor>a36f52025df34272b933185f661131e41</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QVariant</type>
      <name>value</name>
      <anchorfile>class_config_data.html</anchorfile>
      <anchor>a538cf871065b7ed30b043578810fa634</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QVariant</type>
      <name>defaultValue</name>
      <anchorfile>class_config_data.html</anchorfile>
      <anchor>a36e6b06227444e781810f878b0807e86</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ConsoleAPI</name>
    <filename>class_console_a_p_i.html</filename>
    <member kind="typedef">
      <type>std::map&lt; QString, boost::shared_ptr&lt; ConsoleCommand &gt;, QStringLessThanNoCase &gt;</type>
      <name>CommandMap</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>a3725317f16cf32ce11db7ace196a7795</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RegisterCommand</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>a53e9d91d01f4943e0b1222a4fb6895c1</anchor>
      <arglist>(const QString &amp;name, const QString &amp;desc, QObject *receiver, const char *memberSlot)</arglist>
    </member>
    <member kind="slot">
      <type>ConsoleCommand *</type>
      <name>RegisterCommand</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>ac85c968027a168fefd1ac9417a6b5c47</anchor>
      <arglist>(const QString &amp;name, const QString &amp;desc)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ExecuteCommand</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>a0ea1b615df43fb228ef2f82a546d1ce2</anchor>
      <arglist>(const QString &amp;command)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Print</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>a42cbb0824f5790bc7139607de08c338f</anchor>
      <arglist>(const QString &amp;message)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ListCommands</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>a17455659b64a15d8416eabe1bc2077e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ClearLog</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>afef3d103eb90380245b7dbe8b9269125</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetLogLevel</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>a37b92ed73fe539abf8252b8910fe37ef</anchor>
      <arglist>(const QString &amp;level)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>LogInfo</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>a085bfb58c9332e491567867958f0998c</anchor>
      <arglist>(const QString &amp;message)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>LogWarning</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>aa6da894f645f294dd160fe99cc2a88de</anchor>
      <arglist>(const QString &amp;message)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>LogError</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>a5e9293178e25402d793503aaf5516aa5</anchor>
      <arglist>(const QString &amp;message)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>LogDebug</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>a323d19af774af950f847f3f9f22578b8</anchor>
      <arglist>(const QString &amp;message)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Log</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>afafcc6840a98a5067d004f59c46b1c18</anchor>
      <arglist>(u32 logChannel, const QString &amp;message)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetEnabledLogChannels</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>adc3ab469f63b8b25d828c5177e795edf</anchor>
      <arglist>(u32 newChannels)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsLogChannelEnabled</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>ad612d48e3285dc6821b9877fb951b65d</anchor>
      <arglist>(u32 logChannel) const </arglist>
    </member>
    <member kind="slot">
      <type>u32</type>
      <name>EnabledLogChannels</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>ab6c69993386994da67d5af072ac297f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConsoleAPI</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>a17ab7d97bf8c2537c0a4022c817c077e</anchor>
      <arglist>(Framework *fw)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ConsoleAPI</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>a8c553876029ede53b47bf22ba763fa67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>ae48b52cffbcb3d488ca1a01aca526e42</anchor>
      <arglist>(f64 frametime)</arglist>
    </member>
    <member kind="function">
      <type>const CommandMap &amp;</type>
      <name>Commands</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>a9e6cbacc5534984eb0f6a32480e68101</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Reset</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>adfa0f5b58204fbe838d86cee8b72504b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleKeyEvent</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>ad3fed4f2eef77f48bb19672b4d33e3b8</anchor>
      <arglist>(KeyEvent *e)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>ToggleConsole</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>a10f98408bf089430d5b64e5b8b8a18dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>abec41ac5e0f722558b998227ae84c2b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>CommandMap</type>
      <name>commands</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>a1c2e4a090405768a766b3a3bedcd2091</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>InputContextPtr</type>
      <name>inputContext</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>aa14a43a6f8b81c5b01d3c1f0a932164f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QPointer&lt; ConsoleWidget &gt;</type>
      <name>consoleWidget</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>a460c648e8584e9adbe934620b4e949bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::shared_ptr&lt; ShellInputThread &gt;</type>
      <name>shellInputThread</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>aea30578c34e364580124472baa79d6f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>u32</type>
      <name>enabledLogChannels</name>
      <anchorfile>class_console_a_p_i.html</anchorfile>
      <anchor>ad7e552183bdf85225773f2b457f0fe39</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ConsoleCommand</name>
    <filename>class_console_command.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>Invoked</name>
      <anchorfile>class_console_command.html</anchorfile>
      <anchor>a11ccb434190489967d658e1e0c49d930</anchor>
      <arglist>(const QStringList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConsoleCommand</name>
      <anchorfile>class_console_command.html</anchorfile>
      <anchor>ad2c8eeb46ea90bcc18d019d4702aa957</anchor>
      <arglist>(const QString &amp;commandName, const QString &amp;desc, QObject *targetObj, const QString &amp;funcName)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>Name</name>
      <anchorfile>class_console_command.html</anchorfile>
      <anchor>a06f6919913b60b9029af248979554b07</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>Description</name>
      <anchorfile>class_console_command.html</anchorfile>
      <anchor>aa3e3395cf24741d14232977be7dbc82e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QObject *</type>
      <name>Target</name>
      <anchorfile>class_console_command.html</anchorfile>
      <anchor>aac7599738fa59525536acbe1fb34fdf7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>FunctionName</name>
      <anchorfile>class_console_command.html</anchorfile>
      <anchor>a34d4f4bf0efc4ecea7edeaa7e43f324e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>Invoke</name>
      <anchorfile>class_console_command.html</anchorfile>
      <anchor>abc5d8a47cc2bc56b82f74add36f196c4</anchor>
      <arglist>(const QStringList &amp;params)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_console_command.html</anchorfile>
      <anchor>ab6710ddd397f6afbc31fdb6a5f18b772</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QString</type>
      <name>description</name>
      <anchorfile>class_console_command.html</anchorfile>
      <anchor>a18e32e245f1444a810270ad81e789470</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QPointer&lt; QObject &gt;</type>
      <name>target</name>
      <anchorfile>class_console_command.html</anchorfile>
      <anchor>a973a3181df5ed9fb55c8a5fb5402cf3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QString</type>
      <name>functionName</name>
      <anchorfile>class_console_command.html</anchorfile>
      <anchor>a5687e771def20356afebc398ad134201</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ConsoleWidget</name>
    <filename>class_console_widget.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>PrintToConsole</name>
      <anchorfile>class_console_widget.html</anchorfile>
      <anchor>a533c3f7807d88e9a0437a87eb9f17392</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ToggleConsole</name>
      <anchorfile>class_console_widget.html</anchorfile>
      <anchor>a9f458acb169235ad6dcb909a186e5f6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ClearLog</name>
      <anchorfile>class_console_widget.html</anchorfile>
      <anchor>a6c7a18746d4c2bc3fa4272337d411207</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConsoleWidget</name>
      <anchorfile>class_console_widget.html</anchorfile>
      <anchor>af5e9ea06133f170601a733589d91b4bb</anchor>
      <arglist>(Framework *fw)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConsoleWidget</name>
      <anchorfile>class_console_widget.html</anchorfile>
      <anchor>a151841b20c3b0a1177a49e1522445905</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleInput</name>
      <anchorfile>class_console_widget.html</anchorfile>
      <anchor>a042fb37b1f47a17cb52f5741130aafb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>AdjustToSceneRect</name>
      <anchorfile>class_console_widget.html</anchorfile>
      <anchor>a62606400d5babe185627f3f2609abd3d</anchor>
      <arglist>(const QRectF &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>eventFilter</name>
      <anchorfile>class_console_widget.html</anchorfile>
      <anchor>a21d541e6ec4294dd05024057c8757946</anchor>
      <arglist>(QObject *obj, QEvent *e)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>DecorateString</name>
      <anchorfile>class_console_widget.html</anchorfile>
      <anchor>aa5dd1f31f16d9ed670c106b7e7cda635</anchor>
      <arglist>(QString &amp;str)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QPlainTextEdit *</type>
      <name>textEdit</name>
      <anchorfile>class_console_widget.html</anchorfile>
      <anchor>af827fd40b585c9c72fbcc3dc89e7e784</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QLineEdit *</type>
      <name>lineEdit</name>
      <anchorfile>class_console_widget.html</anchorfile>
      <anchor>a7b3a1aa2886919e2acf8b42461686a10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_console_widget.html</anchorfile>
      <anchor>abfd9c985627103a3799a156d0067496e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QGraphicsView *</type>
      <name>graphicsView</name>
      <anchorfile>class_console_widget.html</anchorfile>
      <anchor>a50755079e292345de8387a8d489fccbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>UiProxyWidget *</type>
      <name>proxyWidget</name>
      <anchorfile>class_console_widget.html</anchorfile>
      <anchor>a394108bd20204c2496682ba5264c5f00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QPropertyAnimation *</type>
      <name>slideAnimation</name>
      <anchorfile>class_console_widget.html</anchorfile>
      <anchor>a1461abd99e9e311dedeb9ad2411df336</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QList&lt; QString &gt;</type>
      <name>commandHistory</name>
      <anchorfile>class_console_widget.html</anchorfile>
      <anchor>acc3aa33ae1c02e49c91a770de262555b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>commandHistoryIndex</name>
      <anchorfile>class_console_widget.html</anchorfile>
      <anchor>a01ccf5c4a75a99f4177576836aa83d26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QString</type>
      <name>commandStub</name>
      <anchorfile>class_console_widget.html</anchorfile>
      <anchor>a1594f53ce194d5b146c2a8e623d46fdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QStringList</type>
      <name>prevSuggestions</name>
      <anchorfile>class_console_widget.html</anchorfile>
      <anchor>adf1ddfd04520f495e1f90453a96a9e20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CustomFileDialog</name>
    <filename>class_custom_file_dialog.html</filename>
    <member kind="function">
      <type></type>
      <name>CustomFileDialog</name>
      <anchorfile>class_custom_file_dialog.html</anchorfile>
      <anchor>a79b2ef139bdc07364410eec0bd934749</anchor>
      <arglist>(QWidget *parent, const QString &amp;caption, const QString &amp;dir, const QString &amp;filter)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>hideEvent</name>
      <anchorfile>class_custom_file_dialog.html</anchorfile>
      <anchor>aad7d345cbc22eca4dbb9cc90d25fe8e9</anchor>
      <arglist>(QHideEvent *e)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>closeEvent</name>
      <anchorfile>class_custom_file_dialog.html</anchorfile>
      <anchor>a15fb3352c35d3a4744f6714b30d6ea2f</anchor>
      <arglist>(QCloseEvent *e)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CustomTagPoint</name>
    <filename>class_custom_tag_point.html</filename>
    <member kind="function">
      <type></type>
      <name>CustomTagPoint</name>
      <anchorfile>class_custom_tag_point.html</anchorfile>
      <anchor>a62d77e8a88342ef320f244352d41b677</anchor>
      <arglist>(Ogre::Entity *entity)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>_update</name>
      <anchorfile>class_custom_tag_point.html</anchorfile>
      <anchor>a17253b4b5ad65cc73c151bf3a8da7239</anchor>
      <arglist>(bool updateChildren, bool parentHasChanged)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FirstFrameUpdate</name>
      <anchorfile>class_custom_tag_point.html</anchorfile>
      <anchor>a4cbbf02d7f86df544aca7ddf64b22465</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; EC_Placeable * &gt;</type>
      <name>placeables_</name>
      <anchorfile>class_custom_tag_point.html</anchorfile>
      <anchor>a8af34d9353b6327576cf8854ff234feb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cylinder</name>
    <filename>class_cylinder.html</filename>
    <member kind="function">
      <type></type>
      <name>Cylinder</name>
      <anchorfile>class_cylinder.html</anchorfile>
      <anchor>a01dc978cb576f834b9545e43d4dad2a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Contains</name>
      <anchorfile>class_cylinder.html</anchorfile>
      <anchor>a6374f82d7c59766fa8082fb8266bd7fa</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DebugLine</name>
    <filename>struct_debug_line.html</filename>
    <member kind="variable">
      <type>Ogre::Vector3</type>
      <name>_start</name>
      <anchorfile>struct_debug_line.html</anchorfile>
      <anchor>a2ba9111ad2766c63497ec291e5fbac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Ogre::Vector3</type>
      <name>_end</name>
      <anchorfile>struct_debug_line.html</anchorfile>
      <anchor>a73422d6c13a70b969acbd2a16a55d48d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Ogre::ColourValue</type>
      <name>_color</name>
      <anchorfile>struct_debug_line.html</anchorfile>
      <anchor>accb2d7c48ca9e6e74e15f09e8b0eac7b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DebugLines</name>
    <filename>class_debug_lines.html</filename>
    <member kind="function">
      <type></type>
      <name>DebugLines</name>
      <anchorfile>class_debug_lines.html</anchorfile>
      <anchor>adc9734c0aa36e2e75fd532ed53d0a143</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DebugLines</name>
      <anchorfile>class_debug_lines.html</anchorfile>
      <anchor>a0e2d7c3569c4c7b38c60fad8deccbd7c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLine</name>
      <anchorfile>class_debug_lines.html</anchorfile>
      <anchor>a61663d7f57c1f0e983e87faf289336a7</anchor>
      <arglist>(const btVector3 &amp;from, const btVector3 &amp;to, const btVector3 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>class_debug_lines.html</anchorfile>
      <anchor>af6d1d980c9a476683fbcdd04d0bbbae8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>class_debug_lines.html</anchorfile>
      <anchor>a7ee4c5b8c85c49bc69d8b7587022eece</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Ogre::Real</type>
      <name>getSquaredViewDepth</name>
      <anchorfile>class_debug_lines.html</anchorfile>
      <anchor>a5aa1c63f36f4b2ed52dd23bc74ee37e8</anchor>
      <arglist>(const Ogre::Camera *cam) const </arglist>
    </member>
    <member kind="function">
      <type>Ogre::Real</type>
      <name>getBoundingRadius</name>
      <anchorfile>class_debug_lines.html</anchorfile>
      <anchor>aaeb9d929d33e1fb5755cd092e1901389</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; DebugLine &gt;</type>
      <name>_lines</name>
      <anchorfile>class_debug_lines.html</anchorfile>
      <anchor>a5144d91b724068b9c8c2bc8e0549c250</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Ogre::HardwareVertexBufferSharedPtr</type>
      <name>_vbuf</name>
      <anchorfile>class_debug_lines.html</anchorfile>
      <anchor>aa907461c5e2bf0554c79816bd03ed933</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DelayedSignal</name>
    <filename>class_delayed_signal.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>Triggered</name>
      <anchorfile>class_delayed_signal.html</anchorfile>
      <anchor>a3f2312a780c50275b9f20472880a46f1</anchor>
      <arglist>(float time)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>Expire</name>
      <anchorfile>class_delayed_signal.html</anchorfile>
      <anchor>a5e11ffa533502420742ab9fae87c1b18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>DelayedSignal</name>
      <anchorfile>class_delayed_signal.html</anchorfile>
      <anchor>a62bacf009f6f1ea5cfc60b5696eb18b9</anchor>
      <arglist>(u64 startTime)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>u64</type>
      <name>startTime</name>
      <anchorfile>class_delayed_signal.html</anchorfile>
      <anchor>afa15a871b909486e32ed8bf742f77a81</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>FrameAPI</name>
      <anchorfile>class_delayed_signal.html</anchorfile>
      <anchor>aa10db33032fa85bd24f6f5e1ba8fd614</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DeserializeData</name>
    <filename>struct_deserialize_data.html</filename>
    <member kind="function">
      <type></type>
      <name>DeserializeData</name>
      <anchorfile>struct_deserialize_data.html</anchorfile>
      <anchor>a3efcbfa765c67efa6d3e63690546ccac</anchor>
      <arglist>(const QString &amp;name=&quot;&quot;, const QString &amp;type=&quot;&quot;, const QString &amp;value=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>struct_deserialize_data.html</anchorfile>
      <anchor>a5a53a44148758b5caab81d3b224e4383</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>name_</name>
      <anchorfile>struct_deserialize_data.html</anchorfile>
      <anchor>ae86bde809e8a0618583a7da73e3dba8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>type_</name>
      <anchorfile>struct_deserialize_data.html</anchorfile>
      <anchor>ac711333dde56f6b68f0dacaa3c5f8790</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>value_</name>
      <anchorfile>struct_deserialize_data.html</anchorfile>
      <anchor>ab2090dc8d2f68d807fe6004eaac3c173</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EC_AnimationController</name>
    <filename>class_e_c___animation_controller.html</filename>
    <base>IComponent</base>
    <class kind="struct">EC_AnimationController::Animation</class>
    <member kind="enumeration">
      <name>AnimationPhase</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>afee24802be41152971d6c1d141f62fe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHASE_FADEIN</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>afee24802be41152971d6c1d141f62fe3a64cdb16c4867591dc267f5a19b55d7b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHASE_PLAY</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>afee24802be41152971d6c1d141f62fe3a21d1011a3f60d6bd20cc8663e3927fd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHASE_FADEOUT</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>afee24802be41152971d6c1d141f62fe3a342c35deb0fa8dee2d8ab9c2c86fcc98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHASE_STOP</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>afee24802be41152971d6c1d141f62fe3a77f00f081a5de1ef79204d9f78e58990</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHASE_FREE</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>afee24802be41152971d6c1d141f62fe3a3b9318175c3240b731e72643f6c8556b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; QString, Animation, QStringLessThanNoCase &gt;</type>
      <name>AnimationMap</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a0214b8798cc5703f813310c670334d70</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>EC_Mesh *</type>
      <name>GetMeshEntity</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>acc563ab9a1cc32dbab3158d452915d10</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetMeshEntity</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a8974a03bee6d315752a455082f55352f</anchor>
      <arglist>(EC_Mesh *new_mesh)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>AutoSetMesh</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a9925c018cc79bc3a4f2d71e23ac1ed48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a070d52bc3b0ab8f72b02fc0bef55577c</anchor>
      <arglist>(float frametime)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>EnableAnimation</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a91684343e20c92509c973327d820827b</anchor>
      <arglist>(const QString &amp;name, bool looped=true, float fadein=0.0f, bool high_priority=false)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>EnableExclusiveAnimation</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>ab63be59d507b61ae9cc78f09a38017cf</anchor>
      <arglist>(const QString &amp;name, bool looped, float fadein=0.0f, float fadeout=0.0f, bool high_priority=false)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>HasAnimationFinished</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a95c3101b1fe7dff96ed937e9d1d6c39e</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsAnimationActive</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a1115aea2916c6581149f98b643c4aa67</anchor>
      <arglist>(const QString &amp;name, bool check_fadeout=true)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>DisableAnimation</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a4a0f3944e02c16cce99c7ce263f5b9b3</anchor>
      <arglist>(const QString &amp;name, float fadeout=0.0f)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>DisableAllAnimations</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a7b3ad810fd9c790ca502f07c5439e8a4</anchor>
      <arglist>(float fadeout=0.0f)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetAnimationToEnd</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>abf191dfb6019b2a59b8f36056c819c10</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetAnimationSpeed</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>adf65df7f0e4eb26eeb223d7f51b0f049</anchor>
      <arglist>(const QString &amp;name, float speedfactor)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetAnimationWeight</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a491c92e830d8ebb12bbd549180eda945</anchor>
      <arglist>(const QString &amp;name, float weight)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetAnimationPriority</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a4bb964b3c79e24bf678cec2517f73e7a</anchor>
      <arglist>(const QString &amp;name, bool high_priority)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetAnimationTimePosition</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a29714831ac05e906b1e69e5dc0ac238c</anchor>
      <arglist>(const QString &amp;name, float new_position)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetAnimationRelativeTimePosition</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>af9b6a2ac919124a99c502c8016c6077a</anchor>
      <arglist>(const QString &amp;name, float new_position)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetAnimationAutoStop</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>af5e0faf53eccf54ad3067664fd898e64</anchor>
      <arglist>(const QString &amp;name, bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetAnimationNumLoops</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>afd933e6f6a08b520b8c870a620a1328f</anchor>
      <arglist>(const QString &amp;name, unsigned repeats)</arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetAvailableAnimations</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>ac2f952f7579ea9e3b36eac148c79b10c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetActiveAnimations</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>aa77b0567f2389739105e43e68d1a8dc2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>float</type>
      <name>GetAnimationLength</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a050d0db6300c71bbbc6527a7d0d5c085</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="slot">
      <type>float</type>
      <name>GetAnimationTimePosition</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>ab3be1f4e3d14993982abee74e63b8031</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="slot">
      <type>float</type>
      <name>GetAnimationRelativeTimePosition</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a56b13f17b5ed6868a068b16a67add4d3</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>PlayAnim</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>af9135968a53e421d7d963bc1f8c22016</anchor>
      <arglist>(const QString &amp;name, const QString &amp;fadein, const QString &amp;exclusive)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>PlayLoopedAnim</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a6c75629d3e926417608f4b71c6be8cf8</anchor>
      <arglist>(const QString &amp;name, const QString &amp;fadein, const QString &amp;exclusive)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>PlayReverseAnim</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a4e9b92c53e840c22c2a3772aa890b361</anchor>
      <arglist>(const QString &amp;name, const QString &amp;fadein, const QString &amp;exclusive)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>PlayAnimAutoStop</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a2766e0b124dd90910e4d492d3ce400f9</anchor>
      <arglist>(const QString &amp;name, const QString &amp;fadein, const QString &amp;exclusive)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>StopAnim</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a4c623bf50fc49cd2dc9d04ad16f5312f</anchor>
      <arglist>(const QString &amp;name, const QString &amp;fadeout)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>StopAllAnims</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>af232b5d56ebf42fbb247d755bf3129da</anchor>
      <arglist>(const QString &amp;fadeout)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetAnimSpeed</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a4426bbe85c9bb13e6797af92f12352e8</anchor>
      <arglist>(const QString &amp;name, const QString &amp;animspeed)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetAnimWeight</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a5ffbf46f45ae4d3b0f50fcd2e8b6eef8</anchor>
      <arglist>(const QString &amp;name, const QString &amp;animweight)</arglist>
    </member>
    <member kind="slot">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3a676adf2171375d6a6d782edd11f8cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a37b5449bdd8f88a07390204b6db24a80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsLocal</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7db6ec7dcedff369978dc05c114c3c91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsUnacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9f03346fe17c944a68a8388765d270c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetNetworkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a552391127e461b25b9d1d82028bae538</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetUpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a71f8f6bdee9d3f5774e2c0fd40e0b705</anchor>
      <arglist>(AttributeChange::Type defaultmode)</arglist>
    </member>
    <member kind="slot">
      <type>AttributeChange::Type</type>
      <name>UpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab9fe0648d176468ad31690c9fe34663b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>component_id_t</type>
      <name>Id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a63fd758d1042c37b180b0521408794bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2fdd3bc81ee6586e78cae212063185f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumStaticAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ad73dac34801dde16fd02332ff9e04aae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa5562b35074886469279334adf943e42</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>abd191432824f4b1c6c0deb46af886d98</anchor>
      <arglist>(const QString &amp;attributeName, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ComponentChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a35070b168681bf5600b08b4422cb2cea</anchor>
      <arglist>(AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>Entity *</type>
      <name>ParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9e79fda037aff4c3678d9d962e78d9ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Scene *</type>
      <name>ParentScene</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac56fb67cf293f9a4228fb1b4b5aaa1d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf71fe4c9b2c636b28c8db8584acacaf</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e87391a508d5bc41f21ddc2051498a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>ViewEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7c9a41bff7f966ac13575b7dc7d598d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>GetAttributeQVariant</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab824c2fa3bb625208160c5cebf38d86a</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetAttributeNames</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa6e0b51556f8cbb31bdddbb0d10efd7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AnimationFinished</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a7ed9b5f28adc6058b82fc16494f79e11</anchor>
      <arglist>(const QString &amp;animationName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AnimationCycled</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a14a745533e2317bb4eb6b67ec2a1fc13</anchor>
      <arglist>(const QString &amp;animationName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a831b035648a3ec54c47991f61352b76f</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentNameChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac628c437220fc88961842fa412119940</anchor>
      <arglist>(const QString &amp;newName, const QString &amp;oldName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntitySet</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a1c0064bad72118e77f6896ad99929129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntityDetached</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e2ed82d9dc9a91f1347c3fbdf6ee305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAdded</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a81284243581f53c55f5817f5963665dc</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAboutToBeRemoved</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>adffe0688eddd4f05201376f3c3d75f2c</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EC_AnimationController</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a4b0a77c036950baf3f2206ccd7ad6ab1</anchor>
      <arglist>(Scene *scene)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EC_AnimationController</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a39913f7f52f8750c178491086a949f7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>adb370bc5b725b0411c71bee6f48258de</anchor>
      <arglist>(QString, animationState)</arglist>
    </member>
    <member kind="function">
      <type>const AnimationMap &amp;</type>
      <name>GetRunningAnimations</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a32e9cfdfaa4832ba87b2661a8f575a83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const QString &amp;</type>
      <name>TypeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a156d0e2583be2efaa99c441458f1db9d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual u32</type>
      <name>TypeId</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8627793238d67e1753c5b810c5051cbd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a58f42567395c5341d2e1fd97fe7f804d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa8064a536ed194201bf0189ece40de8d</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afeedd4000926fdd03993f948b7e31913</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="function">
      <type>const AttributeVector &amp;</type>
      <name>Attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a89a8bab524c7fcfef61ce856e7b4d076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AttributeVector</type>
      <name>NonEmptyAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8a2fff750482947ccbdbf9ce3064c428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Attribute&lt; T &gt; *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afa602255ad19494e8264f7fb73070493</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0dea3e94303deea91633301813553676</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeTo</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8154e6434ceeb36ca5e74fef15859353</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFrom</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6e9845cdedf2a238a212bbcd8a863e72</anchor>
      <arglist>(QDomElement &amp;element, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeToBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6ae9b22082cb5bf29859645dd6ac6d4a</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFromBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a481ee3acac8605b1e683c1231f25e2bc</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>CreateAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a4356799119ea6ecae4b6dfc6b091bddb</anchor>
      <arglist>(u8 index, u32 typeID, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2f8b15aa5edcdaac2f32c5959c5d88dc</anchor>
      <arglist>(u8 index, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a62dfbeca452e6449c233a570cf059225</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QDomElement</type>
      <name>BeginSerialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7172dbdf2339ddbbc3c5652be8968ed3</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a844ec4ff1dec75cbbb7d8ff03ca61b01</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aad61f20527eed870c9f635e20bf5c688</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value, const QString &amp;type) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>BeginDeserialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3fef3969ebb919048bf57d3db05b48d7</anchor>
      <arglist>(QDomElement &amp;compElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7fd2354c177222bfdad3d9f8bbf4f051</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttributeType</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a5b0ecd40b4da8fb8d6794b2cf31ce4c9</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>af5a186f31936694254018f2c720256c7</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a96113e4d61805b085f4b0d6d36135391</anchor>
      <arglist>(IAttribute *attr, u8 index)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>component_id_t</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a946596d66e1667003eafab6ddb6f141b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Entity *</type>
      <name>parentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3761c0afda2f60e0b3acc44d8162b907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AttributeVector</type>
      <name>attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae0bfd9389533b6a178d0876b1174102f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae04ef3ddf6acb549b696b339c933c274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>temporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7a013d9fbc921cc6ea882e039794baa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>animationState</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a36709090f836b743962b24c3a2779ea4</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa63d1d694b058775a2458c45e68d856b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a134821f6bcf1ea6408a3a72c7f4dfa1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>replicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf5b7cfc104657f2795c8b0b237089eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>local</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a95ade3d0915b7224d56cd34a4e308cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AttributeChange::Type</type>
      <name>updateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a75b46dc1d972b1f10c17d8521aabf3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a418e735d210d40d2551b21a04f1cdde9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>unacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab5194d9724dc21842582abaa47ec4f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>networkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0d221fecdcf0c6b3ec731936d3c43fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>UpdateSignals</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>abc26428bd01d0e3016839532fcc04971</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnComponentRemoved</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a98a474afc1b420d9acccc84ef4086ce3</anchor>
      <arglist>(IComponent *component, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Ogre::Entity *</type>
      <name>GetEntity</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a957adf99c65f45c7c1fdc51cb3a729ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Ogre::AnimationState *</type>
      <name>GetAnimationState</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a2927f8bcbac617bdfe3b772f89a05282</anchor>
      <arglist>(Ogre::Entity *entity, const QString &amp;name)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ResetState</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>ae6a4309be97ce5dca2cf36f0c354bde5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EC_Mesh *</type>
      <name>mesh</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a64a2b62a86ac38d17f1bccc019fd819b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>mesh_name_</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a14c5d530d0d6fda6fab804a2067e3e86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AnimationMap</type>
      <name>animations_</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a82bbeb35546104af895982ada726313a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::AnimationState::BoneBlendMask</type>
      <name>highpriority_mask_</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>a37a5d231c9815744696af6da5b127764</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::AnimationState::BoneBlendMask</type>
      <name>lowpriority_mask_</name>
      <anchorfile>class_e_c___animation_controller.html</anchorfile>
      <anchor>aab3f8b44bccbb90f625085a2568dc531</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>::IAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aea94a77a3151b94a6e695e5e5632cff8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>EC_AnimationController::Animation</name>
    <filename>struct_e_c___animation_controller_1_1_animation.html</filename>
    <member kind="function">
      <type></type>
      <name>Animation</name>
      <anchorfile>struct_e_c___animation_controller_1_1_animation.html</anchorfile>
      <anchor>a3802940d6331186b5acc8579dfddeb6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>auto_stop_</name>
      <anchorfile>struct_e_c___animation_controller_1_1_animation.html</anchorfile>
      <anchor>a7bd956931171a7ef81218658d6b9d777</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>fade_period_</name>
      <anchorfile>struct_e_c___animation_controller_1_1_animation.html</anchorfile>
      <anchor>ade27271a84cca6a98778c5addf23b706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>weight_</name>
      <anchorfile>struct_e_c___animation_controller_1_1_animation.html</anchorfile>
      <anchor>a20a621d84daf344a649eb87eeaa0f6f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>weight_factor_</name>
      <anchorfile>struct_e_c___animation_controller_1_1_animation.html</anchorfile>
      <anchor>a88fe77d8cccc9c59ce6ec69eab8669f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>speed_factor_</name>
      <anchorfile>struct_e_c___animation_controller_1_1_animation.html</anchorfile>
      <anchor>a7e02224b624020da29825032b82a7212</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>num_repeats_</name>
      <anchorfile>struct_e_c___animation_controller_1_1_animation.html</anchorfile>
      <anchor>aaea719ab16f838a2f590039f0181cecd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>high_priority_</name>
      <anchorfile>struct_e_c___animation_controller_1_1_animation.html</anchorfile>
      <anchor>a286eea6444698e4e195b98a7fc5ed25b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AnimationPhase</type>
      <name>phase_</name>
      <anchorfile>struct_e_c___animation_controller_1_1_animation.html</anchorfile>
      <anchor>a1b9a1aff92cc27742a1e43fa8c264266</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EC_Camera</name>
    <filename>class_e_c___camera.html</filename>
    <base>IComponent</base>
    <member kind="slot">
      <type>void</type>
      <name>SetActive</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>ae98cae299c1b97b7a507bb4b7b60a49b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>float3</type>
      <name>InitialRotation</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a5e8ff7864f510fa5868b8c31fb7a0376</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>float3</type>
      <name>AdjustedRotation</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a960a9fc47d3134459b9ea9e1990c0253</anchor>
      <arglist>(const float3 &amp;rotation) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetNearClip</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a0dfd3b7785d92a074c82bd1ab29ab245</anchor>
      <arglist>(float nearclip)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetFarClip</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>ad249cda7d9ecb0f357d4d6619c29ffd8</anchor>
      <arglist>(float farclip)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetVerticalFov</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>aa66bff246aab91b4852f8168fe2f3abe</anchor>
      <arglist>(float fov)</arglist>
    </member>
    <member kind="slot">
      <type>float</type>
      <name>NearClip</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a7e8853ba79cd647c1ffa08785aefd38a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>float</type>
      <name>FarClip</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>ad752ea8e99d481f9d0ff9ec2d711adb9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>float</type>
      <name>VerticalFov</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a52af53f62585529fc771b55a8a3a3849</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>float</type>
      <name>AspectRatio</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a68d51d0b8df2fc2e4a907166daf1a1e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsActive</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a0f6b4a1d5ddc3015c44377fa683e5c9e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Ogre::Camera *</type>
      <name>GetCamera</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>aa11c1b5b5abb82743bdb421f62bfd3b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsEntityVisible</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>ad20127c852ea27ece333f2ade710e318</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="slot">
      <type>QList&lt; Entity * &gt;</type>
      <name>VisibleEntities</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>adb2c09b2ee7aeee984456e0705a3ffd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>const std::set&lt; entity_id_t &gt; &amp;</type>
      <name>VisibleEntityIDs</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a050a6e0669e800a332d837e91f4f253f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>Ray</type>
      <name>GetMouseRay</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a97a4655bcca0e0c8da823c1f4858200d</anchor>
      <arglist>(float x, float y)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>StartViewTracking</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a97fdefc41ee0b46545c8f61584a30a32</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>StopViewTracking</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a6dbfdcbfb1fd19900a65e4195d02295d</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="slot">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3a676adf2171375d6a6d782edd11f8cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a37b5449bdd8f88a07390204b6db24a80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsLocal</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7db6ec7dcedff369978dc05c114c3c91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsUnacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9f03346fe17c944a68a8388765d270c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetNetworkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a552391127e461b25b9d1d82028bae538</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetUpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a71f8f6bdee9d3f5774e2c0fd40e0b705</anchor>
      <arglist>(AttributeChange::Type defaultmode)</arglist>
    </member>
    <member kind="slot">
      <type>AttributeChange::Type</type>
      <name>UpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab9fe0648d176468ad31690c9fe34663b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>component_id_t</type>
      <name>Id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a63fd758d1042c37b180b0521408794bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2fdd3bc81ee6586e78cae212063185f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumStaticAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ad73dac34801dde16fd02332ff9e04aae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa5562b35074886469279334adf943e42</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>abd191432824f4b1c6c0deb46af886d98</anchor>
      <arglist>(const QString &amp;attributeName, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ComponentChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a35070b168681bf5600b08b4422cb2cea</anchor>
      <arglist>(AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>Entity *</type>
      <name>ParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9e79fda037aff4c3678d9d962e78d9ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Scene *</type>
      <name>ParentScene</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac56fb67cf293f9a4228fb1b4b5aaa1d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf71fe4c9b2c636b28c8db8584acacaf</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e87391a508d5bc41f21ddc2051498a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>ViewEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7c9a41bff7f966ac13575b7dc7d598d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>GetAttributeQVariant</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab824c2fa3bb625208160c5cebf38d86a</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetAttributeNames</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa6e0b51556f8cbb31bdddbb0d10efd7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>EntityEnterView</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a1806d2f010f3517fd3e1290dc7efe93c</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>EntityLeaveView</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a99bd82a0168498d4b3a9a081344c6c50</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a831b035648a3ec54c47991f61352b76f</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentNameChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac628c437220fc88961842fa412119940</anchor>
      <arglist>(const QString &amp;newName, const QString &amp;oldName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntitySet</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a1c0064bad72118e77f6896ad99929129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntityDetached</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e2ed82d9dc9a91f1347c3fbdf6ee305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAdded</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a81284243581f53c55f5817f5963665dc</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAboutToBeRemoved</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>adffe0688eddd4f05201376f3c3d75f2c</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EC_Camera</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>ae9baf2b99f4b0b75e25b1a6314b5c22f</anchor>
      <arglist>(Scene *scene)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EC_Camera</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a4e78000ecc5418c0073a0d394022a33a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>ad733746de86a211777315f8ca2a68a77</anchor>
      <arglist>(float3, upVector)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a79e6c004e0a38fce9d3220e60e3a7318</anchor>
      <arglist>(float, nearPlane)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a83c353c69c8b75ed3cadfa6a8660159c</anchor>
      <arglist>(float, farPlane)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>ab18f6ba01cbd44ce352393d971d50181</anchor>
      <arglist>(float, verticalFov)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a9c8b1ee28de50585fdb6d76cca08b404</anchor>
      <arglist>(QString, aspectRatio)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const QString &amp;</type>
      <name>TypeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a156d0e2583be2efaa99c441458f1db9d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual u32</type>
      <name>TypeId</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8627793238d67e1753c5b810c5051cbd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a58f42567395c5341d2e1fd97fe7f804d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa8064a536ed194201bf0189ece40de8d</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afeedd4000926fdd03993f948b7e31913</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="function">
      <type>const AttributeVector &amp;</type>
      <name>Attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a89a8bab524c7fcfef61ce856e7b4d076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AttributeVector</type>
      <name>NonEmptyAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8a2fff750482947ccbdbf9ce3064c428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Attribute&lt; T &gt; *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afa602255ad19494e8264f7fb73070493</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0dea3e94303deea91633301813553676</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeTo</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8154e6434ceeb36ca5e74fef15859353</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFrom</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6e9845cdedf2a238a212bbcd8a863e72</anchor>
      <arglist>(QDomElement &amp;element, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeToBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6ae9b22082cb5bf29859645dd6ac6d4a</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFromBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a481ee3acac8605b1e683c1231f25e2bc</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>CreateAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a4356799119ea6ecae4b6dfc6b091bddb</anchor>
      <arglist>(u8 index, u32 typeID, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2f8b15aa5edcdaac2f32c5959c5d88dc</anchor>
      <arglist>(u8 index, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a62dfbeca452e6449c233a570cf059225</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QDomElement</type>
      <name>BeginSerialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7172dbdf2339ddbbc3c5652be8968ed3</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a844ec4ff1dec75cbbb7d8ff03ca61b01</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aad61f20527eed870c9f635e20bf5c688</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value, const QString &amp;type) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>BeginDeserialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3fef3969ebb919048bf57d3db05b48d7</anchor>
      <arglist>(QDomElement &amp;compElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7fd2354c177222bfdad3d9f8bbf4f051</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttributeType</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a5b0ecd40b4da8fb8d6794b2cf31ce4c9</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>af5a186f31936694254018f2c720256c7</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a96113e4d61805b085f4b0d6d36135391</anchor>
      <arglist>(IAttribute *attr, u8 index)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>component_id_t</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a946596d66e1667003eafab6ddb6f141b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Entity *</type>
      <name>parentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3761c0afda2f60e0b3acc44d8162b907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AttributeVector</type>
      <name>attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae0bfd9389533b6a178d0876b1174102f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae04ef3ddf6acb549b696b339c933c274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>temporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7a013d9fbc921cc6ea882e039794baa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float3</type>
      <name>upVector</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a64ae00342d4c25beb7611e92b9b526f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>nearPlane</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>ae3030dcf4b64a327f786fe932389303c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>farPlane</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a173cc0eb7cd3a56bdf58300031c2239d</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>verticalFov</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a9cd5d715422a46ed53f662d565ce0a8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>aspectRatio</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a4e9a73bae3392721486e53924fffa508</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa63d1d694b058775a2458c45e68d856b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a134821f6bcf1ea6408a3a72c7f4dfa1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>replicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf5b7cfc104657f2795c8b0b237089eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>local</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a95ade3d0915b7224d56cd34a4e308cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AttributeChange::Type</type>
      <name>updateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a75b46dc1d972b1f10c17d8521aabf3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a418e735d210d40d2551b21a04f1cdde9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>unacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab5194d9724dc21842582abaa47ec4f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>networkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0d221fecdcf0c6b3ec731936d3c43fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>UpdateSignals</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>afd10c4b7f5cb99123ee411b79b5433a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnComponentStructureChanged</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>aa0bb83bb96950d0c826a8e58ae242fbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnAttributeUpdated</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>abb917a02d045f682f6be7d722860ff9f</anchor>
      <arglist>(IAttribute *attribute)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnUpdated</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>ab6ece58dcc8b4c7baccb7fe8050b8fe9</anchor>
      <arglist>(float timeStep)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetPlaceable</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a574d2aa31d75ae045f01bc588ef6345e</anchor>
      <arglist>(ComponentPtr placeable)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>AttachCamera</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a1d75dcafc872c97fece2505bdf0dc5fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>DetachCamera</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a168f48d1b0e18e3fab8b4faef95b8705</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>QueryVisibleEntities</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>abe5537a1c725ef2335e615c130906378</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ComponentPtr</type>
      <name>placeable_</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a0ce373d111b2982a7180f319108b855d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>attached_</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a1330153c55af065ee4c4fea600951037</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>OgreWorldWeakPtr</type>
      <name>world_</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a7f7f407323f6671d272d873baee86aa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::Camera *</type>
      <name>camera_</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a20895ea2b74b6b5637ba4e2138f23600</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>queryFrameNumber_</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a347996812f9817b5d157869d01247d22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; entity_id_t &gt;</type>
      <name>visibleEntities_</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a0ce2ce524517db4c5fa853803ff11710</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; entity_id_t &gt;</type>
      <name>lastVisibleEntities_</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>ad3f68003685ae822cfabc4672b05c3e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; EntityWeakPtr &gt;</type>
      <name>visibilityTrackedEntities_</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>ad3ef00693cb066aaa90967245a0887a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::PlaneBoundedVolumeListSceneQuery *</type>
      <name>query_</name>
      <anchorfile>class_e_c___camera.html</anchorfile>
      <anchor>a1afb8cd4e8f2d53c59acb2f3517f7926</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>::IAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aea94a77a3151b94a6e695e5e5632cff8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EC_DynamicComponent</name>
    <filename>class_e_c___dynamic_component.html</filename>
    <base>IComponent</base>
    <member kind="slot">
      <type>IAttribute *</type>
      <name>CreateAttribute</name>
      <anchorfile>class_e_c___dynamic_component.html</anchorfile>
      <anchor>a815ecc5468bbd45b56ddef2c9e0cd25a</anchor>
      <arglist>(const QString &amp;typeName, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>AddQVariantAttribute</name>
      <anchorfile>class_e_c___dynamic_component.html</anchorfile>
      <anchor>a14e2da636336ffbc66f53dca85533aec</anchor>
      <arglist>(const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>GetAttribute</name>
      <anchorfile>class_e_c___dynamic_component.html</anchorfile>
      <anchor>a5574ef33e42bb65e30005b85bcd7bdca</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>GetAttribute</name>
      <anchorfile>class_e_c___dynamic_component.html</anchorfile>
      <anchor>acb35b9b010fb863c9a72774b12237191</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetAttributeQScript</name>
      <anchorfile>class_e_c___dynamic_component.html</anchorfile>
      <anchor>a11fbb6885184df03784d1485b71b1a9f</anchor>
      <arglist>(const QString &amp;name, const QScriptValue &amp;value, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetAttribute</name>
      <anchorfile>class_e_c___dynamic_component.html</anchorfile>
      <anchor>a9620a0fb23a126017410c593a10c39bf</anchor>
      <arglist>(int index, const QVariant &amp;value, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetAttribute</name>
      <anchorfile>class_e_c___dynamic_component.html</anchorfile>
      <anchor>a26bb7ade895b572234aa0e5be546fb21</anchor>
      <arglist>(const QString &amp;name, const QVariant &amp;value, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>GetAttributeName</name>
      <anchorfile>class_e_c___dynamic_component.html</anchorfile>
      <anchor>ab89314e1f76a63428fa614a02d045042</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>ContainSameAttributes</name>
      <anchorfile>class_e_c___dynamic_component.html</anchorfile>
      <anchor>ad27a0c7a6a051333bab66418011b403b</anchor>
      <arglist>(const EC_DynamicComponent &amp;comp) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveAttribute</name>
      <anchorfile>class_e_c___dynamic_component.html</anchorfile>
      <anchor>a60e28ec99ada91e195dbfcc2aca3b20f</anchor>
      <arglist>(const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>ContainsAttribute</name>
      <anchorfile>class_e_c___dynamic_component.html</anchorfile>
      <anchor>ab1a4069ead3f73a2dd043904721e0f74</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveAllAttributes</name>
      <anchorfile>class_e_c___dynamic_component.html</anchorfile>
      <anchor>a0127d0e1e1162550d08599d846d3177b</anchor>
      <arglist>(AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="slot">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3a676adf2171375d6a6d782edd11f8cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a37b5449bdd8f88a07390204b6db24a80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsLocal</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7db6ec7dcedff369978dc05c114c3c91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsUnacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9f03346fe17c944a68a8388765d270c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetNetworkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a552391127e461b25b9d1d82028bae538</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetUpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a71f8f6bdee9d3f5774e2c0fd40e0b705</anchor>
      <arglist>(AttributeChange::Type defaultmode)</arglist>
    </member>
    <member kind="slot">
      <type>AttributeChange::Type</type>
      <name>UpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab9fe0648d176468ad31690c9fe34663b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>component_id_t</type>
      <name>Id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a63fd758d1042c37b180b0521408794bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2fdd3bc81ee6586e78cae212063185f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumStaticAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ad73dac34801dde16fd02332ff9e04aae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa5562b35074886469279334adf943e42</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>abd191432824f4b1c6c0deb46af886d98</anchor>
      <arglist>(const QString &amp;attributeName, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ComponentChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a35070b168681bf5600b08b4422cb2cea</anchor>
      <arglist>(AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>Entity *</type>
      <name>ParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9e79fda037aff4c3678d9d962e78d9ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Scene *</type>
      <name>ParentScene</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac56fb67cf293f9a4228fb1b4b5aaa1d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf71fe4c9b2c636b28c8db8584acacaf</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e87391a508d5bc41f21ddc2051498a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>ViewEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7c9a41bff7f966ac13575b7dc7d598d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>GetAttributeQVariant</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab824c2fa3bb625208160c5cebf38d86a</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetAttributeNames</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa6e0b51556f8cbb31bdddbb0d10efd7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a831b035648a3ec54c47991f61352b76f</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentNameChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac628c437220fc88961842fa412119940</anchor>
      <arglist>(const QString &amp;newName, const QString &amp;oldName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntitySet</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a1c0064bad72118e77f6896ad99929129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntityDetached</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e2ed82d9dc9a91f1347c3fbdf6ee305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAdded</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a81284243581f53c55f5817f5963665dc</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAboutToBeRemoved</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>adffe0688eddd4f05201376f3c3d75f2c</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EC_DynamicComponent</name>
      <anchorfile>class_e_c___dynamic_component.html</anchorfile>
      <anchor>a642156add5322fdaa823e693690a6fd0</anchor>
      <arglist>(Scene *scene)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EC_DynamicComponent</name>
      <anchorfile>class_e_c___dynamic_component.html</anchorfile>
      <anchor>a1149ca82f8b006ff17a0fe3a4f3bbb51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SerializeTo</name>
      <anchorfile>class_e_c___dynamic_component.html</anchorfile>
      <anchor>a5360ae5d20acdf6e488030cdc6279780</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;base_element) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeserializeFrom</name>
      <anchorfile>class_e_c___dynamic_component.html</anchorfile>
      <anchor>a1ff132558296473145551434c33d726b</anchor>
      <arglist>(QDomElement &amp;element, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeserializeCommon</name>
      <anchorfile>class_e_c___dynamic_component.html</anchorfile>
      <anchor>a6bd8b85321be9ced83b4adb95e91f98a</anchor>
      <arglist>(std::vector&lt; DeserializeData &gt; &amp;deserializedAttributes, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddAttribute</name>
      <anchorfile>class_e_c___dynamic_component.html</anchorfile>
      <anchor>a804d9cab8f590ee2e6870406bab20fc7</anchor>
      <arglist>(const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeToBinary</name>
      <anchorfile>class_e_c___dynamic_component.html</anchorfile>
      <anchor>a0f1013561e89f47ddef4ebb878ffcc34</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFromBinary</name>
      <anchorfile>class_e_c___dynamic_component.html</anchorfile>
      <anchor>aed3653bf3b5e606e2defd776f22c5815</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const QString &amp;</type>
      <name>TypeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a156d0e2583be2efaa99c441458f1db9d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual u32</type>
      <name>TypeId</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8627793238d67e1753c5b810c5051cbd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a58f42567395c5341d2e1fd97fe7f804d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa8064a536ed194201bf0189ece40de8d</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afeedd4000926fdd03993f948b7e31913</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="function">
      <type>const AttributeVector &amp;</type>
      <name>Attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a89a8bab524c7fcfef61ce856e7b4d076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AttributeVector</type>
      <name>NonEmptyAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8a2fff750482947ccbdbf9ce3064c428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>CreateAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a4356799119ea6ecae4b6dfc6b091bddb</anchor>
      <arglist>(u8 index, u32 typeID, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2f8b15aa5edcdaac2f32c5959c5d88dc</anchor>
      <arglist>(u8 index, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a62dfbeca452e6449c233a570cf059225</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QDomElement</type>
      <name>BeginSerialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7172dbdf2339ddbbc3c5652be8968ed3</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a844ec4ff1dec75cbbb7d8ff03ca61b01</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aad61f20527eed870c9f635e20bf5c688</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value, const QString &amp;type) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>BeginDeserialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3fef3969ebb919048bf57d3db05b48d7</anchor>
      <arglist>(QDomElement &amp;compElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7fd2354c177222bfdad3d9f8bbf4f051</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttributeType</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a5b0ecd40b4da8fb8d6794b2cf31ce4c9</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>af5a186f31936694254018f2c720256c7</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a96113e4d61805b085f4b0d6d36135391</anchor>
      <arglist>(IAttribute *attr, u8 index)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>component_id_t</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a946596d66e1667003eafab6ddb6f141b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Entity *</type>
      <name>parentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3761c0afda2f60e0b3acc44d8162b907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AttributeVector</type>
      <name>attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae0bfd9389533b6a178d0876b1174102f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae04ef3ddf6acb549b696b339c933c274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>temporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7a013d9fbc921cc6ea882e039794baa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa63d1d694b058775a2458c45e68d856b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a134821f6bcf1ea6408a3a72c7f4dfa1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>replicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf5b7cfc104657f2795c8b0b237089eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>local</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a95ade3d0915b7224d56cd34a4e308cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AttributeChange::Type</type>
      <name>updateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a75b46dc1d972b1f10c17d8521aabf3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a418e735d210d40d2551b21a04f1cdde9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>unacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab5194d9724dc21842582abaa47ec4f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>networkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0d221fecdcf0c6b3ec731936d3c43fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>GetInternalAttributeIndex</name>
      <anchorfile>class_e_c___dynamic_component.html</anchorfile>
      <anchor>a910cc4cd292d61cb4ec0fd31492b9316</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>::IAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aea94a77a3151b94a6e695e5e5632cff8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EC_EnvironmentLight</name>
    <filename>class_e_c___environment_light.html</filename>
    <base>IComponent</base>
    <member kind="slot">
      <type>void</type>
      <name>OnAttributeUpdated</name>
      <anchorfile>class_e_c___environment_light.html</anchorfile>
      <anchor>ae61363d595d538292fa4f0707a9806c8</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>UpdateSunlight</name>
      <anchorfile>class_e_c___environment_light.html</anchorfile>
      <anchor>ab61dd2bba94a1472a17f174c23f349cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveSunlight</name>
      <anchorfile>class_e_c___environment_light.html</anchorfile>
      <anchor>aa0d7884898af49d0108da10fbe31261c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>UpdateAmbientLight</name>
      <anchorfile>class_e_c___environment_light.html</anchorfile>
      <anchor>af5e9e1af46f140ed43591766a76268b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3a676adf2171375d6a6d782edd11f8cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a37b5449bdd8f88a07390204b6db24a80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsLocal</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7db6ec7dcedff369978dc05c114c3c91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsUnacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9f03346fe17c944a68a8388765d270c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetNetworkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a552391127e461b25b9d1d82028bae538</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetUpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a71f8f6bdee9d3f5774e2c0fd40e0b705</anchor>
      <arglist>(AttributeChange::Type defaultmode)</arglist>
    </member>
    <member kind="slot">
      <type>AttributeChange::Type</type>
      <name>UpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab9fe0648d176468ad31690c9fe34663b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>component_id_t</type>
      <name>Id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a63fd758d1042c37b180b0521408794bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2fdd3bc81ee6586e78cae212063185f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumStaticAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ad73dac34801dde16fd02332ff9e04aae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa5562b35074886469279334adf943e42</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>abd191432824f4b1c6c0deb46af886d98</anchor>
      <arglist>(const QString &amp;attributeName, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ComponentChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a35070b168681bf5600b08b4422cb2cea</anchor>
      <arglist>(AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>Entity *</type>
      <name>ParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9e79fda037aff4c3678d9d962e78d9ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Scene *</type>
      <name>ParentScene</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac56fb67cf293f9a4228fb1b4b5aaa1d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf71fe4c9b2c636b28c8db8584acacaf</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e87391a508d5bc41f21ddc2051498a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>ViewEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7c9a41bff7f966ac13575b7dc7d598d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>GetAttributeQVariant</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab824c2fa3bb625208160c5cebf38d86a</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetAttributeNames</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa6e0b51556f8cbb31bdddbb0d10efd7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a831b035648a3ec54c47991f61352b76f</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentNameChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac628c437220fc88961842fa412119940</anchor>
      <arglist>(const QString &amp;newName, const QString &amp;oldName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntitySet</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a1c0064bad72118e77f6896ad99929129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntityDetached</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e2ed82d9dc9a91f1347c3fbdf6ee305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAdded</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a81284243581f53c55f5817f5963665dc</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAboutToBeRemoved</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>adffe0688eddd4f05201376f3c3d75f2c</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EC_EnvironmentLight</name>
      <anchorfile>class_e_c___environment_light.html</anchorfile>
      <anchor>a2ae2245961c56ec64196363990b109d6</anchor>
      <arglist>(Scene *scene)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EC_EnvironmentLight</name>
      <anchorfile>class_e_c___environment_light.html</anchorfile>
      <anchor>ab4ba04e4af1b8d6a435c920656db69d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___environment_light.html</anchorfile>
      <anchor>a53b6a0ffad0edd0c056f8bbe6d3a1def</anchor>
      <arglist>(Color, sunColor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___environment_light.html</anchorfile>
      <anchor>af63914806298ee5eddfecc5d5be8ad50</anchor>
      <arglist>(Color, ambientColor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___environment_light.html</anchorfile>
      <anchor>a561305a69c29c42ff2258dc35f151f6e</anchor>
      <arglist>(Color, sunDiffuseColor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___environment_light.html</anchorfile>
      <anchor>a8ce54c393247ecac6fd51b924704c164</anchor>
      <arglist>(float3, sunDirection)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___environment_light.html</anchorfile>
      <anchor>aa7c31c6dda29f12e718e43938bcc6584</anchor>
      <arglist>(bool, sunCastShadows)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const QString &amp;</type>
      <name>TypeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a156d0e2583be2efaa99c441458f1db9d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual u32</type>
      <name>TypeId</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8627793238d67e1753c5b810c5051cbd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a58f42567395c5341d2e1fd97fe7f804d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa8064a536ed194201bf0189ece40de8d</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afeedd4000926fdd03993f948b7e31913</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="function">
      <type>const AttributeVector &amp;</type>
      <name>Attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a89a8bab524c7fcfef61ce856e7b4d076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AttributeVector</type>
      <name>NonEmptyAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8a2fff750482947ccbdbf9ce3064c428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Attribute&lt; T &gt; *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afa602255ad19494e8264f7fb73070493</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0dea3e94303deea91633301813553676</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeTo</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8154e6434ceeb36ca5e74fef15859353</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFrom</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6e9845cdedf2a238a212bbcd8a863e72</anchor>
      <arglist>(QDomElement &amp;element, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeToBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6ae9b22082cb5bf29859645dd6ac6d4a</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFromBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a481ee3acac8605b1e683c1231f25e2bc</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>CreateAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a4356799119ea6ecae4b6dfc6b091bddb</anchor>
      <arglist>(u8 index, u32 typeID, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2f8b15aa5edcdaac2f32c5959c5d88dc</anchor>
      <arglist>(u8 index, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a62dfbeca452e6449c233a570cf059225</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QDomElement</type>
      <name>BeginSerialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7172dbdf2339ddbbc3c5652be8968ed3</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a844ec4ff1dec75cbbb7d8ff03ca61b01</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aad61f20527eed870c9f635e20bf5c688</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value, const QString &amp;type) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>BeginDeserialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3fef3969ebb919048bf57d3db05b48d7</anchor>
      <arglist>(QDomElement &amp;compElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7fd2354c177222bfdad3d9f8bbf4f051</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttributeType</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a5b0ecd40b4da8fb8d6794b2cf31ce4c9</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>af5a186f31936694254018f2c720256c7</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a96113e4d61805b085f4b0d6d36135391</anchor>
      <arglist>(IAttribute *attr, u8 index)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>component_id_t</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a946596d66e1667003eafab6ddb6f141b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Entity *</type>
      <name>parentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3761c0afda2f60e0b3acc44d8162b907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AttributeVector</type>
      <name>attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae0bfd9389533b6a178d0876b1174102f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae04ef3ddf6acb549b696b339c933c274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>temporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7a013d9fbc921cc6ea882e039794baa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>Color</type>
      <name>sunColor</name>
      <anchorfile>class_e_c___environment_light.html</anchorfile>
      <anchor>ac4d35f3458c54b2e81de81d19ffea615</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>Color</type>
      <name>ambientColor</name>
      <anchorfile>class_e_c___environment_light.html</anchorfile>
      <anchor>ad3d23c72bd5384e245184047cbf315f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>Color</type>
      <name>sunDiffuseColor</name>
      <anchorfile>class_e_c___environment_light.html</anchorfile>
      <anchor>a556a86bcf351e31cdb6f3420c3c3262a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float3</type>
      <name>sunDirection</name>
      <anchorfile>class_e_c___environment_light.html</anchorfile>
      <anchor>afb900414a49393efdbc9c8680ee64b65</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>sunCastShadows</name>
      <anchorfile>class_e_c___environment_light.html</anchorfile>
      <anchor>aae30c8c933edccbb96c39e704d21bae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa63d1d694b058775a2458c45e68d856b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a134821f6bcf1ea6408a3a72c7f4dfa1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>replicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf5b7cfc104657f2795c8b0b237089eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>local</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a95ade3d0915b7224d56cd34a4e308cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AttributeChange::Type</type>
      <name>updateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a75b46dc1d972b1f10c17d8521aabf3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a418e735d210d40d2551b21a04f1cdde9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>unacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab5194d9724dc21842582abaa47ec4f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>networkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0d221fecdcf0c6b3ec731936d3c43fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CreateSunlight</name>
      <anchorfile>class_e_c___environment_light.html</anchorfile>
      <anchor>ad9833f3083307b4722812f1e4029b91c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>OgreWorldWeakPtr</type>
      <name>ogreWorld</name>
      <anchorfile>class_e_c___environment_light.html</anchorfile>
      <anchor>ac84ed8d5651fd1c5467cbb7b676355bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::Light *</type>
      <name>sunlight</name>
      <anchorfile>class_e_c___environment_light.html</anchorfile>
      <anchor>a0f549e5683a88316389935b8bfaef0c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>::IAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aea94a77a3151b94a6e695e5e5632cff8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EC_Fog</name>
    <filename>class_e_c___fog.html</filename>
    <base>IComponent</base>
    <member kind="enumeration">
      <name>FogMode</name>
      <anchorfile>class_e_c___fog.html</anchorfile>
      <anchor>ae7b011f9d95ad29d7853acbf03e723cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>None</name>
      <anchorfile>class_e_c___fog.html</anchorfile>
      <anchor>ae7b011f9d95ad29d7853acbf03e723cda70398bd1a0d6c6baf1b093f37da1920d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Exponentially</name>
      <anchorfile>class_e_c___fog.html</anchorfile>
      <anchor>ae7b011f9d95ad29d7853acbf03e723cda7c478bc6f01af3d38fbc8235e98d17df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ExponentiallySquare</name>
      <anchorfile>class_e_c___fog.html</anchorfile>
      <anchor>ae7b011f9d95ad29d7853acbf03e723cda9209d151ce14b406c3a5be185f82043b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Linear</name>
      <anchorfile>class_e_c___fog.html</anchorfile>
      <anchor>ae7b011f9d95ad29d7853acbf03e723cda5b3c093802ac99fa27865681a1da7e2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3a676adf2171375d6a6d782edd11f8cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a37b5449bdd8f88a07390204b6db24a80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsLocal</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7db6ec7dcedff369978dc05c114c3c91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsUnacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9f03346fe17c944a68a8388765d270c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetNetworkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a552391127e461b25b9d1d82028bae538</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetUpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a71f8f6bdee9d3f5774e2c0fd40e0b705</anchor>
      <arglist>(AttributeChange::Type defaultmode)</arglist>
    </member>
    <member kind="slot">
      <type>AttributeChange::Type</type>
      <name>UpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab9fe0648d176468ad31690c9fe34663b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>component_id_t</type>
      <name>Id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a63fd758d1042c37b180b0521408794bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2fdd3bc81ee6586e78cae212063185f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumStaticAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ad73dac34801dde16fd02332ff9e04aae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa5562b35074886469279334adf943e42</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>abd191432824f4b1c6c0deb46af886d98</anchor>
      <arglist>(const QString &amp;attributeName, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ComponentChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a35070b168681bf5600b08b4422cb2cea</anchor>
      <arglist>(AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>Entity *</type>
      <name>ParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9e79fda037aff4c3678d9d962e78d9ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Scene *</type>
      <name>ParentScene</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac56fb67cf293f9a4228fb1b4b5aaa1d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf71fe4c9b2c636b28c8db8584acacaf</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e87391a508d5bc41f21ddc2051498a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>ViewEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7c9a41bff7f966ac13575b7dc7d598d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>GetAttributeQVariant</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab824c2fa3bb625208160c5cebf38d86a</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetAttributeNames</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa6e0b51556f8cbb31bdddbb0d10efd7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a831b035648a3ec54c47991f61352b76f</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentNameChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac628c437220fc88961842fa412119940</anchor>
      <arglist>(const QString &amp;newName, const QString &amp;oldName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntitySet</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a1c0064bad72118e77f6896ad99929129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntityDetached</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e2ed82d9dc9a91f1347c3fbdf6ee305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAdded</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a81284243581f53c55f5817f5963665dc</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAboutToBeRemoved</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>adffe0688eddd4f05201376f3c3d75f2c</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EC_Fog</name>
      <anchorfile>class_e_c___fog.html</anchorfile>
      <anchor>a9f8fc3e5b6d883dfe7b0224fa05b5d2a</anchor>
      <arglist>(Scene *scene)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EC_Fog</name>
      <anchorfile>class_e_c___fog.html</anchorfile>
      <anchor>ac8655303e7100e89e616bd851ce75f35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___fog.html</anchorfile>
      <anchor>a3010f56d0f6d1d1ac2cd97bc2f9bf6b6</anchor>
      <arglist>(int, mode)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___fog.html</anchorfile>
      <anchor>a09ed399c938d6f018bd7ca54ff94ab73</anchor>
      <arglist>(Color, color)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___fog.html</anchorfile>
      <anchor>a686802a42689d39286a9989bc1b92b0b</anchor>
      <arglist>(float, startDistance)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___fog.html</anchorfile>
      <anchor>a4144c5ec7fb4d33e581e1b6e836436bf</anchor>
      <arglist>(float, endDistance)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___fog.html</anchorfile>
      <anchor>a660b6a71997f1e85627ccd53db5178fc</anchor>
      <arglist>(float, expDensity)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const QString &amp;</type>
      <name>TypeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a156d0e2583be2efaa99c441458f1db9d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual u32</type>
      <name>TypeId</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8627793238d67e1753c5b810c5051cbd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a58f42567395c5341d2e1fd97fe7f804d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa8064a536ed194201bf0189ece40de8d</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afeedd4000926fdd03993f948b7e31913</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="function">
      <type>const AttributeVector &amp;</type>
      <name>Attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a89a8bab524c7fcfef61ce856e7b4d076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AttributeVector</type>
      <name>NonEmptyAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8a2fff750482947ccbdbf9ce3064c428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Attribute&lt; T &gt; *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afa602255ad19494e8264f7fb73070493</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0dea3e94303deea91633301813553676</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeTo</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8154e6434ceeb36ca5e74fef15859353</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFrom</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6e9845cdedf2a238a212bbcd8a863e72</anchor>
      <arglist>(QDomElement &amp;element, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeToBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6ae9b22082cb5bf29859645dd6ac6d4a</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFromBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a481ee3acac8605b1e683c1231f25e2bc</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>CreateAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a4356799119ea6ecae4b6dfc6b091bddb</anchor>
      <arglist>(u8 index, u32 typeID, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2f8b15aa5edcdaac2f32c5959c5d88dc</anchor>
      <arglist>(u8 index, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a62dfbeca452e6449c233a570cf059225</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QDomElement</type>
      <name>BeginSerialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7172dbdf2339ddbbc3c5652be8968ed3</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a844ec4ff1dec75cbbb7d8ff03ca61b01</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aad61f20527eed870c9f635e20bf5c688</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value, const QString &amp;type) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>BeginDeserialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3fef3969ebb919048bf57d3db05b48d7</anchor>
      <arglist>(QDomElement &amp;compElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7fd2354c177222bfdad3d9f8bbf4f051</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttributeType</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a5b0ecd40b4da8fb8d6794b2cf31ce4c9</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>af5a186f31936694254018f2c720256c7</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a96113e4d61805b085f4b0d6d36135391</anchor>
      <arglist>(IAttribute *attr, u8 index)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>component_id_t</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a946596d66e1667003eafab6ddb6f141b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Entity *</type>
      <name>parentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3761c0afda2f60e0b3acc44d8162b907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AttributeVector</type>
      <name>attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae0bfd9389533b6a178d0876b1174102f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae04ef3ddf6acb549b696b339c933c274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>temporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7a013d9fbc921cc6ea882e039794baa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>mode</name>
      <anchorfile>class_e_c___fog.html</anchorfile>
      <anchor>aeec884f979267123a404d51ce74658af</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>Color</type>
      <name>color</name>
      <anchorfile>class_e_c___fog.html</anchorfile>
      <anchor>a1618ef36d8d4628b495f2f0bd6bc53d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>startDistance</name>
      <anchorfile>class_e_c___fog.html</anchorfile>
      <anchor>a815f25dfac8ded1910e59ebad98fecde</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>endDistance</name>
      <anchorfile>class_e_c___fog.html</anchorfile>
      <anchor>afa388d2f43e2cd90fea775336af08701</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>expDensity</name>
      <anchorfile>class_e_c___fog.html</anchorfile>
      <anchor>ad08d63d9363b23699696821c9f73a190</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa63d1d694b058775a2458c45e68d856b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a134821f6bcf1ea6408a3a72c7f4dfa1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>replicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf5b7cfc104657f2795c8b0b237089eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>local</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a95ade3d0915b7224d56cd34a4e308cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AttributeChange::Type</type>
      <name>updateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a75b46dc1d972b1f10c17d8521aabf3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a418e735d210d40d2551b21a04f1cdde9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>unacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab5194d9724dc21842582abaa47ec4f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>networkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0d221fecdcf0c6b3ec731936d3c43fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c___fog.html</anchorfile>
      <anchor>a7391a6a72d14b7294f360a9cc3f3947d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>::IAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aea94a77a3151b94a6e695e5e5632cff8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EC_InputMapper</name>
    <filename>class_e_c___input_mapper.html</filename>
    <base>IComponent</base>
    <class kind="struct">EC_InputMapper::ActionInvocation</class>
    <member kind="typedef">
      <type>QMap&lt; QPair&lt; QKeySequence, KeyEvent::EventType &gt;, ActionInvocation &gt;</type>
      <name>Mappings_t</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>ad3898dc4a3b7b76c1406cedcf3d630cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RegisterMapping</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>a4c1b36005c1636f39d6528e8f89db692</anchor>
      <arglist>(const QKeySequence &amp;keySeq, const QString &amp;action, int eventType=1, int executionType=0)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RegisterMapping</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>a8e85f86a680b3a71fdf4742f8c057a64</anchor>
      <arglist>(const QString &amp;keySeqString, const QString &amp;action, int eventType=1, int executionType=0)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveMapping</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>ae246926849dd0ed6deeccf6b311d88d7</anchor>
      <arglist>(const QKeySequence &amp;keySeq, int eventType=1)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveMapping</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>ad512eaa2ba070f4c6349b11a0e80234e</anchor>
      <arglist>(const QString &amp;keySeqString, int eventType=1)</arglist>
    </member>
    <member kind="slot">
      <type>InputContext *</type>
      <name>GetInputContext</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>ae4acb0a5309bc50dbe579a6556ce1107</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3a676adf2171375d6a6d782edd11f8cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a37b5449bdd8f88a07390204b6db24a80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsLocal</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7db6ec7dcedff369978dc05c114c3c91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsUnacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9f03346fe17c944a68a8388765d270c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetNetworkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a552391127e461b25b9d1d82028bae538</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetUpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a71f8f6bdee9d3f5774e2c0fd40e0b705</anchor>
      <arglist>(AttributeChange::Type defaultmode)</arglist>
    </member>
    <member kind="slot">
      <type>AttributeChange::Type</type>
      <name>UpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab9fe0648d176468ad31690c9fe34663b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>component_id_t</type>
      <name>Id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a63fd758d1042c37b180b0521408794bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2fdd3bc81ee6586e78cae212063185f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumStaticAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ad73dac34801dde16fd02332ff9e04aae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa5562b35074886469279334adf943e42</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>abd191432824f4b1c6c0deb46af886d98</anchor>
      <arglist>(const QString &amp;attributeName, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ComponentChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a35070b168681bf5600b08b4422cb2cea</anchor>
      <arglist>(AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>Entity *</type>
      <name>ParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9e79fda037aff4c3678d9d962e78d9ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Scene *</type>
      <name>ParentScene</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac56fb67cf293f9a4228fb1b4b5aaa1d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf71fe4c9b2c636b28c8db8584acacaf</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e87391a508d5bc41f21ddc2051498a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>ViewEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7c9a41bff7f966ac13575b7dc7d598d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>GetAttributeQVariant</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab824c2fa3bb625208160c5cebf38d86a</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetAttributeNames</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa6e0b51556f8cbb31bdddbb0d10efd7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a831b035648a3ec54c47991f61352b76f</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentNameChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac628c437220fc88961842fa412119940</anchor>
      <arglist>(const QString &amp;newName, const QString &amp;oldName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntitySet</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a1c0064bad72118e77f6896ad99929129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntityDetached</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e2ed82d9dc9a91f1347c3fbdf6ee305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAdded</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a81284243581f53c55f5817f5963665dc</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAboutToBeRemoved</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>adffe0688eddd4f05201376f3c3d75f2c</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EC_InputMapper</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>a043300c7e04ee66384c80de669e7ab26</anchor>
      <arglist>(Scene *scene)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EC_InputMapper</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>ae1c0a72b2c8140d0436f0f8d9ee7d9c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>a15f947b99233ed6480762a1e12a1e413</anchor>
      <arglist>(QString, contextName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>a5911b41b8a90e245c535a295f3440329</anchor>
      <arglist>(int, contextPriority)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>a97d0300bf763e275d2625accb4363c1f</anchor>
      <arglist>(bool, takeKeyboardEventsOverQt)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>abd3f8b1f035684a6e3811669180729f4</anchor>
      <arglist>(bool, takeMouseEventsOverQt)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>a45fa683b59d3f48d963a3c27e2d8d6f7</anchor>
      <arglist>(QVariantList, mappings)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>a7793a83b5c0d7fa9215ec3636c046d47</anchor>
      <arglist>(int, executionType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>afc518be90ef67092adc416fc580b8a3c</anchor>
      <arglist>(int, modifiersEnabled)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>a2c04b558a3ba94b4d0603d3ac6e01375</anchor>
      <arglist>(bool, enabled)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>abe537d4822f2f341e1093dd61b0b1b6d</anchor>
      <arglist>(bool, keyrepeatTrigger)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const QString &amp;</type>
      <name>TypeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a156d0e2583be2efaa99c441458f1db9d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual u32</type>
      <name>TypeId</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8627793238d67e1753c5b810c5051cbd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a58f42567395c5341d2e1fd97fe7f804d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa8064a536ed194201bf0189ece40de8d</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afeedd4000926fdd03993f948b7e31913</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="function">
      <type>const AttributeVector &amp;</type>
      <name>Attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a89a8bab524c7fcfef61ce856e7b4d076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AttributeVector</type>
      <name>NonEmptyAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8a2fff750482947ccbdbf9ce3064c428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Attribute&lt; T &gt; *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afa602255ad19494e8264f7fb73070493</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0dea3e94303deea91633301813553676</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeTo</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8154e6434ceeb36ca5e74fef15859353</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFrom</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6e9845cdedf2a238a212bbcd8a863e72</anchor>
      <arglist>(QDomElement &amp;element, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeToBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6ae9b22082cb5bf29859645dd6ac6d4a</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFromBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a481ee3acac8605b1e683c1231f25e2bc</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>CreateAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a4356799119ea6ecae4b6dfc6b091bddb</anchor>
      <arglist>(u8 index, u32 typeID, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2f8b15aa5edcdaac2f32c5959c5d88dc</anchor>
      <arglist>(u8 index, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a62dfbeca452e6449c233a570cf059225</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QDomElement</type>
      <name>BeginSerialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7172dbdf2339ddbbc3c5652be8968ed3</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a844ec4ff1dec75cbbb7d8ff03ca61b01</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aad61f20527eed870c9f635e20bf5c688</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value, const QString &amp;type) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>BeginDeserialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3fef3969ebb919048bf57d3db05b48d7</anchor>
      <arglist>(QDomElement &amp;compElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7fd2354c177222bfdad3d9f8bbf4f051</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttributeType</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a5b0ecd40b4da8fb8d6794b2cf31ce4c9</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>af5a186f31936694254018f2c720256c7</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a96113e4d61805b085f4b0d6d36135391</anchor>
      <arglist>(IAttribute *attr, u8 index)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>component_id_t</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a946596d66e1667003eafab6ddb6f141b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Entity *</type>
      <name>parentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3761c0afda2f60e0b3acc44d8162b907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AttributeVector</type>
      <name>attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae0bfd9389533b6a178d0876b1174102f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae04ef3ddf6acb549b696b339c933c274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>temporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7a013d9fbc921cc6ea882e039794baa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>contextName</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>a0d501b070bcc13be0c1747face63e2ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>contextPriority</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>a33fb8dc4f7fac389d3024a684bde5155</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>takeKeyboardEventsOverQt</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>a1a54f846e2c178bf0653bb62d684dd45</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>takeMouseEventsOverQt</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>a94447033036d169b439e0eef11fa6c60</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QVariantList</type>
      <name>mappings</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>ab6a2eb7a968075ab91403b17150f2b4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>executionType</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>a3097b957d2a61b51a4e14dcdfa41ce6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>modifiersEnabled</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>a09ea560b49a33ab6d4721c53e7f5b2f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>enabled</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>a7c231a4906cc9c545b5f6d814c0e863d</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>keyrepeatTrigger</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>a7515820971856afd01be5a1f7050e19f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa63d1d694b058775a2458c45e68d856b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a134821f6bcf1ea6408a3a72c7f4dfa1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>replicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf5b7cfc104657f2795c8b0b237089eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>local</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a95ade3d0915b7224d56cd34a4e308cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AttributeChange::Type</type>
      <name>updateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a75b46dc1d972b1f10c17d8521aabf3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a418e735d210d40d2551b21a04f1cdde9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>unacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab5194d9724dc21842582abaa47ec4f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>networkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0d221fecdcf0c6b3ec731936d3c43fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleAttributeUpdated</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>a032be959da49d621275a4a2ba03db6d3</anchor>
      <arglist>(IAttribute *, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleKeyEvent</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>a0d6fcf1a33c15d5d24f08d33422192d5</anchor>
      <arglist>(KeyEvent *e)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleMouseEvent</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>a82bd9dd76aa6a3c591b35a8f858dcea1</anchor>
      <arglist>(MouseEvent *e)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::shared_ptr&lt; InputContext &gt;</type>
      <name>input_</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>a4efca57538c7fcb419525500b790509d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Mappings_t</type>
      <name>mappings_</name>
      <anchorfile>class_e_c___input_mapper.html</anchorfile>
      <anchor>ae5b7824ae2a6188a9f6d1dd35a368edb</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>::IAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aea94a77a3151b94a6e695e5e5632cff8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>EC_InputMapper::ActionInvocation</name>
    <filename>struct_e_c___input_mapper_1_1_action_invocation.html</filename>
    <member kind="slot">
      <type></type>
      <name>ActionInvocation</name>
      <anchorfile>struct_e_c___input_mapper_1_1_action_invocation.html</anchorfile>
      <anchor>ad911726010c7d1491df71b87a2155afa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>name</name>
      <anchorfile>struct_e_c___input_mapper_1_1_action_invocation.html</anchorfile>
      <anchor>af0a6bdd8cabbe6c2b291a1bbbe6a8004</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>executionType</name>
      <anchorfile>struct_e_c___input_mapper_1_1_action_invocation.html</anchorfile>
      <anchor>aca69ffe640d530356246a31c34fa512a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EC_Light</name>
    <filename>class_e_c___light.html</filename>
    <base>IComponent</base>
    <member kind="enumeration">
      <name>Type</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a3d6153f88d8d8b1ff2022fc1562eedfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LT_Point</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a3d6153f88d8d8b1ff2022fc1562eedfeabcd7cfc421e67643ebbe298567e7cc00</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LT_Spot</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a3d6153f88d8d8b1ff2022fc1562eedfeab4251d67deaea30251321c1b8bcba0b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LT_Directional</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a3d6153f88d8d8b1ff2022fc1562eedfeac76de6881137f3dc2f5dc3e86268d7d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3a676adf2171375d6a6d782edd11f8cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a37b5449bdd8f88a07390204b6db24a80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsLocal</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7db6ec7dcedff369978dc05c114c3c91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsUnacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9f03346fe17c944a68a8388765d270c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetNetworkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a552391127e461b25b9d1d82028bae538</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetUpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a71f8f6bdee9d3f5774e2c0fd40e0b705</anchor>
      <arglist>(AttributeChange::Type defaultmode)</arglist>
    </member>
    <member kind="slot">
      <type>AttributeChange::Type</type>
      <name>UpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab9fe0648d176468ad31690c9fe34663b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>component_id_t</type>
      <name>Id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a63fd758d1042c37b180b0521408794bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2fdd3bc81ee6586e78cae212063185f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumStaticAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ad73dac34801dde16fd02332ff9e04aae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa5562b35074886469279334adf943e42</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>abd191432824f4b1c6c0deb46af886d98</anchor>
      <arglist>(const QString &amp;attributeName, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ComponentChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a35070b168681bf5600b08b4422cb2cea</anchor>
      <arglist>(AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>Entity *</type>
      <name>ParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9e79fda037aff4c3678d9d962e78d9ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Scene *</type>
      <name>ParentScene</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac56fb67cf293f9a4228fb1b4b5aaa1d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf71fe4c9b2c636b28c8db8584acacaf</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e87391a508d5bc41f21ddc2051498a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>ViewEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7c9a41bff7f966ac13575b7dc7d598d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>GetAttributeQVariant</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab824c2fa3bb625208160c5cebf38d86a</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetAttributeNames</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa6e0b51556f8cbb31bdddbb0d10efd7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a831b035648a3ec54c47991f61352b76f</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentNameChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac628c437220fc88961842fa412119940</anchor>
      <arglist>(const QString &amp;newName, const QString &amp;oldName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntitySet</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a1c0064bad72118e77f6896ad99929129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntityDetached</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e2ed82d9dc9a91f1347c3fbdf6ee305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAdded</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a81284243581f53c55f5817f5963665dc</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAboutToBeRemoved</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>adffe0688eddd4f05201376f3c3d75f2c</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EC_Light</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a007d90a2a6304ac0d7c6cd5152967242</anchor>
      <arglist>(Scene *scene)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EC_Light</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>aa38f96cf15f2651f88ae520312451596</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ComponentPtr</type>
      <name>GetPlaceable</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a681c790651c66fbfb4a4b3aebf222c6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPlaceable</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>af1481f4a585b8535e5462aaec161a49f</anchor>
      <arglist>(ComponentPtr placeable)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::Light *</type>
      <name>GetLight</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a5e17d4ade956b147536370bacbf047dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a694c3cd4ef7b6378e639f33baaa4a2ca</anchor>
      <arglist>(float3, direction)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>af30f39e379d4c61501553cc3b67141c0</anchor>
      <arglist>(int, type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a5277bd6c54cb9f16dba136b6342e6413</anchor>
      <arglist>(Color, diffColor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a780f56199eba2110f6ae14b6b25bc036</anchor>
      <arglist>(Color, specColor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>ada255aefb2bf54a658f4041671e8d492</anchor>
      <arglist>(bool, castShadows)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>ab97d0209e130d22d93f8134fb0acca9e</anchor>
      <arglist>(float, range)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a6cfaf7177db1390bff7b046b84f9dbc4</anchor>
      <arglist>(float, constAtten)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a72de8b66ecbda6d593abcef0d75158ed</anchor>
      <arglist>(float, linearAtten)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>ad10917f9988c908983920cda8b1628ea</anchor>
      <arglist>(float, quadraAtten)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a7509fb9da144408add2266c1344e8989</anchor>
      <arglist>(float, innerAngle)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a1bd53968cd0f2826e3766fe94ade248f</anchor>
      <arglist>(float, outerAngle)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const QString &amp;</type>
      <name>TypeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a156d0e2583be2efaa99c441458f1db9d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual u32</type>
      <name>TypeId</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8627793238d67e1753c5b810c5051cbd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a58f42567395c5341d2e1fd97fe7f804d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa8064a536ed194201bf0189ece40de8d</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afeedd4000926fdd03993f948b7e31913</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="function">
      <type>const AttributeVector &amp;</type>
      <name>Attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a89a8bab524c7fcfef61ce856e7b4d076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AttributeVector</type>
      <name>NonEmptyAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8a2fff750482947ccbdbf9ce3064c428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Attribute&lt; T &gt; *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afa602255ad19494e8264f7fb73070493</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0dea3e94303deea91633301813553676</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeTo</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8154e6434ceeb36ca5e74fef15859353</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFrom</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6e9845cdedf2a238a212bbcd8a863e72</anchor>
      <arglist>(QDomElement &amp;element, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeToBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6ae9b22082cb5bf29859645dd6ac6d4a</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFromBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a481ee3acac8605b1e683c1231f25e2bc</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>CreateAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a4356799119ea6ecae4b6dfc6b091bddb</anchor>
      <arglist>(u8 index, u32 typeID, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2f8b15aa5edcdaac2f32c5959c5d88dc</anchor>
      <arglist>(u8 index, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a62dfbeca452e6449c233a570cf059225</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QDomElement</type>
      <name>BeginSerialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7172dbdf2339ddbbc3c5652be8968ed3</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a844ec4ff1dec75cbbb7d8ff03ca61b01</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aad61f20527eed870c9f635e20bf5c688</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value, const QString &amp;type) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>BeginDeserialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3fef3969ebb919048bf57d3db05b48d7</anchor>
      <arglist>(QDomElement &amp;compElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7fd2354c177222bfdad3d9f8bbf4f051</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttributeType</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a5b0ecd40b4da8fb8d6794b2cf31ce4c9</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>af5a186f31936694254018f2c720256c7</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a96113e4d61805b085f4b0d6d36135391</anchor>
      <arglist>(IAttribute *attr, u8 index)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>component_id_t</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a946596d66e1667003eafab6ddb6f141b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Entity *</type>
      <name>parentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3761c0afda2f60e0b3acc44d8162b907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AttributeVector</type>
      <name>attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae0bfd9389533b6a178d0876b1174102f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae04ef3ddf6acb549b696b339c933c274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>temporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7a013d9fbc921cc6ea882e039794baa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float3</type>
      <name>direction</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a0dcbc42d3f79e6d711f9e44b5e3ac212</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>type</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>ad778420ca4138631c4bab18f41cc83cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>Color</type>
      <name>diffColor</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a16599eadb59f714f49a1c90d2d28a89c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>Color</type>
      <name>specColor</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a5a7c364742ffdaf38fa0cc5c3cfe772f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>castShadows</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>ae8859308b7f83c73e6a7af4e8651b91b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>range</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>ab39fb85742145db732fbe044b1b832f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>constAtten</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a76fa31774f2c71104a89e269a6b584cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>linearAtten</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a56d8aba196a8fe77a13b402e6dffee23</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>quadraAtten</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a45ee2850847ff9982b8f026eb410ed3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>innerAngle</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a67fadea3f9e6eed66a6ad2e780614818</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>outerAngle</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>aa1be1210268374f1ffb89c32f780863b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa63d1d694b058775a2458c45e68d856b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a134821f6bcf1ea6408a3a72c7f4dfa1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>replicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf5b7cfc104657f2795c8b0b237089eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>local</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a95ade3d0915b7224d56cd34a4e308cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AttributeChange::Type</type>
      <name>updateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a75b46dc1d972b1f10c17d8521aabf3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a418e735d210d40d2551b21a04f1cdde9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>unacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab5194d9724dc21842582abaa47ec4f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>networkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0d221fecdcf0c6b3ec731936d3c43fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>UpdateOgreLight</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>aa55970dbf47ac91e94b9e9813bc50c5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>AttachLight</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a86de97ee95238906d1d4641a29f0ae60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>DetachLight</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a8c21312160bc39f4e755b98d522ab0db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ComponentPtr</type>
      <name>placeable_</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a56f7e0ad4bf3ecb837313417bfc99fb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>OgreWorldWeakPtr</type>
      <name>world_</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a2f4265a175f67138b7b49154a4fe1ef3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::Light *</type>
      <name>light_</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>aa84e00e2cafcd7bac26ee25f8ab2b766</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>attached_</name>
      <anchorfile>class_e_c___light.html</anchorfile>
      <anchor>a27967a83b27d495d7d7e3a70aa74dce8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>::IAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aea94a77a3151b94a6e695e5e5632cff8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EC_Material</name>
    <filename>class_e_c___material.html</filename>
    <base>IComponent</base>
    <member kind="slot">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3a676adf2171375d6a6d782edd11f8cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a37b5449bdd8f88a07390204b6db24a80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsLocal</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7db6ec7dcedff369978dc05c114c3c91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsUnacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9f03346fe17c944a68a8388765d270c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetNetworkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a552391127e461b25b9d1d82028bae538</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetUpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a71f8f6bdee9d3f5774e2c0fd40e0b705</anchor>
      <arglist>(AttributeChange::Type defaultmode)</arglist>
    </member>
    <member kind="slot">
      <type>AttributeChange::Type</type>
      <name>UpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab9fe0648d176468ad31690c9fe34663b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>component_id_t</type>
      <name>Id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a63fd758d1042c37b180b0521408794bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2fdd3bc81ee6586e78cae212063185f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumStaticAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ad73dac34801dde16fd02332ff9e04aae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa5562b35074886469279334adf943e42</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>abd191432824f4b1c6c0deb46af886d98</anchor>
      <arglist>(const QString &amp;attributeName, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ComponentChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a35070b168681bf5600b08b4422cb2cea</anchor>
      <arglist>(AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>Entity *</type>
      <name>ParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9e79fda037aff4c3678d9d962e78d9ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Scene *</type>
      <name>ParentScene</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac56fb67cf293f9a4228fb1b4b5aaa1d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf71fe4c9b2c636b28c8db8584acacaf</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e87391a508d5bc41f21ddc2051498a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>ViewEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7c9a41bff7f966ac13575b7dc7d598d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>GetAttributeQVariant</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab824c2fa3bb625208160c5cebf38d86a</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetAttributeNames</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa6e0b51556f8cbb31bdddbb0d10efd7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AppliedOutputMaterial</name>
      <anchorfile>class_e_c___material.html</anchorfile>
      <anchor>ad5289613d90b295d32bf1109479411b1</anchor>
      <arglist>(Entity *entity, const QString &amp;meshCompName, const int index, const QString &amp;material)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a831b035648a3ec54c47991f61352b76f</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentNameChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac628c437220fc88961842fa412119940</anchor>
      <arglist>(const QString &amp;newName, const QString &amp;oldName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntitySet</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a1c0064bad72118e77f6896ad99929129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntityDetached</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e2ed82d9dc9a91f1347c3fbdf6ee305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAdded</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a81284243581f53c55f5817f5963665dc</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAboutToBeRemoved</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>adffe0688eddd4f05201376f3c3d75f2c</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EC_Material</name>
      <anchorfile>class_e_c___material.html</anchorfile>
      <anchor>a4a9800d1c2f71486076f1fac02d257cd</anchor>
      <arglist>(Scene *scene)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EC_Material</name>
      <anchorfile>class_e_c___material.html</anchorfile>
      <anchor>a497f94c6055967f16d2bcecb51234419</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___material.html</anchorfile>
      <anchor>a295cc120a73c46a95c5dac10ccd04d93</anchor>
      <arglist>(QVariantList, parameters)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___material.html</anchorfile>
      <anchor>ae105906c6aba94a26c3d76f103219166</anchor>
      <arglist>(QString, inputMat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___material.html</anchorfile>
      <anchor>af2132a4da0dac577e1e5c2b86d32f924</anchor>
      <arglist>(QString, outputMat)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const QString &amp;</type>
      <name>TypeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a156d0e2583be2efaa99c441458f1db9d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual u32</type>
      <name>TypeId</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8627793238d67e1753c5b810c5051cbd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a58f42567395c5341d2e1fd97fe7f804d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa8064a536ed194201bf0189ece40de8d</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afeedd4000926fdd03993f948b7e31913</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="function">
      <type>const AttributeVector &amp;</type>
      <name>Attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a89a8bab524c7fcfef61ce856e7b4d076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AttributeVector</type>
      <name>NonEmptyAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8a2fff750482947ccbdbf9ce3064c428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Attribute&lt; T &gt; *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afa602255ad19494e8264f7fb73070493</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0dea3e94303deea91633301813553676</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeTo</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8154e6434ceeb36ca5e74fef15859353</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFrom</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6e9845cdedf2a238a212bbcd8a863e72</anchor>
      <arglist>(QDomElement &amp;element, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeToBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6ae9b22082cb5bf29859645dd6ac6d4a</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFromBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a481ee3acac8605b1e683c1231f25e2bc</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>CreateAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a4356799119ea6ecae4b6dfc6b091bddb</anchor>
      <arglist>(u8 index, u32 typeID, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2f8b15aa5edcdaac2f32c5959c5d88dc</anchor>
      <arglist>(u8 index, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a62dfbeca452e6449c233a570cf059225</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QDomElement</type>
      <name>BeginSerialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7172dbdf2339ddbbc3c5652be8968ed3</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a844ec4ff1dec75cbbb7d8ff03ca61b01</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aad61f20527eed870c9f635e20bf5c688</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value, const QString &amp;type) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>BeginDeserialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3fef3969ebb919048bf57d3db05b48d7</anchor>
      <arglist>(QDomElement &amp;compElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7fd2354c177222bfdad3d9f8bbf4f051</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttributeType</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a5b0ecd40b4da8fb8d6794b2cf31ce4c9</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>af5a186f31936694254018f2c720256c7</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a96113e4d61805b085f4b0d6d36135391</anchor>
      <arglist>(IAttribute *attr, u8 index)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>component_id_t</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a946596d66e1667003eafab6ddb6f141b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Entity *</type>
      <name>parentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3761c0afda2f60e0b3acc44d8162b907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AttributeVector</type>
      <name>attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae0bfd9389533b6a178d0876b1174102f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae04ef3ddf6acb549b696b339c933c274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>temporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7a013d9fbc921cc6ea882e039794baa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QVariantList</type>
      <name>parameters</name>
      <anchorfile>class_e_c___material.html</anchorfile>
      <anchor>a28107736e0885376a4c8446b10ad884c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>inputMat</name>
      <anchorfile>class_e_c___material.html</anchorfile>
      <anchor>a251434c59fb95df6dee483b99f77b386</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>outputMat</name>
      <anchorfile>class_e_c___material.html</anchorfile>
      <anchor>a7bf079aa5189ae82e1996cc3cc5848e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa63d1d694b058775a2458c45e68d856b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a134821f6bcf1ea6408a3a72c7f4dfa1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>replicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf5b7cfc104657f2795c8b0b237089eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>local</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a95ade3d0915b7224d56cd34a4e308cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AttributeChange::Type</type>
      <name>updateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a75b46dc1d972b1f10c17d8521aabf3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a418e735d210d40d2551b21a04f1cdde9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>unacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab5194d9724dc21842582abaa47ec4f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>networkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0d221fecdcf0c6b3ec731936d3c43fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnAttributeUpdated</name>
      <anchorfile>class_e_c___material.html</anchorfile>
      <anchor>a9d9f8de4e54110442dd332611ff5493c</anchor>
      <arglist>(IAttribute *attribute)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnParentEntitySet</name>
      <anchorfile>class_e_c___material.html</anchorfile>
      <anchor>a28ebf3127c23875fea82f9509ff0f363</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnComponentAdded</name>
      <anchorfile>class_e_c___material.html</anchorfile>
      <anchor>a13aab46641cbacbd1a6683f2ad66407a</anchor>
      <arglist>(IComponent *component, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnMeshAttributeUpdated</name>
      <anchorfile>class_e_c___material.html</anchorfile>
      <anchor>ad56afc7d034662338e7d9ba6402b1c10</anchor>
      <arglist>(IAttribute *attribute)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnMaterialAssetLoaded</name>
      <anchorfile>class_e_c___material.html</anchorfile>
      <anchor>ad2d61afd448c72112a64a0860156facf</anchor>
      <arglist>(AssetPtr material)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>GetSubmeshNumber</name>
      <anchorfile>class_e_c___material.html</anchorfile>
      <anchor>ab0d2f04bb3477bdf14ffc394d8604184</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>QString</type>
      <name>GetInputMaterialName</name>
      <anchorfile>class_e_c___material.html</anchorfile>
      <anchor>a190979e3f806362b3d24fba474d75b29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CheckForInputMaterial</name>
      <anchorfile>class_e_c___material.html</anchorfile>
      <anchor>a0f2bb2c703fd398085c820a0c41ef931</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ApplyParameters</name>
      <anchorfile>class_e_c___material.html</anchorfile>
      <anchor>ab4096b963cf040dd668ec81e6c2c2cd5</anchor>
      <arglist>(OgreMaterialAsset *srcMatAsset)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AssetRefListenerPtr</type>
      <name>materialAsset</name>
      <anchorfile>class_e_c___material.html</anchorfile>
      <anchor>a31a49a594293acc5fbd7ae849752bc6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>::IAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aea94a77a3151b94a6e695e5e5632cff8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EC_Mesh</name>
    <filename>class_e_c___mesh.html</filename>
    <base>IComponent</base>
    <member kind="slot">
      <type>void</type>
      <name>AutoSetPlaceable</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a74d7b3e8508d9285716eb8774af959fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetPlaceable</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>afb4cd0690bbb437c2926b45c241b5ef3</anchor>
      <arglist>(ComponentPtr placeable)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetPlaceable</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a87c6f2f09bc77056888b3f74347bf98b</anchor>
      <arglist>(EC_Placeable *placeable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetMesh</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>af80d8e2cde2538f0dbc1997e4281f779</anchor>
      <arglist>(QString meshResourceName, bool clone=false)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetMeshWithSkeleton</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a48a71ca5539ae2d8667291a1bc5fcb3d</anchor>
      <arglist>(const std::string &amp;mesh_name, const std::string &amp;skeleton_name, bool clone=false)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetMaterial</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>ab6c52812be351917a12d6233ad066b07</anchor>
      <arglist>(uint index, const std::string &amp;material_name)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetMaterial</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a2dd798c6e240c8461a605035c8ecc14a</anchor>
      <arglist>(uint index, const QString &amp;material_name)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ApplyMaterial</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a1a97f6165a5a276d6ff44c331bf7c712</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetAdjustPosition</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>aa43c45533006935a7bf0d62ca0e673ce</anchor>
      <arglist>(const float3 &amp;position)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetAdjustOrientation</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a402d6024e7861e74cc64e99aff788529</anchor>
      <arglist>(const Quat &amp;orientation)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetAdjustScale</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a08ef410aca91664d568a277d50cc2139</anchor>
      <arglist>(const float3 &amp;scale)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveMesh</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a104e5d2f51374193ea514f370612e5bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetAttachmentMesh</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a4f0a6c389027cd5e0dd8638a62b3e18f</anchor>
      <arglist>(uint index, const std::string &amp;mesh_name, const std::string &amp;attach_point=std::string(), bool share_skeleton=false)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetAttachmentPosition</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>ac5f11709542d3506da02a64953c2aa83</anchor>
      <arglist>(uint index, const float3 &amp;position)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetAttachmentOrientation</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a8e53f26325768648b5fb521817836e30</anchor>
      <arglist>(uint index, const Quat &amp;orientation)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetAttachmentScale</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a2d8064aed57c8dce1603444ddb67a81b</anchor>
      <arglist>(uint index, const float3 &amp;scale)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveAttachmentMesh</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a86d343723a68c12f1af94fe53d02ea2c</anchor>
      <arglist>(uint index)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveAllAttachments</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a5fdc20b10e066b364c9ec58696a852aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetAttachmentMaterial</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a04d88bd0b33a3d25055f1bb7a9a57caf</anchor>
      <arglist>(uint index, uint submesh_index, const std::string &amp;material_name)</arglist>
    </member>
    <member kind="slot">
      <type>uint</type>
      <name>GetNumAttachments</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>ab479129b9e6cd9079a3df0282966924c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Ogre::Entity *</type>
      <name>GetAttachmentEntity</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a99a5ecd2913c7e80e8489d8d084ddacd</anchor>
      <arglist>(uint index) const </arglist>
    </member>
    <member kind="slot">
      <type>uint</type>
      <name>GetAttachmentNumMaterials</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>abd5c2156489931bbeedfc3048e9d89e6</anchor>
      <arglist>(uint index) const </arglist>
    </member>
    <member kind="slot">
      <type>const std::string &amp;</type>
      <name>GetAttachmentMaterialName</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a69fbe35c10340737be5974cd78c86033</anchor>
      <arglist>(uint index, uint submesh_index) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>HasMesh</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a515b09f808d0125802a63bc2312578ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>uint</type>
      <name>GetNumSubMeshes</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a25b1e8db90d2f44ef201e8b627baff54</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>HasAttachmentMesh</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a20a05b790994285313b83d9136823111</anchor>
      <arglist>(uint index) const </arglist>
    </member>
    <member kind="slot">
      <type>ComponentPtr</type>
      <name>GetPlaceable</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a39394128e24fa91424f04db81f350211</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>const std::string &amp;</type>
      <name>GetMeshName</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>abddf6a89b19857a6511d743cf41f098a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>const std::string &amp;</type>
      <name>GetSkeletonName</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>adeef1681e70f1dad8174b1ecae8ecd33</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Ogre::Entity *</type>
      <name>GetEntity</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a8f20435e414df4f3664e4a7a2e81279e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>uint</type>
      <name>GetNumMaterials</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a1cb03810b03eb82f92edf4a8b84424aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Ogre::Bone *</type>
      <name>GetBone</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a7bceb9bde6d543f831527346c874463d</anchor>
      <arglist>(const QString &amp;boneName) const </arglist>
    </member>
    <member kind="slot">
      <type>const std::string &amp;</type>
      <name>GetMaterialName</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a16b9d1b84922248b582cd3f52cf7997a</anchor>
      <arglist>(uint index) const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>GetMatName</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a1e67ce7bbf05ada33eeef3e607944408</anchor>
      <arglist>(uint index) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>GetBoundingBox</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>ae4079fb0f21184579139a5ec37fece97</anchor>
      <arglist>(float3 &amp;min, float3 &amp;max) const </arglist>
    </member>
    <member kind="slot">
      <type>QVector3D</type>
      <name>GetWorldSize</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>acd37664c60899326f026752904a71dbf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>float3</type>
      <name>GetAdjustPosition</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a663fcb8a7f3f29805a38ae8abe1dfc8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Quat</type>
      <name>GetAdjustOrientation</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a1d17bc121964780b27415fc6e40ffe7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>float3</type>
      <name>GetAdjustScale</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a112c2355d8f1935a53ffdef9652fbae2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>float3</type>
      <name>GetAttachmentPosition</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a4275943289c04365940f0a1c4fa96051</anchor>
      <arglist>(uint index) const </arglist>
    </member>
    <member kind="slot">
      <type>Quat</type>
      <name>GetAttachmentOrientation</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a1300bd0c1285d6301c3d173b59c5179f</anchor>
      <arglist>(uint index) const </arglist>
    </member>
    <member kind="slot">
      <type>float3</type>
      <name>GetAttachmentScale</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>ac3493e65366668aac8ccae739b6fe864</anchor>
      <arglist>(uint index) const </arglist>
    </member>
    <member kind="slot">
      <type>Ogre::SceneNode *</type>
      <name>GetAdjustmentSceneNode</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a08d146075c4984cd6e3b8bfffe35ef19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>float3x4</type>
      <name>LocalToParent</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a4bfd7bbde113ea06617aa490a81c8513</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>float3x4</type>
      <name>LocalToWorld</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a2ae91f2e4be21318030179f27b46c745</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetMeshRef</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a2eb8b76627544bd3341f550d00c072c4</anchor>
      <arglist>(const AssetReference &amp;newref)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetMeshRef</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>afc66df6c86a87dae6cba4dc01d1b5619</anchor>
      <arglist>(const QString &amp;newref)</arglist>
    </member>
    <member kind="slot">
      <type>Ogre::Bone *</type>
      <name>GetBone</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a6e78a3b402f676f82c8705dbe3b4a2c7</anchor>
      <arglist>(const QString &amp;bone_name)</arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetAvailableBones</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a1d85b9ab6e26218bc59df41641fc9b87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ForceSkeletonUpdate</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a90a206d60b50a58b8d7889f3509aa9c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>float3</type>
      <name>GetBonePosition</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>ac487dc7938c7bb9a44d6cb0a9077aadf</anchor>
      <arglist>(const QString &amp;bone_name)</arglist>
    </member>
    <member kind="slot">
      <type>float3</type>
      <name>GetBoneDerivedPosition</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a1d8a14d417ca13e97a8d1659fea139a7</anchor>
      <arglist>(const QString &amp;bone_name)</arglist>
    </member>
    <member kind="slot">
      <type>Quat</type>
      <name>GetBoneOrientation</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>ae2fa532f0c15a527f47b342b398a8043</anchor>
      <arglist>(const QString &amp;bone_name)</arglist>
    </member>
    <member kind="slot">
      <type>Quat</type>
      <name>GetBoneDerivedOrientation</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a10f4f8b2490fb546df9a6d12ac714da8</anchor>
      <arglist>(const QString &amp;bone_name)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetMorphWeight</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>ae503ccbc1d51bc6c3c0f9ea091e4d7af</anchor>
      <arglist>(const QString &amp;morphName, float weight)</arglist>
    </member>
    <member kind="slot">
      <type>float</type>
      <name>GetMorphWeight</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a606e16fc36a79d7f7154305193abf3dd</anchor>
      <arglist>(const QString &amp;morphName) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetAttachmentMorphWeight</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>aaf9d72555faa9056b38f500d993fd93d</anchor>
      <arglist>(unsigned index, const QString &amp;morphName, float weight)</arglist>
    </member>
    <member kind="slot">
      <type>float</type>
      <name>GetAttachmentMorphWeight</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>ae9cbe6b5cfd595d0a7e6f3fa006e3ad9</anchor>
      <arglist>(unsigned index, const QString &amp;morphName) const </arglist>
    </member>
    <member kind="slot">
      <type>OBB</type>
      <name>WorldOBB</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>ac76dd5c0b0db7347176c28ced7cf57e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>OBB</type>
      <name>LocalOBB</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a13b337d7863a97267c8eb77a313e1215</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3a676adf2171375d6a6d782edd11f8cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a37b5449bdd8f88a07390204b6db24a80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsLocal</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7db6ec7dcedff369978dc05c114c3c91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsUnacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9f03346fe17c944a68a8388765d270c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetNetworkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a552391127e461b25b9d1d82028bae538</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetUpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a71f8f6bdee9d3f5774e2c0fd40e0b705</anchor>
      <arglist>(AttributeChange::Type defaultmode)</arglist>
    </member>
    <member kind="slot">
      <type>AttributeChange::Type</type>
      <name>UpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab9fe0648d176468ad31690c9fe34663b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>component_id_t</type>
      <name>Id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a63fd758d1042c37b180b0521408794bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2fdd3bc81ee6586e78cae212063185f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumStaticAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ad73dac34801dde16fd02332ff9e04aae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa5562b35074886469279334adf943e42</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>abd191432824f4b1c6c0deb46af886d98</anchor>
      <arglist>(const QString &amp;attributeName, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ComponentChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a35070b168681bf5600b08b4422cb2cea</anchor>
      <arglist>(AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>Entity *</type>
      <name>ParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9e79fda037aff4c3678d9d962e78d9ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Scene *</type>
      <name>ParentScene</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac56fb67cf293f9a4228fb1b4b5aaa1d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf71fe4c9b2c636b28c8db8584acacaf</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e87391a508d5bc41f21ddc2051498a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>ViewEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7c9a41bff7f966ac13575b7dc7d598d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>GetAttributeQVariant</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab824c2fa3bb625208160c5cebf38d86a</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetAttributeNames</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa6e0b51556f8cbb31bdddbb0d10efd7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>MeshAboutToBeDestroyed</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a03f4556ef4c9c597ad649f521f0cb6ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>MeshChanged</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a3dbcc43cbb576512645daec9f34f4217</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>MaterialChanged</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a4ff9bc3757ff7bbb2b957b2f2d5da789</anchor>
      <arglist>(uint index, const QString &amp;material_name)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>SkeletonChanged</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>aedea39297fd38e0b2ad99b94c2cbda46</anchor>
      <arglist>(QString skeleton_name)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a831b035648a3ec54c47991f61352b76f</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentNameChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac628c437220fc88961842fa412119940</anchor>
      <arglist>(const QString &amp;newName, const QString &amp;oldName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntitySet</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a1c0064bad72118e77f6896ad99929129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntityDetached</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e2ed82d9dc9a91f1347c3fbdf6ee305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAdded</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a81284243581f53c55f5817f5963665dc</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAboutToBeRemoved</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>adffe0688eddd4f05201376f3c3d75f2c</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EC_Mesh</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>abdd6bf5733fa9e98469dc03b84a281ef</anchor>
      <arglist>(Scene *scene)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EC_Mesh</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a9211f0ad72a8fe80da957a8d276aa931</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a195a637d456f54b4090b155d0497f018</anchor>
      <arglist>(Transform, nodeTransformation)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a25ccee1170b1024099f452480d91c2db</anchor>
      <arglist>(AssetReference, meshRef)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>af0d2ca5e3fd4b54af63ca06d84168090</anchor>
      <arglist>(AssetReference, skeletonRef)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a227d612316446022fbbc93103f4cc257</anchor>
      <arglist>(AssetReferenceList, meshMaterial)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>acc831a1d8e99cf68eeb527e40f030588</anchor>
      <arglist>(float, drawDistance)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>af63c06fab9d6d13e427df3ad6fce5737</anchor>
      <arglist>(bool, castShadows)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const QString &amp;</type>
      <name>TypeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a156d0e2583be2efaa99c441458f1db9d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual u32</type>
      <name>TypeId</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8627793238d67e1753c5b810c5051cbd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a58f42567395c5341d2e1fd97fe7f804d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa8064a536ed194201bf0189ece40de8d</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afeedd4000926fdd03993f948b7e31913</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="function">
      <type>const AttributeVector &amp;</type>
      <name>Attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a89a8bab524c7fcfef61ce856e7b4d076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AttributeVector</type>
      <name>NonEmptyAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8a2fff750482947ccbdbf9ce3064c428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Attribute&lt; T &gt; *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afa602255ad19494e8264f7fb73070493</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0dea3e94303deea91633301813553676</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeTo</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8154e6434ceeb36ca5e74fef15859353</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFrom</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6e9845cdedf2a238a212bbcd8a863e72</anchor>
      <arglist>(QDomElement &amp;element, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeToBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6ae9b22082cb5bf29859645dd6ac6d4a</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFromBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a481ee3acac8605b1e683c1231f25e2bc</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>CreateAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a4356799119ea6ecae4b6dfc6b091bddb</anchor>
      <arglist>(u8 index, u32 typeID, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2f8b15aa5edcdaac2f32c5959c5d88dc</anchor>
      <arglist>(u8 index, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a62dfbeca452e6449c233a570cf059225</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QDomElement</type>
      <name>BeginSerialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7172dbdf2339ddbbc3c5652be8968ed3</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a844ec4ff1dec75cbbb7d8ff03ca61b01</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aad61f20527eed870c9f635e20bf5c688</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value, const QString &amp;type) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>BeginDeserialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3fef3969ebb919048bf57d3db05b48d7</anchor>
      <arglist>(QDomElement &amp;compElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7fd2354c177222bfdad3d9f8bbf4f051</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttributeType</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a5b0ecd40b4da8fb8d6794b2cf31ce4c9</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>af5a186f31936694254018f2c720256c7</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a96113e4d61805b085f4b0d6d36135391</anchor>
      <arglist>(IAttribute *attr, u8 index)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>component_id_t</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a946596d66e1667003eafab6ddb6f141b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Entity *</type>
      <name>parentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3761c0afda2f60e0b3acc44d8162b907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AttributeVector</type>
      <name>attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae0bfd9389533b6a178d0876b1174102f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae04ef3ddf6acb549b696b339c933c274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>temporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7a013d9fbc921cc6ea882e039794baa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>Transform</type>
      <name>nodeTransformation</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a17a3c16e9ce0c0e390ecde8fde0ba701</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AssetReference</type>
      <name>meshRef</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>aecc54eaeb7d933e5bb19c40bed93678d</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AssetReference</type>
      <name>skeletonRef</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a42b67685d52d757e35e50291a1386a78</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AssetReferenceList</type>
      <name>meshMaterial</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>adc58e661476e6119c2915f230656d6e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>drawDistance</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a2b93ea4afd30603a3efbfb9db1889dc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>castShadows</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>af312ed4fc335d9cc30be8e7ddd498e0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa63d1d694b058775a2458c45e68d856b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a134821f6bcf1ea6408a3a72c7f4dfa1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>replicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf5b7cfc104657f2795c8b0b237089eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>local</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a95ade3d0915b7224d56cd34a4e308cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AttributeChange::Type</type>
      <name>updateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a75b46dc1d972b1f10c17d8521aabf3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a418e735d210d40d2551b21a04f1cdde9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>unacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab5194d9724dc21842582abaa47ec4f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>networkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0d221fecdcf0c6b3ec731936d3c43fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>UpdateSignals</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a5e275b30187ec1bb784dab077173c620</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnAttributeUpdated</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>ad18e4ec4d053e7e45f5fd7fafa810352</anchor>
      <arglist>(IAttribute *attribute)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnComponentRemoved</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>ae1685398f9c7faacdb2dfece5cec447a</anchor>
      <arglist>(IComponent *component, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnMeshAssetLoaded</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a93894227cca3e00cdb8f38999c355095</anchor>
      <arglist>(AssetPtr mesh)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnSkeletonAssetLoaded</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a1be15492ad0f1f6a939402f77793d626</anchor>
      <arglist>(AssetPtr skeleton)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnMaterialAssetLoaded</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a8bf257e4a350164aeebbe95d394642b3</anchor>
      <arglist>(AssetPtr material)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnMaterialAssetFailed</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>aa24b3c70fbe778976972989e27d0f312</anchor>
      <arglist>(IAssetTransfer *transfer, QString reason)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Ogre::Mesh *</type>
      <name>PrepareMesh</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a9e5ece790a96458d30181f31b236f428</anchor>
      <arglist>(const std::string &amp;mesh_name, bool clone=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>AttachEntity</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a54967d8ced8f2a42db4839c6dbe6d994</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>DetachEntity</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a764025248ddee372a820ae179de805ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>HasMaterialsChanged</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a822e631f050ae44c087ae1a9a4a8f938</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ComponentPtr</type>
      <name>placeable_</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a058fa7b33e5009d67aba0c805f997fd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>OgreWorldWeakPtr</type>
      <name>world_</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a883a7f713d62c3e0ad6488fe42619b82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::Entity *</type>
      <name>entity_</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>afe991dc435d34b612ee9d90eb89fca35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Ogre::Entity * &gt;</type>
      <name>attachment_entities_</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a7ffc25f729573217eaa3943967cd94ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Ogre::Node * &gt;</type>
      <name>attachment_nodes_</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a6f97e4cc08952e35aed9af0e407e540e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>cloned_mesh_name_</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a7c780208e55bc901586887e9b4ccb8dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::SceneNode *</type>
      <name>adjustment_node_</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a74d9c0d1b70d1a9cd61c8290ce719643</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>attached_</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a45e239a7e02f3592a097c4e4c89fa0b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; AssetRefListenerPtr &gt;</type>
      <name>materialAssets</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>ac691a18c907cc4632a9434d145f0cdbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AssetRefListenerPtr</type>
      <name>meshAsset</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>aea4631ddff81c4fe6c696e33c191f1c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AssetRefListenerPtr</type>
      <name>skeletonAsset</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>af77091cd19d118cf2ed25cc9ea3a784f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; int, QString &gt;</type>
      <name>pendingMaterialApplies</name>
      <anchorfile>class_e_c___mesh.html</anchorfile>
      <anchor>a14cef3f3732ed22b8f64a6059ae52166</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>::IAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aea94a77a3151b94a6e695e5e5632cff8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EC_Name</name>
    <filename>class_e_c___name.html</filename>
    <base>IComponent</base>
    <member kind="slot">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3a676adf2171375d6a6d782edd11f8cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a37b5449bdd8f88a07390204b6db24a80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsLocal</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7db6ec7dcedff369978dc05c114c3c91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsUnacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9f03346fe17c944a68a8388765d270c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetNetworkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a552391127e461b25b9d1d82028bae538</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetUpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a71f8f6bdee9d3f5774e2c0fd40e0b705</anchor>
      <arglist>(AttributeChange::Type defaultmode)</arglist>
    </member>
    <member kind="slot">
      <type>AttributeChange::Type</type>
      <name>UpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab9fe0648d176468ad31690c9fe34663b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>component_id_t</type>
      <name>Id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a63fd758d1042c37b180b0521408794bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2fdd3bc81ee6586e78cae212063185f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumStaticAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ad73dac34801dde16fd02332ff9e04aae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa5562b35074886469279334adf943e42</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>abd191432824f4b1c6c0deb46af886d98</anchor>
      <arglist>(const QString &amp;attributeName, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ComponentChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a35070b168681bf5600b08b4422cb2cea</anchor>
      <arglist>(AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>Entity *</type>
      <name>ParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9e79fda037aff4c3678d9d962e78d9ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Scene *</type>
      <name>ParentScene</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac56fb67cf293f9a4228fb1b4b5aaa1d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf71fe4c9b2c636b28c8db8584acacaf</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e87391a508d5bc41f21ddc2051498a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>ViewEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7c9a41bff7f966ac13575b7dc7d598d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>GetAttributeQVariant</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab824c2fa3bb625208160c5cebf38d86a</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetAttributeNames</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa6e0b51556f8cbb31bdddbb0d10efd7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a831b035648a3ec54c47991f61352b76f</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentNameChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac628c437220fc88961842fa412119940</anchor>
      <arglist>(const QString &amp;newName, const QString &amp;oldName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntitySet</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a1c0064bad72118e77f6896ad99929129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntityDetached</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e2ed82d9dc9a91f1347c3fbdf6ee305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAdded</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a81284243581f53c55f5817f5963665dc</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAboutToBeRemoved</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>adffe0688eddd4f05201376f3c3d75f2c</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EC_Name</name>
      <anchorfile>class_e_c___name.html</anchorfile>
      <anchor>a3bb01d83c9079ac5662fcbba4a351f46</anchor>
      <arglist>(Scene *scene)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EC_Name</name>
      <anchorfile>class_e_c___name.html</anchorfile>
      <anchor>addfcc7b59236f739100dbe9726663bb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___name.html</anchorfile>
      <anchor>aabdfa9e4c9cff1825f30b01fa07ea072</anchor>
      <arglist>(QString, name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___name.html</anchorfile>
      <anchor>af1db0d64d681aff500a4f85fe5ab11b9</anchor>
      <arglist>(QString, description)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const QString &amp;</type>
      <name>TypeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a156d0e2583be2efaa99c441458f1db9d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual u32</type>
      <name>TypeId</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8627793238d67e1753c5b810c5051cbd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a58f42567395c5341d2e1fd97fe7f804d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa8064a536ed194201bf0189ece40de8d</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afeedd4000926fdd03993f948b7e31913</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="function">
      <type>const AttributeVector &amp;</type>
      <name>Attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a89a8bab524c7fcfef61ce856e7b4d076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AttributeVector</type>
      <name>NonEmptyAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8a2fff750482947ccbdbf9ce3064c428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Attribute&lt; T &gt; *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afa602255ad19494e8264f7fb73070493</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0dea3e94303deea91633301813553676</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeTo</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8154e6434ceeb36ca5e74fef15859353</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFrom</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6e9845cdedf2a238a212bbcd8a863e72</anchor>
      <arglist>(QDomElement &amp;element, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeToBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6ae9b22082cb5bf29859645dd6ac6d4a</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFromBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a481ee3acac8605b1e683c1231f25e2bc</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>CreateAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a4356799119ea6ecae4b6dfc6b091bddb</anchor>
      <arglist>(u8 index, u32 typeID, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2f8b15aa5edcdaac2f32c5959c5d88dc</anchor>
      <arglist>(u8 index, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a62dfbeca452e6449c233a570cf059225</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QDomElement</type>
      <name>BeginSerialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7172dbdf2339ddbbc3c5652be8968ed3</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a844ec4ff1dec75cbbb7d8ff03ca61b01</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aad61f20527eed870c9f635e20bf5c688</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value, const QString &amp;type) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>BeginDeserialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3fef3969ebb919048bf57d3db05b48d7</anchor>
      <arglist>(QDomElement &amp;compElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7fd2354c177222bfdad3d9f8bbf4f051</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttributeType</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a5b0ecd40b4da8fb8d6794b2cf31ce4c9</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>af5a186f31936694254018f2c720256c7</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a96113e4d61805b085f4b0d6d36135391</anchor>
      <arglist>(IAttribute *attr, u8 index)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>component_id_t</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a946596d66e1667003eafab6ddb6f141b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Entity *</type>
      <name>parentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3761c0afda2f60e0b3acc44d8162b907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AttributeVector</type>
      <name>attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae0bfd9389533b6a178d0876b1174102f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae04ef3ddf6acb549b696b339c933c274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>temporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7a013d9fbc921cc6ea882e039794baa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_e_c___name.html</anchorfile>
      <anchor>a1b1f42c3d4012b0fc3aaaefbd1154ed2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>description</name>
      <anchorfile>class_e_c___name.html</anchorfile>
      <anchor>acc781c1aa579dea440160d9cb3db2e9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a134821f6bcf1ea6408a3a72c7f4dfa1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>replicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf5b7cfc104657f2795c8b0b237089eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>local</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a95ade3d0915b7224d56cd34a4e308cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AttributeChange::Type</type>
      <name>updateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a75b46dc1d972b1f10c17d8521aabf3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a418e735d210d40d2551b21a04f1cdde9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>unacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab5194d9724dc21842582abaa47ec4f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>networkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0d221fecdcf0c6b3ec731936d3c43fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>::IAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aea94a77a3151b94a6e695e5e5632cff8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EC_OgreCompositor</name>
    <filename>class_e_c___ogre_compositor.html</filename>
    <base>IComponent</base>
    <member kind="slot">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3a676adf2171375d6a6d782edd11f8cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a37b5449bdd8f88a07390204b6db24a80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsLocal</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7db6ec7dcedff369978dc05c114c3c91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsUnacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9f03346fe17c944a68a8388765d270c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetNetworkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a552391127e461b25b9d1d82028bae538</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetUpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a71f8f6bdee9d3f5774e2c0fd40e0b705</anchor>
      <arglist>(AttributeChange::Type defaultmode)</arglist>
    </member>
    <member kind="slot">
      <type>AttributeChange::Type</type>
      <name>UpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab9fe0648d176468ad31690c9fe34663b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>component_id_t</type>
      <name>Id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a63fd758d1042c37b180b0521408794bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2fdd3bc81ee6586e78cae212063185f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumStaticAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ad73dac34801dde16fd02332ff9e04aae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa5562b35074886469279334adf943e42</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>abd191432824f4b1c6c0deb46af886d98</anchor>
      <arglist>(const QString &amp;attributeName, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ComponentChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a35070b168681bf5600b08b4422cb2cea</anchor>
      <arglist>(AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>Entity *</type>
      <name>ParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9e79fda037aff4c3678d9d962e78d9ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Scene *</type>
      <name>ParentScene</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac56fb67cf293f9a4228fb1b4b5aaa1d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf71fe4c9b2c636b28c8db8584acacaf</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e87391a508d5bc41f21ddc2051498a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>ViewEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7c9a41bff7f966ac13575b7dc7d598d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>GetAttributeQVariant</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab824c2fa3bb625208160c5cebf38d86a</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetAttributeNames</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa6e0b51556f8cbb31bdddbb0d10efd7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a831b035648a3ec54c47991f61352b76f</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentNameChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac628c437220fc88961842fa412119940</anchor>
      <arglist>(const QString &amp;newName, const QString &amp;oldName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntitySet</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a1c0064bad72118e77f6896ad99929129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntityDetached</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e2ed82d9dc9a91f1347c3fbdf6ee305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAdded</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a81284243581f53c55f5817f5963665dc</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAboutToBeRemoved</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>adffe0688eddd4f05201376f3c3d75f2c</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EC_OgreCompositor</name>
      <anchorfile>class_e_c___ogre_compositor.html</anchorfile>
      <anchor>a68654e709f59695ad254f8933e79eb83</anchor>
      <arglist>(Scene *scene)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EC_OgreCompositor</name>
      <anchorfile>class_e_c___ogre_compositor.html</anchorfile>
      <anchor>a0e9abb110b918742b00de56d8fae722c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___ogre_compositor.html</anchorfile>
      <anchor>a28dee3e068764112b2da1adc48203fbe</anchor>
      <arglist>(bool, enabled)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___ogre_compositor.html</anchorfile>
      <anchor>ac21488648df9bfe5f55c81cde9b6fdbd</anchor>
      <arglist>(QString, compositorref)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___ogre_compositor.html</anchorfile>
      <anchor>a24f0816e37a299524e434cce08fbf796</anchor>
      <arglist>(int, priority)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___ogre_compositor.html</anchorfile>
      <anchor>a1140d0cc1321ba9cee32561eac874eef</anchor>
      <arglist>(QVariantList, parameters)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const QString &amp;</type>
      <name>TypeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a156d0e2583be2efaa99c441458f1db9d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual u32</type>
      <name>TypeId</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8627793238d67e1753c5b810c5051cbd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a58f42567395c5341d2e1fd97fe7f804d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa8064a536ed194201bf0189ece40de8d</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afeedd4000926fdd03993f948b7e31913</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="function">
      <type>const AttributeVector &amp;</type>
      <name>Attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a89a8bab524c7fcfef61ce856e7b4d076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AttributeVector</type>
      <name>NonEmptyAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8a2fff750482947ccbdbf9ce3064c428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Attribute&lt; T &gt; *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afa602255ad19494e8264f7fb73070493</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0dea3e94303deea91633301813553676</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeTo</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8154e6434ceeb36ca5e74fef15859353</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFrom</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6e9845cdedf2a238a212bbcd8a863e72</anchor>
      <arglist>(QDomElement &amp;element, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeToBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6ae9b22082cb5bf29859645dd6ac6d4a</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFromBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a481ee3acac8605b1e683c1231f25e2bc</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>CreateAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a4356799119ea6ecae4b6dfc6b091bddb</anchor>
      <arglist>(u8 index, u32 typeID, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2f8b15aa5edcdaac2f32c5959c5d88dc</anchor>
      <arglist>(u8 index, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a62dfbeca452e6449c233a570cf059225</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QDomElement</type>
      <name>BeginSerialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7172dbdf2339ddbbc3c5652be8968ed3</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a844ec4ff1dec75cbbb7d8ff03ca61b01</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aad61f20527eed870c9f635e20bf5c688</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value, const QString &amp;type) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>BeginDeserialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3fef3969ebb919048bf57d3db05b48d7</anchor>
      <arglist>(QDomElement &amp;compElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7fd2354c177222bfdad3d9f8bbf4f051</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttributeType</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a5b0ecd40b4da8fb8d6794b2cf31ce4c9</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>af5a186f31936694254018f2c720256c7</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a96113e4d61805b085f4b0d6d36135391</anchor>
      <arglist>(IAttribute *attr, u8 index)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>component_id_t</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a946596d66e1667003eafab6ddb6f141b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Entity *</type>
      <name>parentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3761c0afda2f60e0b3acc44d8162b907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AttributeVector</type>
      <name>attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae0bfd9389533b6a178d0876b1174102f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae04ef3ddf6acb549b696b339c933c274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>temporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7a013d9fbc921cc6ea882e039794baa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>enabled</name>
      <anchorfile>class_e_c___ogre_compositor.html</anchorfile>
      <anchor>a5ab66496211dc353d52bcd64c9db558b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>compositorref</name>
      <anchorfile>class_e_c___ogre_compositor.html</anchorfile>
      <anchor>a26f0920e7f2ad8c3e5d904ff3b204fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>priority</name>
      <anchorfile>class_e_c___ogre_compositor.html</anchorfile>
      <anchor>a8bfb3f8f233c23064260626e2011aee0</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QVariantList</type>
      <name>parameters</name>
      <anchorfile>class_e_c___ogre_compositor.html</anchorfile>
      <anchor>a99e379615d308d44be747499070fd94a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa63d1d694b058775a2458c45e68d856b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a134821f6bcf1ea6408a3a72c7f4dfa1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>replicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf5b7cfc104657f2795c8b0b237089eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>local</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a95ade3d0915b7224d56cd34a4e308cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AttributeChange::Type</type>
      <name>updateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a75b46dc1d972b1f10c17d8521aabf3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a418e735d210d40d2551b21a04f1cdde9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>unacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab5194d9724dc21842582abaa47ec4f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>networkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0d221fecdcf0c6b3ec731936d3c43fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnAttributeUpdated</name>
      <anchorfile>class_e_c___ogre_compositor.html</anchorfile>
      <anchor>a08689afba2a328f12f56ca39043c1fe6</anchor>
      <arglist>(IAttribute *attribute)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OneTimeRefresh</name>
      <anchorfile>class_e_c___ogre_compositor.html</anchorfile>
      <anchor>af26a097769b746aa8ddc53035c6045f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>UpdateCompositor</name>
      <anchorfile>class_e_c___ogre_compositor.html</anchorfile>
      <anchor>a697567fa1efc49e1a843b024cede30c9</anchor>
      <arglist>(const QString &amp;compositor)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>UpdateCompositorParams</name>
      <anchorfile>class_e_c___ogre_compositor.html</anchorfile>
      <anchor>acb91f37b5588e51801f6d254cef2c303</anchor>
      <arglist>(const QString &amp;compositor)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>OgreRenderer::OgreRenderingModule *</type>
      <name>owner_</name>
      <anchorfile>class_e_c___ogre_compositor.html</anchorfile>
      <anchor>aa9f70a4e221608ecc68e88f6c15218bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>OgreRenderer::CompositionHandler *</type>
      <name>handler_</name>
      <anchorfile>class_e_c___ogre_compositor.html</anchorfile>
      <anchor>a56daf943bb4c07a4279bafef962eb448</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QString</type>
      <name>previous_ref_</name>
      <anchorfile>class_e_c___ogre_compositor.html</anchorfile>
      <anchor>a8ccbd8023815db4da4920a37c34cf30d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>previous_priority_</name>
      <anchorfile>class_e_c___ogre_compositor.html</anchorfile>
      <anchor>ae8c943bd38480dbc29624c0a12fb8836</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>::IAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aea94a77a3151b94a6e695e5e5632cff8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EC_OgreCustomObject</name>
    <filename>class_e_c___ogre_custom_object.html</filename>
    <base>IComponent</base>
    <member kind="slot">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3a676adf2171375d6a6d782edd11f8cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a37b5449bdd8f88a07390204b6db24a80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsLocal</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7db6ec7dcedff369978dc05c114c3c91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsUnacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9f03346fe17c944a68a8388765d270c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetNetworkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a552391127e461b25b9d1d82028bae538</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetUpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a71f8f6bdee9d3f5774e2c0fd40e0b705</anchor>
      <arglist>(AttributeChange::Type defaultmode)</arglist>
    </member>
    <member kind="slot">
      <type>AttributeChange::Type</type>
      <name>UpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab9fe0648d176468ad31690c9fe34663b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>component_id_t</type>
      <name>Id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a63fd758d1042c37b180b0521408794bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2fdd3bc81ee6586e78cae212063185f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumStaticAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ad73dac34801dde16fd02332ff9e04aae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa5562b35074886469279334adf943e42</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>abd191432824f4b1c6c0deb46af886d98</anchor>
      <arglist>(const QString &amp;attributeName, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ComponentChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a35070b168681bf5600b08b4422cb2cea</anchor>
      <arglist>(AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>Entity *</type>
      <name>ParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9e79fda037aff4c3678d9d962e78d9ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Scene *</type>
      <name>ParentScene</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac56fb67cf293f9a4228fb1b4b5aaa1d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf71fe4c9b2c636b28c8db8584acacaf</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e87391a508d5bc41f21ddc2051498a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>ViewEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7c9a41bff7f966ac13575b7dc7d598d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>GetAttributeQVariant</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab824c2fa3bb625208160c5cebf38d86a</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetAttributeNames</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa6e0b51556f8cbb31bdddbb0d10efd7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a831b035648a3ec54c47991f61352b76f</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentNameChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac628c437220fc88961842fa412119940</anchor>
      <arglist>(const QString &amp;newName, const QString &amp;oldName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntitySet</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a1c0064bad72118e77f6896ad99929129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntityDetached</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e2ed82d9dc9a91f1347c3fbdf6ee305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAdded</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a81284243581f53c55f5817f5963665dc</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAboutToBeRemoved</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>adffe0688eddd4f05201376f3c3d75f2c</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EC_OgreCustomObject</name>
      <anchorfile>class_e_c___ogre_custom_object.html</anchorfile>
      <anchor>a1960833bafc341f34d8affa2f6f62e39</anchor>
      <arglist>(Scene *scene)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EC_OgreCustomObject</name>
      <anchorfile>class_e_c___ogre_custom_object.html</anchorfile>
      <anchor>aa75fcfa883ebdb244439059cc099ebaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ComponentPtr</type>
      <name>GetPlaceable</name>
      <anchorfile>class_e_c___ogre_custom_object.html</anchorfile>
      <anchor>ab679e1b8ab85337ed89e6fc5db43334b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPlaceable</name>
      <anchorfile>class_e_c___ogre_custom_object.html</anchorfile>
      <anchor>a394ef598b0bb2174fe028de43b26f687</anchor>
      <arglist>(ComponentPtr placeable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDrawDistance</name>
      <anchorfile>class_e_c___ogre_custom_object.html</anchorfile>
      <anchor>abc872ed1ac9c2722b26756879283b522</anchor>
      <arglist>(float draw_distance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCastShadows</name>
      <anchorfile>class_e_c___ogre_custom_object.html</anchorfile>
      <anchor>a1735abd44c75b222fd6179ced0dfd68b</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CommitChanges</name>
      <anchorfile>class_e_c___ogre_custom_object.html</anchorfile>
      <anchor>a56b995e88689f7bb46d36b166bb1ea0f</anchor>
      <arglist>(Ogre::ManualObject *object)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetMaterial</name>
      <anchorfile>class_e_c___ogre_custom_object.html</anchorfile>
      <anchor>a634ffbe5ed24600379a25ad745dad3f2</anchor>
      <arglist>(uint index, const std::string &amp;material_name)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>GetNumMaterials</name>
      <anchorfile>class_e_c___ogre_custom_object.html</anchorfile>
      <anchor>a1ead2cca391d9d1d4e25472cc3afd07a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>GetMaterialName</name>
      <anchorfile>class_e_c___ogre_custom_object.html</anchorfile>
      <anchor>a0869b741b3e1f92c4f9565ff24dd9d7f</anchor>
      <arglist>(uint index) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsCommitted</name>
      <anchorfile>class_e_c___ogre_custom_object.html</anchorfile>
      <anchor>a6bc51ec9faf19cdd1d4b22500a031708</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetBoundingBox</name>
      <anchorfile>class_e_c___ogre_custom_object.html</anchorfile>
      <anchor>a3cc258942af1b10c4853adbe35e2fdea</anchor>
      <arglist>(float3 &amp;min, float3 &amp;max) const </arglist>
    </member>
    <member kind="function">
      <type>Ogre::Entity *</type>
      <name>GetEntity</name>
      <anchorfile>class_e_c___ogre_custom_object.html</anchorfile>
      <anchor>a65c0230361dd03cfb1a46c71ef7fb4f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const QString &amp;</type>
      <name>TypeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a156d0e2583be2efaa99c441458f1db9d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual u32</type>
      <name>TypeId</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8627793238d67e1753c5b810c5051cbd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a58f42567395c5341d2e1fd97fe7f804d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa8064a536ed194201bf0189ece40de8d</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afeedd4000926fdd03993f948b7e31913</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="function">
      <type>const AttributeVector &amp;</type>
      <name>Attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a89a8bab524c7fcfef61ce856e7b4d076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AttributeVector</type>
      <name>NonEmptyAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8a2fff750482947ccbdbf9ce3064c428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Attribute&lt; T &gt; *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afa602255ad19494e8264f7fb73070493</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0dea3e94303deea91633301813553676</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeTo</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8154e6434ceeb36ca5e74fef15859353</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFrom</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6e9845cdedf2a238a212bbcd8a863e72</anchor>
      <arglist>(QDomElement &amp;element, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeToBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6ae9b22082cb5bf29859645dd6ac6d4a</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFromBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a481ee3acac8605b1e683c1231f25e2bc</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>CreateAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a4356799119ea6ecae4b6dfc6b091bddb</anchor>
      <arglist>(u8 index, u32 typeID, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2f8b15aa5edcdaac2f32c5959c5d88dc</anchor>
      <arglist>(u8 index, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a62dfbeca452e6449c233a570cf059225</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QDomElement</type>
      <name>BeginSerialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7172dbdf2339ddbbc3c5652be8968ed3</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a844ec4ff1dec75cbbb7d8ff03ca61b01</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aad61f20527eed870c9f635e20bf5c688</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value, const QString &amp;type) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>BeginDeserialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3fef3969ebb919048bf57d3db05b48d7</anchor>
      <arglist>(QDomElement &amp;compElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7fd2354c177222bfdad3d9f8bbf4f051</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttributeType</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a5b0ecd40b4da8fb8d6794b2cf31ce4c9</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>af5a186f31936694254018f2c720256c7</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a96113e4d61805b085f4b0d6d36135391</anchor>
      <arglist>(IAttribute *attr, u8 index)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>component_id_t</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a946596d66e1667003eafab6ddb6f141b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Entity *</type>
      <name>parentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3761c0afda2f60e0b3acc44d8162b907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AttributeVector</type>
      <name>attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae0bfd9389533b6a178d0876b1174102f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae04ef3ddf6acb549b696b339c933c274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>temporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7a013d9fbc921cc6ea882e039794baa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa63d1d694b058775a2458c45e68d856b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a134821f6bcf1ea6408a3a72c7f4dfa1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>replicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf5b7cfc104657f2795c8b0b237089eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>local</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a95ade3d0915b7224d56cd34a4e308cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AttributeChange::Type</type>
      <name>updateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a75b46dc1d972b1f10c17d8521aabf3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a418e735d210d40d2551b21a04f1cdde9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>unacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab5194d9724dc21842582abaa47ec4f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>networkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0d221fecdcf0c6b3ec731936d3c43fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>AttachEntity</name>
      <anchorfile>class_e_c___ogre_custom_object.html</anchorfile>
      <anchor>a70131b75370addad261a7ca91cc6bffd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>DetachEntity</name>
      <anchorfile>class_e_c___ogre_custom_object.html</anchorfile>
      <anchor>a8909feb9a759cbad479c9a9cb636e4e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>DestroyEntity</name>
      <anchorfile>class_e_c___ogre_custom_object.html</anchorfile>
      <anchor>abe2b81637b96f320e022df5fa77c3190</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ComponentPtr</type>
      <name>placeable_</name>
      <anchorfile>class_e_c___ogre_custom_object.html</anchorfile>
      <anchor>afd108ea16e1499a2bd50a939b7864512</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>OgreWorldWeakPtr</type>
      <name>world_</name>
      <anchorfile>class_e_c___ogre_custom_object.html</anchorfile>
      <anchor>a75c6c59183fafc0679ea297cdb63c2fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::Entity *</type>
      <name>entity_</name>
      <anchorfile>class_e_c___ogre_custom_object.html</anchorfile>
      <anchor>a4669d28bce28b9bfdc1bfee416e3f795</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>attached_</name>
      <anchorfile>class_e_c___ogre_custom_object.html</anchorfile>
      <anchor>af7e476ecf42e6ec3a41eccf5318ea52a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>cast_shadows_</name>
      <anchorfile>class_e_c___ogre_custom_object.html</anchorfile>
      <anchor>a9e3414a34f3eaecff8b937c841155e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>float</type>
      <name>draw_distance_</name>
      <anchorfile>class_e_c___ogre_custom_object.html</anchorfile>
      <anchor>a78e8bec275b85df0e587eb3045a62899</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>::IAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aea94a77a3151b94a6e695e5e5632cff8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EC_Placeable</name>
    <filename>class_e_c___placeable.html</filename>
    <base>IComponent</base>
    <member kind="slot">
      <type>void</type>
      <name>SetPosition</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>aaa0f17fe8a6f11f78528497317a19404</anchor>
      <arglist>(float x, float y, float z)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetPosition</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a51f8d9c40043ed6ad6f315fbd8d7ac88</anchor>
      <arglist>(const float3 &amp;pos)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetOrientation</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>abb76065cc8463347bb4a8dde9922fcf0</anchor>
      <arglist>(const Quat &amp;q)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetOrientationAndScale</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a19b5b3519818378b0e0a888d56c43966</anchor>
      <arglist>(const float3x3 &amp;rotAndScale)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetOrientationAndScale</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a2ea481080609f023c0efc4988c9ead66</anchor>
      <arglist>(const Quat &amp;q, const float3 &amp;scale)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetScale</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a78535d3006e1b28dff79deaa6d1154a7</anchor>
      <arglist>(float x, float y, float z)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetScale</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a06308516fc203e2fc51d4e04583b3d89</anchor>
      <arglist>(const float3 &amp;scale)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTransform</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a454c02ae5a770f210d6a7aefede12733</anchor>
      <arglist>(const float3x3 &amp;tm, const float3 &amp;pos)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTransform</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a336913b036577831c7fac3c08921ae73</anchor>
      <arglist>(const float3x4 &amp;tm)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTransform</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a032699c307ee27c9a5097d4d92038122</anchor>
      <arglist>(const float4x4 &amp;tm)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTransform</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a1d6dbf3dc8d2fe570441b1591c611be4</anchor>
      <arglist>(const Quat &amp;orientation, const float3 &amp;pos)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTransform</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>aebdcadbf3a8abc667f8ec42a590006d8</anchor>
      <arglist>(const Quat &amp;orientation, const float3 &amp;pos, const float3 &amp;scale)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetWorldTransform</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a169a8558e8de1ea86c8b31e26ef710cb</anchor>
      <arglist>(const float3x3 &amp;tm, const float3 &amp;pos)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetWorldTransform</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a2e3b69f4fd309994dad67c1549cd3b54</anchor>
      <arglist>(const float3x4 &amp;tm)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetWorldTransform</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a316f95dd0505e3f3614b9cb2d20fbff0</anchor>
      <arglist>(const float4x4 &amp;tm)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetWorldTransform</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a3422a63295d013e6a36da9df2aa1c1c7</anchor>
      <arglist>(const Quat &amp;orientation, const float3 &amp;pos)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetWorldTransform</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>af67bf3618de9dbb9acf9234f9e07fb74</anchor>
      <arglist>(const Quat &amp;orientation, const float3 &amp;pos, const float3 &amp;scale)</arglist>
    </member>
    <member kind="slot">
      <type>float3</type>
      <name>WorldPosition</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a887d6e9540e1cf5f183f9ff75528a595</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Quat</type>
      <name>WorldOrientation</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a717d54b4b5c181565406d9a94442a781</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>float3</type>
      <name>WorldScale</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a7c1e26bda378e3d061bfd0950a731837</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>float3</type>
      <name>Position</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a7fd63979e022c2ccb1ef3c8bf652d6f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Quat</type>
      <name>Orientation</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a8dcb486fbf136a81c4050874d670344a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>float3</type>
      <name>Scale</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>ae97211997b5792dd4d1516ea4a657d89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>float3x4</type>
      <name>LocalToWorld</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a0425c91fae9e11b2c74143eed86004d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>float3x4</type>
      <name>WorldToLocal</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a63cfc22fc818b53a624a60826927f4b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>float3x4</type>
      <name>LocalToParent</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>ab5453b115a0f73c54e03e57d1bfc3b01</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>float3x4</type>
      <name>ParentToLocal</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>aa2a7696bfd6b0da66eda49edc36725b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Show</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a0407ae84cc7d68532ad3ac6172f28e9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Hide</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a4a200cb87d1db713779783b2c0af0e0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ToggleVisibility</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a53fa6987d3b1d440305ce1506b6e606e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsAttached</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a6299e52839e006472136e40a8d850776</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetParent</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a5ef5915fab7a40564d0189e8a5fe3399</anchor>
      <arglist>(Entity *parent, bool preserveWorldTransform)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetParent</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>ab0a35bd4a432b08334f41a119ee4986c</anchor>
      <arglist>(Entity *parent, QString boneName, bool preserveWorldTransform)</arglist>
    </member>
    <member kind="slot">
      <type>EntityList</type>
      <name>Children</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a254f7872a4216532a30dc10ebedc889f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>DumpNodeHierarhy</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>aced9adb70cd40728e98899426347b285</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3a676adf2171375d6a6d782edd11f8cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a37b5449bdd8f88a07390204b6db24a80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsLocal</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7db6ec7dcedff369978dc05c114c3c91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsUnacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9f03346fe17c944a68a8388765d270c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetNetworkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a552391127e461b25b9d1d82028bae538</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetUpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a71f8f6bdee9d3f5774e2c0fd40e0b705</anchor>
      <arglist>(AttributeChange::Type defaultmode)</arglist>
    </member>
    <member kind="slot">
      <type>AttributeChange::Type</type>
      <name>UpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab9fe0648d176468ad31690c9fe34663b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>component_id_t</type>
      <name>Id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a63fd758d1042c37b180b0521408794bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2fdd3bc81ee6586e78cae212063185f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumStaticAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ad73dac34801dde16fd02332ff9e04aae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa5562b35074886469279334adf943e42</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>abd191432824f4b1c6c0deb46af886d98</anchor>
      <arglist>(const QString &amp;attributeName, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ComponentChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a35070b168681bf5600b08b4422cb2cea</anchor>
      <arglist>(AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>Entity *</type>
      <name>ParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9e79fda037aff4c3678d9d962e78d9ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Scene *</type>
      <name>ParentScene</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac56fb67cf293f9a4228fb1b4b5aaa1d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf71fe4c9b2c636b28c8db8584acacaf</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e87391a508d5bc41f21ddc2051498a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>ViewEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7c9a41bff7f966ac13575b7dc7d598d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>GetAttributeQVariant</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab824c2fa3bb625208160c5cebf38d86a</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetAttributeNames</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa6e0b51556f8cbb31bdddbb0d10efd7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AboutToBeDestroyed</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a95248b8bcb14b5fd1089b4b71359bf20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a831b035648a3ec54c47991f61352b76f</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentNameChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac628c437220fc88961842fa412119940</anchor>
      <arglist>(const QString &amp;newName, const QString &amp;oldName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntitySet</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a1c0064bad72118e77f6896ad99929129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntityDetached</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e2ed82d9dc9a91f1347c3fbdf6ee305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAdded</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a81284243581f53c55f5817f5963665dc</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAboutToBeRemoved</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>adffe0688eddd4f05201376f3c3d75f2c</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EC_Placeable</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a71d1d6d87689f1165994274eabe01ccd</anchor>
      <arglist>(Scene *scene)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EC_Placeable</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a0c45fa0cac9615bfdd683bacb613edfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a3d4697c6e31d32509160fbe1282362d0</anchor>
      <arglist>(Transform, transform)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a72cee44f502cbedca58b1d1f74b0dada</anchor>
      <arglist>(bool, drawDebug)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>ad84344962ee0ea81d9280ccc64bb43c2</anchor>
      <arglist>(bool, visible)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a9f30243f519dd67dbea050686538c7af</anchor>
      <arglist>(int, selectionLayer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a910ddcdc68364534cb0feca4b50e00c8</anchor>
      <arglist>(EntityReference, parentRef)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a2030d687dbe64daed2c61c768711f2f2</anchor>
      <arglist>(QString, parentBone)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::SceneNode *</type>
      <name>GetSceneNode</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a93adb72b3cd1daca4ff2104ab4f00697</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const QString &amp;</type>
      <name>TypeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a156d0e2583be2efaa99c441458f1db9d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual u32</type>
      <name>TypeId</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8627793238d67e1753c5b810c5051cbd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a58f42567395c5341d2e1fd97fe7f804d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa8064a536ed194201bf0189ece40de8d</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afeedd4000926fdd03993f948b7e31913</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="function">
      <type>const AttributeVector &amp;</type>
      <name>Attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a89a8bab524c7fcfef61ce856e7b4d076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AttributeVector</type>
      <name>NonEmptyAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8a2fff750482947ccbdbf9ce3064c428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Attribute&lt; T &gt; *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afa602255ad19494e8264f7fb73070493</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0dea3e94303deea91633301813553676</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeTo</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8154e6434ceeb36ca5e74fef15859353</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFrom</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6e9845cdedf2a238a212bbcd8a863e72</anchor>
      <arglist>(QDomElement &amp;element, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeToBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6ae9b22082cb5bf29859645dd6ac6d4a</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFromBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a481ee3acac8605b1e683c1231f25e2bc</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>CreateAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a4356799119ea6ecae4b6dfc6b091bddb</anchor>
      <arglist>(u8 index, u32 typeID, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2f8b15aa5edcdaac2f32c5959c5d88dc</anchor>
      <arglist>(u8 index, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a62dfbeca452e6449c233a570cf059225</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QDomElement</type>
      <name>BeginSerialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7172dbdf2339ddbbc3c5652be8968ed3</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a844ec4ff1dec75cbbb7d8ff03ca61b01</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aad61f20527eed870c9f635e20bf5c688</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value, const QString &amp;type) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>BeginDeserialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3fef3969ebb919048bf57d3db05b48d7</anchor>
      <arglist>(QDomElement &amp;compElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7fd2354c177222bfdad3d9f8bbf4f051</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttributeType</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a5b0ecd40b4da8fb8d6794b2cf31ce4c9</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>af5a186f31936694254018f2c720256c7</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a96113e4d61805b085f4b0d6d36135391</anchor>
      <arglist>(IAttribute *attr, u8 index)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>component_id_t</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a946596d66e1667003eafab6ddb6f141b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Entity *</type>
      <name>parentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3761c0afda2f60e0b3acc44d8162b907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AttributeVector</type>
      <name>attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae0bfd9389533b6a178d0876b1174102f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae04ef3ddf6acb549b696b339c933c274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>temporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7a013d9fbc921cc6ea882e039794baa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>Transform</type>
      <name>transform</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a4c54661326ea4583247c9e8f8dc74acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>drawDebug</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a1c99b5910a90f097c662beb2686618e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>visible</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a064349aecd772d35dc1499bc7fe83937</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>selectionLayer</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>ac4ec334292a85670f3cdef713a6c47b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>EntityReference</type>
      <name>parentRef</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a44068bcc4938e3aebfdbf0e9e8379d89</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>parentBone</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a468e07e0e3804afc098d257a4edd7ecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa63d1d694b058775a2458c45e68d856b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a134821f6bcf1ea6408a3a72c7f4dfa1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>replicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf5b7cfc104657f2795c8b0b237089eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>local</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a95ade3d0915b7224d56cd34a4e308cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AttributeChange::Type</type>
      <name>updateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a75b46dc1d972b1f10c17d8521aabf3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a418e735d210d40d2551b21a04f1cdde9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>unacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab5194d9724dc21842582abaa47ec4f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>networkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0d221fecdcf0c6b3ec731936d3c43fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleAttributeChanged</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a16abf53df05e801cfe4465c589771ced</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>RegisterActions</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a26b6c9cd610a8d7bfa6e97dcf5f6bed4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnParentMeshDestroyed</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a419a09aa07bd7b8e613abc2c178b5f3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnParentPlaceableDestroyed</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a5499258de3f164090f82a123fca25c31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>CheckParentEntityCreated</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>abdfb78d799beb1d24b829d252116275c</anchor>
      <arglist>(Entity *entity, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnParentMeshChanged</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a3cf8429439f28a4ae7770a25abd72bfa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnComponentAdded</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a3bdc6e921c23d43b4ab29d974b18e092</anchor>
      <arglist>(IComponent *component, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>AttachNode</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>ad60cf9673795fc092dcb12978f88bf26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>DetachNode</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a0c3d87aeae5524ec303ca6f587773f46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>OgreWorldWeakPtr</type>
      <name>world_</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>af8f3cbfde885813ffdef5a1ecea34772</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::SceneNode *</type>
      <name>sceneNode_</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a916ee859f6bcbf937fbd1bb098c4e655</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::SceneNode *</type>
      <name>boneAttachmentNode_</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a95e9cd7671d62c92fe08a487d4d641a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::Bone *</type>
      <name>parentBone_</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a48432d29a2dfaaa6a4e564d33b4b37ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EC_Placeable *</type>
      <name>parentPlaceable_</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>af361d28e26ae050638d43edab319f103</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EC_Mesh *</type>
      <name>parentMesh_</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>aaafb25681ce39da9ca981dde106cb445</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>attached_</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>aa6fbc55608a67a7cebd1b682007ed91f</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoneAttachmentListener</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>a8f686aba45f5cf8ca34cc1358d9f43d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CustomTagPoint</name>
      <anchorfile>class_e_c___placeable.html</anchorfile>
      <anchor>ad4b92be332cce48e7d10a49e67612ce8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>::IAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aea94a77a3151b94a6e695e5e5632cff8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EC_RigidBody</name>
    <filename>class_e_c___rigid_body.html</filename>
    <base>IComponent</base>
    <member kind="enumeration">
      <name>ShapeType</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a78704e6ea3165b6bae39ec885ad1fb6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Shape_Box</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a78704e6ea3165b6bae39ec885ad1fb6dae50faf7ed377835a8d8bfe74dea94aed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Shape_Sphere</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a78704e6ea3165b6bae39ec885ad1fb6da50ffb16de599b63cbb8838a7e1f74ae1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Shape_Cylinder</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a78704e6ea3165b6bae39ec885ad1fb6dab234b3504b890f006d048a2d5a2609fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Shape_Capsule</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a78704e6ea3165b6bae39ec885ad1fb6dae273020be41d5a7e32c4a8c8ad6d784f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Shape_TriMesh</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a78704e6ea3165b6bae39ec885ad1fb6da069a80493c7e0d323efdca324c3c3109</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Shape_HeightField</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a78704e6ea3165b6bae39ec885ad1fb6da97982113dc317eb7bf374cc051a4043e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Shape_ConvexHull</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a78704e6ea3165b6bae39ec885ad1fb6da2432c754a93c0b7b62db9e0016a720df</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetShapeFromVisibleMesh</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a931b41a1c58da08d48592e6d2b74bc4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetLinearVelocity</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a2eab68d5a3999056c1db1438a05d21c6</anchor>
      <arglist>(const float3 &amp;velocity)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetAngularVelocity</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>aaa058efc650396f7f5f923dfd7cb64d5</anchor>
      <arglist>(const float3 &amp;angularVelocity)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ApplyForce</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a7df318e94f921dbb41803684ed49bedf</anchor>
      <arglist>(const float3 &amp;force, const float3 &amp;position=float3::zero)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ApplyTorque</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>aef371a8cd6949bee422fa18ea651abdd</anchor>
      <arglist>(const float3 &amp;torque)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ApplyImpulse</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>abd542be21ffc4f6a1f3884a27b0d25e0</anchor>
      <arglist>(const float3 &amp;impulse, const float3 &amp;position=float3::zero)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ApplyTorqueImpulse</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>adabd0a3f1f0d254e367eda9ff3606738</anchor>
      <arglist>(const float3 &amp;torqueImpulse)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Activate</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>adbd2e3f63dbd9a3da5d1ef2ce3429438</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>KeepActive</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>abb3ae44553a05fd902a1dc5b07e05da1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsActive</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>acd23bfbf19f274b64df46e286df5634b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ResetForces</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>ad213f7ebe890cbb2b80188c0a1042c9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetRotation</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a6b04189e3145d4ee0b5a9b7be96de05e</anchor>
      <arglist>(const float3 &amp;rotation)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Rotate</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a30c975579fe08fef10ccd2aec61cc67a</anchor>
      <arglist>(const float3 &amp;rotation)</arglist>
    </member>
    <member kind="slot">
      <type>float3</type>
      <name>GetLinearVelocity</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a872f749743955a6e8b614185614e9dd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>float3</type>
      <name>GetAngularVelocity</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a9ebd269e0ca882c3750f80007e1107aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>Physics::PhysicsWorld *</type>
      <name>GetPhysicsWorld</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>ab2a8ced0609269e7f44fcb10e0732a59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>GetAabbox</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>ada2e0afcd0e94809992fd3fc4fd80f7c</anchor>
      <arglist>(float3 &amp;outAabbMin, float3 &amp;outAabbMax)</arglist>
    </member>
    <member kind="slot">
      <type>btRigidBody *</type>
      <name>GetRigidBody</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a78e998fe5bc94264b59af36f51e434b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>HasAuthority</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a44937b25b1608465df5c6cf39cc0bafd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3a676adf2171375d6a6d782edd11f8cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a37b5449bdd8f88a07390204b6db24a80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsLocal</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7db6ec7dcedff369978dc05c114c3c91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsUnacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9f03346fe17c944a68a8388765d270c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetNetworkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a552391127e461b25b9d1d82028bae538</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetUpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a71f8f6bdee9d3f5774e2c0fd40e0b705</anchor>
      <arglist>(AttributeChange::Type defaultmode)</arglist>
    </member>
    <member kind="slot">
      <type>AttributeChange::Type</type>
      <name>UpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab9fe0648d176468ad31690c9fe34663b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>component_id_t</type>
      <name>Id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a63fd758d1042c37b180b0521408794bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2fdd3bc81ee6586e78cae212063185f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumStaticAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ad73dac34801dde16fd02332ff9e04aae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa5562b35074886469279334adf943e42</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>abd191432824f4b1c6c0deb46af886d98</anchor>
      <arglist>(const QString &amp;attributeName, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ComponentChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a35070b168681bf5600b08b4422cb2cea</anchor>
      <arglist>(AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>Entity *</type>
      <name>ParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9e79fda037aff4c3678d9d962e78d9ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Scene *</type>
      <name>ParentScene</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac56fb67cf293f9a4228fb1b4b5aaa1d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf71fe4c9b2c636b28c8db8584acacaf</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e87391a508d5bc41f21ddc2051498a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>ViewEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7c9a41bff7f966ac13575b7dc7d598d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>GetAttributeQVariant</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab824c2fa3bb625208160c5cebf38d86a</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetAttributeNames</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa6e0b51556f8cbb31bdddbb0d10efd7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>PhysicsCollision</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>ad31d045fd8c2cb354db002614f812070</anchor>
      <arglist>(Entity *otherEntity, const float3 &amp;position, const float3 &amp;normal, float distance, float impulse, bool newCollision)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a831b035648a3ec54c47991f61352b76f</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentNameChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac628c437220fc88961842fa412119940</anchor>
      <arglist>(const QString &amp;newName, const QString &amp;oldName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntitySet</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a1c0064bad72118e77f6896ad99929129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntityDetached</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e2ed82d9dc9a91f1347c3fbdf6ee305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAdded</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a81284243581f53c55f5817f5963665dc</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAboutToBeRemoved</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>adffe0688eddd4f05201376f3c3d75f2c</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EC_RigidBody</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a7d016726e6fa7676b770fff4074a675d</anchor>
      <arglist>(Scene *scene)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EC_RigidBody</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>aef694a968a4bcae087100b394de55c74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a515bb12cb90e00d64069468cd614fa91</anchor>
      <arglist>(float, mass)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a13418a695f408a37db657d815da2b58f</anchor>
      <arglist>(int, shapeType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>ad792ad3dfd16cdcbf198bd490ec78566</anchor>
      <arglist>(float3, size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a6b5e31241273e0d6cfa807aeaa3de2bb</anchor>
      <arglist>(AssetReference, collisionMeshRef)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a541257154431519d139b77da011bcba9</anchor>
      <arglist>(float, friction)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>ac26954bddc9e99d0bd3ba1edc6a9f917</anchor>
      <arglist>(float, restitution)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>acbab68e26e9b7a30be18278d6454c8a7</anchor>
      <arglist>(float, linearDamping)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>aff65cb4b9bd39bf6b88b22707d0bd019</anchor>
      <arglist>(float, angularDamping)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>af7d7eca2e5c99e6e5727cef92a180cf6</anchor>
      <arglist>(float3, linearFactor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a216c4fa91aa05e117b3543c08add86e3</anchor>
      <arglist>(float3, angularFactor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getWorldTransform</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>aa9f7cf84149e4e65420e0bbcc7a01881</anchor>
      <arglist>(btTransform &amp;worldTrans) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setWorldTransform</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a3798133cf4c72cc6c1d55071ed809d7e</anchor>
      <arglist>(const btTransform &amp;worldTrans)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const QString &amp;</type>
      <name>TypeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a156d0e2583be2efaa99c441458f1db9d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual u32</type>
      <name>TypeId</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8627793238d67e1753c5b810c5051cbd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a58f42567395c5341d2e1fd97fe7f804d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa8064a536ed194201bf0189ece40de8d</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afeedd4000926fdd03993f948b7e31913</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="function">
      <type>const AttributeVector &amp;</type>
      <name>Attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a89a8bab524c7fcfef61ce856e7b4d076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AttributeVector</type>
      <name>NonEmptyAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8a2fff750482947ccbdbf9ce3064c428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Attribute&lt; T &gt; *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afa602255ad19494e8264f7fb73070493</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0dea3e94303deea91633301813553676</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeTo</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8154e6434ceeb36ca5e74fef15859353</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFrom</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6e9845cdedf2a238a212bbcd8a863e72</anchor>
      <arglist>(QDomElement &amp;element, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeToBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6ae9b22082cb5bf29859645dd6ac6d4a</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFromBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a481ee3acac8605b1e683c1231f25e2bc</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>CreateAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a4356799119ea6ecae4b6dfc6b091bddb</anchor>
      <arglist>(u8 index, u32 typeID, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2f8b15aa5edcdaac2f32c5959c5d88dc</anchor>
      <arglist>(u8 index, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a62dfbeca452e6449c233a570cf059225</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QDomElement</type>
      <name>BeginSerialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7172dbdf2339ddbbc3c5652be8968ed3</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a844ec4ff1dec75cbbb7d8ff03ca61b01</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aad61f20527eed870c9f635e20bf5c688</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value, const QString &amp;type) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>BeginDeserialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3fef3969ebb919048bf57d3db05b48d7</anchor>
      <arglist>(QDomElement &amp;compElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7fd2354c177222bfdad3d9f8bbf4f051</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttributeType</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a5b0ecd40b4da8fb8d6794b2cf31ce4c9</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>af5a186f31936694254018f2c720256c7</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a96113e4d61805b085f4b0d6d36135391</anchor>
      <arglist>(IAttribute *attr, u8 index)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>component_id_t</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a946596d66e1667003eafab6ddb6f141b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Entity *</type>
      <name>parentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3761c0afda2f60e0b3acc44d8162b907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AttributeVector</type>
      <name>attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae0bfd9389533b6a178d0876b1174102f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae04ef3ddf6acb549b696b339c933c274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>temporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7a013d9fbc921cc6ea882e039794baa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>mass</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a2ce3b81f32c233f13b21aa5aa7f12091</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>shapeType</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a164a1a548b29915cee819083e989feee</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float3</type>
      <name>size</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>abe6a08dd81478a421c290a4690ade601</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AssetReference</type>
      <name>collisionMeshRef</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>ab1623d4e18103ff533b9a76739ff1f79</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>friction</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>aae33238f8eeacec5d947af8d75cb2861</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>restitution</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>aa7443ba07053bce127e22e5a6b755da0</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>linearDamping</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a0560c78b1b6d19f4984797e1bfd1e1d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>angularDamping</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a062540d9510b7fab4a199a26a2d8a71c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float3</type>
      <name>linearFactor</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a64bfbf3af027f88fd0e8ba3c40daf8aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float3</type>
      <name>angularFactor</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a4ad7678f86c175f3d02f19c0bcff3291</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>kinematic</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a5cf3446a9279f1f15eaceb7b289dfc61</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>phantom</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a9fc2d236ff8c9e55f3f5623127e1be98</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>drawDebug</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a2d81be11a9cbc221096bf04b105c2a63</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float3</type>
      <name>linearVelocity</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a8ce3c01128d62804fde09bed5ac9e9b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float3</type>
      <name>angularVelocity</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>ad21d89129f0004337893ae5c653df58e</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>collisionLayer</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a47dbf634a3549ce75ba55fd3d3366afa</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>collisionMask</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a35dfcef63825b9ef65d9d769240e48f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa63d1d694b058775a2458c45e68d856b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a134821f6bcf1ea6408a3a72c7f4dfa1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>replicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf5b7cfc104657f2795c8b0b237089eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>local</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a95ade3d0915b7224d56cd34a4e308cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AttributeChange::Type</type>
      <name>updateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a75b46dc1d972b1f10c17d8521aabf3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a418e735d210d40d2551b21a04f1cdde9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>unacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab5194d9724dc21842582abaa47ec4f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>networkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0d221fecdcf0c6b3ec731936d3c43fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>UpdateSignals</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a2dad1813de0dc70da0889642ce144c33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnAboutToUpdate</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>ae806ccb81343030c3fa38f5c44ce61aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnAttributeUpdated</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>aed11ef933d63da166ea8f5e2085d4249</anchor>
      <arglist>(IAttribute *attribute)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>PlaceableUpdated</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a91f03abd56f2ae70d39c270b85dc68b1</anchor>
      <arglist>(IAttribute *attribute)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>TerrainUpdated</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a52c493fe997881fa1dc07d1c03159e40</anchor>
      <arglist>(IAttribute *attribute)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>CheckForPlaceableAndTerrain</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>ad3ea8cfc141879d4d66a6b1425c11a90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnTerrainRegenerated</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a76d0b3ff41b8bcda6330fa1b70c5a1e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnCollisionMeshAssetLoaded</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>af3ffc5d26f912cf698f8c21532f3e30b</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CreateCollisionShape</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a559e145a22fb560f6c52e77dd5e05c2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>RemoveCollisionShape</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>ac8a1e0474c19903ac9e8e4fabd2db2d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CreateHeightFieldFromTerrain</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>acca9ce26e96215bf0ee529c3f74d906c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CreateConvexHullSetShape</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>aaee91f3d00557fbff88ec594b5a0bdad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CreateBody</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>ac43dc2a7125c472ab9d151b741c60b41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>RemoveBody</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a7caaf452dbab36e939e66c1302948cb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ReaddBody</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a734e4c2f8ce42a417b557066774a1567</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>UpdateScale</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a1d613b6f53d0fa3b384c811a771cedc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>UpdatePosRotFromPlaceable</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a62a181f753c758eccfd05388b2adbe17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>RequestMesh</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a4cdddcd8144932972296bff014f55491</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>GetProperties</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>abfae3d5145501593652270c742d1488b</anchor>
      <arglist>(btVector3 &amp;localInertia, float &amp;m, int &amp;collisionFlags)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>EmitPhysicsCollision</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a22f20a5e1674d4ac86aba4c3a7ccee4f</anchor>
      <arglist>(Entity *otherEntity, const float3 &amp;position, const float3 &amp;normal, float distance, float impulse, bool newCollision)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::weak_ptr&lt; EC_Placeable &gt;</type>
      <name>placeable_</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a0ba55847890ef884eb1cb97a83d029c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::weak_ptr&lt; EC_Terrain &gt;</type>
      <name>terrain_</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>af67324f2afe64cdcb91f14188569a989</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>disconnected_</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a4191e2f401c86857b50c7c5384e974f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>btRigidBody *</type>
      <name>body_</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a97e8812ab28bce141b99aba25de5032d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>btCollisionShape *</type>
      <name>shape_</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a054afefdf557674652094eaf617e2074</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>btCollisionShape *</type>
      <name>childShape_</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>aca7bf73c47a91d74e7351cc7fc7be4cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Physics::PhysicsWorld *</type>
      <name>world_</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a0ce5560723ff1978a9ad6627170bd736</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Physics::PhysicsModule *</type>
      <name>owner_</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a833aa6103e497893895fb3eb4453060e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>cachedShapeType_</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a95c8ade015db189df101388cc9025282</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>float3</type>
      <name>cachedSize_</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a2fc8b04446c93b42f91e413c30e24bd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::shared_ptr&lt; btTriangleMesh &gt;</type>
      <name>triangleMesh_</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>aaeb23431950c6dd9ed0cceff76b5bc18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::shared_ptr&lt; Physics::ConvexHullSet &gt;</type>
      <name>convexHullSet_</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a73d35b1460d2864afba00922e3097fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>btHeightfieldTerrainShape *</type>
      <name>heightField_</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a381946b3148129903a5663e870110624</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; float &gt;</type>
      <name>heightValues_</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a51ee4c321e89e757cccc3b81b46ddfc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Physics::PhysicsWorld</name>
      <anchorfile>class_e_c___rigid_body.html</anchorfile>
      <anchor>a2b7cb0604afd9986b01f08cbf01b7d11</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>::IAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aea94a77a3151b94a6e695e5e5632cff8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EC_RttTarget</name>
    <filename>class_e_c___rtt_target.html</filename>
    <base>IComponent</base>
    <member kind="slot">
      <type>void</type>
      <name>PrepareRtt</name>
      <anchorfile>class_e_c___rtt_target.html</anchorfile>
      <anchor>ab771abc237dc0dc0d04e4c3c71c4db97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetAutoUpdated</name>
      <anchorfile>class_e_c___rtt_target.html</anchorfile>
      <anchor>a96dda705a87bc547b5ffa6debf0c6715</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="slot">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3a676adf2171375d6a6d782edd11f8cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a37b5449bdd8f88a07390204b6db24a80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsLocal</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7db6ec7dcedff369978dc05c114c3c91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsUnacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9f03346fe17c944a68a8388765d270c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetNetworkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a552391127e461b25b9d1d82028bae538</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetUpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a71f8f6bdee9d3f5774e2c0fd40e0b705</anchor>
      <arglist>(AttributeChange::Type defaultmode)</arglist>
    </member>
    <member kind="slot">
      <type>AttributeChange::Type</type>
      <name>UpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab9fe0648d176468ad31690c9fe34663b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>component_id_t</type>
      <name>Id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a63fd758d1042c37b180b0521408794bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2fdd3bc81ee6586e78cae212063185f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumStaticAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ad73dac34801dde16fd02332ff9e04aae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa5562b35074886469279334adf943e42</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>abd191432824f4b1c6c0deb46af886d98</anchor>
      <arglist>(const QString &amp;attributeName, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ComponentChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a35070b168681bf5600b08b4422cb2cea</anchor>
      <arglist>(AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>Entity *</type>
      <name>ParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9e79fda037aff4c3678d9d962e78d9ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Scene *</type>
      <name>ParentScene</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac56fb67cf293f9a4228fb1b4b5aaa1d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf71fe4c9b2c636b28c8db8584acacaf</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e87391a508d5bc41f21ddc2051498a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>ViewEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7c9a41bff7f966ac13575b7dc7d598d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>GetAttributeQVariant</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab824c2fa3bb625208160c5cebf38d86a</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetAttributeNames</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa6e0b51556f8cbb31bdddbb0d10efd7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a831b035648a3ec54c47991f61352b76f</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentNameChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac628c437220fc88961842fa412119940</anchor>
      <arglist>(const QString &amp;newName, const QString &amp;oldName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntitySet</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a1c0064bad72118e77f6896ad99929129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntityDetached</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e2ed82d9dc9a91f1347c3fbdf6ee305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAdded</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a81284243581f53c55f5817f5963665dc</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAboutToBeRemoved</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>adffe0688eddd4f05201376f3c3d75f2c</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EC_RttTarget</name>
      <anchorfile>class_e_c___rtt_target.html</anchorfile>
      <anchor>a48b74bab4b66ea8a4c93350528839c3f</anchor>
      <arglist>(Scene *scene)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EC_RttTarget</name>
      <anchorfile>class_e_c___rtt_target.html</anchorfile>
      <anchor>a13bb93e31e1b0f69a86e0b0b97270563</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___rtt_target.html</anchorfile>
      <anchor>a65c38dafd08219a3a19381932096e8fe</anchor>
      <arglist>(QString, textureName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___rtt_target.html</anchorfile>
      <anchor>a8c7410fc1d70a3be3ed341fef9dc175a</anchor>
      <arglist>(int, width)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___rtt_target.html</anchorfile>
      <anchor>abaab9d4bbe89cec2c3c519802153cbff</anchor>
      <arglist>(int, height)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const QString &amp;</type>
      <name>TypeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a156d0e2583be2efaa99c441458f1db9d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual u32</type>
      <name>TypeId</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8627793238d67e1753c5b810c5051cbd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a58f42567395c5341d2e1fd97fe7f804d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa8064a536ed194201bf0189ece40de8d</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afeedd4000926fdd03993f948b7e31913</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="function">
      <type>const AttributeVector &amp;</type>
      <name>Attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a89a8bab524c7fcfef61ce856e7b4d076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AttributeVector</type>
      <name>NonEmptyAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8a2fff750482947ccbdbf9ce3064c428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Attribute&lt; T &gt; *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afa602255ad19494e8264f7fb73070493</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0dea3e94303deea91633301813553676</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeTo</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8154e6434ceeb36ca5e74fef15859353</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFrom</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6e9845cdedf2a238a212bbcd8a863e72</anchor>
      <arglist>(QDomElement &amp;element, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeToBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6ae9b22082cb5bf29859645dd6ac6d4a</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFromBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a481ee3acac8605b1e683c1231f25e2bc</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>CreateAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a4356799119ea6ecae4b6dfc6b091bddb</anchor>
      <arglist>(u8 index, u32 typeID, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2f8b15aa5edcdaac2f32c5959c5d88dc</anchor>
      <arglist>(u8 index, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a62dfbeca452e6449c233a570cf059225</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QDomElement</type>
      <name>BeginSerialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7172dbdf2339ddbbc3c5652be8968ed3</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a844ec4ff1dec75cbbb7d8ff03ca61b01</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aad61f20527eed870c9f635e20bf5c688</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value, const QString &amp;type) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>BeginDeserialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3fef3969ebb919048bf57d3db05b48d7</anchor>
      <arglist>(QDomElement &amp;compElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7fd2354c177222bfdad3d9f8bbf4f051</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttributeType</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a5b0ecd40b4da8fb8d6794b2cf31ce4c9</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>af5a186f31936694254018f2c720256c7</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a96113e4d61805b085f4b0d6d36135391</anchor>
      <arglist>(IAttribute *attr, u8 index)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>component_id_t</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a946596d66e1667003eafab6ddb6f141b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Entity *</type>
      <name>parentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3761c0afda2f60e0b3acc44d8162b907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AttributeVector</type>
      <name>attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae0bfd9389533b6a178d0876b1174102f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae04ef3ddf6acb549b696b339c933c274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>temporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7a013d9fbc921cc6ea882e039794baa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>textureName</name>
      <anchorfile>class_e_c___rtt_target.html</anchorfile>
      <anchor>a202934f0ee622fbf4c928fe031a1e1a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>width</name>
      <anchorfile>class_e_c___rtt_target.html</anchorfile>
      <anchor>ae909a65f043f27fe1def709d6d093a21</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>height</name>
      <anchorfile>class_e_c___rtt_target.html</anchorfile>
      <anchor>ab8c8ceb9255bff2d98b590e2ae7c486d</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa63d1d694b058775a2458c45e68d856b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a134821f6bcf1ea6408a3a72c7f4dfa1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>replicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf5b7cfc104657f2795c8b0b237089eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>local</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a95ade3d0915b7224d56cd34a4e308cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AttributeChange::Type</type>
      <name>updateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a75b46dc1d972b1f10c17d8521aabf3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a418e735d210d40d2551b21a04f1cdde9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>unacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab5194d9724dc21842582abaa47ec4f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>networkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0d221fecdcf0c6b3ec731936d3c43fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnAttributeUpdated</name>
      <anchorfile>class_e_c___rtt_target.html</anchorfile>
      <anchor>a6ba4f091adffb6ab52a1d9266254797a</anchor>
      <arglist>(IAttribute *attribute)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>material_name_</name>
      <anchorfile>class_e_c___rtt_target.html</anchorfile>
      <anchor>aae218d339ea72d4eaaceb70cca11c03c</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>::IAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aea94a77a3151b94a6e695e5e5632cff8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EC_SelectionBox</name>
    <filename>class_e_c___selection_box.html</filename>
    <base>IComponent</base>
    <member kind="slot">
      <type>void</type>
      <name>SetBoundingBox</name>
      <anchorfile>class_e_c___selection_box.html</anchorfile>
      <anchor>a7e954c6c7ac7044d5f93295c92b37e39</anchor>
      <arglist>(QRect &amp;view)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Show</name>
      <anchorfile>class_e_c___selection_box.html</anchorfile>
      <anchor>a534fb254400d59d1c8105053b9a70984</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Hide</name>
      <anchorfile>class_e_c___selection_box.html</anchorfile>
      <anchor>ab3fcf2d6f1ed8e5ef3752cd7bb1be8a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3a676adf2171375d6a6d782edd11f8cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a37b5449bdd8f88a07390204b6db24a80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsLocal</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7db6ec7dcedff369978dc05c114c3c91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsUnacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9f03346fe17c944a68a8388765d270c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetNetworkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a552391127e461b25b9d1d82028bae538</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetUpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a71f8f6bdee9d3f5774e2c0fd40e0b705</anchor>
      <arglist>(AttributeChange::Type defaultmode)</arglist>
    </member>
    <member kind="slot">
      <type>AttributeChange::Type</type>
      <name>UpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab9fe0648d176468ad31690c9fe34663b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>component_id_t</type>
      <name>Id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a63fd758d1042c37b180b0521408794bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2fdd3bc81ee6586e78cae212063185f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumStaticAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ad73dac34801dde16fd02332ff9e04aae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa5562b35074886469279334adf943e42</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>abd191432824f4b1c6c0deb46af886d98</anchor>
      <arglist>(const QString &amp;attributeName, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ComponentChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a35070b168681bf5600b08b4422cb2cea</anchor>
      <arglist>(AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>Entity *</type>
      <name>ParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9e79fda037aff4c3678d9d962e78d9ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Scene *</type>
      <name>ParentScene</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac56fb67cf293f9a4228fb1b4b5aaa1d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf71fe4c9b2c636b28c8db8584acacaf</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e87391a508d5bc41f21ddc2051498a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>ViewEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7c9a41bff7f966ac13575b7dc7d598d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>GetAttributeQVariant</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab824c2fa3bb625208160c5cebf38d86a</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetAttributeNames</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa6e0b51556f8cbb31bdddbb0d10efd7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a831b035648a3ec54c47991f61352b76f</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentNameChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac628c437220fc88961842fa412119940</anchor>
      <arglist>(const QString &amp;newName, const QString &amp;oldName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntitySet</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a1c0064bad72118e77f6896ad99929129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntityDetached</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e2ed82d9dc9a91f1347c3fbdf6ee305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAdded</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a81284243581f53c55f5817f5963665dc</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAboutToBeRemoved</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>adffe0688eddd4f05201376f3c3d75f2c</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EC_SelectionBox</name>
      <anchorfile>class_e_c___selection_box.html</anchorfile>
      <anchor>a4fe1f36fb73ac636862dfd181aeb15b6</anchor>
      <arglist>(Scene *scene)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EC_SelectionBox</name>
      <anchorfile>class_e_c___selection_box.html</anchorfile>
      <anchor>a3875e740ef9e7769f6d6a358db411c30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const QString &amp;</type>
      <name>TypeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a156d0e2583be2efaa99c441458f1db9d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual u32</type>
      <name>TypeId</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8627793238d67e1753c5b810c5051cbd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a58f42567395c5341d2e1fd97fe7f804d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa8064a536ed194201bf0189ece40de8d</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afeedd4000926fdd03993f948b7e31913</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="function">
      <type>const AttributeVector &amp;</type>
      <name>Attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a89a8bab524c7fcfef61ce856e7b4d076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AttributeVector</type>
      <name>NonEmptyAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8a2fff750482947ccbdbf9ce3064c428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Attribute&lt; T &gt; *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afa602255ad19494e8264f7fb73070493</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0dea3e94303deea91633301813553676</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeTo</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8154e6434ceeb36ca5e74fef15859353</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFrom</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6e9845cdedf2a238a212bbcd8a863e72</anchor>
      <arglist>(QDomElement &amp;element, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeToBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6ae9b22082cb5bf29859645dd6ac6d4a</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFromBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a481ee3acac8605b1e683c1231f25e2bc</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>CreateAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a4356799119ea6ecae4b6dfc6b091bddb</anchor>
      <arglist>(u8 index, u32 typeID, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2f8b15aa5edcdaac2f32c5959c5d88dc</anchor>
      <arglist>(u8 index, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a62dfbeca452e6449c233a570cf059225</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QDomElement</type>
      <name>BeginSerialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7172dbdf2339ddbbc3c5652be8968ed3</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a844ec4ff1dec75cbbb7d8ff03ca61b01</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aad61f20527eed870c9f635e20bf5c688</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value, const QString &amp;type) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>BeginDeserialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3fef3969ebb919048bf57d3db05b48d7</anchor>
      <arglist>(QDomElement &amp;compElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7fd2354c177222bfdad3d9f8bbf4f051</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttributeType</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a5b0ecd40b4da8fb8d6794b2cf31ce4c9</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>af5a186f31936694254018f2c720256c7</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a96113e4d61805b085f4b0d6d36135391</anchor>
      <arglist>(IAttribute *attr, u8 index)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>component_id_t</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a946596d66e1667003eafab6ddb6f141b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Entity *</type>
      <name>parentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3761c0afda2f60e0b3acc44d8162b907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AttributeVector</type>
      <name>attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae0bfd9389533b6a178d0876b1174102f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae04ef3ddf6acb549b696b339c933c274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>temporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7a013d9fbc921cc6ea882e039794baa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa63d1d694b058775a2458c45e68d856b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a134821f6bcf1ea6408a3a72c7f4dfa1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>replicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf5b7cfc104657f2795c8b0b237089eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>local</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a95ade3d0915b7224d56cd34a4e308cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AttributeChange::Type</type>
      <name>updateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a75b46dc1d972b1f10c17d8521aabf3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a418e735d210d40d2551b21a04f1cdde9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>unacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab5194d9724dc21842582abaa47ec4f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>networkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0d221fecdcf0c6b3ec731936d3c43fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::ManualObject *</type>
      <name>selectionBox_</name>
      <anchorfile>class_e_c___selection_box.html</anchorfile>
      <anchor>ab238ecafb7acfb365261927f6cdf9dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>OgreWorldWeakPtr</type>
      <name>world_</name>
      <anchorfile>class_e_c___selection_box.html</anchorfile>
      <anchor>a0ec546990b903b672daf89ea11523635</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>::IAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aea94a77a3151b94a6e695e5e5632cff8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EC_Sky</name>
    <filename>class_e_c___sky.html</filename>
    <base>IComponent</base>
    <member kind="slot">
      <type>void</type>
      <name>OnAttributeUpdated</name>
      <anchorfile>class_e_c___sky.html</anchorfile>
      <anchor>a4f4ba231a54a1b4af35faf141afda78f</anchor>
      <arglist>(IAttribute *attribute)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>DisableSky</name>
      <anchorfile>class_e_c___sky.html</anchorfile>
      <anchor>a01dcfe2786df694e8f38de3647c9343d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>OnTextureAssetLoaded</name>
      <anchorfile>class_e_c___sky.html</anchorfile>
      <anchor>a8ea97227e9c7d0bec7fd5fa0722e07a0</anchor>
      <arglist>(AssetPtr tex)</arglist>
    </member>
    <member kind="slot">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3a676adf2171375d6a6d782edd11f8cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a37b5449bdd8f88a07390204b6db24a80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsLocal</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7db6ec7dcedff369978dc05c114c3c91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsUnacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9f03346fe17c944a68a8388765d270c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetNetworkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a552391127e461b25b9d1d82028bae538</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetUpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a71f8f6bdee9d3f5774e2c0fd40e0b705</anchor>
      <arglist>(AttributeChange::Type defaultmode)</arglist>
    </member>
    <member kind="slot">
      <type>AttributeChange::Type</type>
      <name>UpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab9fe0648d176468ad31690c9fe34663b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>component_id_t</type>
      <name>Id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a63fd758d1042c37b180b0521408794bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2fdd3bc81ee6586e78cae212063185f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumStaticAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ad73dac34801dde16fd02332ff9e04aae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa5562b35074886469279334adf943e42</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>abd191432824f4b1c6c0deb46af886d98</anchor>
      <arglist>(const QString &amp;attributeName, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ComponentChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a35070b168681bf5600b08b4422cb2cea</anchor>
      <arglist>(AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>Entity *</type>
      <name>ParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9e79fda037aff4c3678d9d962e78d9ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Scene *</type>
      <name>ParentScene</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac56fb67cf293f9a4228fb1b4b5aaa1d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf71fe4c9b2c636b28c8db8584acacaf</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e87391a508d5bc41f21ddc2051498a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>ViewEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7c9a41bff7f966ac13575b7dc7d598d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>GetAttributeQVariant</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab824c2fa3bb625208160c5cebf38d86a</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetAttributeNames</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa6e0b51556f8cbb31bdddbb0d10efd7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a831b035648a3ec54c47991f61352b76f</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentNameChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac628c437220fc88961842fa412119940</anchor>
      <arglist>(const QString &amp;newName, const QString &amp;oldName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntitySet</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a1c0064bad72118e77f6896ad99929129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntityDetached</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e2ed82d9dc9a91f1347c3fbdf6ee305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAdded</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a81284243581f53c55f5817f5963665dc</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAboutToBeRemoved</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>adffe0688eddd4f05201376f3c3d75f2c</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EC_Sky</name>
      <anchorfile>class_e_c___sky.html</anchorfile>
      <anchor>abf8a747a0a48582c6e97870208cf58d7</anchor>
      <arglist>(Scene *scene)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EC_Sky</name>
      <anchorfile>class_e_c___sky.html</anchorfile>
      <anchor>a2046fbb223e4a2a7989f17f0af0c6325</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___sky.html</anchorfile>
      <anchor>acd32e90c152ab34c023e3ba0843151d8</anchor>
      <arglist>(AssetReference, materialRef)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___sky.html</anchorfile>
      <anchor>a70d53d22aa1d8837bcdaac510a12aac1</anchor>
      <arglist>(AssetReferenceList, textureRefs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___sky.html</anchorfile>
      <anchor>a8e825ea2a1efcadc315a19f8d52f4e42</anchor>
      <arglist>(float, distance)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___sky.html</anchorfile>
      <anchor>aba3a428811a32bbc41ff81d2d61f9e01</anchor>
      <arglist>(Quat, orientation)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___sky.html</anchorfile>
      <anchor>a93eccb98ac8c76fcc64a421f821670ec</anchor>
      <arglist>(bool, drawFirst)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const QString &amp;</type>
      <name>TypeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a156d0e2583be2efaa99c441458f1db9d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual u32</type>
      <name>TypeId</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8627793238d67e1753c5b810c5051cbd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a58f42567395c5341d2e1fd97fe7f804d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa8064a536ed194201bf0189ece40de8d</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afeedd4000926fdd03993f948b7e31913</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="function">
      <type>const AttributeVector &amp;</type>
      <name>Attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a89a8bab524c7fcfef61ce856e7b4d076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AttributeVector</type>
      <name>NonEmptyAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8a2fff750482947ccbdbf9ce3064c428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Attribute&lt; T &gt; *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afa602255ad19494e8264f7fb73070493</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0dea3e94303deea91633301813553676</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeTo</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8154e6434ceeb36ca5e74fef15859353</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFrom</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6e9845cdedf2a238a212bbcd8a863e72</anchor>
      <arglist>(QDomElement &amp;element, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeToBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6ae9b22082cb5bf29859645dd6ac6d4a</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFromBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a481ee3acac8605b1e683c1231f25e2bc</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>CreateAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a4356799119ea6ecae4b6dfc6b091bddb</anchor>
      <arglist>(u8 index, u32 typeID, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2f8b15aa5edcdaac2f32c5959c5d88dc</anchor>
      <arglist>(u8 index, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a62dfbeca452e6449c233a570cf059225</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QDomElement</type>
      <name>BeginSerialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7172dbdf2339ddbbc3c5652be8968ed3</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a844ec4ff1dec75cbbb7d8ff03ca61b01</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aad61f20527eed870c9f635e20bf5c688</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value, const QString &amp;type) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>BeginDeserialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3fef3969ebb919048bf57d3db05b48d7</anchor>
      <arglist>(QDomElement &amp;compElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7fd2354c177222bfdad3d9f8bbf4f051</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttributeType</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a5b0ecd40b4da8fb8d6794b2cf31ce4c9</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>af5a186f31936694254018f2c720256c7</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a96113e4d61805b085f4b0d6d36135391</anchor>
      <arglist>(IAttribute *attr, u8 index)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>component_id_t</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a946596d66e1667003eafab6ddb6f141b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Entity *</type>
      <name>parentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3761c0afda2f60e0b3acc44d8162b907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AttributeVector</type>
      <name>attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae0bfd9389533b6a178d0876b1174102f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae04ef3ddf6acb549b696b339c933c274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>temporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7a013d9fbc921cc6ea882e039794baa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AssetReference</type>
      <name>materialRef</name>
      <anchorfile>class_e_c___sky.html</anchorfile>
      <anchor>a77c50756385d6b0cfb39249a51d927eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AssetReferenceList</type>
      <name>textureRefs</name>
      <anchorfile>class_e_c___sky.html</anchorfile>
      <anchor>a8ae86ca7797e30a148c48892b037d801</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>distance</name>
      <anchorfile>class_e_c___sky.html</anchorfile>
      <anchor>a158dd4917bbf68c705ae5ac041934ed2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>Quat</type>
      <name>orientation</name>
      <anchorfile>class_e_c___sky.html</anchorfile>
      <anchor>a85d826bd426f4881b2edec1c5c183bce</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>drawFirst</name>
      <anchorfile>class_e_c___sky.html</anchorfile>
      <anchor>a2b59601ebef2c12213a705403bb26d9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa63d1d694b058775a2458c45e68d856b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a134821f6bcf1ea6408a3a72c7f4dfa1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>replicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf5b7cfc104657f2795c8b0b237089eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>local</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a95ade3d0915b7224d56cd34a4e308cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AttributeChange::Type</type>
      <name>updateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a75b46dc1d972b1f10c17d8521aabf3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a418e735d210d40d2551b21a04f1cdde9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>unacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab5194d9724dc21842582abaa47ec4f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>networkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0d221fecdcf0c6b3ec731936d3c43fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CreateSky</name>
      <anchorfile>class_e_c___sky.html</anchorfile>
      <anchor>a775be8bd3d4a68418dafcf19a634ffdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetTextures</name>
      <anchorfile>class_e_c___sky.html</anchorfile>
      <anchor>ad5171b6eb7f0e24314397e4a2fae8d5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QString</type>
      <name>lastMaterial_</name>
      <anchorfile>class_e_c___sky.html</anchorfile>
      <anchor>a2cbfd7638270ae20f33a3afed0a0d72a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>float</type>
      <name>lastDistance_</name>
      <anchorfile>class_e_c___sky.html</anchorfile>
      <anchor>a2a788b4c99e7f32e7bbed0d48d82fbce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>lastDrawFirst_</name>
      <anchorfile>class_e_c___sky.html</anchorfile>
      <anchor>a79f31f654db79088436a4a5c3518f7f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Quat</type>
      <name>lastOrientation_</name>
      <anchorfile>class_e_c___sky.html</anchorfile>
      <anchor>abc29f834a90be673ce04f876211f994f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>OgreWorldWeakPtr</type>
      <name>world_</name>
      <anchorfile>class_e_c___sky.html</anchorfile>
      <anchor>a6bafe1db1005ba3ebdcccee622e01511</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; AssetRefListenerPtr &gt;</type>
      <name>textureAssets</name>
      <anchorfile>class_e_c___sky.html</anchorfile>
      <anchor>ae8e9cc76760382da835499f34bf96fb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>::IAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aea94a77a3151b94a6e695e5e5632cff8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EC_Terrain</name>
    <filename>class_e_c___terrain.html</filename>
    <base>IComponent</base>
    <class kind="struct">EC_Terrain::Patch</class>
    <member kind="slot">
      <type>bool</type>
      <name>PatchExists</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a05520e23c9737c4067c6c3cea8b755b8</anchor>
      <arglist>(int patchX, int patchY) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>AllPatchesLoaded</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a469123b05728776a63fe17617884d6a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>float</type>
      <name>GetPoint</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a775df85f20e42392dc01265a027870f6</anchor>
      <arglist>(int x, int y) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetPointHeight</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a85a44c65dd6c15282aa54c5b5257fd9b</anchor>
      <arglist>(int x, int y, float height)</arglist>
    </member>
    <member kind="slot">
      <type>float3</type>
      <name>GetPointOnMap</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a13f081addb1419bae6e5817e1f1ab624</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="slot">
      <type>float3</type>
      <name>GetPointOnMapLocal</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a4f89c21ef293217b7cda4eb213180fd0</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="slot">
      <type>float</type>
      <name>GetDistanceToTerrain</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>aba9fd16920c41ca1fb119d2560a3f1d4</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsOnTopOfMap</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a4deb5f43593b32d5c766df39d6ddf38d</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="slot">
      <type>float</type>
      <name>GetInterpolatedHeightValue</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a46b0ef60b76e9cf509749db2de999ea8</anchor>
      <arglist>(float x, float y) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>GetTriangleNormals</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>ad12d3b627ac7eb92ab2f2e319462f3ec</anchor>
      <arglist>(float x, float y, float3 &amp;n1, float3 &amp;n2, float3 &amp;n3, float &amp;u, float &amp;v) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>GetTriangleVertices</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a3462d1aa4e2c2a1bc9bcb6a90fa63ea0</anchor>
      <arglist>(float x, float y, float3 &amp;v1, float3 &amp;v2, float3 &amp;v3, float &amp;u, float &amp;v) const </arglist>
    </member>
    <member kind="slot">
      <type>float3</type>
      <name>GetPlaneNormal</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a61a6ce0308ad8fabf55caa96b830d26c</anchor>
      <arglist>(float x, float y) const </arglist>
    </member>
    <member kind="slot">
      <type>float3</type>
      <name>GetInterpolatedNormal</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a4c14d4672b6d13120962d64c7117f6db</anchor>
      <arglist>(float x, float y) const </arglist>
    </member>
    <member kind="slot">
      <type>float3</type>
      <name>GetTerrainRotationAngles</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>ae25c712c03a0907bfcb58e617cdb0cd6</anchor>
      <arglist>(float x, float y, float z, const float3 &amp;direction) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Destroy</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>ace6b6f5dba06b56701110797e8e942b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>DestroyPatch</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a604899da24541e603c51869923f5c5a2</anchor>
      <arglist>(int patchX, int patchY)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>MakePatchFlat</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a09db76963f2cd7456022ac585b80084d</anchor>
      <arglist>(int patchX, int patchY, float heightValue)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>MakeTerrainFlat</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a9e59b91a0cb148b49d5affd42421eabc</anchor>
      <arglist>(float heightValue)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>AffineTransform</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>adbe94ba19fbcb875637b8db93866dc38</anchor>
      <arglist>(float scale, float offset)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemapHeightValues</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a6d2b9d974804f3df6d039f1af1f593be</anchor>
      <arglist>(float minHeight, float maxHeight)</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>PatchWidth</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a3cdb6e09650ec3ef39b17304fbc279fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>PatchHeight</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a48dc57fe26b6698f45aa3ffbf1727f7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>VerticesWidth</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a1f7c7105b0e4dd03f57ed198b360aef7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>VerticesHeight</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a565eb22b9818172e0e6392cc39c03658</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SaveToFile</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>adce6c9bf990ae46bd75a4a39db2e8e58</anchor>
      <arglist>(QString filename)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>LoadFromFile</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a16a3b0ed767c890056a0238b3ef6f24c</anchor>
      <arglist>(QString filename)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>LoadFromDataInMemory</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a5c624ddd9a69f09201c7c233f907ec95</anchor>
      <arglist>(const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>NormalizeImage</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a7696dcf0f40c3755a1ce048fd1c4c3b9</anchor>
      <arglist>(QString filename) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>LoadFromImageFile</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a8918423596f84f74f7061493b9a9a5da</anchor>
      <arglist>(QString filename, float offset, float scale)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SaveToImageFile</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a4156749496a99c2f1d46d667487080c7</anchor>
      <arglist>(QString filename, float minHeight=-1e9f, float maxHeight=1e9f)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>GenerateFromOgreMesh</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a2aa44cf6be133fb5187c765cee6f9056</anchor>
      <arglist>(QString ogreMeshResourceName)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>GenerateFromOgreMesh</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a869d1ff721478f9a2568824d3bab2cbf</anchor>
      <arglist>(QString ogreMeshResourceName, const Ogre::Matrix4 &amp;transform)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>GenerateFromSceneEntity</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>afaa19b23f20808254be33ed4a3056688</anchor>
      <arglist>(QString entityName)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>DirtyAllTerrainPatches</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a699cae37ca3844ec18b205b332c98992</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RegenerateDirtyTerrainPatches</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>af31224bca6896ef8d573b1c4174eec16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>float</type>
      <name>GetTerrainMinHeight</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a3e878eff09eeb3797145127f53e42e84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>float</type>
      <name>GetTerrainMaxHeight</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a3dc3ac66a44afb44aaa9462e840fae1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3a676adf2171375d6a6d782edd11f8cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a37b5449bdd8f88a07390204b6db24a80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsLocal</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7db6ec7dcedff369978dc05c114c3c91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsUnacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9f03346fe17c944a68a8388765d270c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetNetworkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a552391127e461b25b9d1d82028bae538</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetUpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a71f8f6bdee9d3f5774e2c0fd40e0b705</anchor>
      <arglist>(AttributeChange::Type defaultmode)</arglist>
    </member>
    <member kind="slot">
      <type>AttributeChange::Type</type>
      <name>UpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab9fe0648d176468ad31690c9fe34663b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>component_id_t</type>
      <name>Id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a63fd758d1042c37b180b0521408794bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2fdd3bc81ee6586e78cae212063185f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumStaticAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ad73dac34801dde16fd02332ff9e04aae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa5562b35074886469279334adf943e42</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>abd191432824f4b1c6c0deb46af886d98</anchor>
      <arglist>(const QString &amp;attributeName, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ComponentChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a35070b168681bf5600b08b4422cb2cea</anchor>
      <arglist>(AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>Entity *</type>
      <name>ParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9e79fda037aff4c3678d9d962e78d9ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Scene *</type>
      <name>ParentScene</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac56fb67cf293f9a4228fb1b4b5aaa1d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf71fe4c9b2c636b28c8db8584acacaf</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e87391a508d5bc41f21ddc2051498a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>ViewEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7c9a41bff7f966ac13575b7dc7d598d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>GetAttributeQVariant</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab824c2fa3bb625208160c5cebf38d86a</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetAttributeNames</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa6e0b51556f8cbb31bdddbb0d10efd7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>TerrainRegenerated</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a0747c70f603b426e62fe7932ba530d7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a831b035648a3ec54c47991f61352b76f</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentNameChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac628c437220fc88961842fa412119940</anchor>
      <arglist>(const QString &amp;newName, const QString &amp;oldName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntitySet</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a1c0064bad72118e77f6896ad99929129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntityDetached</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e2ed82d9dc9a91f1347c3fbdf6ee305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAdded</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a81284243581f53c55f5817f5963665dc</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAboutToBeRemoved</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>adffe0688eddd4f05201376f3c3d75f2c</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EC_Terrain</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a1257a05c6b4c1873388b4672f20ca9ff</anchor>
      <arglist>(Scene *scene)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EC_Terrain</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a5c5b230a105239c3efc35824b336e8cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a26f2ed1aba19b170f44db35687b13833</anchor>
      <arglist>(Transform, nodeTransformation)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>ae8389abe59135e9cd92af1eeac19c2cb</anchor>
      <arglist>(int, xPatches)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>abd3c0965807fdc7f2de36b889f639071</anchor>
      <arglist>(int, yPatches)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>ae05a6558d7af9a52526aa7d6aaf798e9</anchor>
      <arglist>(float, uScale)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>aa1abe38d73fe5c1b567e9509ddaaf89c</anchor>
      <arglist>(float, vScale)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a68f9cfe370ffdb6833292b8bc86ad104</anchor>
      <arglist>(AssetReference, material)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a23a930458e8c4549173666e990a1018c</anchor>
      <arglist>(AssetReference, texture0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>ae413e21d8a381507a262b3a98f55be42</anchor>
      <arglist>(AssetReference, texture1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a94c209c3596afe87de220abfee2908e0</anchor>
      <arglist>(AssetReference, texture2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>aed95fd581db46e8a440609c9485d1cd3</anchor>
      <arglist>(AssetReference, texture3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>aa72bf2b94f13b21cdae633c1a1fc01af</anchor>
      <arglist>(AssetReference, texture4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>aa5424c72c32ed27c0759c5a2076dbc1e</anchor>
      <arglist>(AssetReference, heightMap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetTerrainHeightRange</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a11e7f8437ec3c1034f4e3c9ca3871407</anchor>
      <arglist>(float &amp;minHeight, float &amp;maxHeight) const </arglist>
    </member>
    <member kind="function">
      <type>Patch &amp;</type>
      <name>GetPatch</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a4538dc4f43d6794005bab8bf0190ef49</anchor>
      <arglist>(int patchX, int patchY)</arglist>
    </member>
    <member kind="function">
      <type>const Patch &amp;</type>
      <name>GetPatch</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a8543dbacd033de5acc0e0eebe02a0b08</anchor>
      <arglist>(int patchX, int patchY) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>CalculateNormal</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a8bd200ce4a6840a5e32877bd9ff95f04</anchor>
      <arglist>(int x, int y, int xinside, int yinside) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>CalculateNormal</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>ab37e3551d38887561763ddad766c307f</anchor>
      <arglist>(int mapX, int mapY) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const QString &amp;</type>
      <name>TypeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a156d0e2583be2efaa99c441458f1db9d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual u32</type>
      <name>TypeId</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8627793238d67e1753c5b810c5051cbd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a58f42567395c5341d2e1fd97fe7f804d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa8064a536ed194201bf0189ece40de8d</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afeedd4000926fdd03993f948b7e31913</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="function">
      <type>const AttributeVector &amp;</type>
      <name>Attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a89a8bab524c7fcfef61ce856e7b4d076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AttributeVector</type>
      <name>NonEmptyAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8a2fff750482947ccbdbf9ce3064c428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Attribute&lt; T &gt; *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afa602255ad19494e8264f7fb73070493</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0dea3e94303deea91633301813553676</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeTo</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8154e6434ceeb36ca5e74fef15859353</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFrom</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6e9845cdedf2a238a212bbcd8a863e72</anchor>
      <arglist>(QDomElement &amp;element, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeToBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6ae9b22082cb5bf29859645dd6ac6d4a</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFromBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a481ee3acac8605b1e683c1231f25e2bc</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>CreateAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a4356799119ea6ecae4b6dfc6b091bddb</anchor>
      <arglist>(u8 index, u32 typeID, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2f8b15aa5edcdaac2f32c5959c5d88dc</anchor>
      <arglist>(u8 index, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a62dfbeca452e6449c233a570cf059225</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QDomElement</type>
      <name>BeginSerialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7172dbdf2339ddbbc3c5652be8968ed3</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a844ec4ff1dec75cbbb7d8ff03ca61b01</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aad61f20527eed870c9f635e20bf5c688</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value, const QString &amp;type) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>BeginDeserialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3fef3969ebb919048bf57d3db05b48d7</anchor>
      <arglist>(QDomElement &amp;compElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7fd2354c177222bfdad3d9f8bbf4f051</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttributeType</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a5b0ecd40b4da8fb8d6794b2cf31ce4c9</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>af5a186f31936694254018f2c720256c7</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a96113e4d61805b085f4b0d6d36135391</anchor>
      <arglist>(IAttribute *attr, u8 index)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>component_id_t</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a946596d66e1667003eafab6ddb6f141b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Entity *</type>
      <name>parentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3761c0afda2f60e0b3acc44d8162b907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AttributeVector</type>
      <name>attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae0bfd9389533b6a178d0876b1174102f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae04ef3ddf6acb549b696b339c933c274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>temporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7a013d9fbc921cc6ea882e039794baa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>Transform</type>
      <name>nodeTransformation</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a1aedc26402667b278ef233045ca8d16a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>xPatches</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a7bc123bdf8c8e409acaac899f803cbef</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>yPatches</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>ad35ae482a0ef8027927a2615f7e3355b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>uScale</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a0a2676b53574ae6a1bd3c3ffb8b04183</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>vScale</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a21549ce34c9a7823ca511b3cc634cd36</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AssetReference</type>
      <name>material</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a0f0d795a17e80d703a1b3d1dc0390b6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AssetReference</type>
      <name>texture0</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a55ba0268ef5ff62e40fa1870d584a992</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AssetReference</type>
      <name>texture1</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a49328f6c41ecdb9ed0e2a93eb04b7a8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AssetReference</type>
      <name>texture2</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>ab0aa805c0dfae603bd62d01120f5e973</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AssetReference</type>
      <name>texture3</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a8fd0bea4796f373e67d7491de500f2be</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AssetReference</type>
      <name>texture4</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>af52e0e4f2b021b91299ebbb4cef29abb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AssetReference</type>
      <name>heightMap</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a74fe15d50cb9ab2da172b1a4c73e0052</anchor>
      <arglist></arglist>
    </member>
    <member kind="property" static="yes">
      <type>static const int</type>
      <name>cPatchSize</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a331534530265ce584d5dff61d5958a04</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa63d1d694b058775a2458c45e68d856b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a134821f6bcf1ea6408a3a72c7f4dfa1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>replicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf5b7cfc104657f2795c8b0b237089eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>local</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a95ade3d0915b7224d56cd34a4e308cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AttributeChange::Type</type>
      <name>updateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a75b46dc1d972b1f10c17d8521aabf3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a418e735d210d40d2551b21a04f1cdde9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>unacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab5194d9724dc21842582abaa47ec4f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>networkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0d221fecdcf0c6b3ec731936d3c43fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>UpdateSignals</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a57219feed152e184dca0c6b7c8eec811</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnAttributeUpdated</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a091a1cea60c2bc4343b812697e969cb2</anchor>
      <arglist>(IAttribute *attribute)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>MaterialAssetLoaded</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a2adfe12f455dbf4d7a56a23a0dd70176</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>TextureAssetLoaded</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>adf4a87a28de849cde01a86eca9611ef4</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>TerrainAssetLoaded</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a76c5ae5fdc7cc7d8eb3d83bbf05b89dc</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>AttachTerrainRootNode</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a33119e9028ed0864c022a540311d24aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CreateRootNode</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a7b581674d32bbd133bfec1c9a97fe4ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CreateOgreTerrainPatchNode</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a2eeba50652de37badd32f19719131209</anchor>
      <arglist>(Ogre::SceneNode *&amp;node, int patchX, int patchY)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>UpdateTerrainPatchMaterial</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a55bd3826ddb7bc2496df5ecf8473963c</anchor>
      <arglist>(int patchX, int patchY)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>UpdateRootNodeTransform</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a8291ccb93d61df0bb2899f3b7bd692c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ResizeTerrain</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a0484df9f3bcc317cadeb61541746a86f</anchor>
      <arglist>(int newPatchWidth, int newPatchHeight)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetTerrainMaterialTexture</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>ac0d5a9fe060248f48b1bccaaaa5dbf7d</anchor>
      <arglist>(int index, const char *textureName)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>GenerateTerrainGeometryForOnePatch</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>aa35d503ce613958f0a964ce48571f970</anchor>
      <arglist>(int patchX, int patchY)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::shared_ptr&lt; AssetRefListener &gt;</type>
      <name>heightMapAsset</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a6fd13b26d3ffab8a10da3aaf68bfd043</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::SceneNode *</type>
      <name>rootNode</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a5c542fb126b27f14b5991ae93fc1873b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>patchWidth</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a3f2be2212de77accb76011ada4516b1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>patchHeight</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a9edba28ae4138e3153f8053e400a400d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QString</type>
      <name>currentHeightmapAssetSource</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>afac0388fb5b512e0657416dfaaefd551</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QString</type>
      <name>currentMaterial</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a73392e4a725dda3097a494799536a35d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Patch &gt;</type>
      <name>patches</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a921db77e3cbcaddc2055545793a848d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>OgreWorldWeakPtr</type>
      <name>world_</name>
      <anchorfile>class_e_c___terrain.html</anchorfile>
      <anchor>a0d5fa9689eaaf96e2ba498d640d9b8b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>::IAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aea94a77a3151b94a6e695e5e5632cff8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>EC_Terrain::Patch</name>
    <filename>struct_e_c___terrain_1_1_patch.html</filename>
    <member kind="function">
      <type></type>
      <name>Patch</name>
      <anchorfile>struct_e_c___terrain_1_1_patch.html</anchorfile>
      <anchor>aeefa3b50554fdefe5984c0a41ca44ce1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetHeightValue</name>
      <anchorfile>struct_e_c___terrain_1_1_patch.html</anchorfile>
      <anchor>a8c554609a093b1428f0a5aadf7eb9971</anchor>
      <arglist>(int x, int y) const </arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>x</name>
      <anchorfile>struct_e_c___terrain_1_1_patch.html</anchorfile>
      <anchor>ab18c362eebb4d711cd97e50a60a27d63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>y</name>
      <anchorfile>struct_e_c___terrain_1_1_patch.html</anchorfile>
      <anchor>a1941722e22a3df00cada835cfb6a0c3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; float &gt;</type>
      <name>heightData</name>
      <anchorfile>struct_e_c___terrain_1_1_patch.html</anchorfile>
      <anchor>abd274b6dec218fe0d4c712d9815babca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Ogre::SceneNode *</type>
      <name>node</name>
      <anchorfile>struct_e_c___terrain_1_1_patch.html</anchorfile>
      <anchor>a6eb3ddc78c73e1d8402db4e3396a411f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Ogre::Entity *</type>
      <name>entity</name>
      <anchorfile>struct_e_c___terrain_1_1_patch.html</anchorfile>
      <anchor>adaa4c9eb66ee8435c1511f475eb31e76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>meshGeometryName</name>
      <anchorfile>struct_e_c___terrain_1_1_patch.html</anchorfile>
      <anchor>a8e1c5a6419e1046b716f0ed931446724</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>patch_geometry_dirty</name>
      <anchorfile>struct_e_c___terrain_1_1_patch.html</anchorfile>
      <anchor>ab13f524829db58bf9153acaeaa65e803</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EC_VolumeTrigger</name>
    <filename>class_e_c___volume_trigger.html</filename>
    <base>IComponent</base>
    <member kind="slot">
      <type>QList&lt; EntityWeakPtr &gt;</type>
      <name>GetEntitiesInside</name>
      <anchorfile>class_e_c___volume_trigger.html</anchorfile>
      <anchor>a8541b1afa60683f5d59d822687294040</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>GetNumEntitiesInside</name>
      <anchorfile>class_e_c___volume_trigger.html</anchorfile>
      <anchor>af02dd757c935d09338fb9f394a6d7378</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Entity *</type>
      <name>GetEntityInside</name>
      <anchorfile>class_e_c___volume_trigger.html</anchorfile>
      <anchor>a837f3c77eac9491c1e939e3a651b63d8</anchor>
      <arglist>(int idx) const </arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetEntityNamesInside</name>
      <anchorfile>class_e_c___volume_trigger.html</anchorfile>
      <anchor>a18fecc65c876a03f173a0ae8cc92235a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>float</type>
      <name>GetEntityInsidePercent</name>
      <anchorfile>class_e_c___volume_trigger.html</anchorfile>
      <anchor>a5bb3bf9a53811249c5cbc19469129276</anchor>
      <arglist>(const Entity *entity) const </arglist>
    </member>
    <member kind="slot">
      <type>float</type>
      <name>GetEntityInsidePercentByName</name>
      <anchorfile>class_e_c___volume_trigger.html</anchorfile>
      <anchor>a59dc275eea6122deef9bd0316d87b05f</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsInterestingEntity</name>
      <anchorfile>class_e_c___volume_trigger.html</anchorfile>
      <anchor>abad773692533c348ed1e3d3575ccb3a3</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsPivotInside</name>
      <anchorfile>class_e_c___volume_trigger.html</anchorfile>
      <anchor>aafe4c6fab76a82899d6a27e2b8bb20d0</anchor>
      <arglist>(Entity *entity) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsInsideVolume</name>
      <anchorfile>class_e_c___volume_trigger.html</anchorfile>
      <anchor>aeb1084f2d4ebc0e817c081f1e48851e1</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="slot">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3a676adf2171375d6a6d782edd11f8cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a37b5449bdd8f88a07390204b6db24a80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsLocal</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7db6ec7dcedff369978dc05c114c3c91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsUnacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9f03346fe17c944a68a8388765d270c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetNetworkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a552391127e461b25b9d1d82028bae538</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetUpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a71f8f6bdee9d3f5774e2c0fd40e0b705</anchor>
      <arglist>(AttributeChange::Type defaultmode)</arglist>
    </member>
    <member kind="slot">
      <type>AttributeChange::Type</type>
      <name>UpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab9fe0648d176468ad31690c9fe34663b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>component_id_t</type>
      <name>Id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a63fd758d1042c37b180b0521408794bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2fdd3bc81ee6586e78cae212063185f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumStaticAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ad73dac34801dde16fd02332ff9e04aae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa5562b35074886469279334adf943e42</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>abd191432824f4b1c6c0deb46af886d98</anchor>
      <arglist>(const QString &amp;attributeName, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ComponentChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a35070b168681bf5600b08b4422cb2cea</anchor>
      <arglist>(AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>Entity *</type>
      <name>ParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9e79fda037aff4c3678d9d962e78d9ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Scene *</type>
      <name>ParentScene</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac56fb67cf293f9a4228fb1b4b5aaa1d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf71fe4c9b2c636b28c8db8584acacaf</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e87391a508d5bc41f21ddc2051498a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>ViewEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7c9a41bff7f966ac13575b7dc7d598d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>GetAttributeQVariant</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab824c2fa3bb625208160c5cebf38d86a</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetAttributeNames</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa6e0b51556f8cbb31bdddbb0d10efd7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>entityEnter</name>
      <anchorfile>class_e_c___volume_trigger.html</anchorfile>
      <anchor>a39961bc9dd67929fe755b57a2b8f52db</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>entityLeave</name>
      <anchorfile>class_e_c___volume_trigger.html</anchorfile>
      <anchor>a8171430e08e017233e7b318ed0b0c574</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a831b035648a3ec54c47991f61352b76f</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentNameChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac628c437220fc88961842fa412119940</anchor>
      <arglist>(const QString &amp;newName, const QString &amp;oldName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntitySet</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a1c0064bad72118e77f6896ad99929129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntityDetached</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e2ed82d9dc9a91f1347c3fbdf6ee305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAdded</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a81284243581f53c55f5817f5963665dc</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAboutToBeRemoved</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>adffe0688eddd4f05201376f3c3d75f2c</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EC_VolumeTrigger</name>
      <anchorfile>class_e_c___volume_trigger.html</anchorfile>
      <anchor>a2b1894d5eaab39ae40e96bdf66739b0b</anchor>
      <arglist>(Scene *scene)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EC_VolumeTrigger</name>
      <anchorfile>class_e_c___volume_trigger.html</anchorfile>
      <anchor>abe0ed0c0a36f66963650db0c5905c951</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___volume_trigger.html</anchorfile>
      <anchor>aa1745f7c5a2751efe3aa86bd4468f0fb</anchor>
      <arglist>(QVariantList, entities)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const QString &amp;</type>
      <name>TypeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a156d0e2583be2efaa99c441458f1db9d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual u32</type>
      <name>TypeId</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8627793238d67e1753c5b810c5051cbd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a58f42567395c5341d2e1fd97fe7f804d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa8064a536ed194201bf0189ece40de8d</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afeedd4000926fdd03993f948b7e31913</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="function">
      <type>const AttributeVector &amp;</type>
      <name>Attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a89a8bab524c7fcfef61ce856e7b4d076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AttributeVector</type>
      <name>NonEmptyAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8a2fff750482947ccbdbf9ce3064c428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Attribute&lt; T &gt; *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afa602255ad19494e8264f7fb73070493</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0dea3e94303deea91633301813553676</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeTo</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8154e6434ceeb36ca5e74fef15859353</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFrom</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6e9845cdedf2a238a212bbcd8a863e72</anchor>
      <arglist>(QDomElement &amp;element, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeToBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6ae9b22082cb5bf29859645dd6ac6d4a</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFromBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a481ee3acac8605b1e683c1231f25e2bc</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>CreateAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a4356799119ea6ecae4b6dfc6b091bddb</anchor>
      <arglist>(u8 index, u32 typeID, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2f8b15aa5edcdaac2f32c5959c5d88dc</anchor>
      <arglist>(u8 index, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a62dfbeca452e6449c233a570cf059225</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QDomElement</type>
      <name>BeginSerialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7172dbdf2339ddbbc3c5652be8968ed3</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a844ec4ff1dec75cbbb7d8ff03ca61b01</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aad61f20527eed870c9f635e20bf5c688</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value, const QString &amp;type) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>BeginDeserialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3fef3969ebb919048bf57d3db05b48d7</anchor>
      <arglist>(QDomElement &amp;compElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7fd2354c177222bfdad3d9f8bbf4f051</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttributeType</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a5b0ecd40b4da8fb8d6794b2cf31ce4c9</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>af5a186f31936694254018f2c720256c7</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a96113e4d61805b085f4b0d6d36135391</anchor>
      <arglist>(IAttribute *attr, u8 index)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>component_id_t</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a946596d66e1667003eafab6ddb6f141b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Entity *</type>
      <name>parentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3761c0afda2f60e0b3acc44d8162b907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AttributeVector</type>
      <name>attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae0bfd9389533b6a178d0876b1174102f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae04ef3ddf6acb549b696b339c933c274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>temporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7a013d9fbc921cc6ea882e039794baa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>byPivot</name>
      <anchorfile>class_e_c___volume_trigger.html</anchorfile>
      <anchor>acd5dc6ffdc4360a79cc7c12e030875ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QVariantList</type>
      <name>entities</name>
      <anchorfile>class_e_c___volume_trigger.html</anchorfile>
      <anchor>a375944ca424dba052fdb2aa72d01e9ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa63d1d694b058775a2458c45e68d856b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a134821f6bcf1ea6408a3a72c7f4dfa1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>replicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf5b7cfc104657f2795c8b0b237089eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>local</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a95ade3d0915b7224d56cd34a4e308cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AttributeChange::Type</type>
      <name>updateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a75b46dc1d972b1f10c17d8521aabf3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a418e735d210d40d2551b21a04f1cdde9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>unacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab5194d9724dc21842582abaa47ec4f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>networkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0d221fecdcf0c6b3ec731936d3c43fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnAttributeUpdated</name>
      <anchorfile>class_e_c___volume_trigger.html</anchorfile>
      <anchor>ad1b869d1c17348ed8d57ffc9a1bc608f</anchor>
      <arglist>(IAttribute *attribute)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>UpdateSignals</name>
      <anchorfile>class_e_c___volume_trigger.html</anchorfile>
      <anchor>a2e79f3b4687cfdd0b08e9e37babc8c9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>CheckForRigidBody</name>
      <anchorfile>class_e_c___volume_trigger.html</anchorfile>
      <anchor>a8ebe26f67e9bf745a875861952d11a57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnPhysicsUpdate</name>
      <anchorfile>class_e_c___volume_trigger.html</anchorfile>
      <anchor>ae79aea5b29e848df664b424cac086b72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnPhysicsCollision</name>
      <anchorfile>class_e_c___volume_trigger.html</anchorfile>
      <anchor>ac6d998ea88d5ea744476e6738aa1f30e</anchor>
      <arglist>(Entity *otherEntity, const float3 &amp;position, const float3 &amp;normal, float distance, float impulse, bool newCollision)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnEntityRemoved</name>
      <anchorfile>class_e_c___volume_trigger.html</anchorfile>
      <anchor>a6bf6f99001440e006bf08d4f8c878ad7</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::weak_ptr&lt; EC_RigidBody &gt;</type>
      <name>rigidbody_</name>
      <anchorfile>class_e_c___volume_trigger.html</anchorfile>
      <anchor>a9d3f5fdbf894966735671a1205b4dcc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QMap&lt; EntityWeakPtr, bool &gt;</type>
      <name>entities_</name>
      <anchorfile>class_e_c___volume_trigger.html</anchorfile>
      <anchor>a280eb190947a5a5995594f6ef3385ff1</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Physics::PhysicsWorld</name>
      <anchorfile>class_e_c___volume_trigger.html</anchorfile>
      <anchor>a2b7cb0604afd9986b01f08cbf01b7d11</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>::IAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aea94a77a3151b94a6e695e5e5632cff8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EC_WaterPlane</name>
    <filename>class_e_c___water_plane.html</filename>
    <base>IComponent</base>
    <member kind="slot">
      <type>bool</type>
      <name>IsCameraInsideWaterCube</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a5fe1ae1d887b14f2665a0f752fcd2e51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsPointInsideWaterCube</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>aab1eeebf109f114d7045fc76b734f21d</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="slot">
      <type>float3</type>
      <name>GetPointOnPlane</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a8d2b60e1dea9f7a85ad8240f2f0b6293</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="slot">
      <type>float</type>
      <name>GetDistanceToWaterPlane</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a1e2fa557641c43cb61ee09c17a96ec37</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsTopOrBelowWaterPlane</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a40c75657b1f537071952da954cdf60c0</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>CreateWaterPlane</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a4225748baea3d4a301105179850bde15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveWaterPlane</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a74f15104fca9658d559ee9e472d17a04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>AttachEntity</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a6da210449e58247c0d4d187ebf899866</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>DetachEntity</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a4272c9937ece28c163e9388749318440</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>OnAttributeUpdated</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a720b850ff37510f8ed3da05ff4f3491c</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetParent</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>ad8a6bc08db64021a2ba59ebe1293caee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ComponentRemoved</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a9f7681b8713f39909255d154c79e807a</anchor>
      <arglist>(IComponent *component, AttributeChange::Type type)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ComponentAdded</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a9397e48db0c010913b43f3d0f04d9ab3</anchor>
      <arglist>(IComponent *component, AttributeChange::Type type)</arglist>
    </member>
    <member kind="slot">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3a676adf2171375d6a6d782edd11f8cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a37b5449bdd8f88a07390204b6db24a80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsLocal</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7db6ec7dcedff369978dc05c114c3c91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsUnacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9f03346fe17c944a68a8388765d270c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetNetworkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a552391127e461b25b9d1d82028bae538</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetUpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a71f8f6bdee9d3f5774e2c0fd40e0b705</anchor>
      <arglist>(AttributeChange::Type defaultmode)</arglist>
    </member>
    <member kind="slot">
      <type>AttributeChange::Type</type>
      <name>UpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab9fe0648d176468ad31690c9fe34663b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>component_id_t</type>
      <name>Id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a63fd758d1042c37b180b0521408794bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2fdd3bc81ee6586e78cae212063185f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumStaticAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ad73dac34801dde16fd02332ff9e04aae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa5562b35074886469279334adf943e42</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>abd191432824f4b1c6c0deb46af886d98</anchor>
      <arglist>(const QString &amp;attributeName, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ComponentChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a35070b168681bf5600b08b4422cb2cea</anchor>
      <arglist>(AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>Entity *</type>
      <name>ParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9e79fda037aff4c3678d9d962e78d9ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Scene *</type>
      <name>ParentScene</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac56fb67cf293f9a4228fb1b4b5aaa1d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf71fe4c9b2c636b28c8db8584acacaf</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e87391a508d5bc41f21ddc2051498a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>ViewEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7c9a41bff7f966ac13575b7dc7d598d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>GetAttributeQVariant</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab824c2fa3bb625208160c5cebf38d86a</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetAttributeNames</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa6e0b51556f8cbb31bdddbb0d10efd7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a831b035648a3ec54c47991f61352b76f</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentNameChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac628c437220fc88961842fa412119940</anchor>
      <arglist>(const QString &amp;newName, const QString &amp;oldName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntitySet</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a1c0064bad72118e77f6896ad99929129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntityDetached</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e2ed82d9dc9a91f1347c3fbdf6ee305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAdded</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a81284243581f53c55f5817f5963665dc</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAboutToBeRemoved</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>adffe0688eddd4f05201376f3c3d75f2c</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EC_WaterPlane</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>ab569c6ae8f29d1c99e4b519a82dea1f3</anchor>
      <arglist>(Scene *scene)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EC_WaterPlane</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a1fbff1713cb30dd636ae79f6bed995a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a86b587b11709e2a5d9ca3cc12c47228a</anchor>
      <arglist>(int, xSize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a57ed8fc71bd3c4fcba42271149352074</anchor>
      <arglist>(int, ySize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>af295d3031808efebf5ae891a8850806b</anchor>
      <arglist>(int, depth)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a2438f8f29a0c413b7d44169614a53fe3</anchor>
      <arglist>(float3, position)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a53f3bf3534b9d82d8e56f4ba86c473f8</anchor>
      <arglist>(Quat, rotation)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a9491791e9d01eb60842f324774fc521f</anchor>
      <arglist>(float, scaleUfactor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>abe823d8ee3fa868bf6ea4e80a5d0f31d</anchor>
      <arglist>(float, scaleVfactor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>aa19d0c822d315056b247e64b9853c572</anchor>
      <arglist>(int, xSegments)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>abace59fcd6b3585ad6231b8b248e77c0</anchor>
      <arglist>(int, ySegments)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a9a996c5503199bd2d1a5fe79bdaec69e</anchor>
      <arglist>(QString, materialName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>ae6b7351aa19045ec76ed5078b8370ab4</anchor>
      <arglist>(AssetReference, materialRef)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>aea003b321cdac3fef911dd146593a3ed</anchor>
      <arglist>(Color, fogColor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a6b93a649cb13ca5d384ada730d53ee81</anchor>
      <arglist>(float, fogStartDistance)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>af1adc4e4ca474a03d13c531e13ec53d7</anchor>
      <arglist>(float, fogEndDistance)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_QPROPERTY_ATTRIBUTE</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a614be1b097780090c420dd802fb3e375</anchor>
      <arglist>(int, fogMode)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::ColourValue</type>
      <name>GetFogColorAsOgreValue</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>ab4199a8bd6da19e7522d17f0cdc2ac20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const QString &amp;</type>
      <name>TypeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a156d0e2583be2efaa99c441458f1db9d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual u32</type>
      <name>TypeId</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8627793238d67e1753c5b810c5051cbd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a58f42567395c5341d2e1fd97fe7f804d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa8064a536ed194201bf0189ece40de8d</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afeedd4000926fdd03993f948b7e31913</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="function">
      <type>const AttributeVector &amp;</type>
      <name>Attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a89a8bab524c7fcfef61ce856e7b4d076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AttributeVector</type>
      <name>NonEmptyAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8a2fff750482947ccbdbf9ce3064c428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Attribute&lt; T &gt; *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afa602255ad19494e8264f7fb73070493</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0dea3e94303deea91633301813553676</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeTo</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8154e6434ceeb36ca5e74fef15859353</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFrom</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6e9845cdedf2a238a212bbcd8a863e72</anchor>
      <arglist>(QDomElement &amp;element, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeToBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6ae9b22082cb5bf29859645dd6ac6d4a</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFromBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a481ee3acac8605b1e683c1231f25e2bc</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>CreateAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a4356799119ea6ecae4b6dfc6b091bddb</anchor>
      <arglist>(u8 index, u32 typeID, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2f8b15aa5edcdaac2f32c5959c5d88dc</anchor>
      <arglist>(u8 index, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a62dfbeca452e6449c233a570cf059225</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QDomElement</type>
      <name>BeginSerialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7172dbdf2339ddbbc3c5652be8968ed3</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a844ec4ff1dec75cbbb7d8ff03ca61b01</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aad61f20527eed870c9f635e20bf5c688</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value, const QString &amp;type) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>BeginDeserialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3fef3969ebb919048bf57d3db05b48d7</anchor>
      <arglist>(QDomElement &amp;compElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7fd2354c177222bfdad3d9f8bbf4f051</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttributeType</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a5b0ecd40b4da8fb8d6794b2cf31ce4c9</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>af5a186f31936694254018f2c720256c7</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a96113e4d61805b085f4b0d6d36135391</anchor>
      <arglist>(IAttribute *attr, u8 index)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>component_id_t</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a946596d66e1667003eafab6ddb6f141b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Entity *</type>
      <name>parentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3761c0afda2f60e0b3acc44d8162b907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AttributeVector</type>
      <name>attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae0bfd9389533b6a178d0876b1174102f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae04ef3ddf6acb549b696b339c933c274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>temporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7a013d9fbc921cc6ea882e039794baa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>xSize</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a92af2dd1df05ab68b22d0dba18054efd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>ySize</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>aa47a4c6df555f5f21fa72fc7745ba962</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>depth</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>aba56243b39972088d9aed0d1e6aba183</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float3</type>
      <name>position</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>aeea904ca5e0b97466bf9143ed4de95ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>Quat</type>
      <name>rotation</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a204706e48b14cb6ad61d5e99a6d2bff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>scaleUfactor</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>aad21ace93dd4c9359ad772033e5669d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>scaleVfactor</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a9d25503e8c85fc1deae14f0cb8b32c17</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>xSegments</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>ad11be7f0a2bce5b71a4426c31c20745a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>ySegments</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a143adf2253de3d14eda2c569c5c753bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>materialName</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a03784391bfb85918ba0d023c946c8f9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AssetReference</type>
      <name>materialRef</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>adde1c3181ff4cd8b2aeb01612f866e9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>Color</type>
      <name>fogColor</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>ab619c5b0811be3d890c9d0020beda28c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>fogStartDistance</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a2ac6099c33c97fbf736ada644a61b7b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>fogEndDistance</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a4ba5c5ffbaa99f02f2ab8df31c9c229b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>fogMode</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a2b2209640b8ed66759a5dce5c8fa911c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa63d1d694b058775a2458c45e68d856b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a134821f6bcf1ea6408a3a72c7f4dfa1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>replicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf5b7cfc104657f2795c8b0b237089eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>local</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a95ade3d0915b7224d56cd34a4e308cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AttributeChange::Type</type>
      <name>updateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a75b46dc1d972b1f10c17d8521aabf3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a418e735d210d40d2551b21a04f1cdde9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>unacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab5194d9724dc21842582abaa47ec4f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>networkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0d221fecdcf0c6b3ec731936d3c43fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>ComponentPtr</type>
      <name>FindPlaceable</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a8ac9a3d0a82a0d9d109ea6ad11337a88</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ChangeWaterPlane</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a4856f23d1c2515e1e1f9b5e6883a6024</anchor>
      <arglist>(IAttribute *attribute)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetPosition</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a0fc7c00d6a55f60beef4a9ce440fbd2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetOrientation</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a65c0847cb4d695406a5d4a0c49cf6be4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>OgreWorldWeakPtr</type>
      <name>world_</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a18563f27a98a8c8cbd68a019b3a2cf34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::Entity *</type>
      <name>entity_</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a22798ba5948499b0a61901eb41aa2917</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::SceneNode *</type>
      <name>node_</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a0d4ef6b15aab6f42b9082aa5085a371b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>attached_</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a14c0d8dfe24501c96c1fc09784cd2262</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>attachedToRoot_</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a5f0aa3d66510034c5ec60478958f1a4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>lastXsize_</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>a2579ba40164a624880c8441751af5dbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>lastYsize_</name>
      <anchorfile>class_e_c___water_plane.html</anchorfile>
      <anchor>ab4f2ae708f71a8ec4d2007cbb38c236e</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>::IAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aea94a77a3151b94a6e695e5e5632cff8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ECAttributeEditor</name>
    <filename>class_e_c_attribute_editor.html</filename>
    <base>ECAttributeEditorBase</base>
    <member kind="slot">
      <type>void</type>
      <name>AddComponent</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a6cdf543510a6e225ee1c17d21b7c69b1</anchor>
      <arglist>(ComponentPtr component)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveComponent</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a326df233546499b0f8fe5d37c456ee82</anchor>
      <arglist>(ComponentPtr component)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>HasComponent</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>ae975ccb47fefa19727dad07bf394e32f</anchor>
      <arglist>(ComponentPtr component)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>AttributeChanged</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a6baecc85575a156a1bc49392ca479dd2</anchor>
      <arglist>(IAttribute *attribute)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>EditorChanged</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a3206988e6b7b18637b1df94c39eae5dc</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>OnComponentAdded</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>af80af9ddec833c4e6c27df3320bf1380</anchor>
      <arglist>(QtProperty *, IComponent *comp)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>OnComponentRemoved</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a66fea35a2d0319afb716d1f6162b3b87</anchor>
      <arglist>(QtProperty *, IComponent *comp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ECAttributeEditor</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a792376691ba93ddd589fff6f0428ffaa</anchor>
      <arglist>(QtAbstractPropertyBrowser *owner, ComponentPtr component, const QString &amp;name, const QString &amp;type, QObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ECAttributeEditor</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>aca2343fb48b4d74adccf6b3bf8d632f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>GetAttributeName</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a5c5459267cde419674c68dc081997918</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>GetAttributeType</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>af2f71387c8413e003dace0217d7f5c40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QtProperty *</type>
      <name>GetProperty</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>ac42f6ef5fd58fe812ccbcb8f508f345d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ContainsProperty</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a7f33522aab19f472e85f149724e483db</anchor>
      <arglist>(QtProperty *property) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateEditorUI</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a49b00705b902d112617d39fd4961cd6b</anchor>
      <arglist>(IAttribute *attr=0)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>QList&lt; ComponentWeakPtr &gt;</type>
      <name>ComponentWeakPtrList</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a6350936974af801426b9b8c2585e3dc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetValue</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a594ee7429437754c7da324b5424bb1b2</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetValue</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a3e7a8368e169e2fc11e53c91ad00d4f8</anchor>
      <arglist>(const ComponentPtr &amp;comp, const T &amp;value)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>aec9e6763cb5494905ffdd64c316101d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a9402576d72a6665c118e915739419f04</anchor>
      <arglist>(IAttribute *attr=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a337d9353f7e8730bc5f711e42b0a8f91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>abe997a04a1c6c5e0f996d27706fcd9db</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a6da58cf2010e0f2004fc4a70afbb35db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a1e6485819c746ffe96921aa2bd19a5de</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a6dc632f2a0728d8a1d616197a330dae9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a271f8308a9b8aae46b05c3648a9448aa</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a67cf909c3bfdcfebca7a303d3adfac19</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a92ccac0e1bea16be35ba22902c43f325</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a73b326a6adafcaf1935893e749046b8f</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a57e24b36a3e1ea1e243b47c7cbc266dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a2b1ff2b5675222ab0b4a6b3b42822b60</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a0e96de910b89efcfd93fd1a33138c05b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a1a5645fefbe0e7c863831839fb23e2db</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>ad6add23f12ab77a9c2dbcd1d7e28109b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a730c299ad07cba47f001248e30ec458e</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>ad0ee9b0a9c076b6d1470befb2c4ccc19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>ab48cf76527497072b34f885a0bd66624</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>adeebfece4d6a222c3b39fc162379c56d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a7478dc629f1838ca692ad1104914eb72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a35afa6ceae76e9793edcfadcfd2f1e2f</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a2db1ad72e5513a9cf75ccfa4f49d1d21</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a66dc47d0774e7961802a20deb1200146</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a74f23bdc4de6e0c9086636e06d75391b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a32fd3efac7831e23e7421b8bd1a8a303</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a3772a5e2e73c8a23a0ee7dca3c0f9464</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a046a12e2b18e9a84d9f7fdf20bdc287b</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a8fa8068ef0199fbeceb3384602f0e131</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>aea7592eeac9504f012ee5c69ff0cab01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>abe997a04a1c6c5e0f996d27706fcd9db</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a337d9353f7e8730bc5f711e42b0a8f91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a1e6485819c746ffe96921aa2bd19a5de</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a6da58cf2010e0f2004fc4a70afbb35db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a271f8308a9b8aae46b05c3648a9448aa</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a6dc632f2a0728d8a1d616197a330dae9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a67cf909c3bfdcfebca7a303d3adfac19</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a92ccac0e1bea16be35ba22902c43f325</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a73b326a6adafcaf1935893e749046b8f</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a57e24b36a3e1ea1e243b47c7cbc266dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a2b1ff2b5675222ab0b4a6b3b42822b60</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a0e96de910b89efcfd93fd1a33138c05b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a1a5645fefbe0e7c863831839fb23e2db</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>ad6add23f12ab77a9c2dbcd1d7e28109b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a730c299ad07cba47f001248e30ec458e</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>ad0ee9b0a9c076b6d1470befb2c4ccc19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>ae68a808f8ce6f21850200278eaf53d0c</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a6b4a2a8b54662480da8c8ac9e25e6847</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>af7707d8ffde53803685df14c65efff9c</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>ad33cddf7124feb26468350cce921b3fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>ab48cf76527497072b34f885a0bd66624</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>adeebfece4d6a222c3b39fc162379c56d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a1ca334a6f5cdb5d51a11ae333c38d158</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>af5fe4e113b7e7c4be71b091766525483</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a35afa6ceae76e9793edcfadcfd2f1e2f</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a7478dc629f1838ca692ad1104914eb72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a2db1ad72e5513a9cf75ccfa4f49d1d21</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a66dc47d0774e7961802a20deb1200146</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a32fd3efac7831e23e7421b8bd1a8a303</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a74f23bdc4de6e0c9086636e06d75391b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a046a12e2b18e9a84d9f7fdf20bdc287b</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a3772a5e2e73c8a23a0ee7dca3c0f9464</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a8fa8068ef0199fbeceb3384602f0e131</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>aea7592eeac9504f012ee5c69ff0cab01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>CleanExpiredComponents</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a6dfd905cd7759f66b2de536f5bb40692</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>PreInitialize</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>aa0e46f781f0d3445bb46b77254c736cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>UnInitialize</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>ac918cf301de4c2c6d2cc490159ff343d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>IAttribute *</type>
      <name>FindAttribute</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a99cb25e5d16a594d893af3ef81bf50fb</anchor>
      <arglist>(const ComponentPtr &amp;component) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Attribute&lt; T &gt; *</type>
      <name>FindAttribute</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a0053dcd288074bd55c60db3f41cd1350</anchor>
      <arglist>(const ComponentPtr &amp;component) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QList&lt; ComponentWeakPtr &gt;::iterator</type>
      <name>FindComponent</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a7423d8170a39fcd820bc7bb1fabf31d6</anchor>
      <arglist>(ComponentPtr component)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QtAbstractPropertyBrowser *</type>
      <name>owner_</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>ad12074e8edf98b599e028402c8024789</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QtAbstractPropertyManager *</type>
      <name>propertyMgr_</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a29040878c1d515cc0bc737233aa0d2bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QtAbstractEditorFactoryBase *</type>
      <name>factory_</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a772e10c1cdbcb45228804174e5f7ebb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; QtAbstractPropertyManager * &gt;</type>
      <name>optionalPropertyManagers_</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a982cfb8d0446d45d7e8922a3b76ba354</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; QtAbstractEditorFactoryBase * &gt;</type>
      <name>optionalPropertyFactories_</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a917c9bef0313935106bbd5801de3d984</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QtProperty *</type>
      <name>rootProperty_</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a1dcfe18cd43eb9e7b928cc4fb2b28f99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>name_</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a74a609deeb0a55d51b6e898109be8ec5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>typeName_</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a1034f6234bc6143436f2073e47e0be68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>listenEditorChangedSignal_</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>af7bf25b1034f916f6d9bca8f6740bbd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ComponentWeakPtrList</type>
      <name>components_</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a5a2e3475476c1e94e0d602385f5d0666</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useMultiEditor_</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a6ce5c2ac413d0665cdb4fb14af08a304</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MetaDataFlag</type>
      <name>metaDataFlag_</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a04d7e6d2576729ce7107ad4da186e3f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a8a842d778672dfae9f7ca350fecec1b2</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>HasIdenticalAttributes</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>ac0558cf98e9e1b2e7c6e7a455f71bace</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>InitializeMultiEditor</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>ab360586b2d7a7e06882294dc0cdbb462</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>UpdateMultiEditorValue</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a733cc8134cbc4289824df5b1a4602ad4</anchor>
      <arglist>(IAttribute *attribute=0)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>af8e787e44486afd9752402d936ff1717</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a645a31e7a7f9a729ca653eb3fbce9060</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a8ba6a07243b61d5760feb490c3c76110</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a09caf16ad2366ed4512626473b449001</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a80ceb54bc8d0986dc8042bde5f500a51</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a11dfa8a8f0ec59dbcb0db0b5621bc50f</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a37dbbdf1e4d64b0181a7e780ba7ec445</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>af5e58fd2971848aeadbeda84d7933503</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a623bb7eda9b930b65bb564f6f9a5c634</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a780c4304e33a73f81cb57a5c72ed6094</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a4eb1cce28bdf8a0be0dc555a49b1448a</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a153b5166580a38795ec26f2c303efba7</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>ad29bae5927831524617559abb40b3b25</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>acc4a757733ad967771a89054c4488174</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>af8e787e44486afd9752402d936ff1717</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a645a31e7a7f9a729ca653eb3fbce9060</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a8ba6a07243b61d5760feb490c3c76110</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a09caf16ad2366ed4512626473b449001</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a80ceb54bc8d0986dc8042bde5f500a51</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a11dfa8a8f0ec59dbcb0db0b5621bc50f</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a37dbbdf1e4d64b0181a7e780ba7ec445</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>af5e58fd2971848aeadbeda84d7933503</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a59e903cc79003f28455a9c90eb56eacd</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a13693eb04b3c0dec99ee4631c7e96bfc</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a623bb7eda9b930b65bb564f6f9a5c634</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a66cdb14f2761817e4dd5f58b5d1b1b19</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a780c4304e33a73f81cb57a5c72ed6094</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a4eb1cce28bdf8a0be0dc555a49b1448a</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>a153b5166580a38795ec26f2c303efba7</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>ad29bae5927831524617559abb40b3b25</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor.html</anchorfile>
      <anchor>acc4a757733ad967771a89054c4488174</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ECAttributeEditorBase</name>
    <filename>class_e_c_attribute_editor_base.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>AddComponent</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a6cdf543510a6e225ee1c17d21b7c69b1</anchor>
      <arglist>(ComponentPtr component)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveComponent</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a326df233546499b0f8fe5d37c456ee82</anchor>
      <arglist>(ComponentPtr component)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>HasComponent</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>ae975ccb47fefa19727dad07bf394e32f</anchor>
      <arglist>(ComponentPtr component)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>AttributeChanged</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a6baecc85575a156a1bc49392ca479dd2</anchor>
      <arglist>(IAttribute *attribute)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>EditorChanged</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a3206988e6b7b18637b1df94c39eae5dc</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>OnComponentAdded</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>af80af9ddec833c4e6c27df3320bf1380</anchor>
      <arglist>(QtProperty *, IComponent *comp)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>OnComponentRemoved</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a66fea35a2d0319afb716d1f6162b3b87</anchor>
      <arglist>(QtProperty *, IComponent *comp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ECAttributeEditorBase</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a6b85c01219d5fc7460f827942838127e</anchor>
      <arglist>(QtAbstractPropertyBrowser *owner, ComponentPtr component, const QString &amp;name, const QString &amp;type, QObject *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ECAttributeEditorBase</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>ad4c707e5d4c6d42f0262b011991a3d35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>GetAttributeName</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a5c5459267cde419674c68dc081997918</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>GetAttributeType</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>af2f71387c8413e003dace0217d7f5c40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QtProperty *</type>
      <name>GetProperty</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>ac42f6ef5fd58fe812ccbcb8f508f345d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ContainsProperty</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a7f33522aab19f472e85f149724e483db</anchor>
      <arglist>(QtProperty *property) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateEditorUI</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a49b00705b902d112617d39fd4961cd6b</anchor>
      <arglist>(IAttribute *attr=0)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>QList&lt; ComponentWeakPtr &gt;</type>
      <name>ComponentWeakPtrList</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a6350936974af801426b9b8c2585e3dc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a87923d60234fb8cfe44c76be29fd87be</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>Set</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>ad484950871e4f776b67d85887444ca5f</anchor>
      <arglist>(QtProperty *property)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>aa904d048c4fe55eba3286bd89e29533a</anchor>
      <arglist>(IAttribute *attr=0)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>HasIdenticalAttributes</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>af3a2c09a2f35be247a34fc2e67722049</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>CleanExpiredComponents</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a6dfd905cd7759f66b2de536f5bb40692</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>PreInitialize</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>aa0e46f781f0d3445bb46b77254c736cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>UnInitialize</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>ac918cf301de4c2c6d2cc490159ff343d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>IAttribute *</type>
      <name>FindAttribute</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a99cb25e5d16a594d893af3ef81bf50fb</anchor>
      <arglist>(const ComponentPtr &amp;component) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Attribute&lt; T &gt; *</type>
      <name>FindAttribute</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a0053dcd288074bd55c60db3f41cd1350</anchor>
      <arglist>(const ComponentPtr &amp;component) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QList&lt; ComponentWeakPtr &gt;::iterator</type>
      <name>FindComponent</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a7423d8170a39fcd820bc7bb1fabf31d6</anchor>
      <arglist>(ComponentPtr component)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QtAbstractPropertyBrowser *</type>
      <name>owner_</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>ad12074e8edf98b599e028402c8024789</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QtAbstractPropertyManager *</type>
      <name>propertyMgr_</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a29040878c1d515cc0bc737233aa0d2bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QtAbstractEditorFactoryBase *</type>
      <name>factory_</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a772e10c1cdbcb45228804174e5f7ebb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; QtAbstractPropertyManager * &gt;</type>
      <name>optionalPropertyManagers_</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a982cfb8d0446d45d7e8922a3b76ba354</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; QtAbstractEditorFactoryBase * &gt;</type>
      <name>optionalPropertyFactories_</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a917c9bef0313935106bbd5801de3d984</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QtProperty *</type>
      <name>rootProperty_</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a1dcfe18cd43eb9e7b928cc4fb2b28f99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>name_</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a74a609deeb0a55d51b6e898109be8ec5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>typeName_</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a1034f6234bc6143436f2073e47e0be68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>listenEditorChangedSignal_</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>af7bf25b1034f916f6d9bca8f6740bbd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ComponentWeakPtrList</type>
      <name>components_</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a5a2e3475476c1e94e0d602385f5d0666</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useMultiEditor_</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a6ce5c2ac413d0665cdb4fb14af08a304</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MetaDataFlag</type>
      <name>metaDataFlag_</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a04d7e6d2576729ce7107ad4da186e3f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>MultiEditValueSelected</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>a27bc427896f5341a5a9da31526014c8b</anchor>
      <arglist>(const QString &amp;value)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>PropertyChanged</name>
      <anchorfile>class_e_c_attribute_editor_base.html</anchorfile>
      <anchor>acfe6bd6fbcf352bf30cd32b248601212</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ECBrowser</name>
    <filename>class_e_c_browser.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>clear</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>ae2f7eedaef7b5fff08712b4014f4a997</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>UpdateBrowser</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>ad84b02c7241f80130711d7bd07b73599</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ExpandOrCollapseAll</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>aaf9cbe5547876166082c05ecdbce18e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ShowXmlEditorForComponent</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>afdd71e3099f42cc298e1be4a7089eaea</anchor>
      <arglist>(const QString &amp;componentType)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>CreateNewComponent</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>ad5537d5de7655ac8dedebaa2358b5d05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>SelectionChanged</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a1e31560236b2fe5bb10c5aaf5ec8d74b</anchor>
      <arglist>(const QString &amp;compType, const QString &amp;compName, const QString &amp;attrType, const QString &amp;attrName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ECBrowser</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a528873b4ed57c28eec2fb47988f14047</anchor>
      <arglist>(Framework *framework, QWidget *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ECBrowser</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a1feedd51d9d5c4d1e32dd5c4ed1a3acf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddEntity</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>ae1ae9d6118b25f62d12c6af729cbbe1d</anchor>
      <arglist>(EntityPtr entity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveEntity</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>aad7381d871ddc2f5196081f02fe590ca</anchor>
      <arglist>(EntityPtr entity)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; EntityPtr &gt;</type>
      <name>GetEntities</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a852a618c31be0cc58f9e0099d90b5f37</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetItemExpandMemory</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>ac92b00b1e5291b1ab3c2b611f0c74e82</anchor>
      <arglist>(boost::shared_ptr&lt; TreeWidgetItemExpandMemory &gt; expandMem)</arglist>
    </member>
    <member kind="function">
      <type>QObjectList</type>
      <name>GetSelectedComponents</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a8b041c57497c93b44d2386af0bffeddf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>dragEnterEvent</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a5bf1aadff73e33a1a51e54d8f4c9feed</anchor>
      <arglist>(QDragEnterEvent *event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>dropEvent</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>af458769300d4137a96f3cfba03b6fede</anchor>
      <arglist>(QDropEvent *event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>dragMoveEvent</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a9b7c9f11e0087e84285ba1990a4c53b4</anchor>
      <arglist>(QDragMoveEvent *event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>focusInEvent</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a63e3edcd2b19d6c676e88966aad8a311</anchor>
      <arglist>(QFocusEvent *event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>dropMimeData</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>afeedb01eb3b60954608f0024ba358988</anchor>
      <arglist>(QTreeWidgetItem *item, int index, const QMimeData *data, Qt::DropAction action)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>QMap&lt; QTreeWidgetItem *, ComponentGroup * &gt;</type>
      <name>TreeItemToComponentGroup</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a23423a60367903e4df1b126be7ebe96d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>QList&lt; EntityWeakPtr &gt;</type>
      <name>EntityWeakPtrList</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a4ba5881b8bb7129beedc4c6d00d86837</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>ShowComponentContextMenu</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>ac8063d1212b547534ae453c9a60d56d1</anchor>
      <arglist>(const QPoint &amp;pos)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>SelectionChanged</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a41c39daca3b351ef8f8d3795d313f2f8</anchor>
      <arglist>(QTreeWidgetItem *current, QTreeWidgetItem *previous)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnComponentAdded</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a1acb7a1b1d904f13d8ab00a061118d72</anchor>
      <arglist>(IComponent *comp, AttributeChange::Type type)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnComponentRemoved</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a1e928ed281feceefc4788467653d472d</anchor>
      <arglist>(IComponent *comp, AttributeChange::Type type)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OpenComponentXmlEditor</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>aed834d189973bb9c5461735ac4423763</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>CopyComponent</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a9cf1a1d3865c64b92a06cc6e2a411d7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>PasteComponent</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a612d4a93453ea8abdbc9d54681c879ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>DynamicComponentChanged</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a1ace432f4969d260200e450754e3d68a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnComponentNameChanged</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>aa55bd8f5e23377708bde1ccae549f02a</anchor>
      <arglist>(const QString &amp;newName)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>CreateAttribute</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a85e14337409c18678640b5f199fab906</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnDeleteAction</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a48be7c10dacc8ac89c527fa2cc4fb539</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>ResizeHeaderToContents</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>acb0f37250e866e3208486fee1ced56b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ComponentGroup *</type>
      <name>FindSuitableGroup</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a7ac013a2395b879e32a2267cc649c2f1</anchor>
      <arglist>(ComponentPtr comp)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>AddNewComponentToGroup</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>aaa58f5a793e6fd17d4f93e9cf5e1c580</anchor>
      <arglist>(ComponentPtr comp)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>RemoveComponentFromGroup</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a56666484389f1b7c839757393062abb4</anchor>
      <arglist>(ComponentPtr comp)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>RemoveComponentGroup</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a40b21bbf5373e0258278f28b2222cae4</anchor>
      <arglist>(ComponentGroup *componentGroup)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>HasEntity</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>ae3e963febb4e30d43a0e5e062c2d96b3</anchor>
      <arglist>(EntityPtr entity) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>DeleteAttribute</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a59a42ac6710813c2ad9d958d510dcb58</anchor>
      <arglist>(QTreeWidgetItem *item)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>DeleteComponent</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a7846439af62fc5356b6820f14057065b</anchor>
      <arglist>(QTreeWidgetItem *item)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TreeItemToComponentGroup</type>
      <name>itemToComponentGroups_</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a348220938a9c176e56518c2358857b64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EntityWeakPtrList</type>
      <name>entities_</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>aa9382f836eecad34f9e0a4fcb581146d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QMenu *</type>
      <name>menu_</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a409a04ced3c3d299e42a54e729c18675</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QTreeWidget *</type>
      <name>treeWidget_</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a069d25fb9f265d228199692b393fd32a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework_</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>a23bd7f6022f7dbe422d99057dcadfcb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::weak_ptr&lt; TreeWidgetItemExpandMemory &gt;</type>
      <name>expandMemory_</name>
      <anchorfile>class_e_c_browser.html</anchorfile>
      <anchor>ad443180f0a14004b18b08ec0a8c8ed34</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ECComponentEditor</name>
    <filename>class_e_c_component_editor.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>OnEditorChanged</name>
      <anchorfile>class_e_c_component_editor.html</anchorfile>
      <anchor>afd6ba4299b99338557b1d145cb6f6a4f</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ECComponentEditor</name>
      <anchorfile>class_e_c_component_editor.html</anchorfile>
      <anchor>a95275e821026bdeffb303710e2894b36</anchor>
      <arglist>(ComponentPtr component, QtAbstractPropertyBrowser *propertyBrowser)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ECComponentEditor</name>
      <anchorfile>class_e_c_component_editor.html</anchorfile>
      <anchor>aebe1bad45fb8bfcad92163095224cc2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ContainProperty</name>
      <anchorfile>class_e_c_component_editor.html</anchorfile>
      <anchor>aeb5b51b8717d6bd03ebfab5dd0c8841e</anchor>
      <arglist>(QtProperty *property) const </arglist>
    </member>
    <member kind="function">
      <type>QtProperty *</type>
      <name>RootProperty</name>
      <anchorfile>class_e_c_component_editor.html</anchorfile>
      <anchor>a3ab8463b403c986cfc0318c9ec9d8b6c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddNewComponent</name>
      <anchorfile>class_e_c_component_editor.html</anchorfile>
      <anchor>a61fe2ff5c6b31663dc8dc24333eccec7</anchor>
      <arglist>(ComponentPtr component)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveComponent</name>
      <anchorfile>class_e_c_component_editor.html</anchorfile>
      <anchor>a08d9f2f421218e138690c3588bd7c16b</anchor>
      <arglist>(ComponentPtr component)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateUi</name>
      <anchorfile>class_e_c_component_editor.html</anchorfile>
      <anchor>aee588911148f311ab8a91b0b173abbc6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>GetAttributeType</name>
      <anchorfile>class_e_c_component_editor.html</anchorfile>
      <anchor>a04acbbc41fbd27f55a45c4002912c092</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>QMap&lt; QString, ECAttributeEditorBase * &gt;</type>
      <name>AttributeEditorMap</name>
      <anchorfile>class_e_c_component_editor.html</anchorfile>
      <anchor>a6953beb96f14bbc370770bb27f5f52ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>QList&lt; ComponentWeakPtr &gt;</type>
      <name>ComponentSet</name>
      <anchorfile>class_e_c_component_editor.html</anchorfile>
      <anchor>a129f110d8e431c76e9eb7ba1aa002f56</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>InitializeEditor</name>
      <anchorfile>class_e_c_component_editor.html</anchorfile>
      <anchor>ab4556e1ce80136de023814998d9e9bab</anchor>
      <arglist>(ComponentPtr component)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CreateAttributeEditors</name>
      <anchorfile>class_e_c_component_editor.html</anchorfile>
      <anchor>a7be7ada618fc8a0359ad24a202c6c71b</anchor>
      <arglist>(ComponentPtr component)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>UpdateGroupPropertyText</name>
      <anchorfile>class_e_c_component_editor.html</anchorfile>
      <anchor>a76d3b7734c362a4bc406081fa7d936be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static ECAttributeEditorBase *</type>
      <name>CreateAttributeEditor</name>
      <anchorfile>class_e_c_component_editor.html</anchorfile>
      <anchor>af6255ffb68aa901196c8464266150140</anchor>
      <arglist>(QtAbstractPropertyBrowser *browser, ECComponentEditor *editor, ComponentPtr component, const QString &amp;name, const QString &amp;type)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AttributeEditorMap</type>
      <name>attributeEditors_</name>
      <anchorfile>class_e_c_component_editor.html</anchorfile>
      <anchor>ab70e626b2db933687ff494a336e18462</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ComponentSet</type>
      <name>components_</name>
      <anchorfile>class_e_c_component_editor.html</anchorfile>
      <anchor>aad16d2fb960914f21764ccf2cca00aa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QtProperty *</type>
      <name>groupProperty_</name>
      <anchorfile>class_e_c_component_editor.html</anchorfile>
      <anchor>a14d401df8f54d01e024410e3fcdd3570</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QtGroupPropertyManager *</type>
      <name>groupPropertyManager_</name>
      <anchorfile>class_e_c_component_editor.html</anchorfile>
      <anchor>a860e2dee7e0ffe5c46a758af8301ac74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QtAbstractPropertyBrowser *</type>
      <name>propertyBrowser_</name>
      <anchorfile>class_e_c_component_editor.html</anchorfile>
      <anchor>a72bb2df0e381496011f031822313a10d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QString</type>
      <name>typeName_</name>
      <anchorfile>class_e_c_component_editor.html</anchorfile>
      <anchor>ac094d286911a8419587d882ef9dab1ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QString</type>
      <name>name_</name>
      <anchorfile>class_e_c_component_editor.html</anchorfile>
      <anchor>a191fa537bc48b62cae70a14058a56cfd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ECEditorModule</name>
    <filename>class_e_c_editor_module.html</filename>
    <base>IModule</base>
    <member kind="slot">
      <type>void</type>
      <name>ShowEditorWindow</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>a1f90256029fe0ce4da89f9ea21e503d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>ECEditorWindow *</type>
      <name>ActiveEditor</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>aa9acde6fcf013695ad8e0a48ba96fff1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>ExpandMemoryPtr</type>
      <name>ExpandMemory</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>a5331b42de6103412e27c2f31a27c42b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ShowVisualEditingAids</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>a3a8083c59021db7dde3373dc1783d1a3</anchor>
      <arglist>(bool show)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>VisualEditingAidsEnabled</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>a2eaf5f87db26ac1cafdc570e92a7b754</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ShowDocumentation</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>ad49df1ee304188e90ab76bba51260c7b</anchor>
      <arglist>(const QString &amp;symbolName)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ECEditorFocusChanged</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>ac756ab7b1d6498d75e141cf2231a853e</anchor>
      <arglist>(ECEditorWindow *editor)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>CreateXmlEditor</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>a1d65bc5ecc9e1a38d5424b5b31b38ad8</anchor>
      <arglist>(const QList&lt; EntityPtr &gt; &amp;entities)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>CreateXmlEditor</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>ad1037e75ed8daf5aa5a6eb88fc4ace00</anchor>
      <arglist>(EntityPtr entity)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>CreateXmlEditor</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>a0947f6572e45a5d0dcd337b35b725b7d</anchor>
      <arglist>(ComponentPtr component)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>CreateXmlEditor</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>afb80b3d2c765f4164cb1abe9e81c8ed3</anchor>
      <arglist>(const QList&lt; ComponentPtr &gt; &amp;components)</arglist>
    </member>
    <member kind="slot">
      <type>QObjectList</type>
      <name>GetSelectedComponents</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>a365799ab735391f62de11f1fc9f555ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QVariantList</type>
      <name>GetSelectedEntities</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>a637df2e19ea950244d7940142d3ae979</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>SelectionChanged</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>a872551be83ec12cf1282f3e77b15995d</anchor>
      <arglist>(const QString &amp;compType, const QString &amp;compName, const QString &amp;attrType, const QString &amp;attrName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ECEditorModule</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>a39a19270c65284d1e7397608f826e82c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ECEditorModule</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>a1dc9ea1bca6ddff0533d8eb819dc8098</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>a7e9477b2504f3be9b7067b3ea4d87a0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Uninitialize</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>ab23de033a273d70fd6603bc374d09fd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>a8459f31e765a731ce82f7fcb16ce4d4c</anchor>
      <arglist>(f64 frametime)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Load</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a6435d25926592938d058e231a1a6988a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Unload</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a29f68fed281ee378674d8b3d84a02e48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a715ca908fee148f6abeb45f41f646951</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>af0fc3706f5a2e27374c642e71e4eca8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework_</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>aff39960b9800c16d6f4976b5614c37a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleKeyPressed</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>a5241200fd9e5e455ac70fd9d46c35606</anchor>
      <arglist>(KeyEvent *e)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>InputContextPtr</type>
      <name>inputContext</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>a7c866b619cded9a1483c1f0fcaf150d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ExpandMemoryPtr</type>
      <name>expandMemory</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>a66d91567363e20b59209fca2f44894b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QPointer&lt; EcXmlEditorWidget &gt;</type>
      <name>xmlEditor</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>a3643bc32301619194bd98e4142a46fad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QPointer&lt; ECEditorWindow &gt;</type>
      <name>activeEditor</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>ae43c68fbc9e82e8e3da5b65f27f6267e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QPointer&lt; ECEditorWindow &gt;</type>
      <name>commonEditor</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>af3414320aa59c07d4c82f91b59251c17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>showVisualAids</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>a169e33da551301f19cc5eebb40f7a537</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>toggleSelectAllEntities</name>
      <anchorfile>class_e_c_editor_module.html</anchorfile>
      <anchor>a773498479f6b6b273834217f42716159</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ECEditorWindow</name>
    <filename>class_e_c_editor_window.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>DeleteEntitiesFromList</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>ac2399eb922d0128c21cbecd201564e3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>DeleteComponent</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a46754f775c7b091cb82168c68bafd6c3</anchor>
      <arglist>(const QString &amp;componentType, const QString &amp;name)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>CreateComponent</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>afa89662930a1cfcfd84dcbd809086dc6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>OpenEntityActionDialog</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>aff5925d9b1e6dcc81632335fccc82772</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>OpenFunctionDialog</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>af74266bdac436f69030427eeb08156e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RefreshPropertyBrowser</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a8f6eb1d244d41612c20781c5ea015001</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ShowEntityContextMenu</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a53587c8f70417a652367dab2df9134a0</anchor>
      <arglist>(const QPoint &amp;pos)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ShowXmlEditorForEntity</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>aae32a0a028b12b8a4fa9be543a7ca1eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ShowXmlEditorForComponent</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a68a173f0bce09ece07eb562463b392e7</anchor>
      <arglist>(const std::vector&lt; ComponentPtr &gt; &amp;components)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ShowXmlEditorForComponent</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a7396044798ea8fe229be88385275945c</anchor>
      <arglist>(const QString &amp;componentType)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ToggleEntityList</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a06d8616756d37245e52773359caa35e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveEntity</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a85f45d52810fa58efd83ef770eed4c45</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetFocus</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a6693540693767bea83d7d3ed6ab58171</anchor>
      <arglist>(bool focus)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setVisible</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>aa999d1ddf01536b3c75ee42d2da9cbde</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>DeselectAllEntities</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a212f4ecc9a3fa5a818e7395f9ecc3160</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>HighlightEntity</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>ad25db4733cd51fd759f2611c3c596e51</anchor>
      <arglist>(const EntityPtr &amp;entity, bool highlight)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>EditEntityXml</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a82ac545acde9a92a40d09c01062690f0</anchor>
      <arglist>(EntityPtr entity)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>EditComponentXml</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>ad36b8b59035e1765c574b30de5dceb9c</anchor>
      <arglist>(ComponentPtr component)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>EditEntityXml</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a9b89e71b12c8459f7454cae62a7316a6</anchor>
      <arglist>(const QList&lt; EntityPtr &gt; &amp;entities)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>EditComponentXml</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>acd26ac2b49835e3308e50ea87b3fd316</anchor>
      <arglist>(const QList&lt; ComponentPtr &gt; &amp;components)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>FocusChanged</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>ae47eefecb7356e647bf5b39450e82719</anchor>
      <arglist>(ECEditorWindow *editor)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>SelectionChanged</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a113404c024722bf4bf9f5d4ecceee161</anchor>
      <arglist>(const QString &amp;compType, const QString &amp;compName, const QString &amp;attrType, const QString &amp;attrName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ECEditorWindow</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a9e7b910b7a49789cb609720adcbdec80</anchor>
      <arglist>(Framework *fw, QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ECEditorWindow</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a83719be5d4b642ee099557afcf1ee28f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EntityListWidgetItem *</type>
      <name>AddEntity</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>ac75de6f8c905ae0e6a01d796fb346c4d</anchor>
      <arglist>(entity_id_t id, bool updateUi=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddEntities</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a19665ad6f0979502c5f50b1a56e48ee6</anchor>
      <arglist>(const QList&lt; entity_id_t &gt; &amp;entities, bool selectAll=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveEntity</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a1385f291b44ffb370b8f5a0cb43175fa</anchor>
      <arglist>(entity_id_t id, bool udpateUi=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSelectedEntities</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a7787990b309308bec0e742d4af2da079</anchor>
      <arglist>(const QList&lt; entity_id_t &gt; &amp;ids)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearEntities</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a48d97468acee48a56c93afc626a85aa2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QObjectList</type>
      <name>GetSelectedComponents</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a58ee946f55d655bc595971eea2affeb2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QList&lt; EntityPtr &gt;</type>
      <name>GetSelectedEntities</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>ab1f7289b67272d4afbc6423820006ff0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntitySelected</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>aa05840858054714e5567f78f63c33f6c</anchor>
      <arglist>(EntityListWidgetItem *item, bool select)</arglist>
    </member>
    <member kind="function">
      <type>EntityListWidgetItem *</type>
      <name>FindItem</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>ab3a8001acf03112f9533c200c4d16b7a</anchor>
      <arglist>(entity_id_t id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowVisualEditingAids</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a98c4d7bd6753e3076bf1940cd66305e7</anchor>
      <arglist>(bool show)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>hideEvent</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>aa0760b3459acb9fbcd708971f1675e0f</anchor>
      <arglist>(QHideEvent *e)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>changeEvent</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a909b6145808fbac42f920292132652b2</anchor>
      <arglist>(QEvent *e)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>eventFilter</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>acf93fe71c3f8cf3272f52cdfbd89cc76</anchor>
      <arglist>(QObject *obj, QEvent *event)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>EntityActionDialogFinished</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a07bcee322eafed12d5ab99a0a58da6da</anchor>
      <arglist>(int result)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>FunctionDialogFinished</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>afba6c8e630e77e454ccd7dd861211836</anchor>
      <arglist>(int result)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnActionTriggered</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a7663b15f71a1acd95417115d7080e949</anchor>
      <arglist>(Entity *entity, const QString &amp;action, const QStringList &amp;params)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>DeleteEntity</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a65a8661a18ac3bcb17c8a1b0055c66a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>CopyEntity</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>acb4c6c02af105214d5d7121ab169ceae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>PasteEntity</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a29cde132be44c3370c27ddac7d675844</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HighlightEntities</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a1f27084439ad1a000c4da7b18e545f06</anchor>
      <arglist>(const QString &amp;type, const QString &amp;name)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnDefaultSceneChanged</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a5804f119ca8ae46d41f692719a972c43</anchor>
      <arglist>(Scene *scene)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>AddComponentDialogFinished</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a24f24076e40d58a69a8431ed3358208c</anchor>
      <arglist>(int result)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>BoldEntityListItems</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>ad735a45e22a2b3a0b60d665a101053cb</anchor>
      <arglist>(const QSet&lt; entity_id_t &gt; &amp;bolded_entities)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a8b9fc51130c1e443805cf2ed8d236fc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QPushButton *</type>
      <name>toggleEntitiesButton</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a4fa81a450f19214ca68369c8655c4bd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QListWidget *</type>
      <name>entityList</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>a0b981a4c12fea52b3a0df2cc14f010cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ECBrowser *</type>
      <name>ecBrowser</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>af8d9cb644113d5d7f11d24aae396b31e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>hasFocus</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>aedc77cc496776634931951fd7c244269</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TransformEditor *</type>
      <name>transformEditor</name>
      <anchorfile>class_e_c_editor_window.html</anchorfile>
      <anchor>ad1e8c6ea6ab7a2631e32a234140f1ccf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EcXmlEditorWidget</name>
    <filename>class_ec_xml_editor_widget.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>Refresh</name>
      <anchorfile>class_ec_xml_editor_widget.html</anchorfile>
      <anchor>af7b0ab0c35557b5ddf349f958c95b4c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Revert</name>
      <anchorfile>class_ec_xml_editor_widget.html</anchorfile>
      <anchor>a28e59dff046c9029fda29d989225cd42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Save</name>
      <anchorfile>class_ec_xml_editor_widget.html</anchorfile>
      <anchor>a617b56bcb4811d9fb0e9a8ad5909ebeb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EcXmlEditorWidget</name>
      <anchorfile>class_ec_xml_editor_widget.html</anchorfile>
      <anchor>a6f5769e39fb30d0997cd5816e4b3b544</anchor>
      <arglist>(Framework *framework, QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EcXmlEditorWidget</name>
      <anchorfile>class_ec_xml_editor_widget.html</anchorfile>
      <anchor>a954a6fff9bead7ae9d3003dc5385bd6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntity</name>
      <anchorfile>class_ec_xml_editor_widget.html</anchorfile>
      <anchor>ae5e472ca560ed778a8d9cf55e82856f9</anchor>
      <arglist>(const QList&lt; EntityPtr &gt; &amp;entities)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetComponent</name>
      <anchorfile>class_ec_xml_editor_widget.html</anchorfile>
      <anchor>aa3589d8672d25c21214700bdce68cf2a</anchor>
      <arglist>(const QList&lt; ComponentPtr &gt; &amp;components)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>changeEvent</name>
      <anchorfile>class_ec_xml_editor_widget.html</anchorfile>
      <anchor>af934f75e66e99564c5137fb7963beccc</anchor>
      <arglist>(QEvent *event)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework_</name>
      <anchorfile>class_ec_xml_editor_widget.html</anchorfile>
      <anchor>a95932f395f92a6649008983e7f78f50b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QTextEdit *</type>
      <name>xmlEdit_</name>
      <anchorfile>class_ec_xml_editor_widget.html</anchorfile>
      <anchor>a5eeb73f2b7581257a87a64c48c8e403f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QList&lt; EntityWeakPtr &gt;</type>
      <name>entities_</name>
      <anchorfile>class_ec_xml_editor_widget.html</anchorfile>
      <anchor>a53cbefa2687079cda183bef57d376aa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QList&lt; ComponentWeakPtr &gt;</type>
      <name>components_</name>
      <anchorfile>class_ec_xml_editor_widget.html</anchorfile>
      <anchor>aca47d91819c5399017d8b58d12ab79bb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EditorButtonFactory</name>
    <filename>class_editor_button_factory.html</filename>
    <member kind="function">
      <type></type>
      <name>EditorButtonFactory</name>
      <anchorfile>class_editor_button_factory.html</anchorfile>
      <anchor>a5fb56c08fcbf8428118b7abec79bbd4e</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EditorButtonFactory</name>
      <anchorfile>class_editor_button_factory.html</anchorfile>
      <anchor>a4a3be2d6f66ca670ba0ffcc547df5a07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QPushButton *</type>
      <name>AddButton</name>
      <anchorfile>class_editor_button_factory.html</anchorfile>
      <anchor>a872499968a28693be3426b711577ea52</anchor>
      <arglist>(const QString &amp;objectName, const QString &amp;text)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QList&lt; QPushButton * &gt;</type>
      <name>buttons</name>
      <anchorfile>class_editor_button_factory.html</anchorfile>
      <anchor>aff1ee752b8f37696f2d5b33112316f60</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Ellipsoid</name>
    <filename>class_ellipsoid.html</filename>
    <member kind="function">
      <type></type>
      <name>Ellipsoid</name>
      <anchorfile>class_ellipsoid.html</anchorfile>
      <anchor>a8aba92dbd635c581c3a5e96f285dd651</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Contains</name>
      <anchorfile>class_ellipsoid.html</anchorfile>
      <anchor>aa231ae2450cf855fdcf35fd0f7873c43</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Entity</name>
    <filename>class_entity.html</filename>
    <member kind="typedef">
      <type>std::map&lt; component_id_t, ComponentPtr &gt;</type>
      <name>ComponentMap</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>aba41151cc946e02c2ee618f6fdc2c865</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; ComponentPtr &gt;</type>
      <name>ComponentVector</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>ac58428106dc2efa4a4fcf44472936345</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>QMap&lt; QString, EntityAction * &gt;</type>
      <name>ActionMap</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a2c6093999f6f19fc90239a93d128d6fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>ComponentPtr</type>
      <name>GetComponentById</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a2e90ae97ecfdd329a45f08a21162d60b</anchor>
      <arglist>(component_id_t id) const </arglist>
    </member>
    <member kind="slot">
      <type>ComponentPtr</type>
      <name>GetComponent</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a0b6708734225e1b8a3d218836a968304</anchor>
      <arglist>(const QString &amp;type_name) const </arglist>
    </member>
    <member kind="slot">
      <type>ComponentPtr</type>
      <name>GetComponent</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>affd70c34bfd4a7e0de9b5934064a6367</anchor>
      <arglist>(u32 typeId) const </arglist>
    </member>
    <member kind="slot">
      <type>ComponentPtr</type>
      <name>GetComponent</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a708a18834b54e51bb913a5849f52a6e6</anchor>
      <arglist>(const QString &amp;type_name, const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>ComponentPtr</type>
      <name>GetComponent</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a40dee19d18e50a00adc0887f8e50a910</anchor>
      <arglist>(u32 typeId, const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>ComponentPtr</type>
      <name>GetOrCreateComponent</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a55e5f3be38c4f3268d11e4cfa6c3ac6f</anchor>
      <arglist>(const QString &amp;type_name, AttributeChange::Type change=AttributeChange::Default, bool replicated=true)</arglist>
    </member>
    <member kind="slot">
      <type>ComponentPtr</type>
      <name>GetOrCreateComponent</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a7fe870df9f995e58eb06278b73778684</anchor>
      <arglist>(const QString &amp;type_name, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default, bool replicated=true)</arglist>
    </member>
    <member kind="slot">
      <type>ComponentPtr</type>
      <name>GetOrCreateComponent</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>adcb6f20342f62f5842ef1b47bfb5ccac</anchor>
      <arglist>(u32 typeId, AttributeChange::Type change=AttributeChange::Default, bool replicated=true)</arglist>
    </member>
    <member kind="slot">
      <type>ComponentPtr</type>
      <name>GetOrCreateComponent</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a8b5b130a898409974766d03628cd70ce</anchor>
      <arglist>(u32 typeId, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default, bool replicated=true)</arglist>
    </member>
    <member kind="slot">
      <type>ComponentPtr</type>
      <name>GetOrCreateLocalComponent</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a012424ffb45e7e8048c84e21084c1f55</anchor>
      <arglist>(const QString &amp;type_name)</arglist>
    </member>
    <member kind="slot">
      <type>ComponentPtr</type>
      <name>GetOrCreateLocalComponent</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a8922f327625fe76e1aa96a571906885e</anchor>
      <arglist>(const QString &amp;type_name, const QString &amp;name)</arglist>
    </member>
    <member kind="slot">
      <type>ComponentPtr</type>
      <name>CreateComponent</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>ae0fa141ba694a9f7c09f3c456c3147fb</anchor>
      <arglist>(const QString &amp;type_name, AttributeChange::Type change=AttributeChange::Default, bool replicated=true)</arglist>
    </member>
    <member kind="slot">
      <type>ComponentPtr</type>
      <name>CreateComponent</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a258011da68787b82a1ae0afdcaf97435</anchor>
      <arglist>(const QString &amp;type_name, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default, bool replicated=true)</arglist>
    </member>
    <member kind="slot">
      <type>ComponentPtr</type>
      <name>CreateComponent</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a87c9fb535afeb9ae35fcde1a7ffc215c</anchor>
      <arglist>(u32 typeId, AttributeChange::Type change=AttributeChange::Default, bool replicated=true)</arglist>
    </member>
    <member kind="slot">
      <type>ComponentPtr</type>
      <name>CreateComponent</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a1b2645103ec184d8f2135c71022f4fe2</anchor>
      <arglist>(u32 typeId, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default, bool replicated=true)</arglist>
    </member>
    <member kind="slot">
      <type>ComponentPtr</type>
      <name>CreateLocalComponent</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a06593dc3d6da3559ec83626b074972e9</anchor>
      <arglist>(const QString &amp;type_name)</arglist>
    </member>
    <member kind="slot">
      <type>ComponentPtr</type>
      <name>CreateLocalComponent</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>ae37d83e09b232f290b930a912960c79c</anchor>
      <arglist>(const QString &amp;type_name, const QString &amp;name)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>AddComponent</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>aef91d3577f7cd0ab34730382aaf547dd</anchor>
      <arglist>(const ComponentPtr &amp;component, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>AddComponent</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a2b18bf2677a2d7f87ac0438b498452e3</anchor>
      <arglist>(component_id_t id, const ComponentPtr &amp;component, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveComponent</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>af27aa69062b90b617a326430b069be4d</anchor>
      <arglist>(const ComponentPtr &amp;component, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="slot">
      <type>ComponentVector</type>
      <name>GetComponents</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a0b61d5f8d76db4d609ac04811d4eba1a</anchor>
      <arglist>(const QString &amp;type_name) const </arglist>
    </member>
    <member kind="slot">
      <type>IAttribute *</type>
      <name>GetAttribute</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a716ba8d45bc341acc32d9888830b00fa</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>AttributeVector</type>
      <name>GetAttributes</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a1370ca1506d9ff84782e1e099aed1ae9</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>EntityPtr</type>
      <name>Clone</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>ae9db41964043180b3ba3c91d5a896fe2</anchor>
      <arglist>(bool local, bool temporary) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SerializeToXML</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a3b94b11b02258a8ff8619524a406fcde</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;base_element) const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>SerializeToXMLString</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a479409c3766434de52cab7667788c27a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveComponent</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>ad8caddf14054061f816a5b4a1e4f6b5c</anchor>
      <arglist>(const QString &amp;type_name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveComponent</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a10597ebb3bcba3878e67a68ca5301dba</anchor>
      <arglist>(const QString &amp;type_name, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveComponentById</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a2d51dad58005def6d1893e044d8e0aff</anchor>
      <arglist>(component_id_t id, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="slot">
      <type>QObjectList</type>
      <name>GetComponentsRaw</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a9632e5cc3bf809cdaf2bc314b4658991</anchor>
      <arglist>(const QString &amp;type_name) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a361490c0504980e3e470de6c3a6d08a4</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>Name</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>ae495b08dd4c2a8912ba57d93ea8a8053</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetDescription</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a13d5db5d1d557355be10acd522f27b80</anchor>
      <arglist>(const QString &amp;desc)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>Description</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a910cfbe83b8f65e7ae4d310b23d84239</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveComponentRaw</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>ae0d15a76a4d48c8bafa14a9f985152c3</anchor>
      <arglist>(QObject *comp)</arglist>
    </member>
    <member kind="slot">
      <type>EntityAction *</type>
      <name>Action</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a77ac1c77af328932e64cfb86f98b46fb</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveAction</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>ae69e2b4c0cbc92f8c167a5e567de4751</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ConnectAction</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a7eb190599f302b4670dd532b5ec11976</anchor>
      <arglist>(const QString &amp;name, const QObject *receiver, const char *member)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Exec</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a1450f3aaad3e3824488fcd3668d34d5e</anchor>
      <arglist>(EntityAction::ExecTypeField type, const QString &amp;action, const QString &amp;p1=&quot;&quot;, const QString &amp;p2=&quot;&quot;, const QString &amp;p3=&quot;&quot;)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Exec</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a6f71ddd512a7643b6d665a5f11ecfa84</anchor>
      <arglist>(EntityAction::ExecTypeField type, const QString &amp;action, const QStringList &amp;params)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Exec</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a56791a628ddb057d8e7af862af3fa5d2</anchor>
      <arglist>(EntityAction::ExecTypeField type, const QString &amp;action, const QVariantList &amp;params)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTemporary</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>aeef534cfd0df30ea5abdd03e939302a4</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsTemporary</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>adf3c342a38ca740234dd232d5592f582</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsLocal</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a5b858ee7e85b268ad8691044f10e57d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsReplicated</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a23c6a78003b3d5af0f683da1fb1919bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsUnacked</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a70131fb852390b86309aec09d816fd8a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>ToString</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>aec5aaaae376a7c7d98c004aad3099e76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>toString</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a4c306dda7a8ead1c62411296f1b0508d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>entity_id_t</type>
      <name>Id</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>ae0d15bdc9f80a973fbde01f03606c986</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>const ComponentMap &amp;</type>
      <name>Components</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>aacb3afcbcdfa927b53e2a28a446a511b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>aad89093932b99ddae595833b9b9c58c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Scene *</type>
      <name>ParentScene</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a8d4fb303175179ff4c59800a3cf76188</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>const ActionMap &amp;</type>
      <name>Actions</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a945e8493117ba0e0e1b1d4cca76946e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentAdded</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a1ee4ef1ca0b11746545c47da9446a924</anchor>
      <arglist>(IComponent *component, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentRemoved</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a2a8df69a6d95b03e23474ed1aade622c</anchor>
      <arglist>(IComponent *component, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>EntityRemoved</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>ad60455b7d3c7dafd0b7f751d1e46c050</anchor>
      <arglist>(Entity *entity, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>EnterView</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>aef5ddcfb9973ad9514a25c68fdc554e9</anchor>
      <arglist>(IComponent *camera)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>LeaveView</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>aaf4a93127f3d56e6f48d2ab7bc34692a</anchor>
      <arglist>(IComponent *camera)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Entity</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>adf6d3f7cb1b2ba029b6b048a395cc8ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boost::shared_ptr&lt; T &gt;</type>
      <name>GetComponent</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>aa72e291cbdeebf263448ac6d24095f68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; boost::shared_ptr&lt; T &gt; &gt;</type>
      <name>GetComponents</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>aaf2c42951f67569f9b4b7e487a9c3f5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>boost::shared_ptr&lt; T &gt;</type>
      <name>GetComponent</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a067b0260eb153e860ad98fc06195981f</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>Attribute&lt; T &gt; *</type>
      <name>GetAttribute</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a2fbaa480634cfc72105f8f9a6c0e5222</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Attribute&lt; T &gt; &gt;</type>
      <name>GetAttributes</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a8a5a030109a2dc394f9dc40c7aadaf93</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SerializeToBinary</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a7889c56f7d1e1c133ae9cbd0234095bc</anchor>
      <arglist>(kNet::DataSerializer &amp;dst) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EmitEnterView</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a1c1d9283f2fb43705cc085cb48534f9e</anchor>
      <arglist>(IComponent *camera)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EmitLeaveView</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a66618f3614671f25c239631af0190aba</anchor>
      <arglist>(IComponent *camera)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>af50e572de8bf4ecf1a917a6f922cbd2d</anchor>
      <arglist>(const Entity &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>abf0cffa21de188c2395d9055bc1f98eb</anchor>
      <arglist>(const Entity &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>ad6a461499f8fd12d48506e0564c5f6fe</anchor>
      <arglist>(const Entity &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ChangeComponentId</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>aada4eb8e64a14052a70ec64f41aeee7c</anchor>
      <arglist>(component_id_t old_id, component_id_t new_id)</arglist>
    </member>
    <member kind="function">
      <type>ComponentPtr</type>
      <name>CreateComponentWithId</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a99167f74cf5d43254e49eb35ba4ba643</anchor>
      <arglist>(component_id_t compId, u32 typeId, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>id</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>af1adcd9fc9962ce86ba20aa8ee4da902</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a623c98d92aebaddd3dcf7c9a56219d95</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>description</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a18ea70e4a59826ece671f605559275b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>replicated</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a12e886ac19fc9d279ea0746432f8f6bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>local</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>abcc3efad9e0e0220fa015a19349a149c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>unacked</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a3652d9a41105580917cabddc51dadaf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Entity</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a08b71e5a78145c69115518c5edb1f7e6</anchor>
      <arglist>(Framework *framework, Scene *scene)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Entity</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>acc2024dbde108860a89767f905d85c78</anchor>
      <arglist>(Framework *framework, entity_id_t id, Scene *scene)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetNewId</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>acea172fb2de342e1d9e94d135dfbbc7d</anchor>
      <arglist>(entity_id_t id)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetScene</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>adce1614d0e80d1f849c86b3cea3baf1b</anchor>
      <arglist>(Scene *scene)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>HasReceivers</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>adc7434a8537b6f6a17f17d922635b515</anchor>
      <arglist>(EntityAction *action)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>EmitEntityRemoved</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>ac9f2fc5403e5b9ef9972fd60976e7706</anchor>
      <arglist>(AttributeChange::Type change)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>UniqueIdGenerator</type>
      <name>idGenerator_</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a64c1b884fb7562d52c3164e650a1709e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ComponentMap</type>
      <name>components_</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>adaac93ba6e34089a12c49ac39b6acef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>entity_id_t</type>
      <name>id_</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a153c2a4abc8252531e587165298c1c98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework_</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a0df7c4b96ef4a1eb1be37acec4fc5644</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Scene *</type>
      <name>scene_</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>ac6449baa6c59026c26ab855dfe1d7d02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ActionMap</type>
      <name>actions_</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a4395d4d53e1e0e9e1efa47b2eb3262fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>temporary_</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>ad896ce09f325af3e81b296bcf89fcf61</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Scene</name>
      <anchorfile>class_entity.html</anchorfile>
      <anchor>a032858ae1fe02d2d1170981c2af2d67c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EntityAction</name>
    <filename>class_entity_action.html</filename>
    <member kind="enumeration">
      <name>ExecType</name>
      <anchorfile>class_entity_action.html</anchorfile>
      <anchor>a234a57562c46fe98c522faeea2a28bda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Invalid</name>
      <anchorfile>class_entity_action.html</anchorfile>
      <anchor>a234a57562c46fe98c522faeea2a28bdaa99e8586c4e5d1b5b5902238905ea7c1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Local</name>
      <anchorfile>class_entity_action.html</anchorfile>
      <anchor>a234a57562c46fe98c522faeea2a28bdaa53103dd477b3ee5d78a54a0e53a79ad7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Server</name>
      <anchorfile>class_entity_action.html</anchorfile>
      <anchor>a234a57562c46fe98c522faeea2a28bdaa7c19633025ba1842b9648c95de7ff342</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Peers</name>
      <anchorfile>class_entity_action.html</anchorfile>
      <anchor>a234a57562c46fe98c522faeea2a28bdaa33612d9c70062eca07f91b9beb35f579</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>ExecTypeField</name>
      <anchorfile>class_entity_action.html</anchorfile>
      <anchor>a4da9db8d7691829774e9cbaabfb33767</anchor>
      <arglist></arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Triggered</name>
      <anchorfile>class_entity_action.html</anchorfile>
      <anchor>a6e881be17e196b8d374a3fcf7a6b72bd</anchor>
      <arglist>(QString p1, QString p2, QString p3, QStringList rest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EntityAction</name>
      <anchorfile>class_entity_action.html</anchorfile>
      <anchor>a9e655c2d6b54dfad216e2c3c092612a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>Name</name>
      <anchorfile>class_entity_action.html</anchorfile>
      <anchor>a8affbb190622d0901e4d7fa52e382047</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>EntityAction</name>
      <anchorfile>class_entity_action.html</anchorfile>
      <anchor>ac2e90c5b27fede1be7862324c627093b</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Trigger</name>
      <anchorfile>class_entity_action.html</anchorfile>
      <anchor>a09240e80227ca82de547e8447515bf64</anchor>
      <arglist>(const QString &amp;p1=&quot;&quot;, const QString &amp;p2=&quot;&quot;, const QString &amp;p3=&quot;&quot;, const QStringList &amp;rest=QStringList())</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_entity_action.html</anchorfile>
      <anchor>a619c25ef4550afdc33ccb47ce4a82d71</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Entity</name>
      <anchorfile>class_entity_action.html</anchorfile>
      <anchor>a614439ccac0344926adc4c0165d64060</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EntityActionDialog</name>
    <filename>class_entity_action_dialog.html</filename>
    <member kind="slot">
      <type>QList&lt; EntityWeakPtr &gt;</type>
      <name>Entities</name>
      <anchorfile>class_entity_action_dialog.html</anchorfile>
      <anchor>a4a34afd6efa1348d0fcec72f2b0e0235</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>EntityAction::ExecTypeField</type>
      <name>ExecutionType</name>
      <anchorfile>class_entity_action_dialog.html</anchorfile>
      <anchor>ae91643727dca774db15e7e1ccf22e653</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>Action</name>
      <anchorfile>class_entity_action_dialog.html</anchorfile>
      <anchor>a821e08c12a808cb99efd61ce085cdffc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>Parameters</name>
      <anchorfile>class_entity_action_dialog.html</anchorfile>
      <anchor>ab9c61f6f9cc1b1bf6519d32d54aa4d15</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EntityActionDialog</name>
      <anchorfile>class_entity_action_dialog.html</anchorfile>
      <anchor>ad13d3524be53c7ed90cb5dc3df7a254a</anchor>
      <arglist>(const QList&lt; EntityWeakPtr &gt; &amp;entities, QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EntityActionDialog</name>
      <anchorfile>class_entity_action_dialog.html</anchorfile>
      <anchor>af068f824fb43e07239e9f79feeef0660</anchor>
      <arglist>(const QList&lt; EntityWeakPtr &gt; &amp;entities, const InvokeItem &amp;invokeItem, QWidget *parent=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>hideEvent</name>
      <anchorfile>class_entity_action_dialog.html</anchorfile>
      <anchor>a473a154cb3b767c5f04390c3474273de</anchor>
      <arglist>(QHideEvent *)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>CheckExecuteAccepted</name>
      <anchorfile>class_entity_action_dialog.html</anchorfile>
      <anchor>a1103f5931a9ffcf1ca1cf9933b78d749</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>Execute</name>
      <anchorfile>class_entity_action_dialog.html</anchorfile>
      <anchor>a8e9800fefadccd4d1d77f05f0c554fba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_entity_action_dialog.html</anchorfile>
      <anchor>aa552dcacda1d60e28981aba8d3d82708</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QComboBox *</type>
      <name>actionComboBox</name>
      <anchorfile>class_entity_action_dialog.html</anchorfile>
      <anchor>a78b36b8113fd45c13cdfadc1b71d120f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QLineEdit *</type>
      <name>parametersLineEdit</name>
      <anchorfile>class_entity_action_dialog.html</anchorfile>
      <anchor>a1666a7d09f1438bb5c493246da25d69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QCheckBox *</type>
      <name>localCheckBox</name>
      <anchorfile>class_entity_action_dialog.html</anchorfile>
      <anchor>a4ec9a2a9a0f5ea10b59035eab78fffc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QCheckBox *</type>
      <name>serverComboBox</name>
      <anchorfile>class_entity_action_dialog.html</anchorfile>
      <anchor>af410623db627899159f07ff157c86b6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QCheckBox *</type>
      <name>peersComboBox</name>
      <anchorfile>class_entity_action_dialog.html</anchorfile>
      <anchor>ab80d9e85d7c4c046a8acfd7bd3e42b3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QPushButton *</type>
      <name>execButton</name>
      <anchorfile>class_entity_action_dialog.html</anchorfile>
      <anchor>ab1790d7629637fc5979e551717d12ff4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QPushButton *</type>
      <name>execAndCloseButton</name>
      <anchorfile>class_entity_action_dialog.html</anchorfile>
      <anchor>ab8e61ecfd9daed5ae50b56219738ea4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QList&lt; EntityWeakPtr &gt;</type>
      <name>entities</name>
      <anchorfile>class_entity_action_dialog.html</anchorfile>
      <anchor>ac6d64a2e2dbd982240452761f66dddf4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>EntityComponentSelection</name>
    <filename>struct_entity_component_selection.html</filename>
    <member kind="variable">
      <type>EntityPtr</type>
      <name>entity</name>
      <anchorfile>struct_entity_component_selection.html</anchorfile>
      <anchor>aa11013c99b48b03e9db4fcd1c9d8ca5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ComponentPtr &gt;</type>
      <name>components</name>
      <anchorfile>struct_entity_component_selection.html</anchorfile>
      <anchor>ac4d15386017fd8f5423d88ca86ac441b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>EntityDesc</name>
    <filename>struct_entity_desc.html</filename>
    <member kind="function">
      <type></type>
      <name>EntityDesc</name>
      <anchorfile>struct_entity_desc.html</anchorfile>
      <anchor>a75bc274dfa89c5903a9155708e1387e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EntityDesc</name>
      <anchorfile>struct_entity_desc.html</anchorfile>
      <anchor>a9de854cf437d71f0726e57cfb45db84a</anchor>
      <arglist>(QString id_, QString name_=QString(), bool local_=false, bool temporary_=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>struct_entity_desc.html</anchorfile>
      <anchor>a436544fd24894697a25c845ef635c402</anchor>
      <arglist>(const EntityDesc &amp;rhs) const </arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>id</name>
      <anchorfile>struct_entity_desc.html</anchorfile>
      <anchor>a31fb00d9357e50cdfd9051e0a49a67ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>name</name>
      <anchorfile>struct_entity_desc.html</anchorfile>
      <anchor>ad5af94f1ca804b9bf101cc6fb2b4529b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>local</name>
      <anchorfile>struct_entity_desc.html</anchorfile>
      <anchor>a38ad89adbf41817a152261c19ca52892</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>temporary</name>
      <anchorfile>struct_entity_desc.html</anchorfile>
      <anchor>ad3dc4413823a3af07b1b3eb1a489b2fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QList&lt; ComponentDesc &gt;</type>
      <name>components</name>
      <anchorfile>struct_entity_desc.html</anchorfile>
      <anchor>a9bf0196feeb8dadc0d4c41bff8d3b91a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EntityItem</name>
    <filename>class_entity_item.html</filename>
    <member kind="function">
      <type></type>
      <name>EntityItem</name>
      <anchorfile>class_entity_item.html</anchorfile>
      <anchor>a79720b4c28605c2791a95eadcd3bcdb5</anchor>
      <arglist>(const EntityPtr &amp;entity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetText</name>
      <anchorfile>class_entity_item.html</anchorfile>
      <anchor>a1dece932a633f2a0954949e3442017ee</anchor>
      <arglist>(::Entity *entity)</arglist>
    </member>
    <member kind="function">
      <type>EntityPtr</type>
      <name>Entity</name>
      <anchorfile>class_entity_item.html</anchorfile>
      <anchor>a99c44ef2d8ebfc1922be2e481d7ee4e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>entity_id_t</type>
      <name>Id</name>
      <anchorfile>class_entity_item.html</anchorfile>
      <anchor>a9b995edcf55b71c7328dca99b7bb7c87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>class_entity_item.html</anchorfile>
      <anchor>a1c227298b0c6932bb66b52b97003bd0c</anchor>
      <arglist>(const QTreeWidgetItem &amp;rhs) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>entity_id_t</type>
      <name>id</name>
      <anchorfile>class_entity_item.html</anchorfile>
      <anchor>ad5a865c131f24b3097db465b99b5b163</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EntityWeakPtr</type>
      <name>ptr</name>
      <anchorfile>class_entity_item.html</anchorfile>
      <anchor>ac3487634492eb26db2f15f12bc007bec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EntityListWidgetItem</name>
    <filename>class_entity_list_widget_item.html</filename>
    <member kind="function">
      <type></type>
      <name>EntityListWidgetItem</name>
      <anchorfile>class_entity_list_widget_item.html</anchorfile>
      <anchor>ae248e99fbc021ea58192e922fc88c206</anchor>
      <arglist>(const QString &amp;name, QListWidget *list, const EntityPtr &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>EntityPtr</type>
      <name>Entity</name>
      <anchorfile>class_entity_list_widget_item.html</anchorfile>
      <anchor>a3e3a1eed013ebcc8db6953bd7364d6ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EntityWeakPtr</type>
      <name>entity</name>
      <anchorfile>class_entity_list_widget_item.html</anchorfile>
      <anchor>a3de22835c588354d490c30160f0e2210</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EntityPlacer</name>
    <filename>class_entity_placer.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>OnMouseEvent</name>
      <anchorfile>class_entity_placer.html</anchorfile>
      <anchor>ab4ed522631c078cdfe9db2edaf04768f</anchor>
      <arglist>(MouseEvent *mouse)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>MouseMove</name>
      <anchorfile>class_entity_placer.html</anchorfile>
      <anchor>a1b526d69c1cec0dda62c5072fbdf5bc8</anchor>
      <arglist>(MouseEvent *mouse)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Finished</name>
      <anchorfile>class_entity_placer.html</anchorfile>
      <anchor>a01492233e2b85f3e5d353291f7ff92c4</anchor>
      <arglist>(float3 location, Quat orientation)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>LocationChanged</name>
      <anchorfile>class_entity_placer.html</anchorfile>
      <anchor>a04e1fab41ff2267fd509591e1b32c93c</anchor>
      <arglist>(float3 location)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>OrientationChanged</name>
      <anchorfile>class_entity_placer.html</anchorfile>
      <anchor>a126b107372f22e12c5a3c077afb7ec90</anchor>
      <arglist>(Quat orientation)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EntityPlacer</name>
      <anchorfile>class_entity_placer.html</anchorfile>
      <anchor>abc7214bc8a9d7b0d26778271d1f26dac</anchor>
      <arglist>(Framework *framework, entity_id_t entityId=0, QObject *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EntityPlacer</name>
      <anchorfile>class_entity_placer.html</anchorfile>
      <anchor>aa95644c347070f209bc01dc2f2391851</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>DoRayCast</name>
      <anchorfile>class_entity_placer.html</anchorfile>
      <anchor>a5630effc692c25f2b9474ead6c9d801c</anchor>
      <arglist>(int x, int y, float3 &amp;result)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>float3</type>
      <name>location_</name>
      <anchorfile>class_entity_placer.html</anchorfile>
      <anchor>a28fa46fe8b9f17447a3ebaa6a2aca086</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Quat</type>
      <name>orientation_</name>
      <anchorfile>class_entity_placer.html</anchorfile>
      <anchor>a2fce25782db026ff3cfa48cba62017f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>InputContextPtr</type>
      <name>input_</name>
      <anchorfile>class_entity_placer.html</anchorfile>
      <anchor>a66d14530566b46186b5800b67cad5a1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EC_Placeable *</type>
      <name>placeable_</name>
      <anchorfile>class_entity_placer.html</anchorfile>
      <anchor>acbb269d1a5ba9f339bb2ea1bd7c4da28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework_</name>
      <anchorfile>class_entity_placer.html</anchorfile>
      <anchor>a23d50b81b4e0906438ad906e42919fea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EntityWeakPtr</type>
      <name>entity_</name>
      <anchorfile>class_entity_placer.html</anchorfile>
      <anchor>acbf5feb336ffa81a8d923ac9010ea395</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::Entity *</type>
      <name>meshEntity_</name>
      <anchorfile>class_entity_placer.html</anchorfile>
      <anchor>afe6482a70b1ba2eec4d9b1baa1f9dfc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>OgreWorldWeakPtr</type>
      <name>world_</name>
      <anchorfile>class_entity_placer.html</anchorfile>
      <anchor>a07d42faad69ada5ad369cfbba79c918a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>previousScrollValue_</name>
      <anchorfile>class_entity_placer.html</anchorfile>
      <anchor>adbdc5ae9873f739de1bca7eff5894ca5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>finished_</name>
      <anchorfile>class_entity_placer.html</anchorfile>
      <anchor>a8d61ec0097d04b45437d9363a1e13fe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useCustomMesh_</name>
      <anchorfile>class_entity_placer.html</anchorfile>
      <anchor>ad67ecde551113fd3a2a5c1371aa4e5ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>EntityReference</name>
    <filename>struct_entity_reference.html</filename>
    <member kind="function">
      <type></type>
      <name>EntityReference</name>
      <anchorfile>struct_entity_reference.html</anchorfile>
      <anchor>a03292a6e844a024d099a559110cf4d05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EntityReference</name>
      <anchorfile>struct_entity_reference.html</anchorfile>
      <anchor>a04916d91a7097abf9794ef03a3fd7bc5</anchor>
      <arglist>(const QString &amp;entityName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EntityReference</name>
      <anchorfile>struct_entity_reference.html</anchorfile>
      <anchor>abeb3e6d045f7927a3e8560dd1e6bd3a1</anchor>
      <arglist>(entity_id_t id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>struct_entity_reference.html</anchorfile>
      <anchor>a5a4f3afc00df9a6de3da9b4e4103b5d6</anchor>
      <arglist>(EntityPtr entity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>struct_entity_reference.html</anchorfile>
      <anchor>a28fbb3f54c9f2a9f95fefd5216a2d2b7</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="function">
      <type>EntityPtr</type>
      <name>Lookup</name>
      <anchorfile>struct_entity_reference.html</anchorfile>
      <anchor>a419abc164751d73c23ecfadd2740d7bc</anchor>
      <arglist>(Scene *scene) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>struct_entity_reference.html</anchorfile>
      <anchor>a6ecb2f3db1d3b8f6fdf2aeec33a53450</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>struct_entity_reference.html</anchorfile>
      <anchor>ad05a38d8118575a65843a55d85d97df4</anchor>
      <arglist>(const EntityReference &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>struct_entity_reference.html</anchorfile>
      <anchor>a41f797d5d627261fdd4f382930135683</anchor>
      <arglist>(const EntityReference &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>struct_entity_reference.html</anchorfile>
      <anchor>a528c78f386dc754a25b3882b63366385</anchor>
      <arglist>(const EntityReference &amp;rhs) const </arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>ref</name>
      <anchorfile>struct_entity_reference.html</anchorfile>
      <anchor>a9c4f15678727cf7a505c6f1a22329931</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>EntitySyncState</name>
    <filename>struct_entity_sync_state.html</filename>
    <member kind="function">
      <type></type>
      <name>EntitySyncState</name>
      <anchorfile>struct_entity_sync_state.html</anchorfile>
      <anchor>ac42ede5bb7ed42e2483c61a3e6221c04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveFromQueue</name>
      <anchorfile>struct_entity_sync_state.html</anchorfile>
      <anchor>a516c893aea8becdf6786d21ee94281a6</anchor>
      <arglist>(component_id_t id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MarkComponentDirty</name>
      <anchorfile>struct_entity_sync_state.html</anchorfile>
      <anchor>a14c30d1517b4d321488592d0542e7094</anchor>
      <arglist>(component_id_t id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MarkComponentRemoved</name>
      <anchorfile>struct_entity_sync_state.html</anchorfile>
      <anchor>ac6a6120aede7619d2e98d2891999f81c</anchor>
      <arglist>(component_id_t id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DirtyProcessed</name>
      <anchorfile>struct_entity_sync_state.html</anchorfile>
      <anchor>a08d15eca24a063404193a766fba5ad93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; ComponentSyncState * &gt;</type>
      <name>dirtyQueue</name>
      <anchorfile>struct_entity_sync_state.html</anchorfile>
      <anchor>ab5e29ed024a18385f5fac166a33d3688</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; component_id_t, ComponentSyncState &gt;</type>
      <name>components</name>
      <anchorfile>struct_entity_sync_state.html</anchorfile>
      <anchor>adf41a6364e90c904ccfdfbb691c7926b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>entity_id_t</type>
      <name>id</name>
      <anchorfile>struct_entity_sync_state.html</anchorfile>
      <anchor>a23db0e31751e9f48e16a954e6a8e87a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>removed</name>
      <anchorfile>struct_entity_sync_state.html</anchorfile>
      <anchor>a0cb40bd349dab0a2e030874f564a8d74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isNew</name>
      <anchorfile>struct_entity_sync_state.html</anchorfile>
      <anchor>aeddb46282640c0690091fbecb68034ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isInQueue</name>
      <anchorfile>struct_entity_sync_state.html</anchorfile>
      <anchor>a0e670be3c6075620cab76d451788413f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EntityWidgetItem</name>
    <filename>class_entity_widget_item.html</filename>
    <member kind="function">
      <type></type>
      <name>EntityWidgetItem</name>
      <anchorfile>class_entity_widget_item.html</anchorfile>
      <anchor>a206807a0124ac2db9b7ed9016fa6cfb6</anchor>
      <arglist>(const EntityDesc &amp;edesc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>class_entity_widget_item.html</anchorfile>
      <anchor>aa353a5647c909993321a9abd36d4a018</anchor>
      <arglist>(const QTreeWidgetItem &amp;rhs) const </arglist>
    </member>
    <member kind="variable">
      <type>EntityDesc</type>
      <name>desc</name>
      <anchorfile>class_entity_widget_item.html</anchorfile>
      <anchor>ae0f41d02b366df5c1830ebe1173a7b03</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>EnumStr</name>
    <filename>struct_enum_str.html</filename>
    <member kind="function">
      <type></type>
      <name>EnumStr</name>
      <anchorfile>struct_enum_str.html</anchorfile>
      <anchor>abcef72dc75199890e52fe98385200d23</anchor>
      <arglist>(QString name, unsigned value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EnumStr</name>
      <anchorfile>struct_enum_str.html</anchorfile>
      <anchor>a97b36039493099b3f9c2ccb57dd24fb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>name_</name>
      <anchorfile>struct_enum_str.html</anchorfile>
      <anchor>a07d57aa06222df65a3e2a0ed22761ae1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>value_</name>
      <anchorfile>struct_enum_str.html</anchorfile>
      <anchor>acaf0f5a2b9f118a3e2dff281bc766fee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Exception</name>
    <filename>class_exception.html</filename>
    <base>std::exception</base>
    <member kind="function">
      <type></type>
      <name>Exception</name>
      <anchorfile>class_exception.html</anchorfile>
      <anchor>a1b78336bb26edf8e784783cc150c5801</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Exception</name>
      <anchorfile>class_exception.html</anchorfile>
      <anchor>a132c022773e47ab1bfa68c25d0fe10ab</anchor>
      <arglist>(const char *const &amp;what)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Exception</name>
      <anchorfile>class_exception.html</anchorfile>
      <anchor>ae0fd52e62283ee92c085d767d0aab736</anchor>
      <arglist>(const Exception &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Exception &amp;</type>
      <name>operator=</name>
      <anchorfile>class_exception.html</anchorfile>
      <anchor>a71c844ee3ac32b7656c24386e9ab60a0</anchor>
      <arglist>(const Exception &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Exception</name>
      <anchorfile>class_exception.html</anchorfile>
      <anchor>ad1ba411de295ef2eeb02ba26284a829a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>class_exception.html</anchorfile>
      <anchor>a78154a31544a609cbd226d32574f52cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const char *</type>
      <name>what_</name>
      <anchorfile>class_exception.html</anchorfile>
      <anchor>aaeeead5e9903cb7649d59b130fe2a680</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>do_free_</name>
      <anchorfile>class_exception.html</anchorfile>
      <anchor>a8d3ac784e94c54832f6ac6fcbf101f7c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FactorialT</name>
    <filename>class_factorial_t.html</filename>
    <member kind="enumvalue">
      <name>val</name>
      <anchorfile>class_factorial_t.html</anchorfile>
      <anchor>a3e0a41454b48c031bb12adac611f10d2a75e9182cd05b077abbd91dc11c54f125</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>float2</name>
    <filename>classfloat2.html</filename>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>aed89f4b4c58a994af9259aa37cf08ccaabbfda5062f3cb60478cb620a9b0dc9c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float2</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a491ca6caabfa5f7eae5734817dac7774</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float2</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a8c0d90a91473a5f45d51f2fea088fd70</anchor>
      <arglist>(const float2 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float2</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>acf2d8df02f83affbd68e2bd6b8010b2b</anchor>
      <arglist>(float x, float y)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float2</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a0cb08ad03f73ebacdee4cdf93d7c63a1</anchor>
      <arglist>(const float *data)</arglist>
    </member>
    <member kind="function">
      <type>float *</type>
      <name>ptr</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>af3e631bf7690942064453a42cb3c5de6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const float *</type>
      <name>ptr</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a648b32598dcdfb315641fc8cb306d712</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CONST_WIN32 float</type>
      <name>operator[]</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>acf9a21191a3b01518f9eb3aed3581d1f</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>float &amp;</type>
      <name>operator[]</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a19e4469e2f2a0c3c55dacd1f222adddb</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>LengthSq</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a7eccada9a7d0caaa6989865ad5066c12</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Length</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>afcabf15cd80fb343eeb860b439af2d41</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Normalize</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a6ce6019e80f98e9b6db03e72bf8072e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Normalized</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a79a965365e7c59889451ef6973fde013</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>ScaleToLength</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a076421f5de5cbd0e6f2f290a13e1c06c</anchor>
      <arglist>(float newLength)</arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>ScaledToLength</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>aa30aa34e591569c084091e8109883617</anchor>
      <arglist>(float newLength) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNormalized</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a360da68a7cde689261baec6f05a4efef</anchor>
      <arglist>(float epsilonSq=1e-6f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsZero</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>aed2bad4a2133f974e058b72c5888056c</anchor>
      <arglist>(float epsilonSq=1e-6f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFinite</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>ac638e4eb1815b96b8b28f11ec47301e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPerpendicular</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>ae82b467bb4281335cf2f6df034bc4c9d</anchor>
      <arglist>(const float2 &amp;other, float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Equals</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>ae27a22f9e8b204e0c4003f878de5b741</anchor>
      <arglist>(const float2 &amp;rhs, float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Equals</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a67d1eb998e1924ff795dca5eec0fa5fd</anchor>
      <arglist>(float x, float y, float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>SumOfElements</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a1570178d20ee60cc35aa8cf43a74aea3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>ProductOfElements</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a7f2602af492575109992e8ef144036f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>AverageOfElements</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>af485f25c493b44835ba865c52dc96416</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>MinElement</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a01f125f81c26232d20294074cc5bf783</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>MinElementIndex</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a4d4b17eefb86a9dcb5a86fab8f934c4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>MaxElement</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>ac56ee2e784035131242bee4a59095db5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>MaxElementIndex</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a9ec37e80c0eae11947f0c7c25999553c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Abs</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a401c2329c794c95c7ab720f65630c1bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Neg</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a403720175f67529263fd5d88d6413965</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Recip</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>adedbd42ebc9593f1dcb22d80a7ed53d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Min</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a36c63b58bdb80820e81fc5585a557018</anchor>
      <arglist>(float ceil) const </arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Min</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a0cb2dd3665da87290b34b54c3b407fa2</anchor>
      <arglist>(const float2 &amp;ceil) const </arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Max</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>af01ee9608cf5338be4d2ffdfa696ff5e</anchor>
      <arglist>(float floor) const </arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Max</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>ac5992f5cdf00aaa1a2798d865ac71502</anchor>
      <arglist>(const float2 &amp;floor) const </arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Clamp</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>ae175be868c6bb59bb7c0bf7ee6b58b6d</anchor>
      <arglist>(float floor, float ceil) const </arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Clamp</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>aa76ff110ee1a2037cf5e4123adeef8d9</anchor>
      <arglist>(const float2 &amp;floor, const float2 &amp;ceil) const </arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Clamp01</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a3712d41a7fea195820adf5bef354e922</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a144f0058b30c7f3ea43ee946eee423da</anchor>
      <arglist>(const float2 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>DistanceSq</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>abf0aba842ae6cd78dc7c4848ae3249e7</anchor>
      <arglist>(const float2 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Dot</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a108c05368a0cf8e438e098ba6d41f408</anchor>
      <arglist>(const float2 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>PerpDot</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a8650ee452bf5791e359acc34a722f2ef</anchor>
      <arglist>(const float2 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Reflect</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>afd0d3922a0d3727fd2ddf7df90f23a77</anchor>
      <arglist>(const float2 &amp;normal) const </arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Refract</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a040bb2ed7e96e146fae992ddbe09dea9</anchor>
      <arglist>(const float2 &amp;normal, float negativeSideRefractionIndex, float positiveSideRefractionIndex) const </arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>ProjectTo</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a0d6db740bcc72db45804035d858957fc</anchor>
      <arglist>(const float2 &amp;direction) const </arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>ProjectToNorm</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a6c1067b077313b955a9b90097100381f</anchor>
      <arglist>(const float2 &amp;direction) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>AngleBetween</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a9e4bff08479a6b9b343b572dd3bace3b</anchor>
      <arglist>(const float2 &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>AngleBetweenNorm</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a71bd2bdc216312bae809be80718c94e6</anchor>
      <arglist>(const float2 &amp;normalizedVector) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Decompose</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>aa1752b6d5383ecbd335dc81553bb3b18</anchor>
      <arglist>(const float2 &amp;direction, float2 &amp;outParallel, float2 &amp;outPerpendicular) const </arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Lerp</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a199f0d886dd7845af665f2067fe45fcb</anchor>
      <arglist>(const float2 &amp;b, float t) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFromScalar</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a5fc0e5a8f719a0c985de38c7b6b2f841</anchor>
      <arglist>(float scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>ae4c691ce84446ab8d2ee0e8384394947</anchor>
      <arglist>(float x, float y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Rotate90CW</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>abdce5d286fb2f3f87c4afe75ee485e47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Rotated90CW</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a177435cb27eb657a9e4703f1e2d65ccf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Rotate90CCW</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>ac9ceec51456a4108a87a31029fd34c83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Rotated90CCW</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a6b322ca68f652878faf2a7fdc4de7b7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>operator-</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a5064c1b5d017dd1fa882ded2fbad90d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>operator+</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a9ec2a52ac4316f2ca3b899c74619636f</anchor>
      <arglist>(const float2 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>operator-</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a2775930433e6054e1f8b724ade47804d</anchor>
      <arglist>(const float2 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>operator*</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a3bc52f4a2a3f85ce79ac232461381bff</anchor>
      <arglist>(float scalar) const </arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>operator/</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a34f3bc48c26723ab49189972291d37b7</anchor>
      <arglist>(float scalar) const </arglist>
    </member>
    <member kind="function">
      <type>float2 &amp;</type>
      <name>operator+=</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a57d326ca45fe492a9aaaa093e88efc81</anchor>
      <arglist>(const float2 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float2 &amp;</type>
      <name>operator-=</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>ad298d3c87ab5558a005d47a89cf3b75a</anchor>
      <arglist>(const float2 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float2 &amp;</type>
      <name>operator*=</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a95ec71428f06214a59ec5725a7a13fbb</anchor>
      <arglist>(float scalar)</arglist>
    </member>
    <member kind="function">
      <type>float2 &amp;</type>
      <name>operator/=</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a7e0de24cd70bbff6201c5ca2df297a6c</anchor>
      <arglist>(float scalar)</arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Add</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a151dcb1c19b29a700cff5acd650fed6b</anchor>
      <arglist>(const float2 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Sub</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a65353dc7820dc9745a499189f23fc3bf</anchor>
      <arglist>(const float2 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Mul</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a42543159c2b09c65f28e1cd9d4dc9f01</anchor>
      <arglist>(float rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Div</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a53ed8abdccedfdef92f5dd1e47fd1c8b</anchor>
      <arglist>(float rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>Mul</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a14f4c5357f51a3e924dabaecec820883</anchor>
      <arglist>(const float2 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float2</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>aec4d2ec43f2152b2abcd64aed84623ce</anchor>
      <arglist>(const QVector2D &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator QVector2D</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a24d4f6b761a02c74c8f517b9501c6a53</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator QString</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a2b7b880bfb48ef50e451bf8999dbb78e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>toString</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a3be55003c068bae64b717785f9e4b131</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QVector2D</type>
      <name>ToQVector2D</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a185babf53066aed21013906f48ff0f7a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float2</type>
      <name>FromString</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a2965d7fb06bc3b00f0e50671ee93ed57</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float2</type>
      <name>Lerp</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a7493d167fbd7c833d82b319c6bbed28c</anchor>
      <arglist>(const float2 &amp;a, const float2 &amp;b, float t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Orthogonalize</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>ab9bea4b3d8546b3fd600b97f36d051d4</anchor>
      <arglist>(const float2 &amp;a, float2 &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Orthonormalize</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a4121ba950c7b538c865f88e98614fc7b</anchor>
      <arglist>(float2 &amp;a, float2 &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float2</type>
      <name>FromScalar</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a8a1d992926e25fa2e26e0127f861001a</anchor>
      <arglist>(float scalar)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>OrientedCCW</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a5093852b87d16cf3bbe2b0153d7fbaed</anchor>
      <arglist>(const float2 &amp;a, const float2 &amp;b, const float2 &amp;c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>MinAreaRect</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a7dba5a1df16b9eef8ded09c03858b4ec</anchor>
      <arglist>(const float2 *pointArray, int numPoints, float2 &amp;center, float2 &amp;uDir, float2 &amp;vDir)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float2</type>
      <name>RandomDir</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a3dca66d19db5a221ecef74ba3d5095a0</anchor>
      <arglist>(LCG &amp;lcg, float length=1.f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float2</type>
      <name>FromQVector2D</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a9651b69db8f4f97e8318cf94be0c02e0</anchor>
      <arglist>(const QVector2D &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float2</type>
      <name>FromString</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>add617df5ed4d80f27ef9792a1f35480f</anchor>
      <arglist>(const QString &amp;str)</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a0bb68b4a8de04ffea5f7aae53c48a613</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a0f1298f22c4ee20a369cd3b9c25b2cc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float2</type>
      <name>zero</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a4fd4f62a14b0a87d209b3f57cd97fe73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float2</type>
      <name>one</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>ac4fca28bd27640ffb8cb6769ac01ba58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float2</type>
      <name>unitX</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a0237af5f7a48ffe951d839c337de4528</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float2</type>
      <name>unitY</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>a8d8001d2154e3ab9be066e4cfd81a3f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float2</type>
      <name>nan</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>ad54063f247aacd629dde21e2240a7a13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float2</type>
      <name>inf</name>
      <anchorfile>classfloat2.html</anchorfile>
      <anchor>afaf623d0a9c4cf0c86b5b2ff01687c6b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>float3</name>
    <filename>classfloat3.html</filename>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a6e24a83d0a5215875bced3c45c872384ab86c96dd82d4f32a13b65047c54ce6d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float3</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>adf12f33c77fddf168c255d4ac6f93b07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float3</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>ac8262352458aa4b3d0dc9e5afa31c312</anchor>
      <arglist>(const float3 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float3</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a285d1970e16dd09d85a10deb8ce83fa7</anchor>
      <arglist>(float x, float y, float z)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float3</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a37bf36294fc3c3d49313bfb41da028ca</anchor>
      <arglist>(const float2 &amp;xy, float z)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float3</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>afde07f1814f3ef001ebcbb838641e6dc</anchor>
      <arglist>(const float *data)</arglist>
    </member>
    <member kind="function">
      <type>float *</type>
      <name>ptr</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a4f165c2b9bc0e020263aa37230d421a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const float *</type>
      <name>ptr</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a9b19a7c2ea5442e6c8d0e8b0c03b9053</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CONST_WIN32 float</type>
      <name>operator[]</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a679a8afd4957c31ccb199e5764701d22</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>float &amp;</type>
      <name>operator[]</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>ab058a6382e3a3743bae2848e28221b7f</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>xy</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a3b40fc94e82b8e6bbb8cacc3c9e70bda</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>LengthSq</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a10ac192fb68ed6e251852b4fffa09a68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Length</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a316461c437a708047c0505f067cd993e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Normalize</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a7f69a7a79c38c9f53c486222220088ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Normalized</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a8c8b5a528c81ec74b2e997b44e512bd8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>ScaleToLength</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a3f0831d362138fa9998b8fb4aa1735c6</anchor>
      <arglist>(float newLength)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ScaledToLength</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a6cab8563e5ab05aec838c14f87ffe88b</anchor>
      <arglist>(float newLength) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNormalized</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a567fc30da2923b17e1c936b09e0f419e</anchor>
      <arglist>(float epsilonSq=1e-6f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsZero</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a03e7edf87c90c62ee8f35fc0c0481458</anchor>
      <arglist>(float epsilonSq=1e-6f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFinite</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>ab2f503537b0151db4bf7f0d2c0d364e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPerpendicular</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a9dbd6d46d87354485923d728d8aecea6</anchor>
      <arglist>(const float3 &amp;other, float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Equals</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a359c71f1b9d5a2ebddab42453f691687</anchor>
      <arglist>(const float3 &amp;rhs, float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Equals</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>adbe9baa797c74ba5132b2c7b6c9afd9d</anchor>
      <arglist>(float x, float y, float z, float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>SumOfElements</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>aeca4fac014a2e11396f439d17f61f479</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>ProductOfElements</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a8d109325c2fe824ad26721728b3870f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>AverageOfElements</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a44e60f03a2dd9dd4b0621864533fda4a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>MinElement</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>aba40f286b1affc09abe23aca0498a201</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>MinElementIndex</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a0bef3b9c4f4932d6e10a398408dd404c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>MaxElement</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a55d8e17adee5dd3bf51956d91d0e152a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>MaxElementIndex</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>ac2b445e41db30e06c2aa1ac9117dc23d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Abs</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a83beda406934eea085b505371fb42401</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Neg</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a56a3f70f461c7c02e85bec84cdca3a47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Recip</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>aadbe3b010a66a45e0b1f167095536e96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Min</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>ae133bf88d88d160e514edc55f3c15f74</anchor>
      <arglist>(float ceil) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Min</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a995786f36160e764ce812bdb0a0415ca</anchor>
      <arglist>(const float3 &amp;ceil) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Max</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a5ebc9f4518a790e105efb4348fa1f5e9</anchor>
      <arglist>(float floor) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Max</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a67cc0ba5f5e5ca2752029719b5cb6ed4</anchor>
      <arglist>(const float3 &amp;floor) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Clamp</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>aec8925f21185b44f4c63a0dcaa898d0a</anchor>
      <arglist>(const float3 &amp;floor, const float3 &amp;ceil) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Clamp01</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>aea83dbfafd9b7cb2bb8e78e53bf88a27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Clamp</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>ac03dc43349311a4650466b85efd25132</anchor>
      <arglist>(float floor, float ceil) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>ab72461a5b065b5e94203a59bd20b2e68</anchor>
      <arglist>(const float3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>DistanceSq</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a00a3b62fabbd90a9bcdc53c2b87417b7</anchor>
      <arglist>(const float3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Dot</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a3c8a943de7f23ac6f9a841f12e108f13</anchor>
      <arglist>(const float3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Cross</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a6afb99bd3462fc9823363dee85000714</anchor>
      <arglist>(const float3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>OuterProduct</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a139fb6ad5644df6b5981fc9b19cca8b5</anchor>
      <arglist>(const float3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Perpendicular</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>afbd921f5166d11aac784a21196427815</anchor>
      <arglist>(const float3 &amp;hint=float3(0, 1, 0), const float3 &amp;hint2=float3(0, 0, 1)) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>AnotherPerpendicular</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>ac8f2c1a61fcd66bca5eb008f971ff9f7</anchor>
      <arglist>(const float3 &amp;hint=float3(0, 1, 0), const float3 &amp;hint2=float3(0, 0, 1)) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Reflect</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>ab8de7f5747ddc3cc2c7ab4877bed4eab</anchor>
      <arglist>(const float3 &amp;normal) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Refract</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a0f36d9c86fdf51d56f7f5ae96a5fd8c1</anchor>
      <arglist>(const float3 &amp;normal, float negativeSideRefractionIndex, float positiveSideRefractionIndex) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ProjectTo</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a697140b96c2042b66e9465f53d7d9e44</anchor>
      <arglist>(const float3 &amp;direction) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ProjectToNorm</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>acbcb432a348db47c8fdc730828ea125c</anchor>
      <arglist>(const float3 &amp;direction) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>AngleBetween</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a23522cab711817e2dc4f4f626fbb3ac5</anchor>
      <arglist>(const float3 &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>AngleBetweenNorm</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a16d23a8080a30f30fafda73dec37827d</anchor>
      <arglist>(const float3 &amp;normalizedVector) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Decompose</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a497211487794eaccf3d6ef8f823dffed</anchor>
      <arglist>(const float3 &amp;direction, float3 &amp;outParallel, float3 &amp;outPerpendicular) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Lerp</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a6b2aa3eaa2bb9db8f332706a583c4102</anchor>
      <arglist>(const float3 &amp;b, float t) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFromScalar</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a614562526fa695804f5d42d113a748b8</anchor>
      <arglist>(float scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a08b15c5faa15ad05b26ba311259905d5</anchor>
      <arglist>(float x, float y, float z)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>ToPos4</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a87ffc45dbcc4d2d93e9d083e7e22300d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>ToDir4</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a604f25a5286d7801696be368efcfa6a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator-</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>af75ae7181d7bcc39ad30991d97ab0547</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator+</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a32e7a45c62e965afdd8113b86b6ca6bc</anchor>
      <arglist>(const float3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator-</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a33dea92154eaac580ac4703b3c6c96ac</anchor>
      <arglist>(const float3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator*</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a6bd1029c7f4cce4c69f156b6c664626b</anchor>
      <arglist>(float scalar) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator/</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a998059f80cfa34a33345f094e5ae962d</anchor>
      <arglist>(float scalar) const </arglist>
    </member>
    <member kind="function">
      <type>float3 &amp;</type>
      <name>operator+=</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a2bc0529c9e530c64ff65f1af4af90765</anchor>
      <arglist>(const float3 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3 &amp;</type>
      <name>operator-=</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a3a1bd8124972b768eb3a5c8fbd734146</anchor>
      <arglist>(const float3 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3 &amp;</type>
      <name>operator*=</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a632ac0df03634d0e58b51c9ca8108a51</anchor>
      <arglist>(float scalar)</arglist>
    </member>
    <member kind="function">
      <type>float3 &amp;</type>
      <name>operator/=</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a4719d82df76dc4bf80531ca895c0b603</anchor>
      <arglist>(float scalar)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Add</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>af49d7a53a2945a6e45394a01d1ad1091</anchor>
      <arglist>(const float3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Sub</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>aea0c8edab6b83dc3e8e41566e3753ef2</anchor>
      <arglist>(const float3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Mul</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>ac10237bf294ce7449d3b6e664b0f570e</anchor>
      <arglist>(float rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Div</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a3b054a78e3d2887bf9eef317455f4cf3</anchor>
      <arglist>(float rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Mul</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a075a7510b0a2bab9f65ab0f0af48a947</anchor>
      <arglist>(const float3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float3</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>abe97e3d8b09339948ff6df6644727da7</anchor>
      <arglist>(const QVector3D &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator QVector3D</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>acce8b0b0b8b654ee2ea6af3cc14e97de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator QString</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a64ca423ed0a5d833f94e4bd221a38640</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>toString</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a622dd1272bf1dbcb9975279d04d6cd64</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QVector3D</type>
      <name>ToQVector3D</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a46f0a03a8c0c180976b3c6c01ba17358</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3</type>
      <name>FromString</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a6ab63849de98751820497e165219b3d3</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>ScalarTripleProduct</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a2fe7296dcaf783cdee3e6039939a0025</anchor>
      <arglist>(const float3 &amp;u, const float3 &amp;v, const float3 &amp;w)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3</type>
      <name>Lerp</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a82e2fdfc3139747077835a3a781fd6d8</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b, float t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Orthogonalize</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a99a0c5b25f4f9e59898f51f19dee18bd</anchor>
      <arglist>(const float3 &amp;a, float3 &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Orthogonalize</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a6e418396422e8445e93314b7af8f85bb</anchor>
      <arglist>(const float3 &amp;a, float3 &amp;b, float3 &amp;c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>AreOrthogonal</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a683d04569a48bb6dac5efff35159ba6e</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b, float epsilon=1e-3f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>AreOrthogonal</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>aa4770b7e5962ffbf0c6fa67572696815</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b, const float3 &amp;c, float epsilon=1e-3f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Orthonormalize</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>af04326aa44189694c7de516498e26ead</anchor>
      <arglist>(float3 &amp;a, float3 &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Orthonormalize</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a637c6e9f4302b86df23d336933d334b1</anchor>
      <arglist>(float3 &amp;a, float3 &amp;b, float3 &amp;c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>AreOrthonormal</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a41e07d3fb357db2b33a0b72860c940bc</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b, float epsilon=1e-3f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>AreOrthonormal</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>aefdbb5f745b77e405626971fc5508a55</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b, const float3 &amp;c, float epsilon=1e-3f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3</type>
      <name>FromScalar</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a2737ed71e4bc3e07d0860c4ec931fbe5</anchor>
      <arglist>(float scalar)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3</type>
      <name>RandomDir</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>aad59fbf71d4bd04eee29a91884c812bd</anchor>
      <arglist>(LCG &amp;lcg, float length=1.f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3</type>
      <name>RandomSphere</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>aea5d19f8dd570b093642d9fbd375752d</anchor>
      <arglist>(LCG &amp;lcg, const float3 &amp;center, float radius)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3</type>
      <name>RandomBox</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a011bbadba197053ccf0e45f3a206622d</anchor>
      <arglist>(LCG &amp;lcg, float xmin, float xmax, float ymin, float ymax, float zmin, float zmax)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3</type>
      <name>FromQVector3D</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a5421f78edfcda659b70ef495d5044f40</anchor>
      <arglist>(const QVector3D &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3</type>
      <name>FromString</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>adf354b97c1b933a42aaf8b9475dbe99a</anchor>
      <arglist>(const QString &amp;str)</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>af621f02abb1c788738fe61ea9807ff9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>aa6147d421a81889971f8c66aa92abf0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a772dffd42d89f350c5a1b766c4703245</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float3</type>
      <name>zero</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a8fa89b8703195369a62c0c67d2e48e55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float3</type>
      <name>one</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>af15b2d484ac5ff583dca24aa3f17a6e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float3</type>
      <name>unitX</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a7eba676a2dd0aa7292a2cce40ad65165</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float3</type>
      <name>unitY</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a0d77a09da35111a2a421aa3ce0301650</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float3</type>
      <name>unitZ</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a98995b3864f72862fdfbcc24568fb420</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float3</type>
      <name>nan</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a3c0027611e9bfb79b22346747ffc299d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float3</type>
      <name>inf</name>
      <anchorfile>classfloat3.html</anchorfile>
      <anchor>a2b181fe8f8598307c5c46ccc2f698ffc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>float3x3</name>
    <filename>classfloat3x3.html</filename>
    <member kind="enumvalue">
      <name>Rows</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a8fff9fa9eeed6101c9eaa5f6f0b9506da612fa48187cd8b6d17efcd32320625bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Cols</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a6771ca211236c3d30e599b236d10fb0fa1eefc4d03ccfea1507cdc79be4957e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float3x3</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a43cf4b3e2e02f524330c4159e8e8020f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float3x3</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>ad4cd4cd6b3bb450dda135beff5850bfb</anchor>
      <arglist>(const float3x3 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float3x3</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>ad86aee95862778835375b2ab705e1690</anchor>
      <arglist>(float _00, float _01, float _02, float _10, float _11, float _12, float _20, float _21, float _22)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float3x3</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a869dc06544ff6f63897e7711d34d96d3</anchor>
      <arglist>(const float3 &amp;col0, const float3 &amp;col1, const float3 &amp;col2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float3x3</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a2f77d44c8276b1efb88f371fbb6eeb9e</anchor>
      <arglist>(const Quat &amp;orientation)</arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>ToQuat</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a0fd5372a947f57de08d2cfddd372f0f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>GetScale</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a3bf40072836b2c21991f530d34eabc60</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MatrixProxy&lt; Cols &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a53fe90b248b0f1cba2e3c7455958e87e</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>const MatrixProxy&lt; Cols &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>abfbe6cdd9b9229707c416aeb4d91320a</anchor>
      <arglist>(int row) const </arglist>
    </member>
    <member kind="function">
      <type>float &amp;</type>
      <name>At</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a3fd88e65f18707955930783e9eb120c4</anchor>
      <arglist>(int row, int col)</arglist>
    </member>
    <member kind="function">
      <type>CONST_WIN32 float</type>
      <name>At</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>ab7a75521520e02aade2ab34ef97aa9f4</anchor>
      <arglist>(int row, int col) const </arglist>
    </member>
    <member kind="function">
      <type>float3 &amp;</type>
      <name>Row</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a0c537d61242ceebe97941dca027777e0</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>const float3 &amp;</type>
      <name>Row</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>affb09b83d56d198ea89608a99b295bc2</anchor>
      <arglist>(int row) const </arglist>
    </member>
    <member kind="function">
      <type>CONST_WIN32 float3</type>
      <name>Col</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>ae0b58c7ab1d38bcbc29cee2784248da2</anchor>
      <arglist>(int col) const </arglist>
    </member>
    <member kind="function">
      <type>CONST_WIN32 float3</type>
      <name>Diagonal</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a2620719dbbc4d21ed09b133c919d5ebd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ScaleRow</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a6a0260f72350444065da058dc1a5d0b9</anchor>
      <arglist>(int row, float scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ScaleCol</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>af6a42274c3ac0bfd53f12411579ffb76</anchor>
      <arglist>(int col, float scalar)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>WorldX</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a6e28aed8539c520167bc80ecacab19ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>WorldY</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>afbdae2082fc80ecd8402af2748603d37</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>WorldZ</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>af66e8d79fc05b4068ff51a8b94a675b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float *</type>
      <name>ptr</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a55dc7a0462ae477c5fab45c4340db004</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const float *</type>
      <name>ptr</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>adedaa71a791d3438c0d6b4e643e701e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRow</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a1bdb7877cdb0471b04ae04d8dd6b8963</anchor>
      <arglist>(int row, float x, float y, float z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRow</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a497ee6be794b96403b80cc36d9310dd1</anchor>
      <arglist>(int row, const float3 &amp;rowVector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRow</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a77482c68824c8adfab1c7026e06894e0</anchor>
      <arglist>(int row, const float *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCol</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a0d4ae063801874b46b89368bd3767150</anchor>
      <arglist>(int column, float x, float y, float z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCol</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>adbd8cc2ec012c0615cbb6c53b2cce19f</anchor>
      <arglist>(int column, const float3 &amp;columnVector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCol</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a3bb2563f1e81b3f9e7c2c861075d8207</anchor>
      <arglist>(int column, const float *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a1eb4121b281d1e21e56d837456574e57</anchor>
      <arglist>(float _00, float _01, float _02, float _10, float _11, float _12, float _20, float _21, float _22)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a393dae79eb1263e614b4bf2181d23ac0</anchor>
      <arglist>(const float3x3 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a5908a0dd07eec92d669a41a0a28563f7</anchor>
      <arglist>(const float *values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>ac9e0939a495290bd0835ad3b19a8aa40</anchor>
      <arglist>(int row, int col, float value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIdentity</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a395931472188bc3bfa6e1ca64316cd80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SwapColumns</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a500773a46c61d51908c2a6e94dccce4d</anchor>
      <arglist>(int col1, int col2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SwapRows</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a0bb2c078df751b680e21481076f7e763</anchor>
      <arglist>(int row1, int row2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRotatePartX</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a6852c340564b828a9046f0f8f98066c8</anchor>
      <arglist>(float angleRadians)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRotatePartY</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>afb20a1fa752e9b347ecd950e65106f67</anchor>
      <arglist>(float angleRadians)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRotatePartZ</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a838679d94a3a5b6f2b5cf3b89ccb1368</anchor>
      <arglist>(float angleRadians)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRotatePart</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a888dabcaf71012daebcc8585d89689bd</anchor>
      <arglist>(const float3 &amp;axisDirection, float angleRadians)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRotatePart</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a26ef484ff782a25d570b410a6c0cf29c</anchor>
      <arglist>(const Quat &amp;orientation)</arglist>
    </member>
    <member kind="function">
      <type>float3x3 &amp;</type>
      <name>operator=</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>abc78bce1336238420be084dc914b43c5</anchor>
      <arglist>(const Quat &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3x3 &amp;</type>
      <name>operator=</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a929b1d1cfd69195c6ea07e3900acdf39</anchor>
      <arglist>(const float3x3 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Determinant</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a94ebf2674a5c0b05c4cb4e2be6c9f0b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Inverse</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>ac74bc04339f437518b5fca817000b7a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>Inverted</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a5a3784ed8dcb67340cbf7dd0debcd24f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>InverseOrthogonal</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a7cf2fbcff045005c5cce577a3175d131</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>InverseOrthogonalUniformScale</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a1ab27ad5e15f9ca81f35fda54d8a685e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InverseOrthonormal</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a72b88a46eea751aed01ca26ea28e2685</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transpose</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a34b6df49d18fb30ca9d32c78445df94b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>Transposed</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a6ed51e364e5247906370bf38bcb07bd5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>InverseTranspose</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a1ec99bf39169e0f7e03e31610d9f4f2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>InverseTransposed</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>ada95c9b45d4bf3c7c966546699fde4e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Trace</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a6dc705fc749efc23658af0d829fd1f00</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Orthonormalize</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>ae05a1cb5f01e0ff18cb7b49d3114dd43</anchor>
      <arglist>(int firstColumn, int secondColumn, int thirdColumn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveScale</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a308ca5f82cf76d9a59018b4da0115e7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Transform</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>ae4dad6f136e95ede32f2dda42e2f9c02</anchor>
      <arglist>(const float3 &amp;vector) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Transform</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>afd055cfc6c89f0cb6da191e244acec8a</anchor>
      <arglist>(float x, float y, float z) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>TransformLeft</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a5111917891343c62bd70ffc286ae15f2</anchor>
      <arglist>(const float3 &amp;lhs) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Transform</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a2a1f45d7319b215386e5b192227a8416</anchor>
      <arglist>(const float4 &amp;vector) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BatchTransform</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a8e8b3669a6f10b09da19129dc47e1c56</anchor>
      <arglist>(float3 *pointArray, int numPoints) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BatchTransform</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a61347f7e146bd19fb311fdc3a6227cac</anchor>
      <arglist>(float3 *pointArray, int numPoints, int stride) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BatchTransform</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a3beef824a499e02e1896926e593b40b3</anchor>
      <arglist>(float4 *vectorArray, int numVectors) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BatchTransform</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>abd52bfc17864364e7865d6efc8604e63</anchor>
      <arglist>(float4 *vectorArray, int numVectors, int stride) const </arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>operator*</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>abacca277289ed228b20884bc3bbc3297</anchor>
      <arglist>(const float3x3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>operator*</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>ae03e9d16781ad21f5339c928c151e5e3</anchor>
      <arglist>(const Quat &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator*</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a1bc5a055194358e4f46d57ed5021c181</anchor>
      <arglist>(const float3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>operator*</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a6933ccb52938bb06cf88d54a7113d644</anchor>
      <arglist>(const float4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>operator*</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>ac6a9357ac58142e6284bc555816297dd</anchor>
      <arglist>(float scalar) const </arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>operator/</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a50c180db22463595eb5a7e831e7605d2</anchor>
      <arglist>(float scalar) const </arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>operator+</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a56aa7ca043320e2cd37284546070156d</anchor>
      <arglist>(const float3x3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>operator-</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>aca655c6f01bf8d76e39da217a4c0e68c</anchor>
      <arglist>(const float3x3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>operator-</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a0eb58a61a8929692cbf6046b4e84b56d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3x3 &amp;</type>
      <name>operator*=</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>aba40bfdd8b85f27889eeff38e03be8ec</anchor>
      <arglist>(float scalar)</arglist>
    </member>
    <member kind="function">
      <type>float3x3 &amp;</type>
      <name>operator/=</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a32ef4cdc52b7e5728410de686506d60e</anchor>
      <arglist>(float scalar)</arglist>
    </member>
    <member kind="function">
      <type>float3x3 &amp;</type>
      <name>operator+=</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>ab6b9a6afc171f3d0f2a9b1688e54378a</anchor>
      <arglist>(const float3x3 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3x3 &amp;</type>
      <name>operator-=</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a4f9ccafb2446e0115b850dfc33c5a597</anchor>
      <arglist>(const float3x3 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFinite</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>ac94f5114dfebd033583c6c866c6d4e24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsIdentity</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a6a7ad0eea63ac6ca50d28703193e65dd</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLowerTriangular</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a7665a5e085596b79153143a405ed30c8</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsUpperTriangular</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a42d2da2da8146a8d6f92de92ce70dbfc</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsInvertible</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>adced6bd1e498ee1b48f38cd856e63e12</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSymmetric</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>af1aea7c5cab4ab4fe596cde577b37f0b</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSkewSymmetric</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>ae752d53ff07146d204587df51d7a890a</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasUnitaryScale</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a7b8a0753f812b600c8d2981bee306db9</anchor>
      <arglist>(float epsilonSq=1e-6f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasNegativeScale</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>ab8373581f75cc9e300a0149e3692735e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasUniformScale</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>ae84ed07d39d035fbe9682c1500bc01e5</anchor>
      <arglist>(float epsilonSq=1e-6f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOrthogonal</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a32cd3d6024a21fa7f03a98b17b4c780d</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOrthonormal</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a8cf4e10d3c8281bc10d405d9fa84f5ef</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Equals</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>afd41a07c9502188117dde2c4050c4546</anchor>
      <arglist>(const float3x3 &amp;other, float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerXYX</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>ab2f8142a2daa1fcb5602a84c02283658</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerXZX</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a7a4011673a33a08549dc6fefea0ff306</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerYXY</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>af55028d1387dc1c402975dc11fe9a468</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerYZY</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>ad10e3ee6c7d7a7651cf752fc6b5d4e1d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerZXZ</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a3b2b2667d96d174b057703c7eb2db0c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerZYZ</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a9a87daed396feae66ef11d069bbef52e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerXYZ</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>aa5a39f99ce77c746b249f595e381bb62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerXZY</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>ac92f56b0d0bac38ef9f353342bb01010</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerYXZ</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a79e79b0a14328dd23082c75bf5daffca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerYZX</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a72bcc4ac0c03e07d14248a49fef3730f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerZXY</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>abb55160c0b7d85d92574ef2578bf32e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerZYX</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a647f77a4d5e7a40bfcad7b3eb5e12ed0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ExtractScale</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>acec7fa9798f84bc6a3e6df04701406eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Decompose</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a7198c0b6ec9b7f556b5aa18acd519137</anchor>
      <arglist>(Quat &amp;rotate, float3 &amp;scale) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Decompose</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>affd4581f2e545041d22b26c6818a3b6d</anchor>
      <arglist>(float3x3 &amp;rotate, float3 &amp;scale) const </arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>Mul</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a23ee15c235ddeea93480a39c4030f44c</anchor>
      <arglist>(const float3x3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>Mul</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a523d7b9242c34a655d0b71847abd8734</anchor>
      <arglist>(const float3x4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>Mul</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>aba9132c89a6ecc8ed0e030a99876ef99</anchor>
      <arglist>(const float4x4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>Mul</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a63e2f4226b24e3192a9bc8d487ea0b22</anchor>
      <arglist>(const Quat &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Mul</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a029d96ddf113fdf255c5e933674060e3</anchor>
      <arglist>(const float3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>MulPos</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a727011fdd408b13bca86ed0845e615cb</anchor>
      <arglist>(const float3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>MulDir</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a367924a013507134a527ff5e9d39902b</anchor>
      <arglist>(const float3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator QString</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a69413df94f6913fbe2df5f670cbe6d1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>toString</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a1e3cf04542e223ca5484ec631ac08791</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>RotateX</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a8bd3a012e34bc5adaa90c214f27dd337</anchor>
      <arglist>(float angleRadians)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>RotateY</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a1165026cf7d37a820d31aa598723d5fc</anchor>
      <arglist>(float angleRadians)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>RotateZ</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a8d8b5aa0726cdafd9358dbdabb8b449f</anchor>
      <arglist>(float angleRadians)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>RotateAxisAngle</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>af24d8c6d52d98d5669c549040ea6b65d</anchor>
      <arglist>(const float3 &amp;axisDirection, float angleRadians)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>RotateFromTo</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a8de13a862a20e50d313c3a614c8c5553</anchor>
      <arglist>(const float3 &amp;sourceDirection, const float3 &amp;targetDirection)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>LookAt</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>ae9ff1b3992467f41dd002c08515f6371</anchor>
      <arglist>(const float3 &amp;localForward, const float3 &amp;targetDirection, const float3 &amp;localUp, const float3 &amp;worldUp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>RandomRotation</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a6927aa0f3a1e1e142b34df59e8a1afe4</anchor>
      <arglist>(LCG &amp;lcg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>RandomGeneral</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a7a1230e409e904f76622b38a190378af</anchor>
      <arglist>(LCG &amp;lcg, float minElem, float maxElem)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>FromQuat</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>ae670302d0ecd50660118304b42b27d9f</anchor>
      <arglist>(const Quat &amp;orientation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>FromRS</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>afb8ea2879056bf14f9c4b3b30714fd87</anchor>
      <arglist>(const Quat &amp;rotate, const float3 &amp;scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>FromRS</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>aceffb4855bc9dbc6ef10026d92ecdcb1</anchor>
      <arglist>(const float3x3 &amp;rotate, const float3 &amp;scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>FromEulerXYX</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a48baee7cbfbcbae9f8bfd0e6eb5ce4ff</anchor>
      <arglist>(float ex, float ey, float ex2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>FromEulerXZX</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a1831c262a55eeccda157180794be98dd</anchor>
      <arglist>(float ex, float ez, float ex2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>FromEulerYXY</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a1fe7a5f7d05666e2803a1192b4c11c93</anchor>
      <arglist>(float ey, float ex, float ey2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>FromEulerYZY</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a22bc3752acc8af4005a9eeb9a42f67f8</anchor>
      <arglist>(float ey, float ez, float ey2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>FromEulerZXZ</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>aa981356a56a1a4f953467bb613e6c0ed</anchor>
      <arglist>(float ez, float ex, float ez2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>FromEulerZYZ</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>ad441457142f0c3f7a3cf858645faa2b3</anchor>
      <arglist>(float ez, float ey, float ez2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>FromEulerXYZ</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a237a49ccaccd6622653366d021a47b46</anchor>
      <arglist>(float ex, float ey, float ez)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>FromEulerXZY</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a6727e3d4d0d2d18b55d983ddf55b358c</anchor>
      <arglist>(float ex, float ez, float ey)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>FromEulerYXZ</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a3416adb468bcf1e88400fdf71c1fb445</anchor>
      <arglist>(float ey, float ex, float ez)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>FromEulerYZX</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>acda161a3ccf4b95c1a70b11735a5c574</anchor>
      <arglist>(float ey, float ez, float ex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>FromEulerZXY</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a00a499050a2dae60f24a024b42f910ed</anchor>
      <arglist>(float ez, float ex, float ey)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>FromEulerZYX</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>af69fe8ac054c72b99470d77ee4f6d884</anchor>
      <arglist>(float ez, float ey, float ex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ScaleOp</type>
      <name>Scale</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>adf647c55eae6af60543160dea0cc7806</anchor>
      <arglist>(float sx, float sy, float sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ScaleOp</type>
      <name>Scale</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a3521973f4facf685cb069375b4562ce8</anchor>
      <arglist>(const float3 &amp;scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>ScaleAlongAxis</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>af5a4f81777c4c4a126ad8e006bb0d299</anchor>
      <arglist>(const float3 &amp;axis, float scalingFactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ScaleOp</type>
      <name>UniformScale</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a5625791e9fdfc24d3e342c2420da6461</anchor>
      <arglist>(float uniformScale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>ShearX</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>ad507ed9fd38b9789748367cf8563413b</anchor>
      <arglist>(float yFactor, float zFactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>ShearY</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>aa31d0b178a95f77fd7e4b2ba3a0281d3</anchor>
      <arglist>(float xFactor, float zFactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>ShearZ</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>aaf3e9326e8b7f8067bb7035d5bcd31f0</anchor>
      <arglist>(float xFactor, float yFactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>Reflect</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a1ffc0a37d8aaff34a34309e5ea7d4d90</anchor>
      <arglist>(const Plane &amp;p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>OrthographicProjection</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a1de217cc27a0850bb1d42dac3efa6a50</anchor>
      <arglist>(const Plane &amp;target)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>OrthographicProjectionYZ</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a1e7cbd9d7452e90e913e67b6b284a6ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>OrthographicProjectionXZ</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a4ca8af27fb103b085525b5210dff51b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x3</type>
      <name>OrthographicProjectionXY</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>aca0d6eac5e9e879c4bde5316b3506c47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>v</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a17c3dc0b5f67d21835be2e852aa05cff</anchor>
      <arglist>[Rows][Cols]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float3x3</type>
      <name>zero</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a2a887df5e682e0a6ab083c886458cf47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float3x3</type>
      <name>identity</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a5bc6edc4334c20bb2abf43a3dcf43336</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float3x3</type>
      <name>nan</name>
      <anchorfile>classfloat3x3.html</anchorfile>
      <anchor>a4f083c6d030056c9cbe1a861bcf02ede</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>float3x4</name>
    <filename>classfloat3x4.html</filename>
    <member kind="enumvalue">
      <name>Rows</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>acfde0d0012e1dd3679ae0aeb0fe5e8f3adf3efe067b9ab19a4f1bc45ff12d4617</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Cols</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a4c8700cddd86662451f28a5250251db9a4acc2db0840026ed19ef1a742d31a602</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float3x4</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a79affaa72403dca21e61164d83f7162c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float3x4</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a8be72e4b723f180decd71a4455bc4a9e</anchor>
      <arglist>(const float3x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float3x4</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a2baf4debe9867904a7b43bb68b064b77</anchor>
      <arglist>(float _00, float _01, float _02, float _03, float _10, float _11, float _12, float _13, float _20, float _21, float _22, float _23)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float3x4</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a67756cacb53dfff7ce3780767ac6e49f</anchor>
      <arglist>(const float3x3 &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float3x4</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a18c7e9f0156ad54c4fbfecbb45032a52</anchor>
      <arglist>(const float3x3 &amp;other, const float3 &amp;translate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float3x4</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a66acb685ada23813139f2a949f328d6e</anchor>
      <arglist>(const float3 &amp;col0, const float3 &amp;col1, const float3 &amp;col2, const float3 &amp;col3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float3x4</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>adc1387c3930bf6e40b35b3e82c371996</anchor>
      <arglist>(const Quat &amp;orientation)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float3x4</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ac2c76e6c7e4e7138530e27d57d79bd1d</anchor>
      <arglist>(const Quat &amp;orientation, const float3 &amp;translation)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>GetScale</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ae7243cb421c6518f7de52cafc9dc1f33</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MatrixProxy&lt; Cols &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ac58dbcb5084e86c6a80f94d1e076ba79</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>const MatrixProxy&lt; Cols &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a91cbcb7f122f7fc6f3d9b8c6f9f64dd5</anchor>
      <arglist>(int row) const </arglist>
    </member>
    <member kind="function">
      <type>float &amp;</type>
      <name>At</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a9bdc6582d1f8e7aba00279f815e292cb</anchor>
      <arglist>(int row, int col)</arglist>
    </member>
    <member kind="function">
      <type>CONST_WIN32 float</type>
      <name>At</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ae9c6eaa5244e82cb8d4b75a4e5fd5743</anchor>
      <arglist>(int row, int col) const </arglist>
    </member>
    <member kind="function">
      <type>float4 &amp;</type>
      <name>Row</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ac01bc0b6f89bb3bbca30fc1eae619730</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>const float4 &amp;</type>
      <name>Row</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a6a69ff5ea69014700b9d4eab5b60e8c5</anchor>
      <arglist>(int row) const </arglist>
    </member>
    <member kind="function">
      <type>float3 &amp;</type>
      <name>Row3</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a7efe97d50d186b2df6c7bbb662ce8c41</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>const float3 &amp;</type>
      <name>Row3</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ada3d9081fa9e3b379a9e170dd08f7612</anchor>
      <arglist>(int row) const </arglist>
    </member>
    <member kind="function">
      <type>CONST_WIN32 float3</type>
      <name>Col</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a31aaf7c2d91730690cded710b71bab2e</anchor>
      <arglist>(int col) const </arglist>
    </member>
    <member kind="function">
      <type>CONST_WIN32 float3</type>
      <name>Diagonal</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>accca8c66728fd926791a76d37621af5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ScaleRow3</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a7e4ff79410d6907ae3ddc78ff7b2beb1</anchor>
      <arglist>(int row, float scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ScaleRow</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a895e5aaafa1224ea8b7bed65ba154faa</anchor>
      <arglist>(int row, float scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ScaleCol</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a122e00d8d1f413b92a5b72d9cd02d48e</anchor>
      <arglist>(int col, float scalar)</arglist>
    </member>
    <member kind="function">
      <type>CONST_WIN32 float3x3</type>
      <name>Float3x3Part</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ab0e11cefb5455112b27d97648466e5bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CONST_WIN32 float3</type>
      <name>TranslatePart</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>aaf40bca5c4fc148fa028d8e578ce8cba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CONST_WIN32 float3x3</type>
      <name>RotatePart</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ab6b8db723516bac3a64b513bff3e4d0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>WorldX</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ac1e8c99fa3654d4170834d63a18a0688</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>WorldY</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a3cd135c3adc708481ce967b58f78606d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>WorldZ</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ade2d7816d5f3bfd12cb053ee77c07bfd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float *</type>
      <name>ptr</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a207f119f30566161ebd4980e046e515a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const float *</type>
      <name>ptr</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>af274f15d2421a57e309cd0505e84e31e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRow</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a5d4564f87e86acd1c45662a9503b5f11</anchor>
      <arglist>(int row, const float3 &amp;rowVector, float m_r3)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRow</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a51da82cd2a52baff72bd97cd8e3e869a</anchor>
      <arglist>(int row, const float4 &amp;rowVector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRow</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a8308cf215e491ff6aa0c1ae1fcc48f19</anchor>
      <arglist>(int row, const float *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRow</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ae78db8b9c540201cbe1f2ebdd68ec202</anchor>
      <arglist>(int row, float m_r0, float m_r1, float m_r2, float m_r3)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCol</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>aa26e3ce539e6e56aa188df01a8a8f626</anchor>
      <arglist>(int column, const float3 &amp;columnVector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCol</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a63f025b7925a4501071a716ccdd42c95</anchor>
      <arglist>(int column, const float *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCol</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a1c5bd08746a92517703d411b3eddd008</anchor>
      <arglist>(int column, float m_0c, float m_1c, float m_2c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a2fc719a3b8d020b0f0f84aa720858f9d</anchor>
      <arglist>(float _00, float _01, float _02, float _03, float _10, float _11, float _12, float _13, float _20, float _21, float _22, float _23)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a524f83eeff9c529af3c44305ba4dfc1b</anchor>
      <arglist>(const float3x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a6d2eca99245b95c2213a2d99638af4aa</anchor>
      <arglist>(const float *values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>adfb23e3095ae0d25b57fad474079c892</anchor>
      <arglist>(int row, int col, float value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set3x3Part</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ad983d2e4a5444da65a69eee7bbeb72dd</anchor>
      <arglist>(const float3x3 &amp;rotation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIdentity</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>aeaa1952b51cc351a15e9ff10f97a770d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SwapColumns</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a7769ff0b71ea64100c20342d6eff77d8</anchor>
      <arglist>(int col1, int col2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SwapRows</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a6ca8a19f0c64a5e4f18aeaeeaa938469</anchor>
      <arglist>(int row1, int row2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTranslatePart</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a51e26416501f64e6b44eda1f31eaa23d</anchor>
      <arglist>(float tx, float ty, float tz)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTranslatePart</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>aa20fdf51bd1af70c691c8224f0a628a1</anchor>
      <arglist>(const float3 &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRotatePartX</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ac4c066dedf4cb60b96d24a348a784b70</anchor>
      <arglist>(float angleRadians)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRotatePartY</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ac5ad8c6049413ba95dcc54161de9b6d3</anchor>
      <arglist>(float angleRadians)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRotatePartZ</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a2ea90ff83d8ef5be94d6179356b5746b</anchor>
      <arglist>(float angleRadians)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRotatePart</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>aef695f088c2c582124d9d1ba7eb6a9bf</anchor>
      <arglist>(const float3 &amp;axisDirection, float angleRadians)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRotatePart</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a13f1b88086730e25a503e7dcf53f873d</anchor>
      <arglist>(const Quat &amp;orientation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRotatePart</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ae8f7c86974dc5e9c2f2ff0eccdb93885</anchor>
      <arglist>(const float3x3 &amp;rotation)</arglist>
    </member>
    <member kind="function">
      <type>float3x4 &amp;</type>
      <name>operator=</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a57bd74672b2c386cc0fa242390dee413</anchor>
      <arglist>(const float3x3 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3x4 &amp;</type>
      <name>operator=</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a0959853b3e0b2678528418297553539c</anchor>
      <arglist>(const Quat &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3x4 &amp;</type>
      <name>operator=</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a1125f7f818ce089840de78db1bc4b5ec</anchor>
      <arglist>(const float3x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Determinant</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a618ae97effec0ad0388c62b3861aac34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Inverse</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>af6df80ece047e9accc7b8797a263d4ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>Inverted</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a2b30c6366f7be25d7718726564e966da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>InverseOrthogonal</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a6ca18508475c10319da40abfb6afe6c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>InverseOrthogonalUniformScale</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ab58686dcf50e74fd821ecebc15fbf750</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InverseOrthonormal</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a4c3a4d3e29f367822fcece2697f81551</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transpose3</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a3fbe881221759b8a6b9feee7119392a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>Transposed3</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ac040a5e21352949f92b2a0f8ebf3341a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>InverseTranspose</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ac5191f325f2e093a5f8f4b9046ffce09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>InverseTransposed</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ab63d342c3eea8903e304680d4f028f26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Trace</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a73b44325664b3c1ecc8f874a31ce6b4c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Orthonormalize</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a70ef07978d2eb5b5bfe4139c15cfdd12</anchor>
      <arglist>(int firstColumn, int secondColumn, int thirdColumn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveScale</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a058609b1fb0891e6bb705c8bf4131162</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>TransformPos</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>abef603125e904d86ea102dadf2cc90c5</anchor>
      <arglist>(const float3 &amp;pointVector) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>TransformPos</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>af905d08c00bde077281f829be402f6ca</anchor>
      <arglist>(float x, float y, float z) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>TransformDir</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a0dec584ca37ec2fade861431641cdb65</anchor>
      <arglist>(const float3 &amp;directionVector) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>TransformDir</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a070b8ba065fefc498f70d871a850e149</anchor>
      <arglist>(float x, float y, float z) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Transform</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a4da5be38f080e85c021b7f44b9b26061</anchor>
      <arglist>(const float4 &amp;vector) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BatchTransformPos</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>acce2ebc21d464effb778ff7382d0cd73</anchor>
      <arglist>(float3 *pointArray, int numPoints) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BatchTransformPos</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a4eb21109cf589455a221ce707fbb7971</anchor>
      <arglist>(float3 *pointArray, int numPoints, int stride) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BatchTransformDir</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a8540a4dd7bdb8983ac627b1529f303b1</anchor>
      <arglist>(float3 *dirArray, int numVectors) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BatchTransformDir</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ae3488f9a9b8af779c831dd3fac05353a</anchor>
      <arglist>(float3 *dirArray, int numVectors, int stride) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BatchTransform</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a8c36e4fc229af305514e1e5756a53710</anchor>
      <arglist>(float4 *vectorArray, int numVectors) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BatchTransform</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a96e8947d59528c00a863bff5fa477654</anchor>
      <arglist>(float4 *vectorArray, int numVectors, int stride) const </arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>operator*</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>af922cfa2f82f1a911453c595726b36e0</anchor>
      <arglist>(const float3x3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>operator*</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a2380154e1cfad3b44f1fced3dddd5cb1</anchor>
      <arglist>(const float3x4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>operator*</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a2abe80c35e1c05b46fbc4775683ce93d</anchor>
      <arglist>(const Quat &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>operator*</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>afaa7842505c5605413dd78e2f6de1b97</anchor>
      <arglist>(const float4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>operator*</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a5d6cf32a0f05d08b2af88b9d17c8d2f4</anchor>
      <arglist>(float scalar) const </arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>operator/</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a9397d76a0b87c1a2e5280e38cb825c11</anchor>
      <arglist>(float scalar) const </arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>operator+</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a2f0f399fcd5ad43d3646a5345a563e94</anchor>
      <arglist>(const float3x4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>operator-</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>aed1a3203f475da96698fd6ab1d2631d9</anchor>
      <arglist>(const float3x4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>operator-</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a8f60356a047860a405f78aa95f84ebad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3x4 &amp;</type>
      <name>operator*=</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a33e4ae07430de3badb398a10c8ceddeb</anchor>
      <arglist>(float scalar)</arglist>
    </member>
    <member kind="function">
      <type>float3x4 &amp;</type>
      <name>operator/=</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a0f39f351f9d9fb55c342a8a2b22f9004</anchor>
      <arglist>(float scalar)</arglist>
    </member>
    <member kind="function">
      <type>float3x4 &amp;</type>
      <name>operator+=</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a5d8c51f43543c81748a1ec775b9bd443</anchor>
      <arglist>(const float3x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float3x4 &amp;</type>
      <name>operator-=</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ab4658f0012a4e784da103e2860669ffe</anchor>
      <arglist>(const float3x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFinite</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>af3eb1d8d334ba3d3cc0a7d1e41db07dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsIdentity</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a9acc8011303871bac6aade3320427bb4</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLowerTriangular</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a11a2965303e77b9db0b41b6de16485ee</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsUpperTriangular</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a08a4245fa19e427f4c6b5296b38ccb17</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsInvertible</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>abdbf0b282c758a2d9a631b08f229d31b</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSymmetric</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a596cb0e9847492894a124bbe4408763e</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSkewSymmetric</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a353f485959cfbb71fefc99c2453c5cee</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasUnitaryScale</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ae2355482006873855d45367d7705a409</anchor>
      <arglist>(float epsilonSq=1e-6f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasNegativeScale</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a817176d9321f9d74719e442b00ff5ee6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasUniformScale</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a0c8ff8696fdc56e11cb2b2d14e24ea93</anchor>
      <arglist>(float epsilonSq=1e-6f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOrthogonal</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ae7f3e28382c9f3e07b3db4b0d72d82e7</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOrthonormal</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ae0d1c715c0d8e43eb11e1a3658b30031</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Equals</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a3ec1c39aeedceab6ee3c86ce0673fcd7</anchor>
      <arglist>(const float3x4 &amp;other, float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerXYX</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a8224cd22c30794970acccb0a6e57ea3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerXZX</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a99f7566df0c9422b9a102be7c9699899</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerYXY</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a5db68f39af688e2593acdc0121a61871</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerYZY</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a26f563de7021f969911e2512bbf6cac5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerZXZ</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a45d962ac148cf64c96ce520f4c8c1b9b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerZYZ</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a64e48f55b5928e365421b3c5e7410d50</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerXYZ</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a64a338b185a8f010c26d3fde1c5ccd06</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerXZY</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ad024e8c6aa3b159ed21be4e6be517c4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerYXZ</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a15e3bfc6dfd5787a61cd3ec520c190ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerYZX</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ab9810691d2ae1ca173aaec81875682ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerZXY</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a4d7b9f33421aca9700c66682c184e87a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerZYX</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ae8cdcb17837ddbe26371fba96e8456d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ExtractScale</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ac9d06b8af31eb16f5b907b5b1a8a1c54</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Decompose</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a7cb76970ddb27d44b6ef70fa1292df18</anchor>
      <arglist>(float3 &amp;translate, Quat &amp;rotate, float3 &amp;scale) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Decompose</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a44867811a03274d4957c4dfe4600f231</anchor>
      <arglist>(float3 &amp;translate, float3x3 &amp;rotate, float3 &amp;scale) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Decompose</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a1ed2f0748fb4f3ed7358416b856233f2</anchor>
      <arglist>(float3 &amp;translate, float3x4 &amp;rotate, float3 &amp;scale) const </arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>Mul</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a5b40b3a597fa7df1d579002cf3227551</anchor>
      <arglist>(const float3x3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>Mul</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a96f2814129586b54f6be3594bdca73ed</anchor>
      <arglist>(const float3x4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>Mul</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a98d4147e28c453a9df9e47394048e725</anchor>
      <arglist>(const float4x4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>Mul</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a52fabf40db8781854930d91196628602</anchor>
      <arglist>(const Quat &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>MulPos</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ad5457d40805c967738b22c41eecb2d88</anchor>
      <arglist>(const float3 &amp;pointVector) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>MulDir</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a842347b155dcf1b120e306ea0aa3e170</anchor>
      <arglist>(const float3 &amp;directionVector) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Mul</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>abf59622868c98223300a2e2ca4a5655a</anchor>
      <arglist>(const float4 &amp;vector) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator QString</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ace5cf7d28046d785d10e60c8dd75abcb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>toString</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a9df32998b14f74efa0d83a665e2cf100</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TranslateOp</type>
      <name>Translate</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a521a8e17c291c00343701f4d8b26629b</anchor>
      <arglist>(float tx, float ty, float tz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TranslateOp</type>
      <name>Translate</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a50a753e0330f47bdd93365a97bde15a9</anchor>
      <arglist>(const float3 &amp;offset)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>RotateX</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a569f1aef595184eb374e9625bb6390fd</anchor>
      <arglist>(float angleRadians)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>RotateX</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>af025f87ef0b95a14d675dc35ba220d47</anchor>
      <arglist>(float angleRadians, const float3 &amp;pointOnAxis)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>RotateY</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a8afeee78f69ebfb34dabe2e6914003d1</anchor>
      <arglist>(float angleRadians)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>RotateY</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a68b4c694e0614092588d04a40474e772</anchor>
      <arglist>(float angleRadians, const float3 &amp;pointOnAxis)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>RotateZ</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a0dbf44f8eb54de3c16b464bc39a865d4</anchor>
      <arglist>(float angleRadians)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>RotateZ</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a96aa12d61a9d1f6ba4593ca350220104</anchor>
      <arglist>(float angleRadians, const float3 &amp;pointOnAxis)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>RotateAxisAngle</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>adbb50a6d415de0eb79b86ef7a09cd890</anchor>
      <arglist>(const float3 &amp;axisDirection, float angleRadians)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>RotateAxisAngle</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a3c5607e278931d2b89c5c3bc40209c16</anchor>
      <arglist>(const float3 &amp;axisDirection, float angleRadians, const float3 &amp;pointOnAxis)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>RotateFromTo</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a3a4a488e01014f6998661f9bf8c19c27</anchor>
      <arglist>(const float3 &amp;sourceDirection, const float3 &amp;targetDirection)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>RotateFromTo</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a3592b11d95456892c7a2a48e034037db</anchor>
      <arglist>(const float3 &amp;sourceDirection, const float3 &amp;targetDirection, const float3 &amp;centerPoint)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>RandomGeneral</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>aeaa87df852e812e98a9d21c9002ca432</anchor>
      <arglist>(LCG &amp;lcg, float minElem, float maxElem)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>FromQuat</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>aba01c2b5dc131e0526694fb6c13c2164</anchor>
      <arglist>(const Quat &amp;orientation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>FromQuat</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>afe0a0fde71489415737853faf8d79cdf</anchor>
      <arglist>(const Quat &amp;orientation, const float3 &amp;pointOnAxis)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>FromTRS</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a23a9ebd2c002b6e3aff866ee945b5be8</anchor>
      <arglist>(const float3 &amp;translate, const Quat &amp;rotate, const float3 &amp;scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>FromTRS</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a0b68ea260cd23bd148d972b1d12b3867</anchor>
      <arglist>(const float3 &amp;translate, const float3x3 &amp;rotate, const float3 &amp;scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>FromTRS</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>af78a2e1d6caadb79757f4f893ca7aa7d</anchor>
      <arglist>(const float3 &amp;translate, const float3x4 &amp;rotate, const float3 &amp;scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>FromEulerXYX</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a2382bafb0dbe505a8d7866bc0f2a29fc</anchor>
      <arglist>(float ex, float ey, float ex2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>FromEulerXZX</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a6d769e7ab5c3167cab7528a866f8613a</anchor>
      <arglist>(float ex, float ez, float ex2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>FromEulerYXY</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>aca9b8b84053a47558c57b9a217957949</anchor>
      <arglist>(float ey, float ex, float ey2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>FromEulerYZY</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>aa9f5d931b9ac9b312b0079c5cd21a296</anchor>
      <arglist>(float ey, float ez, float ey2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>FromEulerZXZ</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a1b9ad54dc21caf16b08092114e378134</anchor>
      <arglist>(float ez, float ex, float ez2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>FromEulerZYZ</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a2a52b09786ef0b64d5ef7740bdbb84d8</anchor>
      <arglist>(float ez, float ey, float ez2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>FromEulerXYZ</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a9bfa7718187b62c00cea7d850a8cf6ab</anchor>
      <arglist>(float ex, float ey, float ez)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>FromEulerXZY</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>aac5849ddeab2ddd4fb48224ebbcf2503</anchor>
      <arglist>(float ex, float ez, float ey)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>FromEulerYXZ</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a0aefdcafac165d1e801207cfb1a2776e</anchor>
      <arglist>(float ey, float ex, float ez)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>FromEulerYZX</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>adf5dbdab27eef589d4becde21a52486f</anchor>
      <arglist>(float ey, float ez, float ex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>FromEulerZXY</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>ae9bf92f3bfae8553312e3d57979abb6b</anchor>
      <arglist>(float ez, float ex, float ey)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>FromEulerZYX</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a6b3ba6b62b82dfbd74f50a6bb45881ee</anchor>
      <arglist>(float ez, float ey, float ex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ScaleOp</type>
      <name>Scale</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a9b69b49bf6255454f7e1d536c698b2af</anchor>
      <arglist>(float sx, float sy, float sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ScaleOp</type>
      <name>Scale</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a498218ea77f5434b242f81b10f68adf0</anchor>
      <arglist>(const float3 &amp;scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>Scale</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a98699527a6d28985e425a0c4c02d207c</anchor>
      <arglist>(const float3 &amp;scale, const float3 &amp;scaleCenter)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>ScaleAlongAxis</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>aec3e38abe21e1aa9dd72a074303d8281</anchor>
      <arglist>(const float3 &amp;axis, float scalingFactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>ScaleAlongAxis</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>af8da9f30a0116e2409ceda5cb4f5ddeb</anchor>
      <arglist>(const float3 &amp;axis, float scalingFactor, const float3 &amp;scaleCenter)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ScaleOp</type>
      <name>UniformScale</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a3a45b16ccef7a6c6b2f322220bff5617</anchor>
      <arglist>(float uniformScale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>UniformScale</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a583dca1b31c957d73617a9c2490b2dbf</anchor>
      <arglist>(float uniformScale, const float3 &amp;scaleCenter)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>ShearX</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a99626d83d58aad2dc388b05867041c82</anchor>
      <arglist>(float yFactor, float zFactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>ShearY</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a9383fcfef5c4423e635c8a86e6f8ecc5</anchor>
      <arglist>(float xFactor, float zFactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>ShearZ</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a84dee3c8480bd64da6122104c4c7a4ff</anchor>
      <arglist>(float xFactor, float yFactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>Reflect</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a79babab4c18ea234a9487891232ea7d6</anchor>
      <arglist>(const Plane &amp;p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>OrthographicProjection</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a6c447c206e5e3c6a5e51fef141b8ce6b</anchor>
      <arglist>(float nearPlaneDistance, float farPlaneDistance, float horizontalViewportSize, float verticalViewportSize)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>OrthographicProjection</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a062fc1d2fd3f388e22d2509555fb6128</anchor>
      <arglist>(const Plane &amp;target)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>OrthographicProjectionYZ</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a8adec10115746f8a96b728177273ae05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>OrthographicProjectionXZ</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a2d6c72f229598e8aa1afa0f1b6d2deb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>OrthographicProjectionXY</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a4646389bd5763f9bc6fa9128adbb46fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3x4</type>
      <name>LookAt</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a910fdfffdb38216ffbeb96a4d42cf6de</anchor>
      <arglist>(const float3 &amp;localForwardDir, const float3 &amp;targetForwardDir, const float3 &amp;localUp, const float3 &amp;worldUp)</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>v</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>addbcc65791fb7930821e8faed2cf7955</anchor>
      <arglist>[Rows][Cols]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float3x4</type>
      <name>zero</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a96f7537edc5f05fba9eb8e07a3f2772f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float3x4</type>
      <name>identity</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>a55fa8a6b65fe3bf1738c35a75e7f582a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float3x4</type>
      <name>nan</name>
      <anchorfile>classfloat3x4.html</anchorfile>
      <anchor>aa1c0edf0a60c79ad6482bb47c082e147</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>float4</name>
    <filename>classfloat4.html</filename>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>ab1bba4be4c465ceb9e25d3880dac91c0a42b4159e202e5c969688762e3f9b18b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float4</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a219529d0e59732edc22565b299bd4bd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float4</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>afe0923ded8bc658f02501ab8a7ed468f</anchor>
      <arglist>(const float4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float4</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>aa97386d9a7f4bdddae47aab809cb3135</anchor>
      <arglist>(float x, float y, float z, float w)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float4</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>ab61db90c08426a76c4f632ae9b109452</anchor>
      <arglist>(const float3 &amp;xyz, float w)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float4</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>ae11409e5ceb7622bbc77bc11f631bfa6</anchor>
      <arglist>(const float2 &amp;xy, float z, float w)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float4</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>aba96b51ac1f9bf8563c22f06741735a2</anchor>
      <arglist>(const float *data)</arglist>
    </member>
    <member kind="function">
      <type>float *</type>
      <name>ptr</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>aa5460804e2281587801cd2734db89d54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const float *</type>
      <name>ptr</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a90a3887351e56d95da9f9b4584df5ea0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CONST_WIN32 float</type>
      <name>operator[]</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a9ac89257eda7e5e0c3a4016a16df42af</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>float &amp;</type>
      <name>operator[]</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>af11fb67ed651a16fa1bd29e14b9c71c1</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>xyz</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>af1bf444057acf5f78cc51cc7ada72886</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>LengthSq3</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a4315a03a0582afe7919c4ea09e40ad87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Length3</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a3541ddd8abaddfb0b6f9f9040015ef04</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>LengthSq4</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a81b9cc90f1ec052bdc0c1b06847890b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Length4</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>ad6195a57dba511e26062ef4a63722781</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Normalize3</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>aef9eef15376c6192c8c5a830a538d144</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Normalize4</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>add254b76468d66ca05f5a4377a3cc363</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Normalized3</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>ad004ee50b6bb7f94867495df1641ccc6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Normalized4</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a94e33dbdebcef92f9c2dd98a1f39c78f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>NormalizeW</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a0902195830609c28f5df41611284ab85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsWZeroOrOne</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>abc6709b1eb9bc845131aef55b6b585d2</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsZero3</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a64a6c8a0975c8167c3a8076e6c15a5ba</anchor>
      <arglist>(float epsilonSq=1e-6f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsZero4</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>ab8079fcd6bfa8dc78aa2b4fc37b1b79c</anchor>
      <arglist>(float epsilonSq=1e-6f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNormalized3</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a234900263ae738299f056a0843249878</anchor>
      <arglist>(float epsilonSq=1e-6f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNormalized4</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>aedb7c1cbbb373a35e86e16de2d047b6d</anchor>
      <arglist>(float epsilonSq=1e-6f) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Scale3</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a41d21c4f9eb6d9f12516def32964ccde</anchor>
      <arglist>(float scalar)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>ScaleToLength3</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a5609fb7dfd74e96c1d6f6dd25cf6ad4b</anchor>
      <arglist>(float newLength)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>ScaledToLength3</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a2b7eeeecb4e1df2888429db66da9bfb3</anchor>
      <arglist>(float newLength) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFinite</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>ab59d2a7431110c20c0d74f297253e284</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPerpendicular3</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a3acbe5220e2656f335e5746052a7eb0c</anchor>
      <arglist>(const float4 &amp;other, float epsilon=1e-6f) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>SumOfElements</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>acfefbb8359c0785d34af07bf3ca19641</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>ProductOfElements</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a3fab06453bb4d596c11ecd76da011dd4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>AverageOfElements</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>af401677582f0363127b56d55f2cc0927</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>MinElement</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a18d5cadc0601c27cbfccd2450e173a19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>MinElementIndex</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a8265745f8f18d12b3235f2798885d0e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>MaxElement</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>aa4379fa56e8d61abbf6cc6578fcbd16f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>MaxElementIndex</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a941da4505ad42f731ae73344c7d168ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Abs</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a487df689b41ff295a9235aee89332211</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Neg3</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a79a411431a135e47ef15c1763eaaae92</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Neg4</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>ac26b74aa498292ec2ab534393404d23d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Recip3</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a7b24b7186afc541f3a01df5b77d18f6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Recip4</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a956c4c8c8b43ea513c4bf879d2951536</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Min</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a90d090c20d7eef4a1ded5d4a58653782</anchor>
      <arglist>(float ceil) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Min</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a42e4ed56791e70a291546c812b8c2d1f</anchor>
      <arglist>(const float4 &amp;ceil) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Max</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>ac5b58d0ded7d5f5f9ab300ddad8b110b</anchor>
      <arglist>(float floor) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Max</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a8b78c5e648628fabef4c43b9d7c5b26c</anchor>
      <arglist>(const float4 &amp;floor) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Clamp</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a2c3a3365ba57baf21a980795a23b364b</anchor>
      <arglist>(const float4 &amp;floor, const float4 &amp;ceil) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Clamp01</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a6af8d070553d1ec574ced70f27a63676</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Clamp</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>ab3b71826c6ba1af7fa27cb3d207f925a</anchor>
      <arglist>(float floor, float ceil) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Lerp</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>af153d72bc1ad0fd4ba7c6c292dfeddf3</anchor>
      <arglist>(const float4 &amp;b, float t) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance3Sq</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a472ec38c7b8862d35b24fe8ac4b7cf11</anchor>
      <arglist>(const float4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance3</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>ab3681b001810934c4c64f4fa49092fb2</anchor>
      <arglist>(const float4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Dot3</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>ab66d34374fd69a8dbe7d30c7d2d54151</anchor>
      <arglist>(const float3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Dot3</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>ab62783a97a2116996061ed28ba1663f4</anchor>
      <arglist>(const float4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Dot4</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a36c118ed9080d87a4374a1d30051ca30</anchor>
      <arglist>(const float4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Cross3</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a5f7b9b812015196b1682deeb9894393b</anchor>
      <arglist>(const float3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Cross3</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a80595361fd55c62645ec8b0781d7a81a</anchor>
      <arglist>(const float4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>OuterProduct</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a551535caba59872daa559918c27c58c9</anchor>
      <arglist>(const float4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Perpendicular3</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a8d9f66cd0a7cb45612cd6476e91c4cec</anchor>
      <arglist>(const float3 &amp;hint=float3(0, 1, 0), const float3 &amp;hint2=float3(0, 0, 1)) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>AnotherPerpendicular3</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a10a5f82a7af3ff6d9fc7e2b0f8e5df68</anchor>
      <arglist>(const float3 &amp;hint=float3(0, 1, 0), const float3 &amp;hint2=float3(0, 0, 1)) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Reflect3</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a8504694ef5f7a0a8096a11a8248a6a99</anchor>
      <arglist>(const float3 &amp;normal) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>AngleBetween3</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a0174c61abe1b2237867bc8cae4ae2bc9</anchor>
      <arglist>(const float4 &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>AngleBetweenNorm3</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a5d2f397690c5c66a82295530e4372838</anchor>
      <arglist>(const float4 &amp;normalizedVector) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>AngleBetween4</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a9521866fe36ee8bed793bc8adf7c747d</anchor>
      <arglist>(const float4 &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>AngleBetweenNorm4</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>ab857ef5e2ad612eb842f8d717222053d</anchor>
      <arglist>(const float4 &amp;normalizedVector) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>ProjectTo3</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a310ac66adc50f15cd7f2b222abf30f32</anchor>
      <arglist>(const float3 &amp;target) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>ProjectToNorm3</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>adae2a316d75f88d0e837642ace01c200</anchor>
      <arglist>(const float3 &amp;target) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFromScalar</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a9c7a3c0be0ea802325c44e54b3f555d7</anchor>
      <arglist>(float scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFromScalar</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a50823285a87c7d69802d47a75205de01</anchor>
      <arglist>(float scalar, float w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a24d5eb811182ba828f132d6418aa5e07</anchor>
      <arglist>(float x, float y, float z, float w)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Equals</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>af28a152ac60d1e4fd3b7fc285562da35</anchor>
      <arglist>(const float4 &amp;other, float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Equals</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a2b21789b937b9026fa87ffe6dbb99e72</anchor>
      <arglist>(float x, float y, float z, float w, float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>operator+</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>aead48d897b8cbecfaaba44aff814124a</anchor>
      <arglist>(const float4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>operator-</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>ad98a1735ec90c4cb9d075beb4c4c45ca</anchor>
      <arglist>(const float4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>operator-</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>ae6a8e62f361592adbc3b4decaf4b8494</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>operator*</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a7c56180115509cf4d518c0031554a362</anchor>
      <arglist>(float scalar) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>operator/</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a75323e55f020b57f9a454fe3dc00c0cc</anchor>
      <arglist>(float scalar) const </arglist>
    </member>
    <member kind="function">
      <type>float4 &amp;</type>
      <name>operator+=</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a80b4426f80e35ede3afd87cc4b8e4f31</anchor>
      <arglist>(const float4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float4 &amp;</type>
      <name>operator-=</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>ab0dfdcd297cc60a14e741e2fcc7103be</anchor>
      <arglist>(const float4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float4 &amp;</type>
      <name>operator*=</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>aa301e342a6a2ab0a10a6c3e5512af027</anchor>
      <arglist>(float scalar)</arglist>
    </member>
    <member kind="function">
      <type>float4 &amp;</type>
      <name>operator/=</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a69507306e8ea6eebf6016ee0de50fc13</anchor>
      <arglist>(float scalar)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Add</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a2e2641f6f8178cbb5364d5fe59aacb83</anchor>
      <arglist>(const float4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Sub</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>aa777f039f595ba656609b6b61564ff1a</anchor>
      <arglist>(const float4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Mul</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a2dba5a719d74e1faf36b95fb6234e8c2</anchor>
      <arglist>(float rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Div</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a2659a6076921a49f72d156e8600a8458</anchor>
      <arglist>(float rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Neg</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a6a526f3688f141d2d39acbf956b7aef5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Mul</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a0a4a1e184eb885dea1ed084f048c514b</anchor>
      <arglist>(const float4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float4</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a7591249b5e88026a91c2c039b1d49fdd</anchor>
      <arglist>(const QVector4D &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator QVector4D</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a9560a9267e5cb38b6d238f89b44ff3c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator QString</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>aa4bf534a071c13f8b40a8a372fedb885</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>toString</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a2324b5954e8ed8825f0475ec20982b02</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QVector4D</type>
      <name>ToQVector4D</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a3cc23a6954f64acc9e1e5a2ee85e50b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4</type>
      <name>FromString</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a61eb26f95374d31286dbbb818ae6f05d</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4</type>
      <name>Lerp</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a5f3a288bd20b5b56ab3c399bdeb655d6</anchor>
      <arglist>(const float4 &amp;a, const float4 &amp;b, float t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4</type>
      <name>FromScalar</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a511fe23051f9a78012ec3f02be1c1861</anchor>
      <arglist>(float scalar)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4</type>
      <name>FromScalar</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>af9243193ed90c7a509cdd1e9a533a4ba</anchor>
      <arglist>(float scalar, float w)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4</type>
      <name>RandomDir</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>ac6438a0e1d1fcf9c72d90bcdddaa8679</anchor>
      <arglist>(LCG &amp;lcg, float length=1.f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4</type>
      <name>FromQVector4D</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>aa84bf2223b292b5eb87ab590d492e307</anchor>
      <arglist>(const QVector4D &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4</type>
      <name>FromString</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a0aada179d928a44919f78a83303e7374</anchor>
      <arglist>(const QString &amp;str)</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>ab60e7164162636ef8d0315cf18269b0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a72bce4984c96cef3d6a50adcbce6e388</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a898443ac0132ee9f149661c63882361b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>w</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>ae3ef7af10eec7945566a363866321e26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float4</type>
      <name>zero</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>abac3cf6db09fe4be8390e5da1b376686</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float4</type>
      <name>one</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a4a28ac2a542b702c9350ac8f4cfc2b87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float4</type>
      <name>unitX</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a274013fcd738badb67779af137af9377</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float4</type>
      <name>unitY</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a78a2297be3e3bb3190cebd730a481f68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float4</type>
      <name>unitZ</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a2d0b5dc13e7053ba1a83ea01249ec179</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float4</type>
      <name>unitW</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a77539ef5255e0f793763f80fefaf88c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float4</type>
      <name>nan</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>a3999dc630b47bfbdeb2b7d25a5c19580</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float4</type>
      <name>inf</name>
      <anchorfile>classfloat4.html</anchorfile>
      <anchor>afc053a8fc35bf8c00dcac4700a0be71d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>float4x4</name>
    <filename>classfloat4x4.html</filename>
    <member kind="enumvalue">
      <name>Rows</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a4608bd5cf2eb6481bf35e8062ae5bb3daa8d6d35c6e9b8a0cda2c5984bc64d7f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Cols</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ad26433b9fe0d6d9fba586217021fc626a2a8696afc2b6c902a5cca93da1a7b6a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float4x4</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a574b76a810a60fbeceac3198ea29f0b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float4x4</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a95182cad9deebb17de7713eccf4a3ec0</anchor>
      <arglist>(const float4x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float4x4</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a6038636175bfced10c2e75b6d25dc7a1</anchor>
      <arglist>(float _00, float _01, float _02, float _03, float _10, float _11, float _12, float _13, float _20, float _21, float _22, float _23, float _30, float _31, float _32, float _33)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float4x4</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ad0d8289d3f0a3c6dc78f9f18214c07be</anchor>
      <arglist>(const float3x3 &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float4x4</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ae7fe09b514296d05843e33abb23ed4f1</anchor>
      <arglist>(const float3x4 &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float4x4</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a38b3c842f80dcf5dcc9ef9ff8898b67b</anchor>
      <arglist>(const float4 &amp;col0, const float4 &amp;col1, const float4 &amp;col2, const float4 &amp;col3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float4x4</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ac6845e6eaac4bd8a5941d3a426d015fc</anchor>
      <arglist>(const Quat &amp;orientation)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float4x4</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a1eb96b774da3edc9cc71bfc5b6e2a5a7</anchor>
      <arglist>(const Quat &amp;orientation, const float3 &amp;translation)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>GetScale</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a06f270da27240abfca5283470d6a09f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>ComplementaryProjection</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a5fff46987cdeac18d9ffdfa208d78d76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MatrixProxy&lt; Cols &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a867cbac6896a5386ec70171e219592e4</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>const MatrixProxy&lt; Cols &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>abf70e4bf857f6638862bd095a9e15789</anchor>
      <arglist>(int row) const </arglist>
    </member>
    <member kind="function">
      <type>float &amp;</type>
      <name>At</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ae2a6f01176daa956c3c324d72b098f74</anchor>
      <arglist>(int row, int col)</arglist>
    </member>
    <member kind="function">
      <type>CONST_WIN32 float</type>
      <name>At</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a2d7e9762a919e0c227b4c2543be26426</anchor>
      <arglist>(int row, int col) const </arglist>
    </member>
    <member kind="function">
      <type>float4 &amp;</type>
      <name>Row</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>acc6e9bddcac357ab55c70db26ea2e566</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>const float4 &amp;</type>
      <name>Row</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a761fa2762f6c8644393026f5cc7df568</anchor>
      <arglist>(int row) const </arglist>
    </member>
    <member kind="function">
      <type>float3 &amp;</type>
      <name>Row3</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a622cf8f799ea9a8ecb777e5ca84e50be</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>const float3 &amp;</type>
      <name>Row3</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ad49c0e22a026423ffdad6c8d3553903b</anchor>
      <arglist>(int row) const </arglist>
    </member>
    <member kind="function">
      <type>CONST_WIN32 float4</type>
      <name>Col</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a79d9c483b96abaffdf1eb3559c570013</anchor>
      <arglist>(int col) const </arglist>
    </member>
    <member kind="function">
      <type>CONST_WIN32 float3</type>
      <name>Col3</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a3376e3cede84730d3db5425250f56a28</anchor>
      <arglist>(int col) const </arglist>
    </member>
    <member kind="function">
      <type>CONST_WIN32 float4</type>
      <name>Diagonal</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ab68da37bbb46b8c7f4c7cd3ca63afd74</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CONST_WIN32 float3</type>
      <name>Diagonal3</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a4529f851efc86552a6738e167790dfb4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ScaleRow3</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a48db26b594ca0576787cf7733f129cbf</anchor>
      <arglist>(int row, float scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ScaleRow</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a2b88ef8ec300f521f692bb2e9d3e9096</anchor>
      <arglist>(int row, float scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ScaleCol3</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a4b711fcb7731b1d1522ba1cc16fccf7b</anchor>
      <arglist>(int row, float scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ScaleCol</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a3768db63bd13b9880d0678ea2f67f87b</anchor>
      <arglist>(int col, float scalar)</arglist>
    </member>
    <member kind="function">
      <type>const float3x3</type>
      <name>Float3x3Part</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a9abfc453047cb5a866e5ccddf030b877</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3x4 &amp;</type>
      <name>Float3x4Part</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a806914747efc53351a505027e6c1ff55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const float3x4 &amp;</type>
      <name>Float3x4Part</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>aae082989c21b375ee31041eb170bc914</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CONST_WIN32 float3</type>
      <name>TranslatePart</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a238cbc73a8402d07ba8da6fca8c5c4a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CONST_WIN32 float3x3</type>
      <name>RotatePart</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>abbaf24c29c59cf072a01fca0f6499c26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>WorldX</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a59d58d0bed4c19997eddf63fb434e047</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>WorldY</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a8c3903985e23efae818e0421ae5a67a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>WorldZ</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>aa1d6f39021e037721b15c5343b44b261</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float *</type>
      <name>ptr</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a883a30aae6a510e2423de7bd22dc8627</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const float *</type>
      <name>ptr</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a2201fc87bc756a0540ef8bcee4e9306b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRow3</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a1ee6321e95432e7e4e467cd5169a340c</anchor>
      <arglist>(int row, const float3 &amp;rowVector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRow3</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a8f44e983b75dc8afed926015b88aeb84</anchor>
      <arglist>(int row, const float *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRow3</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>aa11681f87057e2aff27736d9bd6239a5</anchor>
      <arglist>(int row, float m_r0, float m_r1, float m_r2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRow</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ada52608c749716f3da4b627b560e70ad</anchor>
      <arglist>(int row, const float3 &amp;rowVector, float m_r3)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRow</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a773d7b0a86647384213e162bd2425667</anchor>
      <arglist>(int row, const float4 &amp;rowVector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRow</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a3bcf390e2f3089e608e21f63e22121af</anchor>
      <arglist>(int row, const float *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRow</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a2ba21c88e6a92fb4158fc2881c3ba95a</anchor>
      <arglist>(int row, float m_r0, float m_r1, float m_r2, float m_r3)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCol3</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a438e67140ba2405f3ad987b0d4945723</anchor>
      <arglist>(int column, const float3 &amp;columnVector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCol3</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a0b361bdf2bcdd69c8deade6ac61ff385</anchor>
      <arglist>(int column, const float *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCol3</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ac98f14f5a429c755826d5f135df64f6a</anchor>
      <arglist>(int column, float m_0c, float m_1c, float m_2c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCol</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a6bf807b4a5ca38966acc21af4b0e37a8</anchor>
      <arglist>(int column, const float3 &amp;columnVector, float m_3c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCol</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a01ba46f4c5f636c996d27e7857606e53</anchor>
      <arglist>(int column, const float4 &amp;columnVector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCol</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a69c643149cbfa8e1ec0af6996fa1e2bb</anchor>
      <arglist>(int column, const float *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCol</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a82f44d647b04d13203c95a7818bcfdf5</anchor>
      <arglist>(int column, float m_0c, float m_1c, float m_2c, float m_3c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a9003acd4cce6b193aba6c683161346c7</anchor>
      <arglist>(float _00, float _01, float _02, float _03, float _10, float _11, float _12, float _13, float _20, float _21, float _22, float _23, float _30, float _31, float _32, float _33)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ab2f5b9718b43d80b4d821228dc1cc25a</anchor>
      <arglist>(const float4x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a2914f20ab6c729808f4f379315906db7</anchor>
      <arglist>(const float *values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ab90248bb5d1791da8e7c0635db5c0b73</anchor>
      <arglist>(int row, int col, float value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set3x3Part</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a36432af85c1f750489f6b9b93c94fc16</anchor>
      <arglist>(const float3x3 &amp;rotation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set3x4Part</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a6acf8ed3975103e0ba4ce805b9716a70</anchor>
      <arglist>(const float3x4 &amp;rotateTranslate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIdentity</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ac52ef65b6f6c22767c63cfde9041cff1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SwapColumns</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>abe926b152932e449adfc0ebca30922c5</anchor>
      <arglist>(int col1, int col2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SwapColumns3</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a88caaf2b6bcf3b22aa81d6346aa1f946</anchor>
      <arglist>(int col1, int col2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SwapRows</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>abd62b252fdf1b8123e47fc7f8c66e835</anchor>
      <arglist>(int row1, int row2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SwapRows3</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a2938a8b6a6972b7ba883be63bf8138ab</anchor>
      <arglist>(int row1, int row2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTranslatePart</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a381d092a812117df5715b68c356210ab</anchor>
      <arglist>(float tx, float ty, float tz)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTranslatePart</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>adc44a816a7d5e2cd9796e195c7b2bba6</anchor>
      <arglist>(const float3 &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRotatePartX</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>afc73e56f8d9be04ceedf8f65d648f366</anchor>
      <arglist>(float angleRadians)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRotatePartY</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a8a639428f108ed65f28b55b1cfd2f7a7</anchor>
      <arglist>(float angleRadians)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRotatePartZ</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a107ea03968548c10216452ca3f465d1d</anchor>
      <arglist>(float angleRadians)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRotatePart</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a4711a6efcd7123bce97fc998dbc5ff84</anchor>
      <arglist>(const float3 &amp;axisDirection, float angleRadians)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRotatePart</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ab46ee1fe88ec0bf730b34ae66b9e2d3c</anchor>
      <arglist>(const Quat &amp;orientation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRotatePart</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a650edd88141b3240abd201b4f563bc8b</anchor>
      <arglist>(const float3x3 &amp;rotation)</arglist>
    </member>
    <member kind="function">
      <type>float4x4 &amp;</type>
      <name>operator=</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>aa6252d096065495da34cee0bf98f2ef1</anchor>
      <arglist>(const float3x3 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float4x4 &amp;</type>
      <name>operator=</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a0fd7c0aec2bc1dae80deb7f7232c86d6</anchor>
      <arglist>(const float3x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float4x4 &amp;</type>
      <name>operator=</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a06f4bcd4de239efa4b99386696f7ebd1</anchor>
      <arglist>(const float4x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float4x4 &amp;</type>
      <name>operator=</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a96d1c0a89c053eb04b814ccf70993aec</anchor>
      <arglist>(const Quat &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Determinant3</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a9329566d274650dbaa54b41ec9e279ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Determinant4</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>aa1f91c2f7783acd42295edbbcb90510f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>SubMatrix</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a7aa6a80ee3a159356bdd2dbcc6ea2484</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Minor</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a2ab25018adf3b5aa4307ef2dcc28b3b7</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>Adjugate</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a2e6d08d0e748f1dc7d3c1ae5f355a6cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CholeskyDecompose</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>abc44160f6efed13ca2a5eb9cbb48aa00</anchor>
      <arglist>(float4x4 &amp;outL) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LUDecompose</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a6f422db5debc5bef5b6a88d04221a832</anchor>
      <arglist>(float4x4 &amp;outLower, float4x4 &amp;outUpper) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Inverse</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>aaf1a8223fa915a0733ca306381ef3dc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>Inverted</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a162aa17a06cbefd828b91454bc75168f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>InverseOrthogonal</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a3b0a64febcdf69804bd73472c352e3a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>InverseOrthogonalUniformScale</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a4e4e59e94a79c398f77b05e620591cbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InverseOrthonormal</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a03419ab52fd253be017b8794690040b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transpose</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a9c01c70430d9fcebba73335f03e40be5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>Transposed</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>aaed05fa5f2682669cd813c1400ad9e65</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>InverseTranspose</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a5dd47ce720e2bebf6d6b77a3492475cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>InverseTransposed</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ac75580a150f3194d238ead2e5026f30a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Trace</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a9717f62d03f8762faa7560725a4cd5b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Orthogonalize3</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>aba9d78a267ab208f931002c74bdb5f79</anchor>
      <arglist>(int firstColumn, int secondColumn, int thirdColumn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Orthogonalize3</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a431292ad28657210f29c1e6cc9aa7c49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Orthonormalize3</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ac067ee7886ab28b74e995af14c49f89f</anchor>
      <arglist>(int firstColumn, int secondColumn, int thirdColumn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Orthonormalize3</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>aa1c8672a087de624ea293444100a044d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveScale</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a374a61d0959d81b2c7dfe510f491bd22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Pivot</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ae391f92e69b198a2358d5ce05d1cf547</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>TransformPos</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a04657e5cbe98818c38b67aef3c2ac479</anchor>
      <arglist>(const float3 &amp;pointVector) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>TransformPos</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>adc64e1f8eedfd6b1a8a2df8c6236f5cf</anchor>
      <arglist>(float x, float y, float z) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>TransformDir</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a48da53d80cce1a50986abc2cc54efda9</anchor>
      <arglist>(const float3 &amp;directionVector) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>TransformDir</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a3cf9d6a69a39f48d2d525e804603f492</anchor>
      <arglist>(float x, float y, float z) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Transform</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a9b5f656d069d61daa8963b03efd702ea</anchor>
      <arglist>(const float4 &amp;vector) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TransformPos</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a31e902c2dd4e4418d8829da5b764c62f</anchor>
      <arglist>(float3 *pointArray, int numPoints) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TransformPos</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a4462fae02dafaf9366a4cdfeec872077</anchor>
      <arglist>(float3 *pointArray, int numPoints, int strideBytes) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TransformDir</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a9b996fc9bad4e0b0cd8ae5a8c8c7c283</anchor>
      <arglist>(float3 *dirArray, int numVectors) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TransformDir</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a25d3bb03c3e52ba8014d5689e264351f</anchor>
      <arglist>(float3 *dirArray, int numVectors, int strideBytes) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>acaffb4f81c0774b1dd2b8b7187fcbe5f</anchor>
      <arglist>(float4 *vectorArray, int numVectors) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a54b2e4c8e2d22eeac93b0847a7e453ec</anchor>
      <arglist>(float4 *vectorArray, int numVectors, int strideBytes) const </arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>operator*</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a64a3d89ed722d5e6b33389466d906127</anchor>
      <arglist>(const float3x3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>operator*</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a3e73f1c000bd74ad5a28bcd269924aba</anchor>
      <arglist>(const float3x4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>operator*</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ac092b9149dfe2f36507ea13e1d75598f</anchor>
      <arglist>(const float4x4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>operator*</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ae0121982eefa812e1bcbe3e0554315a2</anchor>
      <arglist>(const Quat &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>operator*</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ace7054778e77847818bdf9d3cf172eb0</anchor>
      <arglist>(const float4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>operator*</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ae40a1030dd5260d4193941d91137ab0f</anchor>
      <arglist>(float scalar) const </arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>operator/</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a0738bbfa7153f2f846e34b47b09bc124</anchor>
      <arglist>(float scalar) const </arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>operator+</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a7e35b6a4b893eef056044cdc9ccbc656</anchor>
      <arglist>(const float4x4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>operator-</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ab643fe651b4997d3a883012020f33245</anchor>
      <arglist>(const float4x4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>operator-</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a9ece53029dd81e6d242859e90bd92e7a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float4x4 &amp;</type>
      <name>operator*=</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a8c89266e245d4aa195adcca70b60a31e</anchor>
      <arglist>(float scalar)</arglist>
    </member>
    <member kind="function">
      <type>float4x4 &amp;</type>
      <name>operator/=</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a2bbe3a8922a37d36b6fa5f2b85723450</anchor>
      <arglist>(float scalar)</arglist>
    </member>
    <member kind="function">
      <type>float4x4 &amp;</type>
      <name>operator+=</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>aacf09112c73a70bfdcfdff6afb5ea1bf</anchor>
      <arglist>(const float4x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>float4x4 &amp;</type>
      <name>operator-=</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>af1951f48bb36ca2cb3dd99ab54b7d34d</anchor>
      <arglist>(const float4x4 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFinite</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>aa824a5f1c862fe7b78f7cc473ca23c71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsIdentity</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a35d3187ec26e1ab6301cbb19ad7c5683</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLowerTriangular</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a63ca51e1e0fe301e18311d6003528424</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsUpperTriangular</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a68551c18a99c00d75078a402abd597cd</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsInvertible</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a3f4bbc9fe383745decbeb39b71c4597a</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSymmetric</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a76fa00400d65ebd19ddd3eb376960dc5</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSkewSymmetric</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ad25a83131a76ab6fdec0394f5c487107</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsIdempotent</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>af979a130254d2f052ab0a12c75e9ab2c</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasUnitaryScale</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a614ba8c129522b407cc1c5527a9b9ee4</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasNegativeScale</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a288f7b03b607449fd800a8c20d9ecb12</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasUniformScale</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a084e390ac60bd8a74ac147d4e62c43ba</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOrthogonal3</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>abccfdd14b7508700bd6d42b5ad03b9af</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOrthonormal3</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a803d14a61d60d6d2fed03dd97e4b66e2</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Equals</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ae7f4558efc66d99ece3f875562c9fb01</anchor>
      <arglist>(const float4x4 &amp;other, float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ContainsProjection</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ac616ff7dc7fad15fdb0cbd8b371526aa</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerXYX</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a976b360e3422dcf457e3f71705ab8b0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerXZX</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a895a3ea7a880f56238621888c4ada2c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerYXY</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a24d44604b87bfff312207f67ab427b6d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerYZY</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a46b3602178d0e9e8073aa05b02a74728</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerZXZ</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>aabd0a1ca5a4def76842556a589c3dd55</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerZYZ</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ae685f19518b5b2080beaa32e29368138</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerXYZ</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a9668171453befd22dd31c8b880ce806b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerXZY</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a12685a71c427449f3c9736017f9d53e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerYXZ</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a207f9f6d6d176ae06e457590d8da0c6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerYZX</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ab53bc47b3cd994ba0bb85852afe185cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerZXY</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>aa3b1988f17e6c7bbbde2f907c0a47a49</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerZYX</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ade976d94f6dcf9e3aa3565663330cc77</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ExtractScale</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>aa8bb4522554abe553f5ffd526e5075a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Decompose</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a6916a64a6a04a6e4d654cd4314a53b97</anchor>
      <arglist>(float3 &amp;translate, Quat &amp;rotate, float3 &amp;scale) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Decompose</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a4ded4ee43a53044f8a77a6e0e0a4d65c</anchor>
      <arglist>(float3 &amp;translate, float3x3 &amp;rotate, float3 &amp;scale) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Decompose</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a2364a9efd63255efea749561ab34e4c4</anchor>
      <arglist>(float3 &amp;translate, float3x4 &amp;rotate, float3 &amp;scale) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Decompose</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ae7cf1b162a58f3368e3b746e54922c72</anchor>
      <arglist>(float3 &amp;translate, float4x4 &amp;rotate, float3 &amp;scale) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float4x4</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a43936f86c1880fb8d705de422cc10cc4</anchor>
      <arglist>(const QMatrix4x4 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator QMatrix4x4</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>aeadcf31c4c04930758a1fada27669064</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator QString</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a465ef6578747ed136b6d7b51a5110f3c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>toString</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ac0c175566e67e6c34ce71574a56a3a60</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QMatrix4x4</type>
      <name>ToQMatrix4x4</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a3932f6c8d44c890af9a7d383d2df53cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>Mul</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ac2b5f3f4772a065864b1732880e1f68a</anchor>
      <arglist>(const float3x3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>Mul</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a1439761cd18351701bd881244aae6636</anchor>
      <arglist>(const float3x4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>Mul</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a48c7df182a0b8b3335991fb46e991978</anchor>
      <arglist>(const float4x4 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>Mul</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a5b86ef7d45b1265550aab7fb16ad4aad</anchor>
      <arglist>(const Quat &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>MulPos</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>aa8b75404c6d7f1ba14a999ec9335fbfa</anchor>
      <arglist>(const float3 &amp;pointVector) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>MulDir</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a671dba6df2e11a1405da9d0d9a49fd10</anchor>
      <arglist>(const float3 &amp;directionVector) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Mul</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a13ddee77049f3d4402fe05499e801d27</anchor>
      <arglist>(const float4 &amp;vector) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TranslateOp</type>
      <name>Translate</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ad440374d08b66382175c923c06d64dd4</anchor>
      <arglist>(float tx, float ty, float tz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TranslateOp</type>
      <name>Translate</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a57232e2f4161fe7a083cf02396438a25</anchor>
      <arglist>(const float3 &amp;offset)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>RotateX</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a8413beea42bb055e5ca2dbaea4e2ea5d</anchor>
      <arglist>(float angleRadians)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>RotateX</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a018748c5f4dc2185e38484a611522bb5</anchor>
      <arglist>(float angleRadians, const float3 &amp;pointOnAxis)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>RotateY</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>aa17264353bc4bdc6394526f5d09a0f1a</anchor>
      <arglist>(float angleRadians)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>RotateY</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a55d3107df52a70c4e023353ff6242162</anchor>
      <arglist>(float angleRadians, const float3 &amp;pointOnAxis)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>RotateZ</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a6460abd967e0969fbf5f2150a36b1ea5</anchor>
      <arglist>(float angleRadians)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>RotateZ</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a37dd282d352ef94013f4ed9c6c93ad1a</anchor>
      <arglist>(float angleRadians, const float3 &amp;pointOnAxis)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>RotateAxisAngle</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a4463288d085670d581e2f1341514c90a</anchor>
      <arglist>(const float3 &amp;axisDirection, float angleRadians)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>RotateAxisAngle</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>afe6559ee7144a81ea1365e2db0812f00</anchor>
      <arglist>(const float3 &amp;axisDirection, float angleRadians, const float3 &amp;pointOnAxis)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>RotateFromTo</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>aee4d954172ada5e2bce0cc236ba531b4</anchor>
      <arglist>(const float3 &amp;sourceDirection, const float3 &amp;targetDirection)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>RotateFromTo</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a2797b7586164b30c2586823b88a55459</anchor>
      <arglist>(const float3 &amp;sourceDirection, const float3 &amp;targetDirection, const float3 &amp;centerPoint)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>RandomGeneral</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>adb4dd4700f939924c1fe40be204fde5f</anchor>
      <arglist>(LCG &amp;lcg, float minElem, float maxElem)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>RotateFromTo</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a05ad7a3b7ba3e12c2a477fe2235446f0</anchor>
      <arglist>(const float3 &amp;sourceDirection, const float3 &amp;targetDirection, const float3 &amp;sourceDirection2, const float3 &amp;targetDirection2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>RotateFromTo</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>aacbfa6a5982221097927b79feb2178d0</anchor>
      <arglist>(const float3 &amp;sourceDirection, const float3 &amp;targetDirection, const float3 &amp;sourceDirection2, const float3 &amp;targetDirection2, const float3 &amp;centerPoint)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>FromQuat</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ad1f335c29ec10f8525e544b9c9453f9a</anchor>
      <arglist>(const Quat &amp;orientation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>FromQuat</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>af9f571e70389a96a0e10c2f9f367f4bc</anchor>
      <arglist>(const Quat &amp;orientation, const float3 &amp;pointOnAxis)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>FromTRS</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>af7bdf8205918a84e803524d143d0a4dd</anchor>
      <arglist>(const float3 &amp;translate, const Quat &amp;rotate, const float3 &amp;scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>FromTRS</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a134a8d349e0405d20791176cc8ab0e2c</anchor>
      <arglist>(const float3 &amp;translate, const float3x3 &amp;rotate, const float3 &amp;scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>FromTRS</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>abc7310046aafddce39a361620f4b38d2</anchor>
      <arglist>(const float3 &amp;translate, const float3x4 &amp;rotate, const float3 &amp;scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>FromTRS</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ab64627880c70c74e5f509f4e94a2e322</anchor>
      <arglist>(const float3 &amp;translate, const float4x4 &amp;rotate, const float3 &amp;scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>FromEulerXYX</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a7667f6c17ce54d7c78e588b25993c363</anchor>
      <arglist>(float x2, float y, float x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>FromEulerXZX</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>af1424c0e057a7ed4b0a885839a4d6255</anchor>
      <arglist>(float x2, float z, float x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>FromEulerYXY</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a4c646336f3c8d7a773101c7c7d756bf9</anchor>
      <arglist>(float y2, float x, float y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>FromEulerYZY</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>aee38b96f4d9907284647a3d398cb4835</anchor>
      <arglist>(float y2, float z, float y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>FromEulerZXZ</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a53e38c70db2e49a29f5189f437fdd667</anchor>
      <arglist>(float z2, float x, float z)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>FromEulerZYZ</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a2b5d78dbcfb49e57e14ee9119970656a</anchor>
      <arglist>(float z2, float y, float z)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>FromEulerXYZ</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a02f23caec720f06d01163d08eaedcf8a</anchor>
      <arglist>(float x, float y, float z)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>FromEulerXZY</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a971571db9da6474fcdd2a88e69f50011</anchor>
      <arglist>(float x, float z, float y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>FromEulerYXZ</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>aa53935e1a4d48e85accb2701c2f80219</anchor>
      <arglist>(float y, float x, float z)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>FromEulerYZX</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a8238cbdbda0a952429b1e4b338303b1d</anchor>
      <arglist>(float y, float z, float x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>FromEulerZXY</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a887db3c88af775f0dfc13e64d9d01fc2</anchor>
      <arglist>(float z, float x, float y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>FromEulerZYX</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a82102ca2e886a66055b9370e88f4afbe</anchor>
      <arglist>(float z, float y, float x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ScaleOp</type>
      <name>Scale</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a79dc6997c131c4893ce1337ef3383c9d</anchor>
      <arglist>(float sx, float sy, float sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ScaleOp</type>
      <name>Scale</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a70ff67f1d19d7e245101ddffd587f988</anchor>
      <arglist>(const float3 &amp;scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ScaleOp</type>
      <name>Scale</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a56fac72e75a408dfb7e829916675d0c9</anchor>
      <arglist>(float uniformScale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>Scale</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ac8137ce4553ef7dee007438e4327eee1</anchor>
      <arglist>(const float3 &amp;scale, const float3 &amp;scaleCenter)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>ScaleAlongAxis</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a095c8b25a68a0f28f7bb9c8a5abc0046</anchor>
      <arglist>(const float3 &amp;axis, float scalingFactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>ScaleAlongAxis</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>add2950edeae73ae6d778c32db423e650</anchor>
      <arglist>(const float3 &amp;axis, float scalingFactor, const float3 &amp;scaleCenter)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ScaleOp</type>
      <name>UniformScale</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a5d870a1c2a60de4dc8a11dfe1b0b3c5f</anchor>
      <arglist>(float uniformScale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>ShearX</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a2509cc69cfe18091591e876c498c8edb</anchor>
      <arglist>(float yFactor, float zFactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>ShearY</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a3ff3fb38abc50774aed3163fdb8bb5a3</anchor>
      <arglist>(float xFactor, float zFactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>ShearZ</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>af285904a82918c0aa3a85887aa6e3539</anchor>
      <arglist>(float xFactor, float yFactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>Reflect</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>aaefc8da75772c0708acf882cb9af829e</anchor>
      <arglist>(const Plane &amp;p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>PerspectiveProjection</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>ab6b31a543e98a6c2c618c66bf0d505c2</anchor>
      <arglist>(float nearPlaneDistance, float farPlaneDistance, float horizontalFov, float verticalFov)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>D3DOrthoProjRH</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>af40b154e3304a704284764a522f03581</anchor>
      <arglist>(float nearPlaneDistance, float farPlaneDistance, float horizontalViewportSize, float verticalViewportSize)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>OrthographicProjection</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>aec97426ba56834550a54ccb58ef9f2cd</anchor>
      <arglist>(const Plane &amp;target)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>OrthographicProjectionYZ</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a40516e277235df783e2a839c0ef1e00d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>OrthographicProjectionXZ</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a605baa0a5ff4a9add8691427ba75c005</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>OrthographicProjectionXY</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a3cceae4a3f5e072f29625736408ed76e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>LookAt</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a95885b9685172e38d150a45a6fe65bc2</anchor>
      <arglist>(const float3 &amp;localForward, const float3 &amp;targetDirection, const float3 &amp;localUp, const float3 &amp;worldUp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float4x4</type>
      <name>FromQMatrix4x4</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a5a91e4b32149dad8703de272cc39607e</anchor>
      <arglist>(const QMatrix4x4 &amp;m)</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>v</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a1de0d6aa032ee9e223548e3ab71950ce</anchor>
      <arglist>[Rows][Cols]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float4x4</type>
      <name>zero</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a2ced52f5ef69ae4f99f68ccbf0737c6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float4x4</type>
      <name>identity</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a66a5c390d2bdd552df0214fc71aa99e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float4x4</type>
      <name>nan</name>
      <anchorfile>classfloat4x4.html</anchorfile>
      <anchor>a7f3d89c16ca5d371809803226997c2b5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FrameAPI</name>
    <filename>class_frame_a_p_i.html</filename>
    <member kind="slot">
      <type>float</type>
      <name>WallClockTime</name>
      <anchorfile>class_frame_a_p_i.html</anchorfile>
      <anchor>a3e7846363e95c8a13546c52ecf3808c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>DelayedExecute</name>
      <anchorfile>class_frame_a_p_i.html</anchorfile>
      <anchor>a2a0a52e9b9c595029dfa30f329528af9</anchor>
      <arglist>(float time, const QObject *receiver, const char *member)</arglist>
    </member>
    <member kind="slot">
      <type>DelayedSignal *</type>
      <name>DelayedExecute</name>
      <anchorfile>class_frame_a_p_i.html</anchorfile>
      <anchor>ae10114bbf11a5d742af305af99866acb</anchor>
      <arglist>(float time)</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>FrameNumber</name>
      <anchorfile>class_frame_a_p_i.html</anchorfile>
      <anchor>ab18fa39b4832fbb93cac1566ba0ee29b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Updated</name>
      <anchorfile>class_frame_a_p_i.html</anchorfile>
      <anchor>a230b152a85b6d6c5ab87762c72aa3c77</anchor>
      <arglist>(float frametime)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>PostFrameUpdate</name>
      <anchorfile>class_frame_a_p_i.html</anchorfile>
      <anchor>a3222ddf3a37e0275b0e8ec77a238792b</anchor>
      <arglist>(float frametime)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>DeleteDelayedSignal</name>
      <anchorfile>class_frame_a_p_i.html</anchorfile>
      <anchor>a4860d7caf8821e92a0cc2c46f176d446</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>FrameAPI</name>
      <anchorfile>class_frame_a_p_i.html</anchorfile>
      <anchor>a4da43ff8b95c057d92079dae8177be38</anchor>
      <arglist>(Framework *fw)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>~FrameAPI</name>
      <anchorfile>class_frame_a_p_i.html</anchorfile>
      <anchor>a0e4e0073a3b11c8a5e4f211c86b8f009</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Reset</name>
      <anchorfile>class_frame_a_p_i.html</anchorfile>
      <anchor>a495799c2e0cc3b5bc19733a844a09fd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_frame_a_p_i.html</anchorfile>
      <anchor>a14fd69ce904a7c1e1e9f8d677ff362c2</anchor>
      <arglist>(float frametime)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>u64</type>
      <name>startTime</name>
      <anchorfile>class_frame_a_p_i.html</anchorfile>
      <anchor>a0f1c5babb25bf2195dd12104f84317dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QList&lt; DelayedSignal * &gt;</type>
      <name>delayedSignals</name>
      <anchorfile>class_frame_a_p_i.html</anchorfile>
      <anchor>a75a6263685e6b7fa71a26a043e317dde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>currentFrameNumber</name>
      <anchorfile>class_frame_a_p_i.html</anchorfile>
      <anchor>a6d0fd57b41f30427ba4c43db0ce5151e</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Framework</name>
      <anchorfile>class_frame_a_p_i.html</anchorfile>
      <anchor>ad3defef37a1222bb2b2a65577a6c4816</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Framework</name>
    <filename>class_framework.html</filename>
    <member kind="slot">
      <type>UiAPI *</type>
      <name>Ui</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>abdf48f74d2901a813c531b22ab183b02</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>InputAPI *</type>
      <name>Input</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a67d4f0c3d9f2fd36c07f72c17cc16a80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>FrameAPI *</type>
      <name>Frame</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a97bb9d7d8fdecd9408ef085fe4af8c69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>ConsoleAPI *</type>
      <name>Console</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a714b2d9fd6d249883181b70b69ee004a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>AudioAPI *</type>
      <name>Audio</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a05e395e10d0c8fb3d23f1dfa3e284194</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>AssetAPI *</type>
      <name>Asset</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a5d663cd5ccaef2a2f0d9b5e3eee6bbd8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>SceneAPI *</type>
      <name>Scene</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>aff20d592112a53c0b6d42636a0075d3c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>ConfigAPI *</type>
      <name>Config</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a1571e0e07adb118ee64508b310949d3b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>PluginAPI *</type>
      <name>Plugins</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a94370180f03cc388b85c2c442704184a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RegisterRenderer</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>ad15eca60b7f6469b10843e81f6769146</anchor>
      <arglist>(IRenderer *renderer)</arglist>
    </member>
    <member kind="slot">
      <type>IRenderer *</type>
      <name>Renderer</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a612a26b4c4f2e3f273759abe4f0cf600</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>ApiVersionInfo *</type>
      <name>ApiVersion</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a60f66f718ec283530b5cdceb78499b61</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>ApplicationVersionInfo *</type>
      <name>ApplicationVersion</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>ab3a0765d8fd01652a41099ba5b42bc1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" static="yes">
      <type>static Framework *</type>
      <name>GetInstance</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a50b0fbdbef1db12f01880aab38a9e770</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" static="yes">
      <type>static void</type>
      <name>SetInstance</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a1f14e937168e75ae22333bc7bf805ea3</anchor>
      <arglist>(Framework *fw)</arglist>
    </member>
    <member kind="slot" static="yes">
      <type>static Framework *</type>
      <name>Instance</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a0125a16b9d1e018798c311ae3136572d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>IModule *</type>
      <name>GetModuleByName</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a9b8fa5ed7dda670dbc2d806db7abe8d4</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsHeadless</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a0c4e8a3d4c258733d2460d8538695a7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Exit</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a38b4680e2808a5852387156024cdc9f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>HasCommandLineParameter</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a28b5ace170c7633ff1bec6462c5ae206</anchor>
      <arglist>(const QString &amp;value) const </arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>CommandLineParameters</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>ace76e42182745a83ecdc001d11eff084</anchor>
      <arglist>(const QString &amp;key) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Framework</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a840bbfa0b64bcbbba5d38b76d3bc7917</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Framework</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>ac23600a259027d0edcdb12a4f2b51aba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Go</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a93e84a46b97a526809a0cb9118a78e1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessOneFrame</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a5d496236fc7cc95de64d7e9807d7bf50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>GetModule</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>abdb64a75403fec5486e10694a2b1e50b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RegisterModule</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a14f61d22dd17e6cbd7b2b023f84e365e</anchor>
      <arglist>(IModule *module)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RegisterDynamicObject</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>ab3ae4a69b9d48e759556f0993fc0ad53</anchor>
      <arglist>(QString name, QObject *object)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CancelExit</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a23ab6f48cceb572edcc13f4b73c64523</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ForceExit</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a9ac0f25983873466ee1b3afba3cfd622</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsExiting</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a0cf65775456453f83e4c9105e9bcec27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Application *</type>
      <name>App</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a2f4400c21888b81095582882f66b900e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>exit_signal_</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a3d8dc5be22669cac7ee6f4dff228dd5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ProfilerQObj *</type>
      <name>profilerQObj</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a5f03d03ba1e2ed55ea1831c24eeb6bc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>headless_</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a1eb41ea214aec77769d2ef496bef3ff7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Application *</type>
      <name>application</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a44bcbe8c2b3a9b30ee5a394b69f92bdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FrameAPI *</type>
      <name>frame</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a17154ac2bc530209459b20a39fa9dbda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ConsoleAPI *</type>
      <name>console</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a11b2a284cf37bfee7f0d5b55267df2eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>UiAPI *</type>
      <name>ui</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a870c008230f0ec00fb94d94e1492ae5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>InputAPI *</type>
      <name>input</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a244b1bd55876b62325ebf1578a421e2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AssetAPI *</type>
      <name>asset</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a91c478c666758f2f1b237d905a1c1616</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AudioAPI *</type>
      <name>audio</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a39863bfeae957b3339ac9095b7a210c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SceneAPI *</type>
      <name>scene</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a97a94259dbcf78198a49347bf92f9080</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ConfigAPI *</type>
      <name>config</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a69bf5fbfdc77d8e221bfb30370da395b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PluginAPI *</type>
      <name>plugin</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>acfcfff1df495be40cfcab4e67ad44a2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>IRenderer *</type>
      <name>renderer</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a4950817c049c05866d588ab77d4d4902</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ApiVersionInfo *</type>
      <name>apiVersionInfo</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a21807dffc35efd4785f2ce687d86f7a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ApplicationVersionInfo *</type>
      <name>applicationVersionInfo</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a5e05917502e1adc3495cce7409506be1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; boost::shared_ptr&lt; IModule &gt; &gt;</type>
      <name>modules</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a3276559eb5ba098311eab6fe6bda2e01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>argc_</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a55f5ef7d91975a302c574e74a9ed140f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>char **</type>
      <name>argv_</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>ab42d665b0c16ef2e9dcfab804d39f6a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static Framework *</type>
      <name>instance</name>
      <anchorfile>class_framework.html</anchorfile>
      <anchor>a51e8806443403170755ed6e3d5d24c64</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Frustum</name>
    <filename>class_frustum.html</filename>
    <member kind="function">
      <type></type>
      <name>Frustum</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a172ae3492592e3ac891642299d628494</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>AspectRatio</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>ac4aecbe774fd6230e64c3aea2d1aaa8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Plane</type>
      <name>NearPlane</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a59408ae162b1350d444dfc429313c77c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Plane</type>
      <name>FarPlane</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a75641ea65a5b4e4443f45b74bdd9c2ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Plane</type>
      <name>LeftPlane</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>af3b101d14860a2292d6f17a899d1b1ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Plane</type>
      <name>RightPlane</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a532fc26634702e85cbd0a2c970c1233e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Plane</type>
      <name>TopPlane</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a52d104e8685124367f671c3aeae84fea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Plane</type>
      <name>BottomPlane</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>afec48e1b59d5e2370970d5459d876d28</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>ProjectionMatrix</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a1d119e91d95f7e07e29673cadacc1860</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ray</type>
      <name>LookAt</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>ab70204c42d666eb9961921c5cbb23bc8</anchor>
      <arglist>(float x, float y) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>NearPlanePos</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>ae190630de625f70876e9d49b49b0af5e</anchor>
      <arglist>(float x, float y) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>NearPlanePos</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a6501ff9ba10ae41e007daf67cab85261</anchor>
      <arglist>(const float2 &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>FarPlanePos</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a3599812dfdb531e37b16de51e372050e</anchor>
      <arglist>(float x, float y) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>FarPlanePos</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>afa7469e344c60c2dc357c009df590543</anchor>
      <arglist>(const float2 &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Contains</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a78329a7d4494bf016060d9d2fec34e07</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFinite</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>ab79daadd0958310d06c846418649f031</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDegenerate</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>ad034b1ff1b4b08e2be1b5ccf21343cb9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Plane</type>
      <name>GetPlane</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>aa65502daff389d002f8d1ca8adeaac66</anchor>
      <arglist>(int faceIndex) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Volume</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a632734d828a0969a6be409683515aaff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>RandomPointInside</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a05f59aeacd7796bfb415351ece37aaea</anchor>
      <arglist>(LCG &amp;rng) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Translate</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a142c88c132455cc170c6383598a21474</anchor>
      <arglist>(const float3 &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Scale</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>ac1ec7b4d62d8d7213197900c11b2400a</anchor>
      <arglist>(const float3 &amp;centerPoint, float uniformScaleFactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Scale</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>abccbd5c7cc0a79e52beaae5a315287aa</anchor>
      <arglist>(const float3 &amp;centerPoint, const float3 &amp;nonuniformScaleFactors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a58f77713a9b61795327708a78d256d77</anchor>
      <arglist>(const float3x3 &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a64d6c84a9243c5176947783524735154</anchor>
      <arglist>(const float3x4 &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a69729c5ee0e480047db78c11da4af585</anchor>
      <arglist>(const float4x4 &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a7d6b162862abff1dd44825794e351d79</anchor>
      <arglist>(const Quat &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetPlanes</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>afbdeb77390493e7730b27a0015ad3527</anchor>
      <arglist>(Plane *outArray) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetCornerPoints</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a2ab2da130b96af7798a1052c6daccb40</anchor>
      <arglist>(float3 *outPointArray) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>CornerPoint</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>abd3d13f45aa982335c90b16fe37d2226</anchor>
      <arglist>(int cornerIndex) const </arglist>
    </member>
    <member kind="function">
      <type>AABB</type>
      <name>ToAABB</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>ab0ef6440c15997ae2b9f242b1cb10ec3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OBB</type>
      <name>ToOBB</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a0ddce36587c89f460f559ab33d522868</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a957bc5ed604bd76e803d66f0495e7390</anchor>
      <arglist>(const Ray &amp;ray, float &amp;outDistance) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>aaf66d6be014782f264d8bd0ee887f114</anchor>
      <arglist>(const Line &amp;line, float &amp;outDistance) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a547318253a78ea15aa66725dbd812ef8</anchor>
      <arglist>(const LineSegment &amp;lineSegment, float &amp;outDistance) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>aedd1dabe80bd311fc69867309750976c</anchor>
      <arglist>(const AABB &amp;aabb) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a8d71d5107cc54db625b9b44668063646</anchor>
      <arglist>(const OBB &amp;obb) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a162ff467b5c89f13619a6da80d527810</anchor>
      <arglist>(const Plane &amp;plane) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>aeaa52b85fd2000cd00607267b9d428f8</anchor>
      <arglist>(const Sphere &amp;sphere) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a4d614d236ab70ae0e0a0451b0d3330d1</anchor>
      <arglist>(const Ellipsoid &amp;ellipsoid) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>ab3a4beedc8c6b0e5376befc05a2d1224</anchor>
      <arglist>(const Triangle &amp;triangle) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a9ab0a9520cbf1a986ccb294756d978f4</anchor>
      <arglist>(const Cylinder &amp;cylinder) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a7f2a5298d7650016d2dd82a738380c3b</anchor>
      <arglist>(const Torus &amp;torus) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a8d6f32c95a8611d6e6bf7513698a1bed</anchor>
      <arglist>(const Frustum &amp;frustum) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>afb2461df71729e5a4ee76b1a593773a3</anchor>
      <arglist>(const Polyhedron &amp;polyhedron) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float2</type>
      <name>ViewportToScreenSpace</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>af36c71e56614064588021a7e985678e1</anchor>
      <arglist>(float x, float y, int screenWidth, int screenHeight)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float2</type>
      <name>ViewportToScreenSpace</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>adcabaad161688424ba3cecfa82821bd2</anchor>
      <arglist>(const float2 &amp;point, int screenWidth, int screenHeight)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float2</type>
      <name>ScreenToViewportSpace</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a2836e00e1343576b269c46f3af1728e2</anchor>
      <arglist>(float x, float y, int screenWidth, int screenHeight)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float2</type>
      <name>ScreenToViewportSpace</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a9efb8aba3b7f0f7eda8a0792642b0ec9</anchor>
      <arglist>(const float2 &amp;point, int screenWidth, int screenHeight)</arglist>
    </member>
    <member kind="variable">
      <type>FrustumType</type>
      <name>type</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a2359eba15b335df9f4886ec47317a4ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>pos</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a72db383c0bcd8794cdf7a82272df8b68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>front</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>abcc27c2a92b3d6ec5b3d6eea1b9e75e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>up</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>ad96ead1bd926f40e2e58ff5457e165c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>nearPlaneDistance</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>afa5a9f8bfbffb09bce9655ed9330f2dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>farPlaneDistance</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a50274f825eab085e70f74d5910de41b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union Frustum::@13</type>
      <name>@14</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>a09cf969c5b1dac10954ed2af9e266903</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>horizontalFov</name>
      <anchorfile>union_frustum_1_1@13.html</anchorfile>
      <anchor>aaf25522888e78db523418145b5845b7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>orthographicWidth</name>
      <anchorfile>union_frustum_1_1@13.html</anchorfile>
      <anchor>a9223acd4bb8f327cf951b397d587d337</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union Frustum::@15</type>
      <name>@16</name>
      <anchorfile>class_frustum.html</anchorfile>
      <anchor>aa51ba9d4b985795fe88a86a31f2e888d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>verticalFov</name>
      <anchorfile>union_frustum_1_1@15.html</anchorfile>
      <anchor>a3dccdd9e56d52908ffb9f811260bb59a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>orthographicHeight</name>
      <anchorfile>union_frustum_1_1@15.html</anchorfile>
      <anchor>a8dd06946248da0d4f22bbe781c2a9fd2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FunctionComboBox</name>
    <filename>class_function_combo_box.html</filename>
    <member kind="function">
      <type></type>
      <name>FunctionComboBox</name>
      <anchorfile>class_function_combo_box.html</anchorfile>
      <anchor>a2dd9585371e4ed507577d5b07d46b216</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFunctions</name>
      <anchorfile>class_function_combo_box.html</anchorfile>
      <anchor>a417da4ed263f7c75756c484360a14970</anchor>
      <arglist>(const QList&lt; FunctionMetaData &gt; &amp;funcs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCurrentFunction</name>
      <anchorfile>class_function_combo_box.html</anchorfile>
      <anchor>af53e7e7190f61ea6a047a138de3dbd9f</anchor>
      <arglist>(const QString &amp;function, const QStringList &amp;paramTypeNames)</arglist>
    </member>
    <member kind="function">
      <type>FunctionMetaData</type>
      <name>CurrentFunction</name>
      <anchorfile>class_function_combo_box.html</anchorfile>
      <anchor>a17e6325040c9bfd5c8a9ac4a734a2c81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>class_function_combo_box.html</anchorfile>
      <anchor>a984ce5c4f8643b77203e34ffc109e060</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>QList&lt; FunctionMetaData &gt;</type>
      <name>functions</name>
      <anchorfile>class_function_combo_box.html</anchorfile>
      <anchor>a17b653e293cd87420574c218c00594d4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FunctionDialog</name>
    <filename>class_function_dialog.html</filename>
    <member kind="function">
      <type></type>
      <name>FunctionDialog</name>
      <anchorfile>class_function_dialog.html</anchorfile>
      <anchor>ad891debd4a065b80f0cf7cf9dd7dc8e0</anchor>
      <arglist>(const QObjectWeakPtrList &amp;objs, QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FunctionDialog</name>
      <anchorfile>class_function_dialog.html</anchorfile>
      <anchor>ae79088cbc303f547eff77ce6c73ec5f8</anchor>
      <arglist>(const QObjectWeakPtrList &amp;objs, const InvokeItem &amp;invokeItem, QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FunctionDialog</name>
      <anchorfile>class_function_dialog.html</anchorfile>
      <anchor>a7ae3475025256441b957d55a53ebc040</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QObjectWeakPtrList</type>
      <name>Objects</name>
      <anchorfile>class_function_dialog.html</anchorfile>
      <anchor>a07846c9b561beadd9cd53d48c5824823</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>Function</name>
      <anchorfile>class_function_dialog.html</anchorfile>
      <anchor>a29db5156ccb6b163b3ffbc667f749895</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QList&lt; IArgumentType * &gt;</type>
      <name>Arguments</name>
      <anchorfile>class_function_dialog.html</anchorfile>
      <anchor>a93382d65ffa3c3d7845f25a12acb691a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReturnValueText</name>
      <anchorfile>class_function_dialog.html</anchorfile>
      <anchor>ad4b4ca562883efb2412d0e53a892255a</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AppendReturnValueText</name>
      <anchorfile>class_function_dialog.html</anchorfile>
      <anchor>ab96d25e4b6254e2045185b2265735659</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>Execute</name>
      <anchorfile>class_function_dialog.html</anchorfile>
      <anchor>a3eabe7443c61356dabdd8c56d532eb7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>UpdateEditors</name>
      <anchorfile>class_function_dialog.html</anchorfile>
      <anchor>afd59d417945d987a41c89375d62e563e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>GenerateTargetLabelAndFunctions</name>
      <anchorfile>class_function_dialog.html</anchorfile>
      <anchor>ab037bb60a6922cb6293ef6520b214a08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>hideEvent</name>
      <anchorfile>class_function_dialog.html</anchorfile>
      <anchor>a514772be3c74aeb9b6620684d14507a9</anchor>
      <arglist>(QHideEvent *)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_function_dialog.html</anchorfile>
      <anchor>a183ce4c54fc26b3b5e6da8c9d9e8e8d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FunctionInvoker *</type>
      <name>invoker</name>
      <anchorfile>class_function_dialog.html</anchorfile>
      <anchor>a186293c85ebb7a2fe49624c62fc12676</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QLabel *</type>
      <name>targetsLabel</name>
      <anchorfile>class_function_dialog.html</anchorfile>
      <anchor>a920adb45e056b394ab7b2fd435bed5e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FunctionComboBox *</type>
      <name>functionComboBox</name>
      <anchorfile>class_function_dialog.html</anchorfile>
      <anchor>a5e8b2fc5887ecab16b9723619e3eed62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QTextEdit *</type>
      <name>doxygenView</name>
      <anchorfile>class_function_dialog.html</anchorfile>
      <anchor>a047e7cf7252b73fedb0ae4557f4a755e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QGridLayout *</type>
      <name>editorLayout</name>
      <anchorfile>class_function_dialog.html</anchorfile>
      <anchor>aa8a6c8a3b8c2f166d0289e767637fbba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QTextEdit *</type>
      <name>returnValueEdit</name>
      <anchorfile>class_function_dialog.html</anchorfile>
      <anchor>a39cb1a6ff453f275115c3162e74da170</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QCheckBox *</type>
      <name>publicCheckBox</name>
      <anchorfile>class_function_dialog.html</anchorfile>
      <anchor>a98b6f5e2b692d294fa78f81ac4738906</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QCheckBox *</type>
      <name>protectedAndPrivateCheckBox</name>
      <anchorfile>class_function_dialog.html</anchorfile>
      <anchor>ac89345fdaf6cc9e78c2a4966753a80ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QCheckBox *</type>
      <name>slotsCheckBox</name>
      <anchorfile>class_function_dialog.html</anchorfile>
      <anchor>a1b22dae72d8f774c5ff71793a49ad233</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QCheckBox *</type>
      <name>signalsCheckBox</name>
      <anchorfile>class_function_dialog.html</anchorfile>
      <anchor>a60e7ff6068cbc68bc3198bd98f7bed35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QObjectWeakPtrList</type>
      <name>objects</name>
      <anchorfile>class_function_dialog.html</anchorfile>
      <anchor>a05e275b6a1fa92e87a9f4a5c6215a7ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QList&lt; IArgumentType * &gt;</type>
      <name>currentArguments</name>
      <anchorfile>class_function_dialog.html</anchorfile>
      <anchor>a393cc5e3012e79247a9a200539774270</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FunctionInvoker</name>
    <filename>class_function_invoker.html</filename>
    <member kind="function">
      <type></type>
      <name>FunctionInvoker</name>
      <anchorfile>class_function_invoker.html</anchorfile>
      <anchor>a4f20dccd3cf35f00a5e7475703fdca96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Invoke</name>
      <anchorfile>class_function_invoker.html</anchorfile>
      <anchor>ac8ff89216a8a4bb8bd17501dc605c4f5</anchor>
      <arglist>(QObject *obj, const QString &amp;function, const QVariantList &amp;params, QVariant *ret=0, QString *errorMsg=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Invoke</name>
      <anchorfile>class_function_invoker.html</anchorfile>
      <anchor>ae8346f562701fc83507289c3ec692793</anchor>
      <arglist>(QObject *obj, const QString &amp;function, const QStringList &amp;params, QVariant *ret=0, QString *errorMsg=0)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; IArgumentType * &gt;</type>
      <name>CreateArgumentList</name>
      <anchorfile>class_function_invoker.html</anchorfile>
      <anchor>a88facc9ab67a706c7336c3d3e905654e</anchor>
      <arglist>(const QObject *obj, const QString &amp;signature)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>IArgumentType *</type>
      <name>CreateArgumentType</name>
      <anchorfile>class_function_invoker.html</anchorfile>
      <anchor>a2185633b57e944b47bb40300a18d2b55</anchor>
      <arglist>(const QString &amp;type)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>IArgumentType *</type>
      <name>CreateReturnValueArgument</name>
      <anchorfile>class_function_invoker.html</anchorfile>
      <anchor>a7216eadb3640dee7f6356d7cca123d3e</anchor>
      <arglist>(const QObject *obj, const QString &amp;function)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Invoke</name>
      <anchorfile>class_function_invoker.html</anchorfile>
      <anchor>a15d28da74baa602da6e5cdef9986509a</anchor>
      <arglist>(QObject *obj, const QString &amp;function, QList&lt; IArgumentType * &gt; &amp;args, QVariant *ret, QString *errorMsg)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>FunctionMetaData</name>
    <filename>struct_function_meta_data.html</filename>
    <member kind="typedef">
      <type>QPair&lt; QString, QString &gt;</type>
      <name>Parameter</name>
      <anchorfile>struct_function_meta_data.html</anchorfile>
      <anchor>add456f2eaf69e0e55884b30dd5f5214e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>struct_function_meta_data.html</anchorfile>
      <anchor>a24c3562c013f904b42080d52e6bc8acf</anchor>
      <arglist>(const FunctionMetaData &amp;rhs) const </arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>function</name>
      <anchorfile>struct_function_meta_data.html</anchorfile>
      <anchor>ac2e3c1a12f2a91c75d59b3d65e2d1e33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>returnType</name>
      <anchorfile>struct_function_meta_data.html</anchorfile>
      <anchor>a77cc098153a58a46a9649163c3be007a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>signature</name>
      <anchorfile>struct_function_meta_data.html</anchorfile>
      <anchor>af746e4a8a5135593b1aa1f6cbb0e1e38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>fullSignature</name>
      <anchorfile>struct_function_meta_data.html</anchorfile>
      <anchor>a15683b048ee873d45e5aa398c36b8e4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QList&lt; Parameter &gt;</type>
      <name>parameters</name>
      <anchorfile>struct_function_meta_data.html</anchorfile>
      <anchor>af545da43ee8009df135252eb7d336315</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>GenericAssetFactory</name>
    <filename>class_generic_asset_factory.html</filename>
    <base>IAssetTypeFactory</base>
    <member kind="function">
      <type></type>
      <name>GenericAssetFactory</name>
      <anchorfile>class_generic_asset_factory.html</anchorfile>
      <anchor>a8edc48230e5e4dfc4979e0fcdd94b94e</anchor>
      <arglist>(const char *assetType_)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QString</type>
      <name>Type</name>
      <anchorfile>class_generic_asset_factory.html</anchorfile>
      <anchor>a400b239804a11b7b2ef17978f8dfaad7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AssetPtr</type>
      <name>CreateEmptyAsset</name>
      <anchorfile>class_generic_asset_factory.html</anchorfile>
      <anchor>af37417388d2773fe8ca7659b14af7212</anchor>
      <arglist>(AssetAPI *owner, const char *name)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QString</type>
      <name>assetType</name>
      <anchorfile>class_generic_asset_factory.html</anchorfile>
      <anchor>a931d68ed684a6c8f9e9857b4b9e3da51</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>GenericComponentFactory</name>
    <filename>class_generic_component_factory.html</filename>
    <base>IComponentFactory</base>
    <member kind="function">
      <type>QString</type>
      <name>TypeName</name>
      <anchorfile>class_generic_component_factory.html</anchorfile>
      <anchor>a05db030c5a659bb1e0f1762d05167745</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>TypeId</name>
      <anchorfile>class_generic_component_factory.html</anchorfile>
      <anchor>a322007d3c03be263245b73659f9db612</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boost::shared_ptr&lt; IComponent &gt;</type>
      <name>Create</name>
      <anchorfile>class_generic_component_factory.html</anchorfile>
      <anchor>a0569cb5ebb808b64ce6f5c6624002bf1</anchor>
      <arglist>(Scene *scene, const QString &amp;newComponentName)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>GestureEvent</name>
    <filename>class_gesture_event.html</filename>
    <member kind="enumeration">
      <name>EventType</name>
      <anchorfile>class_gesture_event.html</anchorfile>
      <anchor>a542789bff6747c846fbffd5dd73c29ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GestureInvalid</name>
      <anchorfile>class_gesture_event.html</anchorfile>
      <anchor>a542789bff6747c846fbffd5dd73c29efa0cf33d3efec59d5838fdfe369402b8af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GestureStarted</name>
      <anchorfile>class_gesture_event.html</anchorfile>
      <anchor>a542789bff6747c846fbffd5dd73c29efaa2ce65bfcd9cdfee403b92d631f8ea1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GestureUpdated</name>
      <anchorfile>class_gesture_event.html</anchorfile>
      <anchor>a542789bff6747c846fbffd5dd73c29efae0af8409a8137b7b300f37d9fa0af016</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GestureFinished</name>
      <anchorfile>class_gesture_event.html</anchorfile>
      <anchor>a542789bff6747c846fbffd5dd73c29efa402fa37a40841781172713d71e1e14b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GestureCanceled</name>
      <anchorfile>class_gesture_event.html</anchorfile>
      <anchor>a542789bff6747c846fbffd5dd73c29efa3d7a72c7dc4dbb1af0b7ca802024fab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Suppress</name>
      <anchorfile>class_gesture_event.html</anchorfile>
      <anchor>aa80a633888c7604888d25108bc2542ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Accept</name>
      <anchorfile>class_gesture_event.html</anchorfile>
      <anchor>aa12343456b8bf062c0a0b5a760ca13b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QGesture *</type>
      <name>Gesture</name>
      <anchorfile>class_gesture_event.html</anchorfile>
      <anchor>a97862c4d696162b64580c4c4c3742328</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Qt::GestureType</type>
      <name>GestureType</name>
      <anchorfile>class_gesture_event.html</anchorfile>
      <anchor>abdd4be71874def1ed2f4fce184a76f02</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsStartedEvent</name>
      <anchorfile>class_gesture_event.html</anchorfile>
      <anchor>a756a5dc888750ce87566b3bfba3b9310</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsUpdatedEvent</name>
      <anchorfile>class_gesture_event.html</anchorfile>
      <anchor>abd2f383d5e307c33866729893f30f663</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsFinishedEvent</name>
      <anchorfile>class_gesture_event.html</anchorfile>
      <anchor>a241b902ba70742f5ede2eff3cbd49489</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GestureEvent</name>
      <anchorfile>class_gesture_event.html</anchorfile>
      <anchor>a9cef7212754d6e18002d2764866f2c5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GestureEvent</name>
      <anchorfile>class_gesture_event.html</anchorfile>
      <anchor>acf0976a0343a2ac19ad8ba2eb6c0df77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>QGesture *</type>
      <name>gesture</name>
      <anchorfile>class_gesture_event.html</anchorfile>
      <anchor>acb880a51213c39d064c6d8ad32ab1358</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Qt::GestureType</type>
      <name>gestureType</name>
      <anchorfile>class_gesture_event.html</anchorfile>
      <anchor>a86a2340678432671ad576f283b228bf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventType</type>
      <name>eventType</name>
      <anchorfile>class_gesture_event.html</anchorfile>
      <anchor>a727dfaf00c12573fb6d151e45e585ec3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>handled</name>
      <anchorfile>class_gesture_event.html</anchorfile>
      <anchor>a29775a100220a75bfd1afae5ffbe9bef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>HitInfo</name>
    <filename>struct_hit_info.html</filename>
    <member kind="enumeration">
      <name>HitResult</name>
      <anchorfile>struct_hit_info.html</anchorfile>
      <anchor>a713af3479fb6dab1c10c06798c6f2661</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoHit</name>
      <anchorfile>struct_hit_info.html</anchorfile>
      <anchor>a713af3479fb6dab1c10c06798c6f2661a9f53c97934f78e386e13c71f944bcbac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Intersect</name>
      <anchorfile>struct_hit_info.html</anchorfile>
      <anchor>a713af3479fb6dab1c10c06798c6f2661ae5b18c9724717fdf1a8125c9e7643502</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AInsideB</name>
      <anchorfile>struct_hit_info.html</anchorfile>
      <anchor>a713af3479fb6dab1c10c06798c6f2661a9b6a1e7c52fde05ca56d9ce0b17e9021</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BInsideA</name>
      <anchorfile>struct_hit_info.html</anchorfile>
      <anchor>a713af3479fb6dab1c10c06798c6f2661a0797dae037e185e85dbfb97346633574</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HitResult</type>
      <name>result</name>
      <anchorfile>struct_hit_info.html</anchorfile>
      <anchor>a739963028cbd707aa2864484f27f3589</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>point</name>
      <anchorfile>struct_hit_info.html</anchorfile>
      <anchor>ab19323e82624c7b8e3b4f2b7eafe47da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>normalA</name>
      <anchorfile>struct_hit_info.html</anchorfile>
      <anchor>acef5916a011d600dc0e07aa1c678840c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>normalB</name>
      <anchorfile>struct_hit_info.html</anchorfile>
      <anchor>a0ea9b307a884650fa521ac759b104a5f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>HttpAssetProvider</name>
    <filename>class_http_asset_provider.html</filename>
    <base>IAssetProvider</base>
    <member kind="function">
      <type></type>
      <name>HttpAssetProvider</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>a8e207a476eefe8c3129cbc36f1f6a787</anchor>
      <arglist>(Framework *framework)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HttpAssetProvider</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>aaa210b587ab2926286b694001a288b22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QString</type>
      <name>Name</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>a8cf0804dd87f146d80889872dc141ed6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsValidRef</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>a2e891d55c5a6d1f8c4b6c8a5138d0cf1</anchor>
      <arglist>(QString assetRef, QString assetType=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AssetTransferPtr</type>
      <name>RequestAsset</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>a0408a760fdef4502bc8e87ec4fcb474e</anchor>
      <arglist>(QString assetRef, QString assetType)</arglist>
    </member>
    <member kind="function">
      <type>HttpAssetStoragePtr</type>
      <name>AddStorageAddress</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>afabdf9040e6527ccd90af7250f6ae892</anchor>
      <arglist>(const QString &amp;address, const QString &amp;storageName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; AssetStoragePtr &gt;</type>
      <name>GetStorages</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>a2860f3942f94a2413355e2d77796e15d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AssetStoragePtr</type>
      <name>GetStorageByName</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>a9d3cb2456efc1dbe059dad164daa1f6b</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AssetStoragePtr</type>
      <name>GetStorageForAssetRef</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>ab072272251e36233b6c10962878d3eba</anchor>
      <arglist>(const QString &amp;assetRef) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AssetUploadTransferPtr</type>
      <name>UploadAssetFromFileInMemory</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>a65d4c578c4d5e8dae29e1ba9469f591a</anchor>
      <arglist>(const u8 *data, size_t numBytes, AssetStoragePtr destination, const char *assetName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeleteAssetFromStorage</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>a954b2d8192dbe9c13bbccde35fd6bfcc</anchor>
      <arglist>(QString assetRef)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>RemoveAssetStorage</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>a99ef1021ff9b224c40a25b331c8e8d42</anchor>
      <arglist>(QString storageName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AssetStoragePtr</type>
      <name>TryDeserializeStorageFromString</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>a50487ddd1f20d754aa1a41674b9e5e26</anchor>
      <arglist>(const QString &amp;storage)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>GenerateUniqueStorageName</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>ae436dbb6f07d163a667a73d06f48217c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QNetworkAccessManager *</type>
      <name>GetNetworkAccessManager</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>a64680e423d5d111aa6268fcbd657a804</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>class_i_asset_provider.html</anchorfile>
      <anchor>a1a26f8e39db3012c3bc51ceff8980450</anchor>
      <arglist>(f64 frametime)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; QNetworkReply *, HttpAssetTransferPtr &gt;</type>
      <name>TransferMap</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>adebed38f310420d7eb9acca079dcf6c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; QNetworkReply *, AssetUploadTransferPtr &gt;</type>
      <name>UploadTransferMap</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>a7b2f87c6425043b8b9fff2a0886de904</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>AboutToExit</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>ae0ca9070140346b07b8b1eb25c7a335a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnHttpTransferFinished</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>a471c56510e4ec0986f89a3d139ffffb0</anchor>
      <arglist>(QNetworkReply *reply)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CreateAccessManager</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>a6947fae8171b58d6b5e26071cee57f53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>AddAssetRefToStorages</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>ad46e0274725871a11cb1fef3efbc159c</anchor>
      <arglist>(const QString &amp;ref)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>DeleteAssetRefFromStorages</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>a2421dc4ee2eeba342c38cd80b6322054</anchor>
      <arglist>(const QString &amp;ref)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>ab7b62ee56add87e3e728004d41998729</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; HttpAssetStoragePtr &gt;</type>
      <name>storages</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>a0fe70ff6077c8f729840183d83d8f412</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QNetworkAccessManager *</type>
      <name>networkAccessManager</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>a4f6ca67109954a186a2cf7841cf136b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TransferMap</type>
      <name>transfers</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>a631b5acc4ff63de6398044e57d93d5e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>UploadTransferMap</type>
      <name>uploadTransfers</name>
      <anchorfile>class_http_asset_provider.html</anchorfile>
      <anchor>a76dfe21d6c68473d50d25ded1cfe0bc7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>HttpAssetStorage</name>
    <filename>class_http_asset_storage.html</filename>
    <base>IAssetStorage</base>
    <member kind="slot" virtualness="virtual">
      <type>virtual bool</type>
      <name>Writable</name>
      <anchorfile>class_http_asset_storage.html</anchorfile>
      <anchor>a0fc53199f3bab1df32dfb89fea957ec2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual bool</type>
      <name>Trusted</name>
      <anchorfile>class_http_asset_storage.html</anchorfile>
      <anchor>a686e3c97205f6b701f43d606c9a0b21c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual QString</type>
      <name>GetFullAssetURL</name>
      <anchorfile>class_http_asset_storage.html</anchorfile>
      <anchor>a21031dafdf24baaec21ae2537aa4cdca</anchor>
      <arglist>(const QString &amp;localName)</arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual QString</type>
      <name>Type</name>
      <anchorfile>class_http_asset_storage.html</anchorfile>
      <anchor>a83e54cc29d0fba70dc73669464e126c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual QString</type>
      <name>Name</name>
      <anchorfile>class_http_asset_storage.html</anchorfile>
      <anchor>adf62d361c5a46d07bba38720061da84b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual QString</type>
      <name>BaseURL</name>
      <anchorfile>class_http_asset_storage.html</anchorfile>
      <anchor>a32b854d10dc50f56898e40fae8ad4ac3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual QStringList</type>
      <name>GetAllAssetRefs</name>
      <anchorfile>class_http_asset_storage.html</anchorfile>
      <anchor>abb6ed54f9eb2e810473bd7c3d562a316</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual void</type>
      <name>RefreshAssetRefs</name>
      <anchorfile>class_http_asset_storage.html</anchorfile>
      <anchor>aad752e847bb0ebc5f0feb084abbf4756</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual QString</type>
      <name>SerializeToString</name>
      <anchorfile>class_http_asset_storage.html</anchorfile>
      <anchor>a655243d1259a0de2a1dbe6ed03c0834d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>AddAssetRef</name>
      <anchorfile>class_http_asset_storage.html</anchorfile>
      <anchor>ad7b2e8452963feb99244dfd620e506a3</anchor>
      <arglist>(const QString &amp;ref)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>DeleteAssetRef</name>
      <anchorfile>class_http_asset_storage.html</anchorfile>
      <anchor>a1d54c37559a40030eb39a15c1d23b559</anchor>
      <arglist>(const QString &amp;ref)</arglist>
    </member>
    <member kind="slot">
      <type>const QString &amp;</type>
      <name>LocalDir</name>
      <anchorfile>class_http_asset_storage.html</anchorfile>
      <anchor>a5fd73e69ffc8a6da1ae647b368db955c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual QString</type>
      <name>ToString</name>
      <anchorfile>class_i_asset_storage.html</anchorfile>
      <anchor>a47cb8b5122df3b7fb815fbe4355aa7f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AssetRefsChanged</name>
      <anchorfile>class_i_asset_storage.html</anchorfile>
      <anchor>a9087d9b7f62a4472d987d7c0d44ef836</anchor>
      <arglist>(AssetStoragePtr storage)</arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>baseAddress</name>
      <anchorfile>class_http_asset_storage.html</anchorfile>
      <anchor>a8a646b627f1167d6b820374ca8b5336a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>storageName</name>
      <anchorfile>class_http_asset_storage.html</anchorfile>
      <anchor>ad4f727d89bfb947d69fdcd31a0be9e87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QStringList</type>
      <name>assetRefs</name>
      <anchorfile>class_http_asset_storage.html</anchorfile>
      <anchor>a1f38c5e6304920c70ef6818aa56133aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>localDir</name>
      <anchorfile>class_http_asset_storage.html</anchorfile>
      <anchor>a3bf740f14a92a7155a803699a4f1bae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AssetProviderWeakPtr</type>
      <name>provider</name>
      <anchorfile>class_i_asset_storage.html</anchorfile>
      <anchor>ad9de3ba5586cddd083fd3260d8f20b3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnHttpTransferFinished</name>
      <anchorfile>class_http_asset_storage.html</anchorfile>
      <anchor>a9d62fd041c9ed9e7a4ab7c2b0c67573b</anchor>
      <arglist>(QNetworkReply *reply)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>PerformSearch</name>
      <anchorfile>class_http_asset_storage.html</anchorfile>
      <anchor>a872da9f5128927c4586307b86c5b4751</anchor>
      <arglist>(QString path)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>QNetworkAccessManager *</type>
      <name>GetNetworkAccessManager</name>
      <anchorfile>class_http_asset_storage.html</anchorfile>
      <anchor>ae86ec2721461451abf1d5060652e128d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; SearchRequest &gt;</type>
      <name>searches</name>
      <anchorfile>class_http_asset_storage.html</anchorfile>
      <anchor>a0b5b2285d0454bf213b2c617f3cbb8b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>HttpAssetTransfer</name>
    <filename>class_http_asset_transfer.html</filename>
    <base>IAssetTransfer</base>
    <member kind="slot">
      <type>void</type>
      <name>SetCachingBehavior</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>afabe73f5add63eb6cb566a2f48756c86</anchor>
      <arglist>(bool cachingAllowed_, QString diskSource_)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>DiskSource</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a6526a4cb9bf9fd8f799b66d31e04f256</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>CachingAllowed</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a12ceebf4410f4b8ab2c58d1a72f0458d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QByteArray</type>
      <name>RawData</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a0a2e9c572e0daf78bccee8770c25b629</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>SourceUrl</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a338e9fbee435f5b51ced10eaba9e7563</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>AssetType</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>ad7cedf6627d791020eb70ffe75ea339d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>AssetPtr</type>
      <name>Asset</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a8ce3cd5bac0ab48c9e201e667e6a4e58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Downloaded</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a68cde51cf999156f511d7d6eae8e8150</anchor>
      <arglist>(IAssetTransfer *transfer)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Succeeded</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>af699be6a61f10b43cd4b6d750b8c48c4</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Failed</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a3ec4f7d42ecb0a6e31b36876aa8b94f4</anchor>
      <arglist>(IAssetTransfer *transfer, QString reason)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EmitAssetDownloaded</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a3a254e737873849f4b38ce48f2c9d3e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EmitTransferSucceeded</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>ae9cd89d255eee7543c2570b0afb192ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EmitAssetFailed</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a33af4d05ae18d5fc6e5b1a246f65f83e</anchor>
      <arglist>(QString reason)</arglist>
    </member>
    <member kind="variable">
      <type>AssetPtr</type>
      <name>asset</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>ad19a86526bce79480781c42521f1fbfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AssetReference</type>
      <name>source</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a314079cfb932021594869539652451b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>assetType</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a4e6c6cd77fb4bb41403b9e73c4ff990f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>internalResourceName</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a8c46c19efcb54176124e31d9224a8242</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AssetProviderWeakPtr</type>
      <name>provider</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a604a329735df768a17f05877734488a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AssetStorageWeakPtr</type>
      <name>storage</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a6e2ac8d1036dd5146ec93a1331a649f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; u8 &gt;</type>
      <name>rawAssetData</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>aad7d0371621ecf57b7f75955eb418c21</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IArgumentType</name>
    <filename>class_i_argument_type.html</filename>
    <member kind="function">
      <type></type>
      <name>IArgumentType</name>
      <anchorfile>class_i_argument_type.html</anchorfile>
      <anchor>a439556df083c6889c358fbaad06534f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IArgumentType</name>
      <anchorfile>class_i_argument_type.html</anchorfile>
      <anchor>a588aad44dd311782238d490bb4679d27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QWidget *</type>
      <name>CreateEditor</name>
      <anchorfile>class_i_argument_type.html</anchorfile>
      <anchor>acd39b46d8dbd3902199c3a9e05541b16</anchor>
      <arglist>(QWidget *parent=0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>UpdateValueFromEditor</name>
      <anchorfile>class_i_argument_type.html</anchorfile>
      <anchor>aa4a005ee06a8f12217f120868574eee7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>UpdateValueToEditor</name>
      <anchorfile>class_i_argument_type.html</anchorfile>
      <anchor>a00841a817f98e0f60f027b15c9515c6b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>SetValue</name>
      <anchorfile>class_i_argument_type.html</anchorfile>
      <anchor>aedceca00a6e4c3f3ee1bdb220af5ed3d</anchor>
      <arglist>(void *val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QGenericArgument</type>
      <name>Value</name>
      <anchorfile>class_i_argument_type.html</anchorfile>
      <anchor>a2a5bb60054331ae3a640ceba441ff5f5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QGenericReturnArgument</type>
      <name>ReturnValue</name>
      <anchorfile>class_i_argument_type.html</anchorfile>
      <anchor>ab31150a4d7c9c8080b597f70576bdc17</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QString</type>
      <name>ToString</name>
      <anchorfile>class_i_argument_type.html</anchorfile>
      <anchor>a2c1c062f1c56e82cbf289b6b35d69137</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QVariant</type>
      <name>ToQVariant</name>
      <anchorfile>class_i_argument_type.html</anchorfile>
      <anchor>a809b37519ddb0d3506a8e0fe98ef309f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>FromQVariant</name>
      <anchorfile>class_i_argument_type.html</anchorfile>
      <anchor>aaf69767e4dd7d22442feddfd6747092d</anchor>
      <arglist>(const QVariant &amp;var)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>FromString</name>
      <anchorfile>class_i_argument_type.html</anchorfile>
      <anchor>a193d05e7646d1a687c0aa4e48503eb51</anchor>
      <arglist>(const QString &amp;str)=0</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Q_DISABLE_COPY</name>
      <anchorfile>class_i_argument_type.html</anchorfile>
      <anchor>a2cdf26dd8bc45ca5a91540a7e16708af</anchor>
      <arglist>(IArgumentType)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IAsset</name>
    <filename>class_i_asset.html</filename>
    <member kind="slot">
      <type>QString</type>
      <name>Type</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1ee38592ddb9473b2824a6d39268465f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>Name</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0c3aedda2f04b27a77f90da3cf44eed6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetDiskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a65037aa4ef8ec83d976afd83253f6234</anchor>
      <arglist>(QString diskSource)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>DiskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a21607e4493b017999f35189d82a1587b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>LoadFromFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a6a204f512b26f20f49e7fda9ddfe15ed</anchor>
      <arglist>(QString filename)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>LoadFromCache</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ac1f56599756004172408ff0c40079ab6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Unload</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ab230fc35705c702c9ecf359930b6693f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" virtualness="pure">
      <type>virtual bool</type>
      <name>IsLoaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ab87fde1bdbba7696140230fb7bb96a57</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>afa0a8684b67098c0694e71f1677a6fd0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual AssetPtr</type>
      <name>Clone</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a8bfd7618fbf62b20e106f81cb7648ddb</anchor>
      <arglist>(QString newAssetName) const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual bool</type>
      <name>SaveToFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a43ee1d3d1c9bc8eac79811d2900ed8cf</anchor>
      <arglist>(const QString &amp;filename, const QString &amp;serializationParameters=&quot;&quot;) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SaveCachedCopyToFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>af74f5e730e370db0e54a9cf7308ea32e</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="slot">
      <type>AssetStoragePtr</type>
      <name>GetAssetStorage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a9fd4b8a3353601b0ff47e9042e1e45e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>AssetProviderPtr</type>
      <name>GetAssetProvider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1968beba15e2f64b8aa356261bbe8eec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>ToString</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1ad41ad9fdcc0f036f786e0d0cc1259c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QByteArray</type>
      <name>GetRawData</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a827ca46bb695958627e1e63d7feb0424</anchor>
      <arglist>(const QString serializationParameters=&quot;&quot;) const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Unloaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a51e04b4100d7bdb620c6f0ae440d5f54</anchor>
      <arglist>(IAsset *asset)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Loaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0bf19c4b11e18f5925285231334aa054</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IAsset</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a6b78fd3e5ae9f8f64bcad9aae94a75da</anchor>
      <arglist>(AssetAPI *owner, const QString &amp;type_, const QString &amp;name_)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IAsset</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a4a036de6991235c9f5e1e5d5aaebe5f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFromFileInMemory</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a76fae2e679dc173de78d3dbe2d7b04e3</anchor>
      <arglist>(const u8 *data, size_t numBytes, bool allowAsynchronous=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadCompleted</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a156e1f8df2f868412c3278f27aab16af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DependencyLoaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a8db3fb94d1bd73e184bf3b4e5d0c7153</anchor>
      <arglist>(AssetPtr dependee)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; AssetReference &gt;</type>
      <name>FindReferences</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0e74e3802c3d7cc221ded59de7e5a5c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; AssetReference &gt;</type>
      <name>FindReferencesRecursive</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a43661820be04bb6898b0f6e0c1e60a9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAssetProvider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ab909dddbde3614b811908174a10ddf59</anchor>
      <arglist>(AssetProviderPtr provider)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAssetStorage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ad7cb7c54d73a2677f242dcd318791ce9</anchor>
      <arglist>(AssetStoragePtr storage)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SerializeTo</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>aa81166793934ab10c4c3d30ad1957f83</anchor>
      <arglist>(std::vector&lt; u8 &gt; &amp;data, const QString &amp;serializationParameters=&quot;&quot;) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>DeserializeFromData</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a8fe76eb34a16c463f83a7bf5b42498a5</anchor>
      <arglist>(const u8 *data, size_t numBytes, const bool allowAsynchronous)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>DoUnload</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a64b1c67239f03301bd77f00a80447360</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetAPI *</type>
      <name>assetAPI</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>acfa90de1e91d33066b10e9a983d7f706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetProviderWeakPtr</type>
      <name>provider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a34182317435ed01abcfa86fd1a523a4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetStorageWeakPtr</type>
      <name>storage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0d7711709ea3a5d74097c36eeb53acce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>type</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a9a2cbc25b81810fa610da6a686fd5d03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a19e035f9cfe2559d8ea38c331ca9acfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>diskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ad8db45ff366bec21d66c9f853f0bde67</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IAssetProvider</name>
    <filename>class_i_asset_provider.html</filename>
    <member kind="function">
      <type></type>
      <name>IAssetProvider</name>
      <anchorfile>class_i_asset_provider.html</anchorfile>
      <anchor>a20e3822e4718f2bf709a890936303273</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IAssetProvider</name>
      <anchorfile>class_i_asset_provider.html</anchorfile>
      <anchor>a29b5f7b381b0109d9d952d825028a8ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QString</type>
      <name>Name</name>
      <anchorfile>class_i_asset_provider.html</anchorfile>
      <anchor>ac55ee89683f3a8e5d194569b8f4874dd</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>IsValidRef</name>
      <anchorfile>class_i_asset_provider.html</anchorfile>
      <anchor>a8bd54753c4e5a05f1365a1a98ea470f3</anchor>
      <arglist>(QString assetRef, QString assetType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual AssetTransferPtr</type>
      <name>RequestAsset</name>
      <anchorfile>class_i_asset_provider.html</anchorfile>
      <anchor>a3e89652d2b06291411c99b060d22b96d</anchor>
      <arglist>(QString assetRef, QString assetType)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>class_i_asset_provider.html</anchorfile>
      <anchor>a1a26f8e39db3012c3bc51ceff8980450</anchor>
      <arglist>(f64 frametime)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeleteAssetFromStorage</name>
      <anchorfile>class_i_asset_provider.html</anchorfile>
      <anchor>af96ef6be99ea40fd45c50334574134a0</anchor>
      <arglist>(QString assetRef)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>RemoveAssetStorage</name>
      <anchorfile>class_i_asset_provider.html</anchorfile>
      <anchor>a9b23292a2d568d854c4cd8dc7c6f31c4</anchor>
      <arglist>(QString storageName)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; AssetStoragePtr &gt;</type>
      <name>GetStorages</name>
      <anchorfile>class_i_asset_provider.html</anchorfile>
      <anchor>af44a9593dd0de6b3eb15ba4f191cdc0c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual AssetStoragePtr</type>
      <name>GetStorageByName</name>
      <anchorfile>class_i_asset_provider.html</anchorfile>
      <anchor>a93316d4d32209751a9d03feb2d833cde</anchor>
      <arglist>(const QString &amp;name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual AssetStoragePtr</type>
      <name>GetStorageForAssetRef</name>
      <anchorfile>class_i_asset_provider.html</anchorfile>
      <anchor>aa0fd8b63bf00449fbe9f39575c81ed2e</anchor>
      <arglist>(const QString &amp;assetRef) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AssetUploadTransferPtr</type>
      <name>UploadAssetFromFileInMemory</name>
      <anchorfile>class_i_asset_provider.html</anchorfile>
      <anchor>a7d29cab1e562b2486ac3b0ef3254bfe6</anchor>
      <arglist>(const u8 *data, size_t numBytes, AssetStoragePtr destination, const char *assetName)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual AssetStoragePtr</type>
      <name>TryDeserializeStorageFromString</name>
      <anchorfile>class_i_asset_provider.html</anchorfile>
      <anchor>a8b1644445f194b1451b4a989637d982a</anchor>
      <arglist>(const QString &amp;storage)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IAssetStorage</name>
    <filename>class_i_asset_storage.html</filename>
    <member kind="slot" virtualness="virtual">
      <type>virtual QStringList</type>
      <name>GetAllAssetRefs</name>
      <anchorfile>class_i_asset_storage.html</anchorfile>
      <anchor>a98c372195c36434224912141aaa5c198</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual void</type>
      <name>RefreshAssetRefs</name>
      <anchorfile>class_i_asset_storage.html</anchorfile>
      <anchor>a79e9926c4cf9d799fe3b5e7c127db420</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual bool</type>
      <name>Writable</name>
      <anchorfile>class_i_asset_storage.html</anchorfile>
      <anchor>afda872ba1ab6b79b5d40fe8865c299a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual bool</type>
      <name>Trusted</name>
      <anchorfile>class_i_asset_storage.html</anchorfile>
      <anchor>aaa45c9159e4bc3074b828f7e34c7866f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual QString</type>
      <name>GetFullAssetURL</name>
      <anchorfile>class_i_asset_storage.html</anchorfile>
      <anchor>a12bb737cf660ba2764d7ffa8c1493389</anchor>
      <arglist>(const QString &amp;localName)</arglist>
    </member>
    <member kind="slot" virtualness="pure">
      <type>virtual QString</type>
      <name>Type</name>
      <anchorfile>class_i_asset_storage.html</anchorfile>
      <anchor>a242ce47a94ffde6473ba54dbf2045aa4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual QString</type>
      <name>Name</name>
      <anchorfile>class_i_asset_storage.html</anchorfile>
      <anchor>a74b5e1bb8bfa2e03eaed454dd1c33582</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual QString</type>
      <name>BaseURL</name>
      <anchorfile>class_i_asset_storage.html</anchorfile>
      <anchor>af5934d088ee7efdc6c226e5c17855e4e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual QString</type>
      <name>ToString</name>
      <anchorfile>class_i_asset_storage.html</anchorfile>
      <anchor>a47cb8b5122df3b7fb815fbe4355aa7f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" virtualness="pure">
      <type>virtual QString</type>
      <name>SerializeToString</name>
      <anchorfile>class_i_asset_storage.html</anchorfile>
      <anchor>a9cb8f6457faa7477538d3588f56a9de7</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AssetRefsChanged</name>
      <anchorfile>class_i_asset_storage.html</anchorfile>
      <anchor>a9087d9b7f62a4472d987d7c0d44ef836</anchor>
      <arglist>(AssetStoragePtr storage)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IAssetStorage</name>
      <anchorfile>class_i_asset_storage.html</anchorfile>
      <anchor>a58e67c56090758499812942e1ef7d31b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>AssetProviderWeakPtr</type>
      <name>provider</name>
      <anchorfile>class_i_asset_storage.html</anchorfile>
      <anchor>ad9de3ba5586cddd083fd3260d8f20b3b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IAssetTransfer</name>
    <filename>class_i_asset_transfer.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>SetCachingBehavior</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>afabe73f5add63eb6cb566a2f48756c86</anchor>
      <arglist>(bool cachingAllowed_, QString diskSource_)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>DiskSource</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a6526a4cb9bf9fd8f799b66d31e04f256</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>CachingAllowed</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a12ceebf4410f4b8ab2c58d1a72f0458d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QByteArray</type>
      <name>RawData</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a0a2e9c572e0daf78bccee8770c25b629</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>SourceUrl</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a338e9fbee435f5b51ced10eaba9e7563</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>AssetType</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>ad7cedf6627d791020eb70ffe75ea339d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>AssetPtr</type>
      <name>Asset</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a8ce3cd5bac0ab48c9e201e667e6a4e58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Downloaded</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a68cde51cf999156f511d7d6eae8e8150</anchor>
      <arglist>(IAssetTransfer *transfer)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Succeeded</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>af699be6a61f10b43cd4b6d750b8c48c4</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Failed</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a3ec4f7d42ecb0a6e31b36876aa8b94f4</anchor>
      <arglist>(IAssetTransfer *transfer, QString reason)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IAssetTransfer</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a82213d34397c5acc1ca6336a670e584d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IAssetTransfer</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a699b90116f51cc6003b62608046c182c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EmitAssetDownloaded</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a3a254e737873849f4b38ce48f2c9d3e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EmitTransferSucceeded</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>ae9cd89d255eee7543c2570b0afb192ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EmitAssetFailed</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a33af4d05ae18d5fc6e5b1a246f65f83e</anchor>
      <arglist>(QString reason)</arglist>
    </member>
    <member kind="variable">
      <type>AssetPtr</type>
      <name>asset</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>ad19a86526bce79480781c42521f1fbfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AssetReference</type>
      <name>source</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a314079cfb932021594869539652451b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>assetType</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a4e6c6cd77fb4bb41403b9e73c4ff990f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>internalResourceName</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a8c46c19efcb54176124e31d9224a8242</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AssetProviderWeakPtr</type>
      <name>provider</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a604a329735df768a17f05877734488a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AssetStorageWeakPtr</type>
      <name>storage</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a6e2ac8d1036dd5146ec93a1331a649f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; u8 &gt;</type>
      <name>rawAssetData</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>aad7d0371621ecf57b7f75955eb418c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>cachingAllowed</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a522c33855d964f5e3e89d575103c9887</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QString</type>
      <name>diskSource</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a84fb75096aab2c260f163cb7015f790f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IAssetTypeFactory</name>
    <filename>class_i_asset_type_factory.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IAssetTypeFactory</name>
      <anchorfile>class_i_asset_type_factory.html</anchorfile>
      <anchor>a5c1bf779454d25017bbf38e557fd20d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QString</type>
      <name>Type</name>
      <anchorfile>class_i_asset_type_factory.html</anchorfile>
      <anchor>a9a0483f12e558cf31256e0c3fe173b5d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual AssetPtr</type>
      <name>CreateEmptyAsset</name>
      <anchorfile>class_i_asset_type_factory.html</anchorfile>
      <anchor>a58c23b678499592b1e94e3fcfc5a7ea7</anchor>
      <arglist>(AssetAPI *owner, const char *name)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IAssetUploadTransfer</name>
    <filename>class_i_asset_upload_transfer.html</filename>
    <member kind="slot">
      <type>QString</type>
      <name>AssetRef</name>
      <anchorfile>class_i_asset_upload_transfer.html</anchorfile>
      <anchor>a4f8dde3175734887bf09d0f19935a5f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QByteArray</type>
      <name>RawData</name>
      <anchorfile>class_i_asset_upload_transfer.html</anchorfile>
      <anchor>a4ecdedcf693868664bfbc721ad65af5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>SourceFilename</name>
      <anchorfile>class_i_asset_upload_transfer.html</anchorfile>
      <anchor>a30bb407258e6e83032a994c1905ced23</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>DestinationName</name>
      <anchorfile>class_i_asset_upload_transfer.html</anchorfile>
      <anchor>a7e8cf5a4e228d04c54b57599d5494af3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Completed</name>
      <anchorfile>class_i_asset_upload_transfer.html</anchorfile>
      <anchor>a4264dfa6a6644ff00d42e933e88831a1</anchor>
      <arglist>(IAssetUploadTransfer *transfer)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Failed</name>
      <anchorfile>class_i_asset_upload_transfer.html</anchorfile>
      <anchor>a3f8742f19d6cdf095c5026d9a3ea2ff0</anchor>
      <arglist>(IAssetUploadTransfer *transfer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IAssetUploadTransfer</name>
      <anchorfile>class_i_asset_upload_transfer.html</anchorfile>
      <anchor>abc7987de3a9a43762472a889f81e68fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>Progress</name>
      <anchorfile>class_i_asset_upload_transfer.html</anchorfile>
      <anchor>a64d3231cc4c13c54856f801e1762a0c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EmitTransferCompleted</name>
      <anchorfile>class_i_asset_upload_transfer.html</anchorfile>
      <anchor>ab59be973359cde26dd96de5fe698aa6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EmitTransferFailed</name>
      <anchorfile>class_i_asset_upload_transfer.html</anchorfile>
      <anchor>a679f321431ee9acb547a4af7d2ec0ad4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>sourceFilename</name>
      <anchorfile>class_i_asset_upload_transfer.html</anchorfile>
      <anchor>a2455cdcdb0b49e8c845346dcc8693490</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; u8 &gt;</type>
      <name>assetData</name>
      <anchorfile>class_i_asset_upload_transfer.html</anchorfile>
      <anchor>af8383401bd52a2fe71d5ae3d56d7f0c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>destinationName</name>
      <anchorfile>class_i_asset_upload_transfer.html</anchorfile>
      <anchor>a85d7fd5ff570f9bdbcbe3ee6e129d5da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boost::weak_ptr&lt; IAssetStorage &gt;</type>
      <name>destinationStorage</name>
      <anchorfile>class_i_asset_upload_transfer.html</anchorfile>
      <anchor>a16dadf02a008d75fdebf375638f8cb68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AssetProviderWeakPtr</type>
      <name>destinationProvider</name>
      <anchorfile>class_i_asset_upload_transfer.html</anchorfile>
      <anchor>a917e4cd2919e0afa44c801204bbcb06b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IAttribute</name>
    <filename>class_i_attribute.html</filename>
    <member kind="function">
      <type></type>
      <name>IAttribute</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>af1c42155c8c2a2374ad3627186e34780</anchor>
      <arglist>(IComponent *owner, const char *name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IAttribute</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>a7d2458587cfa0fae752fe8495829a951</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>IComponent *</type>
      <name>Owner</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>a6b61179eeb005a354656557959f1331d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>aad8167e9d88fea05f129bc27a9010cfe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>ToString</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>ae6acfa747accc74eae30f10d508861d8</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>FromString</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>ac53b14c9d68507e0ab613d574bda244c</anchor>
      <arglist>(const std::string &amp;str, AttributeChange::Type change)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QString</type>
      <name>TypeName</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>a8de9433a3f483516e5426a2e7ebab85c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual u32</type>
      <name>TypeId</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>aaf3ccf65d16a4cc99f288a38ee663f90</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>ToBinary</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>a63c4762e734514280072e739e678ccfc</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>FromBinary</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>a81d14558fc31240d2917a3b4099093f6</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QVariant</type>
      <name>ToQVariant</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>aa0615272f8d1e9c525755fc598dd2d19</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>FromQVariant</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>ab5b33541e06c641f970021fdef735433</anchor>
      <arglist>(const QVariant &amp;variant, AttributeChange::Type change)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>FromScriptValue</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>a0ca65c867dce2fea452f4f5f6e5cd57f</anchor>
      <arglist>(const QScriptValue &amp;value, AttributeChange::Type change)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMetadata</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>a9c384b4521eb3836b6b1e1d4631dd7c2</anchor>
      <arglist>(AttributeMetadata *meta)</arglist>
    </member>
    <member kind="function">
      <type>AttributeMetadata *</type>
      <name>Metadata</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>ac7a4585681999c01e9de14fd060d4156</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDynamic</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>ab3502a1174db4caf8e9e748626c69250</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>u8</type>
      <name>Index</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>a17f08e4484b4b5ac5826a28c4a14d7fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Changed</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>ac1aa6dd1efd662414a4e47e022e36f7b</anchor>
      <arglist>(AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual IAttribute *</type>
      <name>Clone</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>a4f66002d78cd5082ab7692a3e691cdad</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>CopyValue</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>ae2f6631340bac5880bd0c1b1e603a946</anchor>
      <arglist>(IAttribute *source, AttributeChange::Type change)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Interpolate</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>a40b4a130729edab46820e786944650d5</anchor>
      <arglist>(IAttribute *start, IAttribute *end, float t, AttributeChange::Type change)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IComponent *</type>
      <name>owner</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>a54bcee5a9a7d602499dd749858b62a6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>a424444cdbea0f9c6df264d7ea160984d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AttributeMetadata *</type>
      <name>metadata</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>a7da2a9e1605f986531bfdd6735b845c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>dynamic</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>a5fe6bd36ee0974fa480ec900051f6f41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>u8</type>
      <name>index</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>a7043aa32a06da1ae93b634a6635e99e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>SceneAPI</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>ac967c6054ece854f41e058fd1af0f506</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>IComponent</name>
      <anchorfile>class_i_attribute.html</anchorfile>
      <anchor>a5ff52d239b68a851c87a767a9d9a3c55</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IComponent</name>
    <filename>class_i_component.html</filename>
    <member kind="slot">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3a676adf2171375d6a6d782edd11f8cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a37b5449bdd8f88a07390204b6db24a80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsLocal</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7db6ec7dcedff369978dc05c114c3c91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsUnacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9f03346fe17c944a68a8388765d270c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetNetworkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a552391127e461b25b9d1d82028bae538</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetUpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a71f8f6bdee9d3f5774e2c0fd40e0b705</anchor>
      <arglist>(AttributeChange::Type defaultmode)</arglist>
    </member>
    <member kind="slot">
      <type>AttributeChange::Type</type>
      <name>UpdateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab9fe0648d176468ad31690c9fe34663b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>component_id_t</type>
      <name>Id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a63fd758d1042c37b180b0521408794bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2fdd3bc81ee6586e78cae212063185f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>NumStaticAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ad73dac34801dde16fd02332ff9e04aae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa5562b35074886469279334adf943e42</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>abd191432824f4b1c6c0deb46af886d98</anchor>
      <arglist>(const QString &amp;attributeName, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ComponentChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a35070b168681bf5600b08b4422cb2cea</anchor>
      <arglist>(AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>Entity *</type>
      <name>ParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a9e79fda037aff4c3678d9d962e78d9ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Scene *</type>
      <name>ParentScene</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac56fb67cf293f9a4228fb1b4b5aaa1d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf71fe4c9b2c636b28c8db8584acacaf</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsTemporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e87391a508d5bc41f21ddc2051498a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>ViewEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7c9a41bff7f966ac13575b7dc7d598d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>GetAttributeQVariant</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab824c2fa3bb625208160c5cebf38d86a</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>GetAttributeNames</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa6e0b51556f8cbb31bdddbb0d10efd7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a831b035648a3ec54c47991f61352b76f</anchor>
      <arglist>(IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentNameChanged</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ac628c437220fc88961842fa412119940</anchor>
      <arglist>(const QString &amp;newName, const QString &amp;oldName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntitySet</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a1c0064bad72118e77f6896ad99929129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ParentEntityDetached</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2e2ed82d9dc9a91f1347c3fbdf6ee305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAdded</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a81284243581f53c55f5817f5963665dc</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAboutToBeRemoved</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>adffe0688eddd4f05201376f3c3d75f2c</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IComponent</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>adf16e4a106eecb490b84d0e91c6200a5</anchor>
      <arglist>(Scene *scene)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IComponent</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0c8face3ca659b5283502de91cffbb8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const QString &amp;</type>
      <name>TypeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a156d0e2583be2efaa99c441458f1db9d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual u32</type>
      <name>TypeId</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8627793238d67e1753c5b810c5051cbd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a58f42567395c5341d2e1fd97fe7f804d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa8064a536ed194201bf0189ece40de8d</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afeedd4000926fdd03993f948b7e31913</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="function">
      <type>const AttributeVector &amp;</type>
      <name>Attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a89a8bab524c7fcfef61ce856e7b4d076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AttributeVector</type>
      <name>NonEmptyAttributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8a2fff750482947ccbdbf9ce3064c428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Attribute&lt; T &gt; *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>afa602255ad19494e8264f7fb73070493</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeTo</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a8154e6434ceeb36ca5e74fef15859353</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFrom</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6e9845cdedf2a238a212bbcd8a863e72</anchor>
      <arglist>(QDomElement &amp;element, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SerializeToBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a6ae9b22082cb5bf29859645dd6ac6d4a</anchor>
      <arglist>(kNet::DataSerializer &amp;dest) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeserializeFromBinary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a481ee3acac8605b1e683c1231f25e2bc</anchor>
      <arglist>(kNet::DataDeserializer &amp;source, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0dea3e94303deea91633301813553676</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>IAttribute *</type>
      <name>CreateAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a4356799119ea6ecae4b6dfc6b091bddb</anchor>
      <arglist>(u8 index, u32 typeID, const QString &amp;name, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2f8b15aa5edcdaac2f32c5959c5d88dc</anchor>
      <arglist>(u8 index, AttributeChange::Type change)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReplicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a62dfbeca452e6449c233a570cf059225</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QDomElement</type>
      <name>BeginSerialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7172dbdf2339ddbbc3c5652be8968ed3</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;baseElement) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a844ec4ff1dec75cbbb7d8ff03ca61b01</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aad61f20527eed870c9f635e20bf5c688</anchor>
      <arglist>(QDomDocument &amp;doc, QDomElement &amp;compElement, const QString &amp;name, const QString &amp;value, const QString &amp;type) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>BeginDeserialization</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3fef3969ebb919048bf57d3db05b48d7</anchor>
      <arglist>(QDomElement &amp;compElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7fd2354c177222bfdad3d9f8bbf4f051</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>ReadAttributeType</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a5b0ecd40b4da8fb8d6794b2cf31ce4c9</anchor>
      <arglist>(QDomElement &amp;compElement, const QString &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>af5a186f31936694254018f2c720256c7</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>AddAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a96113e4d61805b085f4b0d6d36135391</anchor>
      <arglist>(IAttribute *attr, u8 index)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Entity *</type>
      <name>parentEntity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a3761c0afda2f60e0b3acc44d8162b907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AttributeVector</type>
      <name>attributes</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae0bfd9389533b6a178d0876b1174102f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>component_id_t</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a946596d66e1667003eafab6ddb6f141b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ae04ef3ddf6acb549b696b339c933c274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>temporary</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a7a013d9fbc921cc6ea882e039794baa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aa63d1d694b058775a2458c45e68d856b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a134821f6bcf1ea6408a3a72c7f4dfa1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>replicated</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aaf5b7cfc104657f2795c8b0b237089eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>local</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a95ade3d0915b7224d56cd34a4e308cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>AttributeChange::Type</type>
      <name>updateMode</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a75b46dc1d972b1f10c17d8521aabf3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>uint</type>
      <name>id</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a418e735d210d40d2551b21a04f1cdde9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>unacked</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>ab5194d9724dc21842582abaa47ec4f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>networkSyncEnabled</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a0d221fecdcf0c6b3ec731936d3c43fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetNewId</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a2b7a2b7d7e7a48fd687a24fa8ed08bbf</anchor>
      <arglist>(component_id_t newId)</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>::IAttribute</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>aea94a77a3151b94a6e695e5e5632cff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Entity</name>
      <anchorfile>class_i_component.html</anchorfile>
      <anchor>a614439ccac0344926adc4c0165d64060</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IComponentFactory</name>
    <filename>class_i_component_factory.html</filename>
    <member kind="function">
      <type></type>
      <name>IComponentFactory</name>
      <anchorfile>class_i_component_factory.html</anchorfile>
      <anchor>a05ba546acbbf7d8bfbc433a776e0b1a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IComponentFactory</name>
      <anchorfile>class_i_component_factory.html</anchorfile>
      <anchor>ac77d16f53c85f450d33aabd2f2d40233</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QString</type>
      <name>TypeName</name>
      <anchorfile>class_i_component_factory.html</anchorfile>
      <anchor>a612d67938e10b9c06f382a052fcad06d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual u32</type>
      <name>TypeId</name>
      <anchorfile>class_i_component_factory.html</anchorfile>
      <anchor>ae10a585e671769eb08c31200ff84a157</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual boost::shared_ptr&lt; IComponent &gt;</type>
      <name>Create</name>
      <anchorfile>class_i_component_factory.html</anchorfile>
      <anchor>a4e6c1d4c6b65f657adaf3fef9ec92908</anchor>
      <arglist>(Scene *scene, const QString &amp;newComponentName)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IModule</name>
    <filename>class_i_module.html</filename>
    <member kind="function">
      <type></type>
      <name>IModule</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>abe3c48e41e750f8aee23e799750ee0ac</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IModule</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a52feab68982477057ca4710d2af97332</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Load</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a6435d25926592938d058e231a1a6988a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Initialize</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a14aa87aaad464c6be26348e618f26dae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Uninitialize</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a605e76696c3cef8d80450453da44ff21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Unload</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a29f68fed281ee378674d8b3d84a02e48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>af68bc12846076442d17bd09955019710</anchor>
      <arglist>(f64 frametime)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a715ca908fee148f6abeb45f41f646951</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>af0fc3706f5a2e27374c642e71e4eca8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework_</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>aff39960b9800c16d6f4976b5614c37a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetFramework</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a3f833df61323f937c40948896c906140</anchor>
      <arglist>(Framework *framework)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const std::string</type>
      <name>name</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a896c6d2db1a67763ab040e53bd64d510</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Framework</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>ad3defef37a1222bb2b2a65577a6c4816</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>InputAPI</name>
    <filename>class_input_a_p_i.html</filename>
    <member kind="typedef">
      <type>std::map&lt; std::string, QKeySequence &gt;</type>
      <name>KeyActionsMap</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a7967320a814c6b0e5cc621578e8b70ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>InputContextPtr</type>
      <name>RegisterInputContext</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>afa65398006abc25efa5dfd0e03bbaed5</anchor>
      <arglist>(const QString &amp;name, int priority)</arglist>
    </member>
    <member kind="slot">
      <type>InputContext *</type>
      <name>RegisterInputContextRaw</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>ac000764fa2eecc44e26fae5878ededf2</anchor>
      <arglist>(const QString &amp;name, int priority)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>UnregisterInputContextRaw</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a1f93971119db8ba89803bc6371511c93</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetMouseCursorVisible</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a6d1082e976ccbb1eb6f5c79bac10858e</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsMouseCursorVisible</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a4250575c43934ea538e3930722a7bd71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsKeyDown</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>ade7b91da5e406186a67af062c5cba1f1</anchor>
      <arglist>(Qt::Key keyCode) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsKeyPressed</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>ada920d10d6e9d8aa2315b58b545b186a</anchor>
      <arglist>(Qt::Key keyCode) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsKeyReleased</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a819eb1c020c128312607ef2a4d4044a5</anchor>
      <arglist>(Qt::Key keyCode) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsMouseButtonDown</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a43ab0eb9d239a52b730bc66ec8dc9c81</anchor>
      <arglist>(int mouseButton) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsMouseButtonPressed</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a325c2409ab9ec4e01cfae3b0fac589c1</anchor>
      <arglist>(int mouseButton) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsMouseButtonReleased</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a373caa233678b97be61b28154659324a</anchor>
      <arglist>(int mouseButton) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsGesturesEnabled</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>aaab140cb4dc482397343049c0ccaeb30</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QPoint</type>
      <name>MousePressedPos</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>aa83307917c95e726d064e95b24b75abf</anchor>
      <arglist>(int mouseButton) const </arglist>
    </member>
    <member kind="slot">
      <type>QPoint</type>
      <name>MousePos</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a5ca8afc2cb4580092ccb8e72cfac794d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>TriggerKeyEvent</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a74edb2066605d9c8ae99d7ea08987033</anchor>
      <arglist>(KeyEvent &amp;key)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>TriggerMouseEvent</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>ac4c1131a05309e7c07123a11cef936f8</anchor>
      <arglist>(MouseEvent &amp;mouse)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>TriggerGestureEvent</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a1ae802c45e015959a94811019ae8a134</anchor>
      <arglist>(GestureEvent &amp;gesture)</arglist>
    </member>
    <member kind="slot">
      <type>InputContext *</type>
      <name>TopLevelInputContext</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a7d5dc9b4042ebbaf5ec20a4095790d5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetKeyBinding</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a3df01e24aac097bcabfa99e2557f05c8</anchor>
      <arglist>(const QString &amp;actionName, QKeySequence key)</arglist>
    </member>
    <member kind="slot">
      <type>QKeySequence</type>
      <name>KeyBinding</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a006a54e6c1c7d9070ed38d9d6b36c0db</anchor>
      <arglist>(const QString &amp;actionName) const </arglist>
    </member>
    <member kind="slot">
      <type>QKeySequence</type>
      <name>KeyBinding</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>ac5ea2e88910d30f368cb6ce69ec9b2e5</anchor>
      <arglist>(const QString &amp;actionName, QKeySequence defaultKey)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ApplyMouseCursorOverride</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a15f440a054c241af551060943a2461e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>LoadKeyBindingsFromFile</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>ad4af6ac2e587829a09db40b99350121c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SaveKeyBindingsToFile</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a1ba1c5fdb2c6c3d0d8cd67456fe44ea7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>const KeyActionsMap &amp;</type>
      <name>KeyBindings</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a1c731f11a1d971df5bfbf8ee928e1020</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetKeyBindings</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a3cc575845d82e80d25d65d562181801f</anchor>
      <arglist>(const KeyActionsMap &amp;actionMap)</arglist>
    </member>
    <member kind="slot">
      <type>QGraphicsItem *</type>
      <name>ItemAtCoords</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a802c3a4c5cdf030b23402fef3e42aa3b</anchor>
      <arglist>(int x, int y) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ClearFocus</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>aa3feb62a022290ca916d56bdffb3208b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputAPI</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a98b5f6c59dbb50450512b49dde3d56d8</anchor>
      <arglist>(Framework *owner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~InputAPI</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a216629ac1f7fe8dca774a4c0e46efe9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Reset</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a1c491a4d87b30de34bc80f9244ded0e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>abe22c87bddd32ceb8edffd3af36dbf61</anchor>
      <arglist>(float frametime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DumpInputContexts</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a6920df678157ef781e7116492e994fac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::list&lt; boost::weak_ptr&lt; InputContext &gt; &gt;</type>
      <name>InputContextList</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a393b4e695280251b5c70580d18cc13c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>eventFilter</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>ad933b360e5229057224d320b15420e27</anchor>
      <arglist>(QObject *obj, QEvent *event)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SceneReleaseAllKeys</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a9c44ac88df197ba10297452de4d5cdcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SceneReleaseMouseButtons</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>adc4f15de5da6b399037da591c177384c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>RecenterMouse</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a8f7f7afd99f853701a95afbf94268f11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>PruneDeadInputContexts</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a7aa6e0627a4893f2e8d55c1f606412a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>QPoint</type>
      <name>MapPointToMainGraphicsView</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a6da343ca317f9ee5427e75aacc88efe2</anchor>
      <arglist>(QObject *source, const QPoint &amp;point)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>TriggerSceneKeyReleaseEvent</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a94bf375dc71f7f09464be693e17bba02</anchor>
      <arglist>(InputContextList::iterator start, Qt::Key keyCode)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; InputContextPtr &gt;</type>
      <name>untrackedInputContexts</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a71e208e4e47ac41c93a7d826099bd37b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>MouseEvent::PressPositions</type>
      <name>mousePressPositions</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a3c1d28feb1e984109f36faac3ee66797</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>lastMouseX</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a47a3490b571a76be3b652db9a4fa8369</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>lastMouseY</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>ae8060bb470be2a4daecf679a1b4cc60f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mouseCursorVisible</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>ab207422fb6dc0df9020b549b20ad057e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>gesturesEnabled</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>ac345f50bf32ea559a804897ba60f9827</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mouseFPSModeEnterX</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a853247ca90b88c5749f6b653dba83b51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mouseFPSModeEnterY</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>af7bddee79c9fa42cc5bbe941f5ead041</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>InputContextList</type>
      <name>registeredInputContexts</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a9e314a671c1511ad7f4ae205795e3df6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>InputContext</type>
      <name>topLevelInputContext</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>ace0de85c2897141cbd8543ce3644f36e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>KeyActionsMap</type>
      <name>keyboardMappings</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>af48c7899eb15ac89b836f0037346521d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; Qt::Key, KeyPressInformation &gt;</type>
      <name>heldKeys</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>ac9c19894577fdf094c70e289974d2e2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Qt::Key &gt;</type>
      <name>pressedKeys</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a21f01968a83d73d815bfcbcb5da1eeb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Qt::Key &gt;</type>
      <name>releasedKeys</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a4dd8a749bd42fdf4ca685f3e40ca0a7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Qt::Key &gt;</type>
      <name>newKeysPressedQueue</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>ad6aafc5a63224501ae62fdb6160b9802</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Qt::Key &gt;</type>
      <name>newKeysReleasedQueue</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a7923cf57c855eefeb944f0d31bb4db68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned long</type>
      <name>heldMouseButtons</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a5c19f226ae7faab5ca79b69658364313</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned long</type>
      <name>pressedMouseButtons</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>ae48a314756e244e268d8e5dbe5ce5f1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned long</type>
      <name>releasedMouseButtons</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a9f2cd0a8744246a8c940c779cc3482ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned long</type>
      <name>current_modifiers_</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a22853d29f70500a8d8cf89bbaa7efe70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned long</type>
      <name>newMouseButtonsPressedQueue</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a4f6b819a07347b6cd154b39a3cc4d5c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned long</type>
      <name>newMouseButtonsReleasedQueue</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a3031c3d15d90f1d9e65309ccc75038b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QGraphicsView *</type>
      <name>mainView</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>afec378e084a0d64ee28351731acfefd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QWidget *</type>
      <name>mainWindow</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>af4464ec552a4082db11e789ef0be592b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_input_a_p_i.html</anchorfile>
      <anchor>a51ff9bb3042b067484e31f7035f5eedc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>InputContext</name>
    <filename>class_input_context.html</filename>
    <member kind="slot">
      <type>KeyEventSignal &amp;</type>
      <name>RegisterKeyEvent</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>aba6c2703a46e41d81d8bd86528c982e6</anchor>
      <arglist>(QKeySequence keySequence)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>UnregisterKeyEvent</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a21e37254a3b31cc7addf9e43adc4da60</anchor>
      <arglist>(QKeySequence keySequence)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>TriggerKeyEvent</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a5d25c8a9f0099bc722d2603760a64996</anchor>
      <arglist>(KeyEvent &amp;key)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>TriggerKeyReleaseEvent</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a5e43e04aea21e22a3b9b71bc8b324ca8</anchor>
      <arglist>(Qt::Key keyCode)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>TriggerMouseEvent</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>ad24252bd8a93987e96f9a2951a3106f4</anchor>
      <arglist>(MouseEvent &amp;mouse)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>TriggerGestureEvent</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a8e778ed29296a5560cf3f27270be8ff8</anchor>
      <arglist>(GestureEvent &amp;gesture)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>Name</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a9f71b593eddb0fce49f786d03ac0f0c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>KeyPressedCount</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>af0f951ae58d145f0c2d3be173c304d5d</anchor>
      <arglist>(Qt::Key keyCode) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsKeyPressed</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a35a370992e317f86169ce81a5f507210</anchor>
      <arglist>(Qt::Key keyCode) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsKeyDown</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a7fe5427e58fe8427eeaae46c592b7a5a</anchor>
      <arglist>(Qt::Key keyCode) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsKeyReleased</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>ae87d7c4c544f1ef6b4b5cb4cc401a602</anchor>
      <arglist>(Qt::Key keyCode) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetKeySuppressed</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a0512af598e36de0a2d419a548e643ee6</anchor>
      <arglist>(Qt::Key keyCode, bool isSuppressed)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTakeMouseEventsOverQt</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a48ab87e0a129eb5f470376fdb8127c6b</anchor>
      <arglist>(bool take)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>TakesMouseEventsOverQt</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a0de49d5a84f21aecbee4d6fb58c17661</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetTakeKeyboardEventsOverQt</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>aad814a0793c032b5214f9eb1778d400b</anchor>
      <arglist>(bool take)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>TakesKeyboardEventsOverQt</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a54b834e1d367489a5685a0904d11843c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ReleaseAllKeys</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a409242cda558d96e5a633901b47920cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>Priority</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a64aa8244da36faf42b34d2b48ee41b50</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>disconnectAll</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>afa1f129f9e8faf2b4613857100148a99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetMouseCursorOverride</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>adf97aacad4eea82342a58f7a9b7b01f8</anchor>
      <arglist>(QCursor cursor)</arglist>
    </member>
    <member kind="slot">
      <type>QCursor *</type>
      <name>MouseCursorOverride</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a0e1da92d3b2ddcbd5ee84c473e3425dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ClearMouseCursorOverride</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>aacd8579f9ce12120221e069bffbf7386</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>KeyEventReceived</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a0656a7bd87ae184eacaf1759169dbe05</anchor>
      <arglist>(KeyEvent *key)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>MouseEventReceived</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a06ceca749202613cd59ec2ce77d2c81b</anchor>
      <arglist>(MouseEvent *mouse)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>GestureEventReceived</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a5194ec740aeb65685be8f38634523a94</anchor>
      <arglist>(GestureEvent *gesture)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>KeyPressed</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a592fc45bbac1c8825064ca59496463cb</anchor>
      <arglist>(KeyEvent *key)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>KeyDown</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>ab519b3a05dd66f8d1509741a1afa2993</anchor>
      <arglist>(KeyEvent *key)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>KeyReleased</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a6c2812c2ac272642a1329f412bb5fe7e</anchor>
      <arglist>(KeyEvent *key)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>MouseMove</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a43ef40049bb3f262d39bcbdc6ee39aa3</anchor>
      <arglist>(MouseEvent *mouse)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>MouseScroll</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>abc55980f19a4d7164524a0024e225297</anchor>
      <arglist>(MouseEvent *mouse)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>MouseDoubleClicked</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a2a40a0733061dd36c6d4b79e907982f5</anchor>
      <arglist>(MouseEvent *mouse)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>MouseLeftPressed</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>acbcbf14c9227181dd40299118a5c1523</anchor>
      <arglist>(MouseEvent *mouse)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>MouseMiddlePressed</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a3c4e35419d155a34c43bb57dc2550554</anchor>
      <arglist>(MouseEvent *mouse)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>MouseRightPressed</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a6edcafb5212ee92c68185e0d87707380</anchor>
      <arglist>(MouseEvent *mouse)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>MouseLeftReleased</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a8e5c5db9b7e228a146e66e1d3c64a76a</anchor>
      <arglist>(MouseEvent *mouse)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>MouseMiddleReleased</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a0f198d8dc027a0cc7731a1b9b5906119</anchor>
      <arglist>(MouseEvent *mouse)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>MouseRightReleased</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a45bd3e0e11f13433d2e18abb1873accb</anchor>
      <arglist>(MouseEvent *mouse)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>GestureStarted</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>ad4fb1489a6b5776f429e57aafe3709e2</anchor>
      <arglist>(GestureEvent *gesture)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>GestureUpdated</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>ad89a7fb01aa2ccbb44b3ceddeb60ae06</anchor>
      <arglist>(GestureEvent *gesture)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>GestureFinished</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a325871774d262901cc31a281aeb9df9f</anchor>
      <arglist>(GestureEvent *gesture)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputContext</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a20f77a65ffa25816073a7a92ad02e445</anchor>
      <arglist>(InputAPI *owner, const char *name, int priority)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~InputContext</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a3172fe962a22eac42b07e853f403b772</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateFrame</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a8ffd1b0a224144d2089870f72b71bff6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; QKeySequence, KeyEventSignal * &gt;</type>
      <name>KeyEventSignalMap</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>af9af1a0f5b45ecea2f6f90897a359a58</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>IsKeyDownImmediate</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>afe63a5101b825ce37050be9926d000a1</anchor>
      <arglist>(Qt::Key keyCode) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>InputContext</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>ad98df67928453910c36d9c3d659e73a2</anchor>
      <arglist>(const InputContext &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a14d91b8e91faffc7086d564749fe9b48</anchor>
      <arglist>(const InputContext &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>KeyEventSignalMap</type>
      <name>registeredKeyEventSignals</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a4598537a5241736943ecb2416de92898</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; Qt::Key &gt;</type>
      <name>suppressedKeys</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a87a636eabf757a5bad76836c816b0da0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>HeldKeysMap</type>
      <name>newKeyEvents</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a3cedf2bdc422594a31c83a4e7c788a6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>HeldKeysMap</type>
      <name>heldKeysBuffered</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a89d30a22c9eacd04b5fff5a81e6476bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>takeMouseEventsOverQt</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>ac23858c6be254213ee8c7579a2d90eb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>takeKeyboardEventsOverQt</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>aede96d6f57bd4358b7920b6fe4aa478b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>aa659ba5c9c2cfbac0efea3a4d2ae4564</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>priority</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a873d4b1b75ec98681169a2f2fa7b032f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::shared_ptr&lt; QCursor &gt;</type>
      <name>mouseCursorOverride</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a5639e0d5093a864023e70be8cdd98761</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>InputAPI *</type>
      <name>inputApi</name>
      <anchorfile>class_input_context.html</anchorfile>
      <anchor>a008ef263010e9eb6032271519a9fb3f4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>inttofloat</name>
    <filename>unioninttofloat.html</filename>
    <member kind="variable">
      <type>u32</type>
      <name>u</name>
      <anchorfile>unioninttofloat.html</anchorfile>
      <anchor>a14e1b8e27a251b864c092300dd0dd79c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>s32</type>
      <name>s</name>
      <anchorfile>unioninttofloat.html</anchorfile>
      <anchor>ad3f61a88f7a1e97828cd283a720383ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>f32</type>
      <name>f</name>
      <anchorfile>unioninttofloat.html</anchorfile>
      <anchor>a7c4b0b7a3ac2ead28a6970445973331c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>InvokeItem</name>
    <filename>struct_invoke_item.html</filename>
    <member kind="enumeration">
      <name>Type</name>
      <anchorfile>struct_invoke_item.html</anchorfile>
      <anchor>a00945ac66ee44e69bdc6afd68873b8a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Unknown</name>
      <anchorfile>struct_invoke_item.html</anchorfile>
      <anchor>a00945ac66ee44e69bdc6afd68873b8a6a9e0712c1ef2de86e25aa8b1a8ceccc81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Action</name>
      <anchorfile>struct_invoke_item.html</anchorfile>
      <anchor>a00945ac66ee44e69bdc6afd68873b8a6ac6cfb87a8d52f10abd7ccec4be73d689</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Function</name>
      <anchorfile>struct_invoke_item.html</anchorfile>
      <anchor>a00945ac66ee44e69bdc6afd68873b8a6afe04cc01cd37629620b4aebd908f6f90</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InvokeItem</name>
      <anchorfile>struct_invoke_item.html</anchorfile>
      <anchor>aa55f4ea6f2f4e8f2c73fcc3c31657e1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InvokeItem</name>
      <anchorfile>struct_invoke_item.html</anchorfile>
      <anchor>a085f1dc816b8344571cf5b8eabb41ab5</anchor>
      <arglist>(const QString &amp;settingStr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>struct_invoke_item.html</anchorfile>
      <anchor>ae05f6d80c7d16c3286f5e555927c783f</anchor>
      <arglist>(const InvokeItem &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>struct_invoke_item.html</anchorfile>
      <anchor>a4b7807f974c4aed2bb569dfec65c8beb</anchor>
      <arglist>(const InvokeItem &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>struct_invoke_item.html</anchorfile>
      <anchor>a9b28d04c42bb6637ab88db1fae38755f</anchor>
      <arglist>(const InvokeItem &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>struct_invoke_item.html</anchorfile>
      <anchor>a2a15a404c3970552902b2a374dff5680</anchor>
      <arglist>(const InvokeItem &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>ToString</name>
      <anchorfile>struct_invoke_item.html</anchorfile>
      <anchor>a691f2ef6616bd7ef1df53f0f5aafc252</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>ToSetting</name>
      <anchorfile>struct_invoke_item.html</anchorfile>
      <anchor>a63f2a76c26a0263dab4396f56883906d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromSetting</name>
      <anchorfile>struct_invoke_item.html</anchorfile>
      <anchor>aa9edbbc8fa5fb415ac7c91702a489f4d</anchor>
      <arglist>(const QString &amp;str)</arglist>
    </member>
    <member kind="variable">
      <type>Type</type>
      <name>type</name>
      <anchorfile>struct_invoke_item.html</anchorfile>
      <anchor>a2e0d2c2fc47e1d1450c1648e86d3d608</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>objectName</name>
      <anchorfile>struct_invoke_item.html</anchorfile>
      <anchor>a23b2a7367946a4e69bdc590681e74364</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>name</name>
      <anchorfile>struct_invoke_item.html</anchorfile>
      <anchor>ae949693f066333525a7b8bb9d4c52c7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>returnType</name>
      <anchorfile>struct_invoke_item.html</anchorfile>
      <anchor>a8be7e90c09b19360002d663a6582493e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EntityAction::ExecTypeField</type>
      <name>execTypes</name>
      <anchorfile>struct_invoke_item.html</anchorfile>
      <anchor>a67373867df79e2d0caf0d4e22968b07a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QVariantList</type>
      <name>parameters</name>
      <anchorfile>struct_invoke_item.html</anchorfile>
      <anchor>afd784065270250704ffd825c9479a75c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mruOrder</name>
      <anchorfile>struct_invoke_item.html</anchorfile>
      <anchor>a1ef89a35ddac31ecbde3f29a91f62c44</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IRenderer</name>
    <filename>class_i_renderer.html</filename>
    <member kind="function">
      <type></type>
      <name>IRenderer</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>ac85aef8cc6b9cd641fd06364e1aa72f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IRenderer</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>a366bcbc6ae52d7bd6a33752ce56378ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Render</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>af80163d890d8b67326d57a69c01a0564</anchor>
      <arglist>(float frameTime)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Entity *</type>
      <name>MainCamera</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>afddff5e089efcc42b4943606c25b1ae7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual EC_Camera *</type>
      <name>MainCameraComponent</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>a73b8b46365d839372e51661cbf1d6ded</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Scene *</type>
      <name>MainCameraScene</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>a55606b498abe9c166fda1a2aed19d4bd</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>GetUniqueObjectName</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>a3465d96fe04f65bd3924463fa93feddb</anchor>
      <arglist>(const std::string &amp;prefix)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RaycastResult *</type>
      <name>Raycast</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>a59ea6a434b472926da7fa11db4dc6984</anchor>
      <arglist>(int x, int y)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KeyBindingsConfigWindow</name>
    <filename>class_key_bindings_config_window.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>ApplyKeyConfig</name>
      <anchorfile>class_key_bindings_config_window.html</anchorfile>
      <anchor>a9416b54882549ed4fd3b3329104b3ad8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ButtonOK</name>
      <anchorfile>class_key_bindings_config_window.html</anchorfile>
      <anchor>a3a4f2f9e1b7a49d68ae3a762aa794e2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ButtonCancel</name>
      <anchorfile>class_key_bindings_config_window.html</anchorfile>
      <anchor>afbb0528eb861f32f1c2be26a1cbfa666</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ConfigListAdjustEditable</name>
      <anchorfile>class_key_bindings_config_window.html</anchorfile>
      <anchor>a4ab9e4c5e1ea8b77d745c1074355d3b5</anchor>
      <arglist>(QTreeWidgetItem *item, int column)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KeyBindingsConfigWindow</name>
      <anchorfile>class_key_bindings_config_window.html</anchorfile>
      <anchor>a8480ced7e9062c67ac4db414d4c84fea</anchor>
      <arglist>(Framework *fw)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KeyBindingsConfigWindow</name>
      <anchorfile>class_key_bindings_config_window.html</anchorfile>
      <anchor>a9592027cab81cae6270dc1c6f63b60c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>eventFilter</name>
      <anchorfile>class_key_bindings_config_window.html</anchorfile>
      <anchor>a789eb69f7a383e44c23366fc735cd919</anchor>
      <arglist>(QObject *obj, QEvent *event)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>class_key_bindings_config_window.html</anchorfile>
      <anchor>ae4fdc87a4babceacd57a6dd97751de1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>PopulateBindingsList</name>
      <anchorfile>class_key_bindings_config_window.html</anchorfile>
      <anchor>ae30ecd06347643ae061f7681a55337af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ExtractBindingsList</name>
      <anchorfile>class_key_bindings_config_window.html</anchorfile>
      <anchor>a250f9129f5e7b493fc4705e781b78f6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>SpecialKeyPressChecker</name>
      <anchorfile>class_key_bindings_config_window.html</anchorfile>
      <anchor>a1763b118fae5be8fe57015cbdd5459d8</anchor>
      <arglist>(int pressed_key)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_key_bindings_config_window.html</anchorfile>
      <anchor>a837be1afef19bad10274d0e3984ad686</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QTreeWidget *</type>
      <name>configList</name>
      <anchorfile>class_key_bindings_config_window.html</anchorfile>
      <anchor>aea1c3adae97a1db198dff240ec305cf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, QKeySequence &gt;</type>
      <name>editedActions</name>
      <anchorfile>class_key_bindings_config_window.html</anchorfile>
      <anchor>abf9456cf95497663ca109b2144cbcd26</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KeyEvent</name>
    <filename>class_key_event.html</filename>
    <member kind="enumeration">
      <name>EventType</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>a3e2f6344cd7a94401c65557669940661</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KeyEventInvalid</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>a3e2f6344cd7a94401c65557669940661a74daa6b64b1920b5612ebd499e620d92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KeyPressed</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>a3e2f6344cd7a94401c65557669940661a5b84495a615c1af9bd1714747dfe1325</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KeyDown</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>a3e2f6344cd7a94401c65557669940661a476e50aebb3650e57a354d9aeab8356d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KeyReleased</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>a3e2f6344cd7a94401c65557669940661a8f048bdc91a8a4678f0b354fe48f6bc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>EventType</type>
      <name>GetEventType</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>aa70d566aa9361596053b78f1585dd614</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Suppress</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>a55345333fad0955c25ffb8fbf1e28645</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsRepeat</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>a9ad9c730dabca4a8228dd6cf301e6d13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>HadKeyDown</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>a800f20b29fa137b2b1990ac1494981ee</anchor>
      <arglist>(int keyCode) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>HasShiftModifier</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>a7c4d3c2abb5f68a7b04dfb86a86ba6c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>HasCtrlModifier</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>af375fec174c75453f2e3242d770fa4d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>HasAltModifier</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>ad9032fa49cfd8d35b0574abdb753126b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>HasMetaModifier</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>ae21df99e254798e136c5d18799184110</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>KeyWithModifier</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>ac49c75973df4c1fe599d8b97d8fa7fac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>keyCodeInt</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>a400d96debc124ee41d47e82822568810</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KeyEvent</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>ac70f00f9b6e1e61d18b7b219739a59b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KeyEvent</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>a8a14d2a924d2c3dd4ff9d07fd1344f3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QKeySequence</type>
      <name>Sequence</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>a65e5b21bfb65a3c18d66e710aa474312</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>Text</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>adac7dd5738ed33417d717d08c1592253</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>Modifiers</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>aae39d8007486dc14ec4126c44eb342d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>KeyPressCount</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>add989df98bf11db54e31247e9df7773c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Qt::Key</type>
      <name>KeyCode</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>a8cc241bc6366c656c1c5290b4add4a19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Qt::Key</type>
      <name>keyCode</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>a3d50774a5903a26e4634a9679d4efbac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>keyPressCount</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>a2a618f3e9370509045219751d8b04bf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned long</type>
      <name>modifiers</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>adce4b1467bdb1979c8fd5ad64c86faf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventType</type>
      <name>eventType</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>aba643bed40126a6429fbe6ecde716edb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>text</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>a3e5601eb750457be6db543ad21ffc013</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QKeySequence</type>
      <name>sequence</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>a52e73aa8abb81ee7da93bd5123c8ff6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Qt::Key &gt;</type>
      <name>otherHeldKeys</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>a843b0a50b1b941ca2af2313316147d44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>handled</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>a8d20c553f74dedee87aa160b3901a60e</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>unsigned</type>
      <name>long</name>
      <anchorfile>class_key_event.html</anchorfile>
      <anchor>aa6a9a2a5a9fe3a13980694dcf305217f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KeyEventSignal</name>
    <filename>class_key_event_signal.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>OnKeyPressed</name>
      <anchorfile>class_key_event_signal.html</anchorfile>
      <anchor>aca8713b80c2143768eeeafe2af22bc30</anchor>
      <arglist>(KeyEvent &amp;key)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>OnKeyReleased</name>
      <anchorfile>class_key_event_signal.html</anchorfile>
      <anchor>a22b81d9cec52e0a6a9943e9d09dea3b8</anchor>
      <arglist>(KeyEvent &amp;key)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>SequencePressed</name>
      <anchorfile>class_key_event_signal.html</anchorfile>
      <anchor>a345efa1294491fd3059dc9448058945b</anchor>
      <arglist>(KeyEvent &amp;key)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>SequenceReleased</name>
      <anchorfile>class_key_event_signal.html</anchorfile>
      <anchor>aca90a80d757eb3179ce21915d141a77d</anchor>
      <arglist>(KeyEvent &amp;key)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KeyEventSignal</name>
      <anchorfile>class_key_event_signal.html</anchorfile>
      <anchor>ab9f0b844370a5591eef4e38024206af1</anchor>
      <arglist>(QKeySequence keySequence_)</arglist>
    </member>
    <member kind="variable">
      <type>const QKeySequence</type>
      <name>keySequence</name>
      <anchorfile>class_key_event_signal.html</anchorfile>
      <anchor>a2210f19e0cb0a8b94c1801376e557992</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>KeyEventSignal</name>
      <anchorfile>class_key_event_signal.html</anchorfile>
      <anchor>a9f79a654fdcfb3afc3c4d4812c979b20</anchor>
      <arglist>(const KeyEventSignal &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>class_key_event_signal.html</anchorfile>
      <anchor>a171dc9c8915865dec0212778bacf4609</anchor>
      <arglist>(const KeyEventSignal &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>KeyPressInformation</name>
    <filename>struct_key_press_information.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>keyPressCount</name>
      <anchorfile>struct_key_press_information.html</anchorfile>
      <anchor>a01c472fb5bd3e5fa01711e7015ea8756</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>KeyEvent::EventType</type>
      <name>keyState</name>
      <anchorfile>struct_key_press_information.html</anchorfile>
      <anchor>a841472a69a394abdb9fe3e72f1e74714</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>f64</type>
      <name>firstPressTime</name>
      <anchorfile>struct_key_press_information.html</anchorfile>
      <anchor>ab78bf29f15b5453c14be6e4d913cf433</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LCG</name>
    <filename>class_l_c_g.html</filename>
    <member kind="function">
      <type></type>
      <name>LCG</name>
      <anchorfile>class_l_c_g.html</anchorfile>
      <anchor>a889667620f66d4623d05b2dee7eefbad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LCG</name>
      <anchorfile>class_l_c_g.html</anchorfile>
      <anchor>abacf8c63581e1b1f09367c0de7d7b719</anchor>
      <arglist>(u32 seed, u32 multiplier=69621, u32 increment=0, u32 modulus=0x7FFFFFFF)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Seed</name>
      <anchorfile>class_l_c_g.html</anchorfile>
      <anchor>a82ad5e210c71c5ba3e78735701934707</anchor>
      <arglist>(u32 seed, u32 multiplier=69621, u32 increment=0, u32 modulus=0x7FFFFFFF)</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>Int</name>
      <anchorfile>class_l_c_g.html</anchorfile>
      <anchor>af3dcfd49de301682208e2fe79ad0f896</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>MaxInt</name>
      <anchorfile>class_l_c_g.html</anchorfile>
      <anchor>a37a253791cad7c61d0308c36e5128055</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>IntFast</name>
      <anchorfile>class_l_c_g.html</anchorfile>
      <anchor>a3d5219d664623c71bb87a4891c4b92bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Int</name>
      <anchorfile>class_l_c_g.html</anchorfile>
      <anchor>a966927d3637777696902be1886707ae4</anchor>
      <arglist>(int a, int b)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Float</name>
      <anchorfile>class_l_c_g.html</anchorfile>
      <anchor>a37ed8813214617be0ee1453340f52dba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Float</name>
      <anchorfile>class_l_c_g.html</anchorfile>
      <anchor>ab5f4c39679330cba5a033bf0a72bd760</anchor>
      <arglist>(float a, float b)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>u32</type>
      <name>multiplier</name>
      <anchorfile>class_l_c_g.html</anchorfile>
      <anchor>ab12bfeb839f1e6bf6f286c292a705bf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>u32</type>
      <name>increment</name>
      <anchorfile>class_l_c_g.html</anchorfile>
      <anchor>abcb3864c13b9d24337d96a0f0cc7c22d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>u32</type>
      <name>modulus</name>
      <anchorfile>class_l_c_g.html</anchorfile>
      <anchor>af8b96cf65067cdf745b7ad37bfb82ff1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>u32</type>
      <name>lastNumber</name>
      <anchorfile>class_l_c_g.html</anchorfile>
      <anchor>a843e29516d2d38d52da07851ac2e0172</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Line</name>
    <filename>class_line.html</filename>
    <member kind="function">
      <type></type>
      <name>Line</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>acc11b8a429d8cdd63ba6803dff5602b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Line</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>a80e5b2d59b4fcad8e0149779287e9c06</anchor>
      <arglist>(const float3 &amp;pos, const float3 &amp;dir)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Line</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>a41f08eb43b15bd7b65a58db5362d9310</anchor>
      <arglist>(const Ray &amp;ray)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Line</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>afcaf8e7803eaedeee6a999841534b017</anchor>
      <arglist>(const LineSegment &amp;lineSegment)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>GetPoint</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>af63ffc85019ec47ce50beafe84a7abaa</anchor>
      <arglist>(float distance) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>aeda4125cd567e4a8a23541f00934b37a</anchor>
      <arglist>(const float3x3 &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>a831e6418e7c2963466f8ace484bb46a7</anchor>
      <arglist>(const float3x4 &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>af26b90cb24393f667973d4c87f649cf7</anchor>
      <arglist>(const float4x4 &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>ae8caddcfb254ae398686be2793b35a30</anchor>
      <arglist>(const Quat &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Contains</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>a423e8c14b6d43ca975cf1913cfce4d5f</anchor>
      <arglist>(const float3 &amp;point, float distanceThreshold=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>abe922db9fe263c1b45f8db2af8442e3b</anchor>
      <arglist>(const float3 &amp;point, float *d=0) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>a41026370b68368352631e05b3c3a452a</anchor>
      <arglist>(const Ray &amp;other, float *d=0, float *d2=0) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>acfd7b9941b3805c544f3c74dbd054156</anchor>
      <arglist>(const Line &amp;other, float *d=0, float *d2=0) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>a23eb7280423785bb1f219376b5dd63c9</anchor>
      <arglist>(const LineSegment &amp;other, float *d=0, float *d2=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>abd7fb324590c1a464069034f71c22ba1</anchor>
      <arglist>(const Triangle &amp;triangle, float *d, float3 *intersectionPoint) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>acee7220416d6529dbc44a912591944ff</anchor>
      <arglist>(const Plane &amp;plane, float *d) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>a2c667dc5ce358f1cfc1216a472a09542</anchor>
      <arglist>(const Sphere &amp;s, float3 *intersectionPoint=0, float3 *intersectionNormal=0, float *d=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>a552dd1a96141d3a56730599963a965de</anchor>
      <arglist>(const AABB &amp;aabb, float *dNear, float *dFar) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>a26680a3288b699038070b75ece93bab6</anchor>
      <arglist>(const OBB &amp;obb, float *dNear, float *dFar) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ClosestPoint</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>a22fc0b560a4f6d09dca2383887454835</anchor>
      <arglist>(const float3 &amp;targetPoint, float *d=0) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ClosestPoint</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>a7b974669c1784412c38d936b6cdc29fa</anchor>
      <arglist>(const Ray &amp;other, float *d=0, float *d2=0) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ClosestPoint</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>a1acf53483319b4c1dee80c0de7bfda5e</anchor>
      <arglist>(const Line &amp;other, float *d=0, float *d2=0) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ClosestPoint</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>acdfe789f64bb7ff16cc4ceb9ffb42e69</anchor>
      <arglist>(const LineSegment &amp;other, float *d=0, float *d2=0) const </arglist>
    </member>
    <member kind="function">
      <type>Ray</type>
      <name>ToRay</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>ab4cf1931cedd7cb5efbcf208383861d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LineSegment</type>
      <name>ToLineSegment</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>a8a54d4aa3c8ac7711e983768e9c22414</anchor>
      <arglist>(float d) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>AreCollinear</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>aa9fa89ac5d6d7db41c3ed3db33e2116f</anchor>
      <arglist>(const float3 &amp;p1, const float3 &amp;p2, const float3 &amp;p3, float epsilon=1e-3f)</arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>pos</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>a624f6d0b9fea3d45eec2ba06d26f15e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>dir</name>
      <anchorfile>class_line.html</anchorfile>
      <anchor>a8632f1adae2b74f7387ab24c967f0d56</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LineEditPropertyFactory</name>
    <filename>class_line_edit_property_factory.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>ComponentAdded</name>
      <anchorfile>class_line_edit_property_factory.html</anchorfile>
      <anchor>a132381c1f9f9f42b09ca37674e6fecb7</anchor>
      <arglist>(QtProperty *property, IComponent *comp)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ComponentRemoved</name>
      <anchorfile>class_line_edit_property_factory.html</anchorfile>
      <anchor>abce6e8398229efa3ed582cbc06609c7d</anchor>
      <arglist>(QtProperty *property, IComponent *comp)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>EditorCreated</name>
      <anchorfile>class_line_edit_property_factory.html</anchorfile>
      <anchor>a64cd2abffcc7b78ff6f384836bd90629</anchor>
      <arglist>(QtProperty *prop, QObject *factory)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LineEditPropertyFactory</name>
      <anchorfile>class_line_edit_property_factory.html</anchorfile>
      <anchor>ae0ae0a222e8ccded125e84964e3611c8</anchor>
      <arglist>(QObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LineEditPropertyFactory</name>
      <anchorfile>class_line_edit_property_factory.html</anchorfile>
      <anchor>a83d942cb3a29e50e269ca12ed1a6bcaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetComponents</name>
      <anchorfile>class_line_edit_property_factory.html</anchorfile>
      <anchor>a211663fbdbad09f0b4bf88578d41519e</anchor>
      <arglist>(QtProperty *property, QList&lt; ComponentWeakPtr &gt; components)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddButtons</name>
      <anchorfile>class_line_edit_property_factory.html</anchorfile>
      <anchor>ad8b1fee5727719d5455763f2bfc49694</anchor>
      <arglist>(AttributeMetadata::ButtonInfoList buttons)</arglist>
    </member>
    <member kind="variable">
      <type>QPointer&lt; EditorButtonFactory &gt;</type>
      <name>buttonFactory</name>
      <anchorfile>class_line_edit_property_factory.html</anchorfile>
      <anchor>a4d9325cd86751371f02c28b2136a6b97</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>connectPropertyManager</name>
      <anchorfile>class_line_edit_property_factory.html</anchorfile>
      <anchor>a323305ea3815c54280e549141f9f8b46</anchor>
      <arglist>(QtStringPropertyManager *manager)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual QWidget *</type>
      <name>createEditor</name>
      <anchorfile>class_line_edit_property_factory.html</anchorfile>
      <anchor>a007589fce1a7d2c1b98cb87a1708afb3</anchor>
      <arglist>(QtStringPropertyManager *manager, QtProperty *property, QWidget *parent)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>disconnectPropertyManager</name>
      <anchorfile>class_line_edit_property_factory.html</anchorfile>
      <anchor>a299e42bfd7033b08014c709685008a8f</anchor>
      <arglist>(QtStringPropertyManager *manager)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnEditingFinished</name>
      <anchorfile>class_line_edit_property_factory.html</anchorfile>
      <anchor>aa43d8b855517854e4455df242dec9fcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnButtonClicked</name>
      <anchorfile>class_line_edit_property_factory.html</anchorfile>
      <anchor>a774e96111797345f0b1fd0163a23bf9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnEditorDestroyed</name>
      <anchorfile>class_line_edit_property_factory.html</anchorfile>
      <anchor>a4ac9745fa5be3e598adebf71db514cb2</anchor>
      <arglist>(QObject *object)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PropertyToWidgetMap</type>
      <name>propertyToWidget_</name>
      <anchorfile>class_line_edit_property_factory.html</anchorfile>
      <anchor>a7dd9114388a7e3b11929e50fdc75d490</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WidgetToPropertyMap</type>
      <name>widgetToProperty_</name>
      <anchorfile>class_line_edit_property_factory.html</anchorfile>
      <anchor>a84b00628a5ba823e4f0be67567130a25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PropertyToComponentList</type>
      <name>components2_</name>
      <anchorfile>class_line_edit_property_factory.html</anchorfile>
      <anchor>a13ec0df77788f1d5f13b08555903a6cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QList&lt; ComponentWeakPtr &gt;</type>
      <name>components_</name>
      <anchorfile>class_line_edit_property_factory.html</anchorfile>
      <anchor>ad61dd7f6efaa901b13f8a627fdbfa7fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AttributeMetadata::ButtonInfoList</type>
      <name>buttons_</name>
      <anchorfile>class_line_edit_property_factory.html</anchorfile>
      <anchor>af2311ccba8a86376d35bb610a8e02824</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FunctionInvoker *</type>
      <name>invoker_</name>
      <anchorfile>class_line_edit_property_factory.html</anchorfile>
      <anchor>a4d896529c36d7c4435f96f502b4d5819</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LineEditWithButtons</name>
    <filename>class_line_edit_with_buttons.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>EditingFinished</name>
      <anchorfile>class_line_edit_with_buttons.html</anchorfile>
      <anchor>a2631ba5400f838dbba4c75ea6b0701ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LineEditWithButtons</name>
      <anchorfile>class_line_edit_with_buttons.html</anchorfile>
      <anchor>a8f9e57e976d82ba4eda99047b3296340</anchor>
      <arglist>(const QString &amp;text, QWidget *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LineEditWithButtons</name>
      <anchorfile>class_line_edit_with_buttons.html</anchorfile>
      <anchor>af0c6883bd65eeddb88488417aa41e79f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QLineEdit *</type>
      <name>LineEditor</name>
      <anchorfile>class_line_edit_with_buttons.html</anchorfile>
      <anchor>af3e9a736ea75c0ce6e3c97d856d0869e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QLayout *</type>
      <name>layout_</name>
      <anchorfile>class_line_edit_with_buttons.html</anchorfile>
      <anchor>ab51a04b014d836267231afe6d9cd895d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QLineEdit *</type>
      <name>lineEditor_</name>
      <anchorfile>class_line_edit_with_buttons.html</anchorfile>
      <anchor>ac33a84125cf14dd4b7814e69e9a2012d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LineSegment</name>
    <filename>class_line_segment.html</filename>
    <member kind="function">
      <type></type>
      <name>LineSegment</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>a4c2da2ff2d3979f28bfcb24948a8e6a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LineSegment</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>a27ac7f6acc05193fe36dc40e3e2acf05</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LineSegment</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>a560d69fcfdf2621bedd892dbcaf8e806</anchor>
      <arglist>(const Ray &amp;ray, float d)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LineSegment</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>af4dbb8f0f38f901baabb669f7704651c</anchor>
      <arglist>(const Line &amp;line, float d)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>GetPoint</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>ab7e85346b607129b9c7643c41face40b</anchor>
      <arglist>(float d) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>CenterPoint</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>adda2bbb6503f83e18b86c8b81ce0330e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Reverse</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>a969ca61a6cf5ea0d7315d17bfe53f45c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Dir</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>a570cdc497a771665091f2a500c46f0c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>abba0ffbb0184c2c7c9da4b3b2cde4085</anchor>
      <arglist>(const float3x3 &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>a0749e0e3aec314c143010a0cd9cbe97e</anchor>
      <arglist>(const float3x4 &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>a7338016480f67938acb21b21707d2a00</anchor>
      <arglist>(const float4x4 &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>a37a88cf1bbc2f5cb21c5b7546fc74674</anchor>
      <arglist>(const Quat &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Length</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>a9e12f256d8086f2bf20913dc89d5418a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>LengthSq</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>a8a9b34967aa741a5b2a3b6b8b206c550</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Contains</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>a15119cc408e83571d9b92ec30867e234</anchor>
      <arglist>(const float3 &amp;point, float distanceThreshold=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ClosestPoint</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>aff79a5d7276d0fc8acbf4d5f30cd61e7</anchor>
      <arglist>(const float3 &amp;point, float *d=0) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ClosestPoint</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>a97a0550e4ea461b4319dc7d3021f1434</anchor>
      <arglist>(const Ray &amp;other, float *d=0, float *d2=0) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ClosestPoint</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>a1002522b0b970f0b088d474a51b2cfd1</anchor>
      <arglist>(const Line &amp;other, float *d=0, float *d2=0) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ClosestPoint</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>a538152dabc893b9768a2ad4848cae038</anchor>
      <arglist>(const LineSegment &amp;other, float *d=0, float *d2=0) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>ae2062bbc9cd51523fefa76e2c0c813b2</anchor>
      <arglist>(const float3 &amp;point, float *d=0) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>ae4f23659205dd7a28f7e2a6fb69687f2</anchor>
      <arglist>(const Ray &amp;other, float *d=0, float *d2=0) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>a157d3c718f83462f35e214606000873b</anchor>
      <arglist>(const Line &amp;other, float *d=0, float *d2=0) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>a02d291923d0f207fc550cc3abbb183b1</anchor>
      <arglist>(const LineSegment &amp;other, float *d=0, float *d2=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>a6ba68e9cf950ed16e6d354c4f1c47311</anchor>
      <arglist>(const Plane &amp;plane) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>a1f914d8a2f73e00ef90057d130c84b98</anchor>
      <arglist>(const Triangle &amp;triangle, float *d, float3 *intersectionPoint) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>adce951d8092d74a3e8fd1d51266ef79d</anchor>
      <arglist>(const Sphere &amp;s, float3 *intersectionPoint=0, float3 *intersectionNormal=0, float *d=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>a28adc94b780ce40051ac95a06ae859b4</anchor>
      <arglist>(const AABB &amp;aabb, float *dNear=0, float *dFar=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>a8d1d90dc38f0c143c60773fbde06ac76</anchor>
      <arglist>(const OBB &amp;obb, float *dNear, float *dFar) const </arglist>
    </member>
    <member kind="function">
      <type>Ray</type>
      <name>ToRay</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>ad5f8892e677f14e0f216ad3d7a20ae88</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Line</type>
      <name>ToLine</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>a3b2ef3d4c89a3043aa9f2982d767cb9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>a</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>aebe15b3975c9000ebc7fc15db20a50be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>b</name>
      <anchorfile>class_line_segment.html</anchorfile>
      <anchor>a24d611255b252e26983ff4eb3caf7757</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LSBT</name>
    <filename>class_l_s_b_t.html</filename>
    <member kind="enumvalue">
      <name>val</name>
      <anchorfile>class_l_s_b_t.html</anchorfile>
      <anchor>a93b2e98939c652bd00f5148bbc90fb34a9a1eda5071b51e621087c142d3089c2b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MatrixProxy</name>
    <filename>class_matrix_proxy.html</filename>
    <member kind="function">
      <type>CONST_WIN32 float</type>
      <name>operator[]</name>
      <anchorfile>class_matrix_proxy.html</anchorfile>
      <anchor>a949556cf6052af999596f78c04300541</anchor>
      <arglist>(int col) const </arglist>
    </member>
    <member kind="function">
      <type>float &amp;</type>
      <name>operator[]</name>
      <anchorfile>class_matrix_proxy.html</anchorfile>
      <anchor>a6c6bb12f4c3cc5f8983fe48d101e47b2</anchor>
      <arglist>(int col)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>float</type>
      <name>v</name>
      <anchorfile>class_matrix_proxy.html</anchorfile>
      <anchor>ae10063f4790db436063a92c95e1e31ce</anchor>
      <arglist>[Cols]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Menu</name>
    <filename>class_menu.html</filename>
    <member kind="function">
      <type></type>
      <name>Menu</name>
      <anchorfile>class_menu.html</anchorfile>
      <anchor>aea36ff15ed756c91b7731a2025175f16</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>shiftDown</name>
      <anchorfile>class_menu.html</anchorfile>
      <anchor>ab0e7077ca883629ce9c4ce3740fe175d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>keyPressEvent</name>
      <anchorfile>class_menu.html</anchorfile>
      <anchor>a3739441079fb6416acaf129e8e5ce25f</anchor>
      <arglist>(QKeyEvent *e)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>keyReleaseEvent</name>
      <anchorfile>class_menu.html</anchorfile>
      <anchor>ad64ef69df1f8ebf84a721052a184df0c</anchor>
      <arglist>(QKeyEvent *e)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MouseEvent</name>
    <filename>class_mouse_event.html</filename>
    <class kind="struct">MouseEvent::PressPositions</class>
    <member kind="enumeration">
      <name>MouseButton</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a27af849afbe7685a276be58d4027c260</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoButton</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a27af849afbe7685a276be58d4027c260a88866d65c887f0706ea5d2dc14a1fd2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LeftButton</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a27af849afbe7685a276be58d4027c260a85f758ba4c5c98f0e5acc106bb1e8268</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RightButton</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a27af849afbe7685a276be58d4027c260ad494180e77a6c97dc92752fe0c45376d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MiddleButton</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a27af849afbe7685a276be58d4027c260a4c7aa263d24eb0888a85efbdb5a38d7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Button4</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a27af849afbe7685a276be58d4027c260a1284f52a58feb8fd436ff0d18150ef8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Button5</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a27af849afbe7685a276be58d4027c260a1eb1b39fb665e85674aefe9471e567c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MaxButtonMask</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a27af849afbe7685a276be58d4027c260ae50dab6a7202f079a0a1dc951e918672</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>EventType</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a382b54b4af136716ec3247275aba8306</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MouseEventInvalid</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a382b54b4af136716ec3247275aba8306aa3c67c5dc3c80cc743e0083d364abc4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MouseMove</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a382b54b4af136716ec3247275aba8306a2acd6b62245a61ba9c72468b7d2643a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MouseScroll</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a382b54b4af136716ec3247275aba8306aa3e257354a7257e39469e2788c4f0f5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MousePressed</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a382b54b4af136716ec3247275aba8306a27240ce205acf25d43d5dfc7afd1f844</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MouseReleased</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a382b54b4af136716ec3247275aba8306a06e1b080c248100b42ca39e885dea232</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MouseDoubleClicked</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a382b54b4af136716ec3247275aba8306ae733469ae27be1eacab070c81fdc815b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PressOrigin</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a850c05bc92f17b9306c57c73f0a594ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PressOriginNone</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a850c05bc92f17b9306c57c73f0a594aea579776c0fb795799c90c02680203cd33</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PressOriginScene</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a850c05bc92f17b9306c57c73f0a594aeae2e9b8b78a6c34f0f57c1f8607a54992</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PressOriginQtWidget</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a850c05bc92f17b9306c57c73f0a594aea6212e6caed0cad963a6be788e181720e</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>EventType</type>
      <name>GetEventType</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a80763a6eb3113df1ad687f3ee0fa8efa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>MouseButton</type>
      <name>GetMouseButton</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a3e9a3328ca2ae330b64758313b52c332</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>PressOrigin</type>
      <name>GetPressOrigin</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>aeb64afe9921bca0d7ab95b6991510a6c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Suppress</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a0002bfc690cf8bef7789eb0d1b20374f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>HadKeyDown</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a5c067182a0d853fb446275502db1a4d5</anchor>
      <arglist>(Qt::Key keyCode) const </arglist>
    </member>
    <member kind="slot">
      <type>QPoint</type>
      <name>MousePressedPos</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a34b6a2efec99134bd3a5977dd4a77502</anchor>
      <arglist>(int mouseButton) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsButtonDown</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>ae6af6b0ef480a048c7eff176230dbd1d</anchor>
      <arglist>(MouseButton button_) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsLeftButtonDown</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a4b50c827f44808e573761a34b78532a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsMiddleButtonDown</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>acb09a4ab898d462d7445c5a91bac8390</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsRightButtonDown</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a8c5bd938c82f5a581419269989e1622c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>HasShiftModifier</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>ad6f6e3a65485ebea92e7229b9ceccf93</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>HasCtrlModifier</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a96adb91138554e18e9718354909e327f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>HasAltModifier</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>ae8a6f46266a83bdc96ddd88f71ca4b79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>HasMetaModifier</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>abf5d34716ad7a52e7a1766217b938371</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsItemUnderMouse</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a044fa4915c7ec2fbf10c69e79e376034</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MouseEvent</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>abc4315e7f7d9359fb17eaa066f6a4d13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MouseEvent</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a05737cddd084887b3c0ad77fa9280483</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>X</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>aea2056c659224999ec174cbca09bee0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Y</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a6d4f46a4980fc6fb958396f8aba14de6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Z</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a963c45a8d48038fc670beb5d3c88f722</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RelativeX</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a11eadbb11e9a9c191ec73117517d9a84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RelativeY</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>ae9b6f08ae6f67a04fd445868fa088096</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RelativeZ</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a70de62da1421575c1360c08f2dd1b81b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GlobalX</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a609a030faf035135828453bebf508ad2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GlobalY</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a07c39530d70dc524bbd05c02894d597b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>OtherButtons</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>ac11e5ac32609c5dd0e52ab391041dae6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QGraphicsItem *</type>
      <name>ItemUnderMouse</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a3330e2a60ae37c23947e4594967bc5af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>EventType</type>
      <name>eventType</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>af02fe2c99eb53813ab3a47944ef465ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MouseButton</type>
      <name>button</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a6c752994000be0abeb207ea4c12e19b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PressOrigin</type>
      <name>origin</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a21459ce66d5f0c00c9704ca6a40369a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned long</type>
      <name>otherButtons</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a325b2d39d37daf17ee7be2da55d3ab16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned long</type>
      <name>modifiers</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>ac9cb3ab1b5408706e89a61ffa61544d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Qt::Key &gt;</type>
      <name>heldKeys</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a8c46476d4fa58626b9203c55f81bb728</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PressPositions</type>
      <name>mousePressPositions</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>aaf57a39cbd791320698276bf7a0ca7ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>handled</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a79db1699ac80c530e34a21453de0349e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QGraphicsItem *</type>
      <name>itemUnderMouse</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>adad174e9bd248d9b045456c0e8dcd6fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>x</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a2b89f4529866190e623ee04b37f59b30</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>y</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a766882bf2ff5883fa797761cdb1bb7b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>z</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a160c51c86de891abe2f359e4820aeaab</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>relativeX</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>af793aabd156fd276d122b90dd738a1e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>relativeY</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>adc83cab97a3049db35fe16f8619e5830</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>relativeZ</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>afd9226086a4280b00f088ed9795e14b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>globalX</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a95d6a9e5db9b96e8c95542a07aed4a85</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>globalY</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a4612af1d78adf25a5f559a650103e387</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>unsigned</type>
      <name>long</name>
      <anchorfile>class_mouse_event.html</anchorfile>
      <anchor>a2b8799094c616814174942ef2e8d0324</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MouseEvent::PressPositions</name>
    <filename>struct_mouse_event_1_1_press_positions.html</filename>
    <member kind="function">
      <type></type>
      <name>PressPositions</name>
      <anchorfile>struct_mouse_event_1_1_press_positions.html</anchorfile>
      <anchor>ad5777f7a2b5a5112742cbd3b3b087c30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QPoint</type>
      <name>Pos</name>
      <anchorfile>struct_mouse_event_1_1_press_positions.html</anchorfile>
      <anchor>abf671f0705289431798cd45a613d445b</anchor>
      <arglist>(int mouseButton) const </arglist>
    </member>
    <member kind="function">
      <type>PressOrigin</type>
      <name>Origin</name>
      <anchorfile>struct_mouse_event_1_1_press_positions.html</anchorfile>
      <anchor>a64863134b8d376e6ca4b65936ed21e9b</anchor>
      <arglist>(int mouseButton) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>struct_mouse_event_1_1_press_positions.html</anchorfile>
      <anchor>ab5e85dc47ccf0689d466604eb6d42461</anchor>
      <arglist>(int mouseButton, const QPoint &amp;pt, PressOrigin origin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>struct_mouse_event_1_1_press_positions.html</anchorfile>
      <anchor>a4ed89c66c50599a50e08af7e38845069</anchor>
      <arglist>(int mouseButton, int x, int y, PressOrigin origin)</arglist>
    </member>
    <member kind="variable">
      <type>PressOrigin</type>
      <name>origin</name>
      <anchorfile>struct_mouse_event_1_1_press_positions.html</anchorfile>
      <anchor>a9bf97ec561added0124286ceae620a6b</anchor>
      <arglist>[5]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>x</name>
      <anchorfile>struct_mouse_event_1_1_press_positions.html</anchorfile>
      <anchor>a39b0264542ea55a03c196d14c74be89a</anchor>
      <arglist>[5]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>y</name>
      <anchorfile>struct_mouse_event_1_1_press_positions.html</anchorfile>
      <anchor>ad6d46250f857e84c37d690a123f339a5</anchor>
      <arglist>[5]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MsgAssetDeleted</name>
    <filename>struct_msg_asset_deleted.html</filename>
    <member kind="enumvalue">
      <name>messageID</name>
      <anchorfile>struct_msg_asset_deleted.html</anchorfile>
      <anchor>a949dfd143cb7a726efaa1a2dddccef1fa06df962ed63e43bcc02728dbfb6d84cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MsgAssetDeleted</name>
      <anchorfile>struct_msg_asset_deleted.html</anchorfile>
      <anchor>a54225de79dd67f1c9653fb5428677c34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MsgAssetDeleted</name>
      <anchorfile>struct_msg_asset_deleted.html</anchorfile>
      <anchor>ae6d5507542c16b37cac3ffab5735e7f3</anchor>
      <arglist>(const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitToDefault</name>
      <anchorfile>struct_msg_asset_deleted.html</anchorfile>
      <anchor>ae0674b086ac592f113f1c44eef8e89c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>Size</name>
      <anchorfile>struct_msg_asset_deleted.html</anchorfile>
      <anchor>a39ed3e5f1f90158bea7124fa5f5a1c44</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SerializeTo</name>
      <anchorfile>struct_msg_asset_deleted.html</anchorfile>
      <anchor>a5025ef6faafd62aeb46d55a99ad810ea</anchor>
      <arglist>(kNet::DataSerializer &amp;dst) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeserializeFrom</name>
      <anchorfile>struct_msg_asset_deleted.html</anchorfile>
      <anchor>a705b0f195c0208b6084094d5e05ec072</anchor>
      <arglist>(kNet::DataDeserializer &amp;src)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *const</type>
      <name>Name</name>
      <anchorfile>struct_msg_asset_deleted.html</anchorfile>
      <anchor>a095ecd837b8ff79a502ef55eefe059f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>reliable</name>
      <anchorfile>struct_msg_asset_deleted.html</anchorfile>
      <anchor>a0fda22fd1338031621a8493e07e91b1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>inOrder</name>
      <anchorfile>struct_msg_asset_deleted.html</anchorfile>
      <anchor>ad491e3eb07d048a0525c29edfd5b38f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>priority</name>
      <anchorfile>struct_msg_asset_deleted.html</anchorfile>
      <anchor>ad40ec6ba4f2c42f481874813c46006e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; s8 &gt;</type>
      <name>assetRef</name>
      <anchorfile>struct_msg_asset_deleted.html</anchorfile>
      <anchor>afe4188328bf749831144077448a2a82f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>defaultReliable</name>
      <anchorfile>struct_msg_asset_deleted.html</anchorfile>
      <anchor>a7bfd905e3c42b6069420255f6b8df805</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>defaultInOrder</name>
      <anchorfile>struct_msg_asset_deleted.html</anchorfile>
      <anchor>ab8f62afbcc132bb3c1bba13f676c093e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>defaultPriority</name>
      <anchorfile>struct_msg_asset_deleted.html</anchorfile>
      <anchor>a3fa18f8f262e606e2acfab25f7876667</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MsgAssetDiscovery</name>
    <filename>struct_msg_asset_discovery.html</filename>
    <member kind="enumvalue">
      <name>messageID</name>
      <anchorfile>struct_msg_asset_discovery.html</anchorfile>
      <anchor>a50b2d0f8718f7c797c1bce7f7a75d1d1aa9a5ca4c769e1390e4110f9baba60af4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MsgAssetDiscovery</name>
      <anchorfile>struct_msg_asset_discovery.html</anchorfile>
      <anchor>a1c6167d3aef90ac91dae3a1751c64498</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MsgAssetDiscovery</name>
      <anchorfile>struct_msg_asset_discovery.html</anchorfile>
      <anchor>ac37332f6f04149053e94d582d9ae6c90</anchor>
      <arglist>(const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitToDefault</name>
      <anchorfile>struct_msg_asset_discovery.html</anchorfile>
      <anchor>aed7f44de3749aac6c07ac4bf32ffa373</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>Size</name>
      <anchorfile>struct_msg_asset_discovery.html</anchorfile>
      <anchor>ac269279df37b8b9a2dbc7f48b76fbd14</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SerializeTo</name>
      <anchorfile>struct_msg_asset_discovery.html</anchorfile>
      <anchor>a88e181f88c4892c555ebdcefb9438275</anchor>
      <arglist>(kNet::DataSerializer &amp;dst) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeserializeFrom</name>
      <anchorfile>struct_msg_asset_discovery.html</anchorfile>
      <anchor>a41ff10cf3ddd46ffbac3655e237f3d01</anchor>
      <arglist>(kNet::DataDeserializer &amp;src)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *const</type>
      <name>Name</name>
      <anchorfile>struct_msg_asset_discovery.html</anchorfile>
      <anchor>a8a102c73ba2ddeb77fcca32c81f5d2b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>reliable</name>
      <anchorfile>struct_msg_asset_discovery.html</anchorfile>
      <anchor>a746876f7be25f09a0e555bdd06ce513c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>inOrder</name>
      <anchorfile>struct_msg_asset_discovery.html</anchorfile>
      <anchor>a6b0c8319bfb4152fe7fcbe890013510a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>priority</name>
      <anchorfile>struct_msg_asset_discovery.html</anchorfile>
      <anchor>aef839cec23bbbdfbce9ed147d561738e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; s8 &gt;</type>
      <name>assetRef</name>
      <anchorfile>struct_msg_asset_discovery.html</anchorfile>
      <anchor>abac08ff5e9a6edfbd5012a0ead55444a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; s8 &gt;</type>
      <name>assetType</name>
      <anchorfile>struct_msg_asset_discovery.html</anchorfile>
      <anchor>aa869b6cfe7716dc1b020d685eeda3773</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>defaultReliable</name>
      <anchorfile>struct_msg_asset_discovery.html</anchorfile>
      <anchor>afe4393bba63913f820598b82e1e63103</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>defaultInOrder</name>
      <anchorfile>struct_msg_asset_discovery.html</anchorfile>
      <anchor>a73bf8ae4e3729db4b6dc0a6ad1dd908f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>defaultPriority</name>
      <anchorfile>struct_msg_asset_discovery.html</anchorfile>
      <anchor>a749f3ff1e37b727bf5f374cf72f5bf31</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MsgClientJoined</name>
    <filename>struct_msg_client_joined.html</filename>
    <member kind="enumvalue">
      <name>messageID</name>
      <anchorfile>struct_msg_client_joined.html</anchorfile>
      <anchor>ab0b251ad643fe94cecb9a8fdd1303b86a0c59fa50992529215c97d8e9cb2df71a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MsgClientJoined</name>
      <anchorfile>struct_msg_client_joined.html</anchorfile>
      <anchor>ac7df89267b40948f84194a1d45fc63af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MsgClientJoined</name>
      <anchorfile>struct_msg_client_joined.html</anchorfile>
      <anchor>a9ca268a925271e8f5c8f6a4bc68bb69b</anchor>
      <arglist>(const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitToDefault</name>
      <anchorfile>struct_msg_client_joined.html</anchorfile>
      <anchor>a81fda050cee40ebc7387cc38d02c5b17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>Size</name>
      <anchorfile>struct_msg_client_joined.html</anchorfile>
      <anchor>af82016ede800247fffc7ca914e07a924</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SerializeTo</name>
      <anchorfile>struct_msg_client_joined.html</anchorfile>
      <anchor>a1c2c267e882c3228b5c6f98dbe885afb</anchor>
      <arglist>(kNet::DataSerializer &amp;dst) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeserializeFrom</name>
      <anchorfile>struct_msg_client_joined.html</anchorfile>
      <anchor>abb8fad18b9a9648490e4cc29db41bbda</anchor>
      <arglist>(kNet::DataDeserializer &amp;src)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *const</type>
      <name>Name</name>
      <anchorfile>struct_msg_client_joined.html</anchorfile>
      <anchor>a90318d2bb4758d9ee3b5597282efbb9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>reliable</name>
      <anchorfile>struct_msg_client_joined.html</anchorfile>
      <anchor>aec6950ea9b8f5441b36e73c5847ed11b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>inOrder</name>
      <anchorfile>struct_msg_client_joined.html</anchorfile>
      <anchor>a3a0e92c1420f086f1661022f5c3b12f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>priority</name>
      <anchorfile>struct_msg_client_joined.html</anchorfile>
      <anchor>a9e62fd8b744f0cc21412c6b484b3c4d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>userID</name>
      <anchorfile>struct_msg_client_joined.html</anchorfile>
      <anchor>a78f77fce4084b133286829377b730217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>defaultReliable</name>
      <anchorfile>struct_msg_client_joined.html</anchorfile>
      <anchor>a1899c7d7168b4ae53f92238d9debef69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>defaultInOrder</name>
      <anchorfile>struct_msg_client_joined.html</anchorfile>
      <anchor>adc84beda6370758e11ea5a404cb17fea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>defaultPriority</name>
      <anchorfile>struct_msg_client_joined.html</anchorfile>
      <anchor>a3a4d154c88c9ae0bf1eec64cb08698e0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MsgClientLeft</name>
    <filename>struct_msg_client_left.html</filename>
    <member kind="enumvalue">
      <name>messageID</name>
      <anchorfile>struct_msg_client_left.html</anchorfile>
      <anchor>a6e6e82736c9acbe13372a848b228e76face50cbbb9d4b2e615a4281ab46983707</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MsgClientLeft</name>
      <anchorfile>struct_msg_client_left.html</anchorfile>
      <anchor>abc7eb8f27ce307b5e3adff0dfc923721</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MsgClientLeft</name>
      <anchorfile>struct_msg_client_left.html</anchorfile>
      <anchor>a1623024fb0b18557dc20cbb6f3667ffd</anchor>
      <arglist>(const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitToDefault</name>
      <anchorfile>struct_msg_client_left.html</anchorfile>
      <anchor>a99a5ac7acb2c40e00d5f740805498ae6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>Size</name>
      <anchorfile>struct_msg_client_left.html</anchorfile>
      <anchor>af4015ba4b1908407b67ebd6d32174dbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SerializeTo</name>
      <anchorfile>struct_msg_client_left.html</anchorfile>
      <anchor>ad2beca053d37809c55f667b3342ad401</anchor>
      <arglist>(kNet::DataSerializer &amp;dst) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeserializeFrom</name>
      <anchorfile>struct_msg_client_left.html</anchorfile>
      <anchor>a7644fb696695d35654126d20431f8722</anchor>
      <arglist>(kNet::DataDeserializer &amp;src)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *const</type>
      <name>Name</name>
      <anchorfile>struct_msg_client_left.html</anchorfile>
      <anchor>aec3a65d1f06cbf80398e524d08167a44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>reliable</name>
      <anchorfile>struct_msg_client_left.html</anchorfile>
      <anchor>a361ff5cd1fe311e321833e8bb127f19c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>inOrder</name>
      <anchorfile>struct_msg_client_left.html</anchorfile>
      <anchor>a63e2d992117b76da2a1c4dc9194c96ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>priority</name>
      <anchorfile>struct_msg_client_left.html</anchorfile>
      <anchor>aabe0e7e6da4a190c5429c1fbe2235313</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>userID</name>
      <anchorfile>struct_msg_client_left.html</anchorfile>
      <anchor>aba9d60776cea3581579f6583decd5857</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>defaultReliable</name>
      <anchorfile>struct_msg_client_left.html</anchorfile>
      <anchor>adfcbb1b16713ce7088e5e4c1426610ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>defaultInOrder</name>
      <anchorfile>struct_msg_client_left.html</anchorfile>
      <anchor>a86fd803f5e9d7696ed515346afa8bf5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>defaultPriority</name>
      <anchorfile>struct_msg_client_left.html</anchorfile>
      <anchor>a061f7fb67dd7c7b8a734a2fb1dc024b6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MsgEntityAction</name>
    <filename>struct_msg_entity_action.html</filename>
    <class kind="struct">MsgEntityAction::S_parameters</class>
    <member kind="enumvalue">
      <name>messageID</name>
      <anchorfile>struct_msg_entity_action.html</anchorfile>
      <anchor>a70a32e0d7aa2f9beaa10c3f5e0e4908da3fcec639a126f8735eddee4fa3ded5a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MsgEntityAction</name>
      <anchorfile>struct_msg_entity_action.html</anchorfile>
      <anchor>ac2372d9f51958706015b807e3e3ed0b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MsgEntityAction</name>
      <anchorfile>struct_msg_entity_action.html</anchorfile>
      <anchor>a8140f60e78e2b800a6bba25b4ad362bb</anchor>
      <arglist>(const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitToDefault</name>
      <anchorfile>struct_msg_entity_action.html</anchorfile>
      <anchor>ac94e0a868aba4b5b13c52022857b08a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>Size</name>
      <anchorfile>struct_msg_entity_action.html</anchorfile>
      <anchor>a979d85bf50e078975f6add7e9ecabb05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SerializeTo</name>
      <anchorfile>struct_msg_entity_action.html</anchorfile>
      <anchor>a28ee742df918a998f8d763bd1f4016b3</anchor>
      <arglist>(kNet::DataSerializer &amp;dst) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeserializeFrom</name>
      <anchorfile>struct_msg_entity_action.html</anchorfile>
      <anchor>a099403ae63924a50ca6322e005f3cf76</anchor>
      <arglist>(kNet::DataDeserializer &amp;src)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *const</type>
      <name>Name</name>
      <anchorfile>struct_msg_entity_action.html</anchorfile>
      <anchor>a244ffd334557c0ecdb2ee51a30813f31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>reliable</name>
      <anchorfile>struct_msg_entity_action.html</anchorfile>
      <anchor>ad61873aead0e6982a188090e4500bd0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>inOrder</name>
      <anchorfile>struct_msg_entity_action.html</anchorfile>
      <anchor>afc108628a8aa56234c30b8a6cc38708c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>priority</name>
      <anchorfile>struct_msg_entity_action.html</anchorfile>
      <anchor>a3d2e6f034084386e9bbaab49c81553f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>entityId</name>
      <anchorfile>struct_msg_entity_action.html</anchorfile>
      <anchor>ad146f0a387491705e9de22c464639ef3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; s8 &gt;</type>
      <name>name</name>
      <anchorfile>struct_msg_entity_action.html</anchorfile>
      <anchor>ac6b0cb2372cee5f6b3560763202ea057</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>executionType</name>
      <anchorfile>struct_msg_entity_action.html</anchorfile>
      <anchor>a55ba6038bf45cccd3b8696aaa42d31da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; S_parameters &gt;</type>
      <name>parameters</name>
      <anchorfile>struct_msg_entity_action.html</anchorfile>
      <anchor>a8aa390a60d72f97a60cb36c67ef589ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>defaultReliable</name>
      <anchorfile>struct_msg_entity_action.html</anchorfile>
      <anchor>a7c685943f9fa4c58d56eb55599995cfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>defaultInOrder</name>
      <anchorfile>struct_msg_entity_action.html</anchorfile>
      <anchor>ab06c7772df034a5efaf1f54fcdeeb8a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>defaultPriority</name>
      <anchorfile>struct_msg_entity_action.html</anchorfile>
      <anchor>a2ef80dfdf400f586116f8ab06c1307ff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MsgEntityAction::S_parameters</name>
    <filename>struct_msg_entity_action_1_1_s__parameters.html</filename>
    <member kind="function">
      <type>size_t</type>
      <name>Size</name>
      <anchorfile>struct_msg_entity_action_1_1_s__parameters.html</anchorfile>
      <anchor>a80b632abf406c997d205da88043b8a8a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SerializeTo</name>
      <anchorfile>struct_msg_entity_action_1_1_s__parameters.html</anchorfile>
      <anchor>aed927c5086735b64bbe370f0f9405b8b</anchor>
      <arglist>(kNet::DataSerializer &amp;dst) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeserializeFrom</name>
      <anchorfile>struct_msg_entity_action_1_1_s__parameters.html</anchorfile>
      <anchor>aba1c5b2c792bdf61ed07075cea0b8d57</anchor>
      <arglist>(kNet::DataDeserializer &amp;src)</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; s8 &gt;</type>
      <name>parameter</name>
      <anchorfile>struct_msg_entity_action_1_1_s__parameters.html</anchorfile>
      <anchor>a21839be42f8e81e54c4c517d38b1e1e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MsgLogin</name>
    <filename>struct_msg_login.html</filename>
    <member kind="enumvalue">
      <name>messageID</name>
      <anchorfile>struct_msg_login.html</anchorfile>
      <anchor>aa28a800cbbd9bb19e0d67de26b5c5702a4c4bb3fe7a4a76b3333230a95730a310</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MsgLogin</name>
      <anchorfile>struct_msg_login.html</anchorfile>
      <anchor>a664752cfc8885d23f6f180948a6aa498</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MsgLogin</name>
      <anchorfile>struct_msg_login.html</anchorfile>
      <anchor>a20ead912cbf6e76000a421ec219ff035</anchor>
      <arglist>(const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitToDefault</name>
      <anchorfile>struct_msg_login.html</anchorfile>
      <anchor>a747f189b07057ead03647d160837d3d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>Size</name>
      <anchorfile>struct_msg_login.html</anchorfile>
      <anchor>a63f406bc5256c20f40c4feb697fef11e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SerializeTo</name>
      <anchorfile>struct_msg_login.html</anchorfile>
      <anchor>aba87a9779cfaf494b307936669c15084</anchor>
      <arglist>(kNet::DataSerializer &amp;dst) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeserializeFrom</name>
      <anchorfile>struct_msg_login.html</anchorfile>
      <anchor>a6a36d3c925b8e34cb03735e123753bda</anchor>
      <arglist>(kNet::DataDeserializer &amp;src)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *const</type>
      <name>Name</name>
      <anchorfile>struct_msg_login.html</anchorfile>
      <anchor>a5598d45e2d4ac4a75bf53143d42f67b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>reliable</name>
      <anchorfile>struct_msg_login.html</anchorfile>
      <anchor>a7e046d07994e7f9a3b38c2208c0c5efc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>inOrder</name>
      <anchorfile>struct_msg_login.html</anchorfile>
      <anchor>ad41f23c4be5f62692e3d8730ddeaae0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>priority</name>
      <anchorfile>struct_msg_login.html</anchorfile>
      <anchor>a9cd7730adae76f9a0fe3d0cba1c31c49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; s8 &gt;</type>
      <name>loginData</name>
      <anchorfile>struct_msg_login.html</anchorfile>
      <anchor>a4b87fa7b68fc4f0f7c2d9a3c42cd1d21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>defaultReliable</name>
      <anchorfile>struct_msg_login.html</anchorfile>
      <anchor>aa5b5d68ac12a05103b61d5f36883f622</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>defaultInOrder</name>
      <anchorfile>struct_msg_login.html</anchorfile>
      <anchor>ae3f04ca5a8197f49a181118692ffe94a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>defaultPriority</name>
      <anchorfile>struct_msg_login.html</anchorfile>
      <anchor>aabd1e8562872ae1d3a99a97a9be7356f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MsgLoginReply</name>
    <filename>struct_msg_login_reply.html</filename>
    <member kind="enumvalue">
      <name>messageID</name>
      <anchorfile>struct_msg_login_reply.html</anchorfile>
      <anchor>a237067bac3cf52314c6859a1eee4675ca3ef32d62e4c374494973d5c8582bdc00</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MsgLoginReply</name>
      <anchorfile>struct_msg_login_reply.html</anchorfile>
      <anchor>aeea0127fe6f030f82c1964ac110faed3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MsgLoginReply</name>
      <anchorfile>struct_msg_login_reply.html</anchorfile>
      <anchor>aa848851007d008b040f61954e934c27a</anchor>
      <arglist>(const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitToDefault</name>
      <anchorfile>struct_msg_login_reply.html</anchorfile>
      <anchor>a6409af5d5fa544514e39279b68aae12f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>Size</name>
      <anchorfile>struct_msg_login_reply.html</anchorfile>
      <anchor>ab46db55bf8b6e1698130b303ee192dce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SerializeTo</name>
      <anchorfile>struct_msg_login_reply.html</anchorfile>
      <anchor>a2eb4a4bea58b104336c07376e47a8e1a</anchor>
      <arglist>(kNet::DataSerializer &amp;dst) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeserializeFrom</name>
      <anchorfile>struct_msg_login_reply.html</anchorfile>
      <anchor>a79cc95422e7dca478472acb827accd78</anchor>
      <arglist>(kNet::DataDeserializer &amp;src)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *const</type>
      <name>Name</name>
      <anchorfile>struct_msg_login_reply.html</anchorfile>
      <anchor>a625d651a345ded688c13d47160c090c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>reliable</name>
      <anchorfile>struct_msg_login_reply.html</anchorfile>
      <anchor>a1bc2b83205b9e09edfae0fa7127086f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>inOrder</name>
      <anchorfile>struct_msg_login_reply.html</anchorfile>
      <anchor>af7e97209339ad5dd107bc65cfd84fe46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>priority</name>
      <anchorfile>struct_msg_login_reply.html</anchorfile>
      <anchor>a6cb7ccac3ed178267b394be86976f96b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>success</name>
      <anchorfile>struct_msg_login_reply.html</anchorfile>
      <anchor>a62d5c564bc0bdb86c9444bc37ac0650a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>userID</name>
      <anchorfile>struct_msg_login_reply.html</anchorfile>
      <anchor>a0cb66dd0ec3e64d3cc53cf08eb36169b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; s8 &gt;</type>
      <name>loginReplyData</name>
      <anchorfile>struct_msg_login_reply.html</anchorfile>
      <anchor>af99936f82765dc1de4d09401d2619d79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>defaultReliable</name>
      <anchorfile>struct_msg_login_reply.html</anchorfile>
      <anchor>aa27b236279599f15bcde227598cb24fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>defaultInOrder</name>
      <anchorfile>struct_msg_login_reply.html</anchorfile>
      <anchor>a6e51794c9c2df0fefbabcb384d07d468</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const u32</type>
      <name>defaultPriority</name>
      <anchorfile>struct_msg_login_reply.html</anchorfile>
      <anchor>a7173a05694a437e2bf2583b708b438a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MultiEditButton</name>
    <filename>class_multi_edit_button.html</filename>
    <member kind="function">
      <type></type>
      <name>MultiEditButton</name>
      <anchorfile>class_multi_edit_button.html</anchorfile>
      <anchor>ac6d2b21357d9d755afb04266e1ae5eff</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="variable">
      <type>QPushButton *</type>
      <name>button</name>
      <anchorfile>class_multi_edit_button.html</anchorfile>
      <anchor>a6ee4df4e9d2b734e29536d98be076674</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MultiEditPropertyFactory</name>
    <filename>class_multi_edit_property_factory.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>EditorCreated</name>
      <anchorfile>class_multi_edit_property_factory.html</anchorfile>
      <anchor>aa7cb1c7a237445f559140dfea292d0b5</anchor>
      <arglist>(QtProperty *prop, QObject *factory)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ValueSelected</name>
      <anchorfile>class_multi_edit_property_factory.html</anchorfile>
      <anchor>aef7b63a1102c405ef6cadfa66354089e</anchor>
      <arglist>(QtProperty *property, const QString &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiEditPropertyFactory</name>
      <anchorfile>class_multi_edit_property_factory.html</anchorfile>
      <anchor>ace258f751afeed89dc33c96ad87ea33f</anchor>
      <arglist>(QObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MultiEditPropertyFactory</name>
      <anchorfile>class_multi_edit_property_factory.html</anchorfile>
      <anchor>aeefe160df9215f1dc98e81d98d8d9315</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>QPointer&lt; EditorButtonFactory &gt;</type>
      <name>buttonFactory</name>
      <anchorfile>class_multi_edit_property_factory.html</anchorfile>
      <anchor>aadeb65231391d88d8b2905fea6d61fe5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>connectPropertyManager</name>
      <anchorfile>class_multi_edit_property_factory.html</anchorfile>
      <anchor>a3e57bb6611ed522d97905c2d585da4a8</anchor>
      <arglist>(MultiEditPropertyManager *manager)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual QWidget *</type>
      <name>createEditor</name>
      <anchorfile>class_multi_edit_property_factory.html</anchorfile>
      <anchor>a0b186c1cf34ad6fe5ce0fcfc1661421e</anchor>
      <arglist>(MultiEditPropertyManager *manager, QtProperty *proeprty, QWidget *parent)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>disconnectPropertyManager</name>
      <anchorfile>class_multi_edit_property_factory.html</anchorfile>
      <anchor>aa4454dbd0587e81f18a67986d5946ffa</anchor>
      <arglist>(MultiEditPropertyManager *manager)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>DialogValueSelected</name>
      <anchorfile>class_multi_edit_property_factory.html</anchorfile>
      <anchor>a799e0b53e37751041bf8e75a687fba1b</anchor>
      <arglist>(const QString &amp;value)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>EditorDestroyed</name>
      <anchorfile>class_multi_edit_property_factory.html</anchorfile>
      <anchor>a63f7512844900c8a73b8b624dff89a77</anchor>
      <arglist>(QObject *object)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QMap&lt; const QtProperty *, QDialog * &gt;</type>
      <name>createdEditors_</name>
      <anchorfile>class_multi_edit_property_factory.html</anchorfile>
      <anchor>a6220732797d44ccb8a3de60698629344</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QMap&lt; QDialog *, const QtProperty * &gt;</type>
      <name>editorToProperty_</name>
      <anchorfile>class_multi_edit_property_factory.html</anchorfile>
      <anchor>a75f21b944d98a8d8e56a1ff6dd797bc2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MultiEditPropertyManager</name>
    <filename>class_multi_edit_property_manager.html</filename>
    <class kind="struct">MultiEditPropertyManager::Data</class>
    <member kind="slot">
      <type>void</type>
      <name>SetValue</name>
      <anchorfile>class_multi_edit_property_manager.html</anchorfile>
      <anchor>aa56e18a98a526593bb49af31104d5b5e</anchor>
      <arglist>(QtProperty *property, const QString &amp;value)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetAttributeValues</name>
      <anchorfile>class_multi_edit_property_manager.html</anchorfile>
      <anchor>a9ce74b94b8bc242e4e120563cfd26286</anchor>
      <arglist>(QtProperty *property, const QStringList &amp;attributes)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ValueChanged</name>
      <anchorfile>class_multi_edit_property_manager.html</anchorfile>
      <anchor>ab5c731f9999943edb3b26c36abedab1e</anchor>
      <arglist>(const QString &amp;value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeValuesUpdated</name>
      <anchorfile>class_multi_edit_property_manager.html</anchorfile>
      <anchor>a65782aaafb40fe4d6263f6be37975038</anchor>
      <arglist>(const QtProperty *property, const QStringList &amp;attributes)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiEditPropertyManager</name>
      <anchorfile>class_multi_edit_property_manager.html</anchorfile>
      <anchor>aba3576d2d3c9183748c84db70fd86701</anchor>
      <arglist>(QObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MultiEditPropertyManager</name>
      <anchorfile>class_multi_edit_property_manager.html</anchorfile>
      <anchor>aa90bc8220b19c0280afbec8b60770fff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>Value</name>
      <anchorfile>class_multi_edit_property_manager.html</anchorfile>
      <anchor>a19c0081ed83b01c741c285d00db750cb</anchor>
      <arglist>(const QtProperty *property) const </arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>AttributeValue</name>
      <anchorfile>class_multi_edit_property_manager.html</anchorfile>
      <anchor>a62cf242ed27ac3cd9ead7ee3b05bf5f6</anchor>
      <arglist>(const QtProperty *property) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual QString</type>
      <name>valueText</name>
      <anchorfile>class_multi_edit_property_manager.html</anchorfile>
      <anchor>a288a17b78a448623d45c4d0a28f29466</anchor>
      <arglist>(const QtProperty *property) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeProperty</name>
      <anchorfile>class_multi_edit_property_manager.html</anchorfile>
      <anchor>aedcd11973dd7db4b9f4964e97cef1d94</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>uninitializeProperty</name>
      <anchorfile>class_multi_edit_property_manager.html</anchorfile>
      <anchor>a259974db4eb1ad40a17e8c0aee3768aa</anchor>
      <arglist>(QtProperty *property)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>QMap&lt; const QtProperty *, Data &gt;</type>
      <name>PropertyToDataMap</name>
      <anchorfile>class_multi_edit_property_manager.html</anchorfile>
      <anchor>aef6e62792be2404f78e22f95329ad04d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PropertyToDataMap</type>
      <name>values_</name>
      <anchorfile>class_multi_edit_property_manager.html</anchorfile>
      <anchor>a15b12bbb8eefa195e57a06e7e0d3b681</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MultiEditPropertyManager::Data</name>
    <filename>struct_multi_edit_property_manager_1_1_data.html</filename>
    <member kind="variable">
      <type>QString</type>
      <name>value</name>
      <anchorfile>struct_multi_edit_property_manager_1_1_data.html</anchorfile>
      <anchor>a80f50d028dd2a9021b7f299979aef2eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QStringList</type>
      <name>attributeValues_</name>
      <anchorfile>struct_multi_edit_property_manager_1_1_data.html</anchorfile>
      <anchor>a0d936ebf8e7b7dd6fd1021cc93137488</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NullAssetFactory</name>
    <filename>class_null_asset_factory.html</filename>
    <base>IAssetTypeFactory</base>
    <member kind="function">
      <type></type>
      <name>NullAssetFactory</name>
      <anchorfile>class_null_asset_factory.html</anchorfile>
      <anchor>a1a503d74543453641585f003a7fce863</anchor>
      <arglist>(const char *assetType_)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QString</type>
      <name>Type</name>
      <anchorfile>class_null_asset_factory.html</anchorfile>
      <anchor>a203719e479de8713c0c085d3cb96edb1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AssetPtr</type>
      <name>CreateEmptyAsset</name>
      <anchorfile>class_null_asset_factory.html</anchorfile>
      <anchor>adfa3b80e42b95fbc0156f5aa7ce551c0</anchor>
      <arglist>(AssetAPI *, const char *)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QString</type>
      <name>assetType</name>
      <anchorfile>class_null_asset_factory.html</anchorfile>
      <anchor>a0c8390b2687217a9b37de7873ea09d2f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OBB</name>
    <filename>class_o_b_b.html</filename>
    <member kind="function">
      <type></type>
      <name>OBB</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>af752af068c6fc1787f06556b6a71c929</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OBB</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>ad991c58a1f319ce9925799aa4a247838</anchor>
      <arglist>(const AABB &amp;aabb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNegativeInfinity</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>aecbf4afa2fcc9a3091cd6a1bbf4d628f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFrom</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a2aa6647a2f602bf1c4a45d63ad7ef5e8</anchor>
      <arglist>(const AABB &amp;aabb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFrom</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>addbee6bb28475d9f2c8cb66ea1bf3ef0</anchor>
      <arglist>(const AABB &amp;aabb, const float3x3 &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFrom</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a33dc896b80c97148d367e0b4fabe4f11</anchor>
      <arglist>(const AABB &amp;aabb, const float3x4 &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFrom</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>af22966b0e6d30caa17768244e89c8450</anchor>
      <arglist>(const AABB &amp;aabb, const float4x4 &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFrom</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>ac56536d1511ed7dc0a3b8607ac2a08d0</anchor>
      <arglist>(const AABB &amp;aabb, const Quat &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFrom</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a889704f53dae8e19841949de700f8624</anchor>
      <arglist>(const Sphere &amp;sphere)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFromApproximate</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>ac49f88f2d2fa3206c36f560ece2f1f11</anchor>
      <arglist>(const float3 *pointArray, int numPoints)</arglist>
    </member>
    <member kind="function">
      <type>AABB</type>
      <name>MinimalEnclosingAABB</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>aaaecb1733903f781f85eb87470b8cb6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AABB</type>
      <name>MaximalContainedAABB</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a08b5ef00f42a8a7e333b0eee899e588f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Size</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>ae7baee462a47158fc82d3769118b66cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>HalfSize</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>acedd48ed82395dd5359dab64d30df4c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Diagonal</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a0742192e315ee39238d5118ae191b6ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>HalfDiagonal</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a079a648e36c78365f39fcb47c9e905a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>WorldToLocal</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a99ba9985c706b5503e45bc9eb56038f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>LocalToWorld</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a5eaf352d70ac77331dfc54a1a002c024</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Sphere</type>
      <name>MinimalEnclosingSphere</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a2935814ca04038f1b4e40ebe1843857a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Sphere</type>
      <name>MaximalContainedSphere</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>aa20c2530c65ba655a7bc26fd3b78dc56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFinite</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a2d5c51250812a0644a8288bb97f8dd7f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDegenerate</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a0233e258331e142806c16df0dcc9e46d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>CenterPoint</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a67bae9a765725df7dcbfc23e923b3cca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>PointInside</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a870be5fb5bd1776877c2d8cafbc32056</anchor>
      <arglist>(float x, float y, float z) const </arglist>
    </member>
    <member kind="function">
      <type>LineSegment</type>
      <name>Edge</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a0c7fffbbd9b199a8499fd4aa2c7186fe</anchor>
      <arglist>(int edgeIndex) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>CornerPoint</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a046c7c064277ffc22ade8dd39c310f7e</anchor>
      <arglist>(int cornerIndex) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>PointOnEdge</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>aac9304a5c55cc135d85067f70ce25049</anchor>
      <arglist>(int edgeIndex, float u) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>FaceCenterPoint</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>ad0ca3a300362fbf7485095a763b0495c</anchor>
      <arglist>(int faceIndex) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>FacePoint</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a1b56dededb024a7ec743fd93d223c836</anchor>
      <arglist>(int faceIndex, float u, float v) const </arglist>
    </member>
    <member kind="function">
      <type>Plane</type>
      <name>FacePlane</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a4e57cff43db8700dff9b22d84c341c03</anchor>
      <arglist>(int faceIndex) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetCornerPoints</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a2cb54729a3a716a3735563be5700269d</anchor>
      <arglist>(float3 *outPointArray) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetFacePlanes</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a613401b402550d582f5c683856578c3b</anchor>
      <arglist>(Plane *outPlaneArray) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Volume</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a255749b8901e3d32667e743cd824192d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>SurfaceArea</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a3dfd183556acadce38a0bf44e43f9808</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>RandomPointInside</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>abef43c6c8c212a964b83e1d0f61c759d</anchor>
      <arglist>(LCG &amp;rng) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>RandomPointOnSurface</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a9294dd7a26c280e2dacfbec255a2ad99</anchor>
      <arglist>(LCG &amp;rng) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>RandomPointOnEdge</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>ad9a3982d8a42398da5d0a634d07b576b</anchor>
      <arglist>(LCG &amp;rng) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>RandomCornerPoint</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>af6cd1dcc77daa88d0d02bd048ef57a85</anchor>
      <arglist>(LCG &amp;rng) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Translate</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a75e64bae1caa36e5ac2c803a3713f3f6</anchor>
      <arglist>(const float3 &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Scale</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>abf13f865e8023d8cc10d14329f76d4e4</anchor>
      <arglist>(const float3 &amp;centerPoint, float scaleFactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Scale</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>ae5f38962f84f7f586a0ec7fe6afe86c8</anchor>
      <arglist>(const float3 &amp;centerPoint, const float3 &amp;scaleFactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a2a27c38835431cd0d7b01bf87f1380b6</anchor>
      <arglist>(const float3x3 &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>aebd9837c7c947f22f3895ba7fcddceca</anchor>
      <arglist>(const float3x4 &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a5d521556fbcda3903bcccff85c31191f</anchor>
      <arglist>(const float4x4 &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a9d3e1a030419cf82aa1811a2b0f2927a</anchor>
      <arglist>(const Quat &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ClosestPoint</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>ae2910650cd07805827b884efb6f55f58</anchor>
      <arglist>(const float3 &amp;targetPoint) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a84f674caec0591372655917658fbcf76</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>ab004df688976f806742554d8ec863b8b</anchor>
      <arglist>(const Ray &amp;ray, float3 *outClosestPoint, float *outClosestDistance) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a33d5200af7c32dfc6fb273bf8e2a870d</anchor>
      <arglist>(const Line &amp;line, float3 *outClosestPoint, float *outClosestdistance) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a165d22763e16268af895bf833bd24d7f</anchor>
      <arglist>(const LineSegment &amp;lineSegment, float3 *outClosestPoint, float *outClosestDistance) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>af7c1a205adfefc40875405dbd6fec002</anchor>
      <arglist>(const AABB &amp;aabb, float3 *outClosestPoint, float3 *outClosestPointOther) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>af3b675e4fbbe00f6eb8811c7d6a76c66</anchor>
      <arglist>(const OBB &amp;obb, float3 *outClosestPoint, float3 *outClosestPointOther) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a88fc5af13a1810c17670bee7f2e4e2ee</anchor>
      <arglist>(const Plane &amp;plane, float3 *outClosestPoint, float3 *outClosestPointOther) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Contains</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>ac49fd0ba52f831e50b1e826a98103185</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Contains</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a514940c3a43f3c7884941668845b5614</anchor>
      <arglist>(const LineSegment &amp;lineSegment) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Contains</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a414ad7269ee775ac7bba527fd98e76c2</anchor>
      <arglist>(const AABB &amp;aabb) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Contains</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a058b385625f1f5d93f02a58373863d7c</anchor>
      <arglist>(const OBB &amp;obb) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a45ec2b2d4e66a8fbfcb34ebd07c645ba</anchor>
      <arglist>(const AABB &amp;aabb) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>af458aeef3b9ea354cd37092c1d09f097</anchor>
      <arglist>(const OBB &amp;obb, float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>aa4b447b167dd874d4f290e1307c79d85</anchor>
      <arglist>(const Plane &amp;plane) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a44e04768b9552bce4c550fa3eda3e023</anchor>
      <arglist>(const Ray &amp;ray, float *dNear, float *dFar) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>ab70c38417f550bf4064c63bb7c1f0d39</anchor>
      <arglist>(const Line &amp;line, float *dNear, float *dFar) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>ae34c57e96671a430ad1610df01fda294</anchor>
      <arglist>(const LineSegment &amp;lineSegment, float *dNear, float *dFar) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>ad13925fe6a72c58489fdc801a0556763</anchor>
      <arglist>(const Sphere &amp;sphere, float3 *closestPointOnOBB) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a6dd3ccb96e105a5ef485382b0132f8a9</anchor>
      <arglist>(const Triangle &amp;triangle) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator QString</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>af7f5febfbe9918c1502ff60e25f83d6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>toString</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a89ff2030c1f7ca84587d1ba564cad90a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ExtremePointsAlongDirection</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a8381406034c203f0bac2d9b3bebf4fa3</anchor>
      <arglist>(const float3 &amp;dir, const float3 *pointArray, int numPoints, int *idxSmallest, int *idxLargest)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static OBB</type>
      <name>PCAEnclosingOBB</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a62188ca47a97467ab2ba874a32b1de44</anchor>
      <arglist>(const float3 *pointArray, int numPoints)</arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>pos</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>aee2fce54d439ab6fadb53eb74f977512</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>r</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>a8e4c58c2b0cdf4d1b3000424ea5b961b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>axis</name>
      <anchorfile>class_o_b_b.html</anchorfile>
      <anchor>aad7dab57cc5afa62797b3dd2db56e505</anchor>
      <arglist>[3]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OgreMaterialAsset</name>
    <filename>class_ogre_material_asset.html</filename>
    <base>IAsset</base>
    <class kind="struct">OgreMaterialAsset::PendingTextureApply</class>
    <member kind="slot" virtualness="virtual">
      <type>virtual AssetPtr</type>
      <name>Clone</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a74353a88b90aaea8c67312fefc66b342</anchor>
      <arglist>(QString newAssetName) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>CopyContent</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a63772ebfcc07539554aa229693335978</anchor>
      <arglist>(AssetPtr source)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetAttribute</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a336ec91e806eab6ca051ea9d535733d4</anchor>
      <arglist>(const QString &amp;key, const QString &amp;value)</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>GetNumTechniques</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a991e1a8cd7989a00268f45698d6de18b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>GetNumPasses</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a12862c70cb294430b56903f2ffa31f38</anchor>
      <arglist>(int techIndex)</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>GetNumTextureUnits</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>abb6bc55418cc78beb0757aae641a0b12</anchor>
      <arglist>(int techIndex, int passIndex)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>HasTechnique</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>aa3f200609e529afdd94d1e545cefaeaa</anchor>
      <arglist>(int techIndex)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>HasPass</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a09d72d140867ed614a60ae20217d475a</anchor>
      <arglist>(int techIndex, int passIndex)</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>CreateTechnique</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a2964761ecf35cc6b89e44d50db769755</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>CreatePass</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>ac9f369bd59a4a342c33b0a62805596b4</anchor>
      <arglist>(int techIndex)</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>CreateTextureUnit</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>abf0782245e4efc8bcae188f090db659e</anchor>
      <arglist>(int techIndex, int passIndex)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>RemoveTextureUnit</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a320fcfc08879643f359f3d916bfa63d4</anchor>
      <arglist>(int techIndex, int passIndex, int texUnitIndex)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>RemovePass</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>ae643c628670419e61bde7d670ab1df78</anchor>
      <arglist>(int techIndex, int passIndex)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>RemoveTechnique</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>aba3443c212112e81365f461c5c7449c0</anchor>
      <arglist>(int techIndex)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetTexture</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a392aad82797843cc4ecfa191d5a335de</anchor>
      <arglist>(int techIndex, int passIndex, int texUnitIndex, const QString &amp;assetRef)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetVertexShader</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a279ab5c679923afe7dfdfbfae73bf9b4</anchor>
      <arglist>(int techIndex, int passIndex, const QString &amp;vertexShaderName)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetPixelShader</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>af66fbf6f87ea08e90867633d98e60be3</anchor>
      <arglist>(int techIndex, int passIndex, const QString &amp;pixelShaderName)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetLighting</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>aec116ce927c3fbea5e427d23be639703</anchor>
      <arglist>(int techIndex, int passIndex, bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetDiffuseColor</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>ac9f3115b6ed1d585fd20af0d58e1c5ac</anchor>
      <arglist>(int techIndex, int passIndex, const Color &amp;color)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetAmbientColor</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a9078c09d346e3494d6b686086c79556f</anchor>
      <arglist>(int techIndex, int passIndex, const Color &amp;color)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetSpecularColor</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>abec75c5a0425e21883620c6af2e0563f</anchor>
      <arglist>(int techIndex, int passIndex, const Color &amp;color)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetEmissiveColor</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a86f22a29f6b2314c11061a4658d7bd84</anchor>
      <arglist>(int techIndex, int passIndex, const Color &amp;color)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetSceneBlend</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a1a4a4b1fc2ad0e82e011478d0b171ddd</anchor>
      <arglist>(int techIndex, int passIndex, unsigned blendMode)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetPolygonMode</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a78b38ae6ca7fee2c981665bd1b455ecc</anchor>
      <arglist>(int techIndex, int passIndex, unsigned polygonMode)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetDepthCheck</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>ae4892d4695f4ca577929386cd64f99b1</anchor>
      <arglist>(int techIndex, int passIndex, bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetDepthWrite</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a36465cb5a96679045982e82aab20cb0a</anchor>
      <arglist>(int techIndex, int passIndex, bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SetDepthBias</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>adad21d15ac10fa92600d58767e3037cb</anchor>
      <arglist>(int techIndex, int passIndex, float bias)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>Type</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1ee38592ddb9473b2824a6d39268465f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>Name</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0c3aedda2f04b27a77f90da3cf44eed6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetDiskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a65037aa4ef8ec83d976afd83253f6234</anchor>
      <arglist>(QString diskSource)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>DiskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a21607e4493b017999f35189d82a1587b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>LoadFromFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a6a204f512b26f20f49e7fda9ddfe15ed</anchor>
      <arglist>(QString filename)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>LoadFromCache</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ac1f56599756004172408ff0c40079ab6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Unload</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ab230fc35705c702c9ecf359930b6693f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>afa0a8684b67098c0694e71f1677a6fd0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual bool</type>
      <name>SaveToFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a43ee1d3d1c9bc8eac79811d2900ed8cf</anchor>
      <arglist>(const QString &amp;filename, const QString &amp;serializationParameters=&quot;&quot;) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SaveCachedCopyToFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>af74f5e730e370db0e54a9cf7308ea32e</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="slot">
      <type>AssetStoragePtr</type>
      <name>GetAssetStorage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a9fd4b8a3353601b0ff47e9042e1e45e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>AssetProviderPtr</type>
      <name>GetAssetProvider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1968beba15e2f64b8aa356261bbe8eec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>ToString</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1ad41ad9fdcc0f036f786e0d0cc1259c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QByteArray</type>
      <name>GetRawData</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a827ca46bb695958627e1e63d7feb0424</anchor>
      <arglist>(const QString serializationParameters=&quot;&quot;) const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Unloaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a51e04b4100d7bdb620c6f0ae440d5f54</anchor>
      <arglist>(IAsset *asset)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Loaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0bf19c4b11e18f5925285231334aa054</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OgreMaterialAsset</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>ad87d6fd3c81581708d1667fc51907493</anchor>
      <arglist>(AssetAPI *owner, const QString &amp;type_, const QString &amp;name_)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~OgreMaterialAsset</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>acf10adfe6364fc4c246142b3ea35ffd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>DeserializeFromData</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a3606f65615eacfe3ba8decf3461166b4</anchor>
      <arglist>(const u8 *data_, size_t numBytes, const bool allowAsynchronous)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SerializeTo</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a5e7cc91c8c80acb8e8ce584f00bd209a</anchor>
      <arglist>(std::vector&lt; u8 &gt; &amp;data, const QString &amp;serializationParameters) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DoUnload</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a50a6616c4d50b7fd519ddcad6bf0972c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; AssetReference &gt;</type>
      <name>FindReferences</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a5e603b136e3d57b7bc8971226ccf1ccc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLoaded</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a37fefff879df4aeff1f3603e598effe5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ogre::Technique *</type>
      <name>GetTechnique</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a30e78e415e21667b7da67c40ceda181a</anchor>
      <arglist>(int techIndex)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::Pass *</type>
      <name>GetPass</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>ab66c369e54c18cf2a24c9f2bb04282ec</anchor>
      <arglist>(int techIndex, int passIndex)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::TextureUnitState *</type>
      <name>GetTextureUnit</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a04003f16e201c9958d26376d5a1eabf3</anchor>
      <arglist>(int techIndex, int passIndex, int texUnitIndex)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFromFileInMemory</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a76fae2e679dc173de78d3dbe2d7b04e3</anchor>
      <arglist>(const u8 *data, size_t numBytes, bool allowAsynchronous=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadCompleted</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a156e1f8df2f868412c3278f27aab16af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DependencyLoaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a8db3fb94d1bd73e184bf3b4e5d0c7153</anchor>
      <arglist>(AssetPtr dependee)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; AssetReference &gt;</type>
      <name>FindReferencesRecursive</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a43661820be04bb6898b0f6e0c1e60a9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAssetProvider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ab909dddbde3614b811908174a10ddf59</anchor>
      <arglist>(AssetProviderPtr provider)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAssetStorage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ad7cb7c54d73a2677f242dcd318791ce9</anchor>
      <arglist>(AssetStoragePtr storage)</arglist>
    </member>
    <member kind="variable">
      <type>Ogre::MaterialPtr</type>
      <name>ogreMaterial</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a4d029731e1ae1a8f1256b9317e159dcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>ogreAssetName</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a2e6eaf5e0c36c725c4a1ca0e681f272e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; AssetReference &gt;</type>
      <name>references_</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a3c976448eb07bf5389a48f43a8ee985f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetAPI *</type>
      <name>assetAPI</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>acfa90de1e91d33066b10e9a983d7f706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetProviderWeakPtr</type>
      <name>provider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a34182317435ed01abcfa86fd1a523a4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetStorageWeakPtr</type>
      <name>storage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0d7711709ea3a5d74097c36eeb53acce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>type</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a9a2cbc25b81810fa610da6a686fd5d03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a19e035f9cfe2559d8ea38c331ca9acfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>diskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ad8db45ff366bec21d66c9f853f0bde67</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnTransferSucceeded</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>ab7069ffdecd1fd3c47ed909df489fff5</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnTransferFailed</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a7783109abf75d6df867831f9e9447bca</anchor>
      <arglist>(IAssetTransfer *transfer, QString reason)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>SetMaterialAttribute</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a162a283bf7963e897f73a31353aa47f5</anchor>
      <arglist>(const QString &amp;attr, const QString &amp;val, const QString &amp;origVal)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>SetTechniqueAttribute</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>a130b27d6aeb5f64f54e6abd2df1351a2</anchor>
      <arglist>(Ogre::Technique *tech, int techIndex, const QString &amp;attr, const QString &amp;val, const QString &amp;origVal)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>SetPassAttribute</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>adaa24129a2913d82cc4727199646bbd3</anchor>
      <arglist>(Ogre::Pass *pass, int techIndex, int passIndex, const QString &amp;attr, const QString &amp;val, const QString &amp;origVal)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>SetTextureUnitAttribute</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>af111cb6519b0a9d756c44d0e3f8b7d38</anchor>
      <arglist>(Ogre::TextureUnitState *texUnit, int techIndex, int passIndex, int tuIndex, const QString &amp;attr, const QString &amp;val, const QString &amp;origVal)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PendingTextureApply &gt;</type>
      <name>pendingApplies</name>
      <anchorfile>class_ogre_material_asset.html</anchorfile>
      <anchor>ad5ab1ac34104d70be2209c0695069f80</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>OgreMaterialAsset::PendingTextureApply</name>
    <filename>struct_ogre_material_asset_1_1_pending_texture_apply.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>techIndex</name>
      <anchorfile>struct_ogre_material_asset_1_1_pending_texture_apply.html</anchorfile>
      <anchor>a1fe5902fe893a5ee47d0a103156891c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>passIndex</name>
      <anchorfile>struct_ogre_material_asset_1_1_pending_texture_apply.html</anchorfile>
      <anchor>ad87df950f584a879e7b8d6b3ea0a69e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tuIndex</name>
      <anchorfile>struct_ogre_material_asset_1_1_pending_texture_apply.html</anchorfile>
      <anchor>ad34850c9922a83881c619baa4cbee6af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>IAssetTransfer *</type>
      <name>transfer</name>
      <anchorfile>struct_ogre_material_asset_1_1_pending_texture_apply.html</anchorfile>
      <anchor>a24eb173788cad87f3d102d95a14307a6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OgreMeshAsset</name>
    <filename>class_ogre_mesh_asset.html</filename>
    <base>IAsset</base>
    <member kind="slot">
      <type>QString</type>
      <name>Type</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1ee38592ddb9473b2824a6d39268465f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>Name</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0c3aedda2f04b27a77f90da3cf44eed6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetDiskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a65037aa4ef8ec83d976afd83253f6234</anchor>
      <arglist>(QString diskSource)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>DiskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a21607e4493b017999f35189d82a1587b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>LoadFromFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a6a204f512b26f20f49e7fda9ddfe15ed</anchor>
      <arglist>(QString filename)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>LoadFromCache</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ac1f56599756004172408ff0c40079ab6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Unload</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ab230fc35705c702c9ecf359930b6693f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>afa0a8684b67098c0694e71f1677a6fd0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual AssetPtr</type>
      <name>Clone</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a8bfd7618fbf62b20e106f81cb7648ddb</anchor>
      <arglist>(QString newAssetName) const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual bool</type>
      <name>SaveToFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a43ee1d3d1c9bc8eac79811d2900ed8cf</anchor>
      <arglist>(const QString &amp;filename, const QString &amp;serializationParameters=&quot;&quot;) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SaveCachedCopyToFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>af74f5e730e370db0e54a9cf7308ea32e</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="slot">
      <type>AssetStoragePtr</type>
      <name>GetAssetStorage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a9fd4b8a3353601b0ff47e9042e1e45e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>AssetProviderPtr</type>
      <name>GetAssetProvider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1968beba15e2f64b8aa356261bbe8eec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>ToString</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1ad41ad9fdcc0f036f786e0d0cc1259c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QByteArray</type>
      <name>GetRawData</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a827ca46bb695958627e1e63d7feb0424</anchor>
      <arglist>(const QString serializationParameters=&quot;&quot;) const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Unloaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a51e04b4100d7bdb620c6f0ae440d5f54</anchor>
      <arglist>(IAsset *asset)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Loaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0bf19c4b11e18f5925285231334aa054</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OgreMeshAsset</name>
      <anchorfile>class_ogre_mesh_asset.html</anchorfile>
      <anchor>aa3d26940cd9193a093d1c87e9a2c9137</anchor>
      <arglist>(AssetAPI *owner, const QString &amp;type_, const QString &amp;name_)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~OgreMeshAsset</name>
      <anchorfile>class_ogre_mesh_asset.html</anchorfile>
      <anchor>aa44fa5e2df012ea2891b15b3b086e9c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>DeserializeFromData</name>
      <anchorfile>class_ogre_mesh_asset.html</anchorfile>
      <anchor>a2b7a5a657a37ae8db730651808933c1e</anchor>
      <arglist>(const u8 *data_, size_t numBytes, const bool allowAsynchronous)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SerializeTo</name>
      <anchorfile>class_ogre_mesh_asset.html</anchorfile>
      <anchor>a51e1209a3206e9d1a9aacdf37a9148c7</anchor>
      <arglist>(std::vector&lt; u8 &gt; &amp;data, const QString &amp;serializationParameters) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operationCompleted</name>
      <anchorfile>class_ogre_mesh_asset.html</anchorfile>
      <anchor>ab4302081668472d8617d2d99eb06eb66</anchor>
      <arglist>(Ogre::BackgroundProcessTicket ticket, const Ogre::BackgroundProcessResult &amp;result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DoUnload</name>
      <anchorfile>class_ogre_mesh_asset.html</anchorfile>
      <anchor>ab50d858fdcb8f08275eb8f5dfcbf88b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; AssetReference &gt;</type>
      <name>FindReferences</name>
      <anchorfile>class_ogre_mesh_asset.html</anchorfile>
      <anchor>a5f9cb184ced14f17f5392eafcfceb27d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDefaultMaterial</name>
      <anchorfile>class_ogre_mesh_asset.html</anchorfile>
      <anchor>a3dc26fa05d8e5d354a7a63ce4b902b2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLoaded</name>
      <anchorfile>class_ogre_mesh_asset.html</anchorfile>
      <anchor>acccec4e2011ad0d18e61cf42626e9186</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFromFileInMemory</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a76fae2e679dc173de78d3dbe2d7b04e3</anchor>
      <arglist>(const u8 *data, size_t numBytes, bool allowAsynchronous=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadCompleted</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a156e1f8df2f868412c3278f27aab16af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DependencyLoaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a8db3fb94d1bd73e184bf3b4e5d0c7153</anchor>
      <arglist>(AssetPtr dependee)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; AssetReference &gt;</type>
      <name>FindReferencesRecursive</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a43661820be04bb6898b0f6e0c1e60a9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAssetProvider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ab909dddbde3614b811908174a10ddf59</anchor>
      <arglist>(AssetProviderPtr provider)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAssetStorage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ad7cb7c54d73a2677f242dcd318791ce9</anchor>
      <arglist>(AssetStoragePtr storage)</arglist>
    </member>
    <member kind="variable">
      <type>Ogre::MeshPtr</type>
      <name>ogreMesh</name>
      <anchorfile>class_ogre_mesh_asset.html</anchorfile>
      <anchor>aa5b64e071269ad8290922b5c75e56dc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Ogre::BackgroundProcessTicket</type>
      <name>loadTicket_</name>
      <anchorfile>class_ogre_mesh_asset.html</anchorfile>
      <anchor>ad9eef78e1a9f4013865816a85d2e0905</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetAPI *</type>
      <name>assetAPI</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>acfa90de1e91d33066b10e9a983d7f706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetProviderWeakPtr</type>
      <name>provider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a34182317435ed01abcfa86fd1a523a4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetStorageWeakPtr</type>
      <name>storage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0d7711709ea3a5d74097c36eeb53acce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>type</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a9a2cbc25b81810fa610da6a686fd5d03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a19e035f9cfe2559d8ea38c331ca9acfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>diskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ad8db45ff366bec21d66c9f853f0bde67</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OgreParticleAsset</name>
    <filename>class_ogre_particle_asset.html</filename>
    <base>IAsset</base>
    <member kind="slot">
      <type>QString</type>
      <name>Type</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1ee38592ddb9473b2824a6d39268465f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>Name</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0c3aedda2f04b27a77f90da3cf44eed6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetDiskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a65037aa4ef8ec83d976afd83253f6234</anchor>
      <arglist>(QString diskSource)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>DiskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a21607e4493b017999f35189d82a1587b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>LoadFromFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a6a204f512b26f20f49e7fda9ddfe15ed</anchor>
      <arglist>(QString filename)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>LoadFromCache</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ac1f56599756004172408ff0c40079ab6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Unload</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ab230fc35705c702c9ecf359930b6693f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>afa0a8684b67098c0694e71f1677a6fd0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual AssetPtr</type>
      <name>Clone</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a8bfd7618fbf62b20e106f81cb7648ddb</anchor>
      <arglist>(QString newAssetName) const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual bool</type>
      <name>SaveToFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a43ee1d3d1c9bc8eac79811d2900ed8cf</anchor>
      <arglist>(const QString &amp;filename, const QString &amp;serializationParameters=&quot;&quot;) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SaveCachedCopyToFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>af74f5e730e370db0e54a9cf7308ea32e</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="slot">
      <type>AssetStoragePtr</type>
      <name>GetAssetStorage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a9fd4b8a3353601b0ff47e9042e1e45e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>AssetProviderPtr</type>
      <name>GetAssetProvider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1968beba15e2f64b8aa356261bbe8eec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>ToString</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1ad41ad9fdcc0f036f786e0d0cc1259c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QByteArray</type>
      <name>GetRawData</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a827ca46bb695958627e1e63d7feb0424</anchor>
      <arglist>(const QString serializationParameters=&quot;&quot;) const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Unloaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a51e04b4100d7bdb620c6f0ae440d5f54</anchor>
      <arglist>(IAsset *asset)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Loaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0bf19c4b11e18f5925285231334aa054</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OgreParticleAsset</name>
      <anchorfile>class_ogre_particle_asset.html</anchorfile>
      <anchor>a22416eeac89df0ee6819b5b786f0db89</anchor>
      <arglist>(AssetAPI *owner, const QString &amp;type, const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~OgreParticleAsset</name>
      <anchorfile>class_ogre_particle_asset.html</anchorfile>
      <anchor>ae8d6d4c46a4c774fd0ad41588901b0bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>DeserializeFromData</name>
      <anchorfile>class_ogre_particle_asset.html</anchorfile>
      <anchor>acb3dd7959a64301face8f01395e2d4eb</anchor>
      <arglist>(const u8 *data, size_t numBytes, const bool allowAsynchronous)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SerializeTo</name>
      <anchorfile>class_ogre_particle_asset.html</anchorfile>
      <anchor>ad24633b5176f933b12f8eed742fd8e28</anchor>
      <arglist>(std::vector&lt; u8 &gt; &amp;data, const QString &amp;serializationParameters=&quot;&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; AssetReference &gt;</type>
      <name>FindReferences</name>
      <anchorfile>class_ogre_particle_asset.html</anchorfile>
      <anchor>acc0a52a2fc794738aabaa30001c6a80d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DoUnload</name>
      <anchorfile>class_ogre_particle_asset.html</anchorfile>
      <anchor>a639044634b9288ea0a0cf6df5a1adddb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNumTemplates</name>
      <anchorfile>class_ogre_particle_asset.html</anchorfile>
      <anchor>ac2b57ccd75e413afa73fe097a4a8329b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>GetTemplateName</name>
      <anchorfile>class_ogre_particle_asset.html</anchorfile>
      <anchor>aa5e55d81fdfe76a41e496c947d7f3738</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLoaded</name>
      <anchorfile>class_ogre_particle_asset.html</anchorfile>
      <anchor>a78595ea16dea8d073b85a22e04b37f7f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFromFileInMemory</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a76fae2e679dc173de78d3dbe2d7b04e3</anchor>
      <arglist>(const u8 *data, size_t numBytes, bool allowAsynchronous=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadCompleted</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a156e1f8df2f868412c3278f27aab16af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DependencyLoaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a8db3fb94d1bd73e184bf3b4e5d0c7153</anchor>
      <arglist>(AssetPtr dependee)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; AssetReference &gt;</type>
      <name>FindReferencesRecursive</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a43661820be04bb6898b0f6e0c1e60a9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAssetProvider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ab909dddbde3614b811908174a10ddf59</anchor>
      <arglist>(AssetProviderPtr provider)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAssetStorage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ad7cb7c54d73a2677f242dcd318791ce9</anchor>
      <arglist>(AssetStoragePtr storage)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetAPI *</type>
      <name>assetAPI</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>acfa90de1e91d33066b10e9a983d7f706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetProviderWeakPtr</type>
      <name>provider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a34182317435ed01abcfa86fd1a523a4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetStorageWeakPtr</type>
      <name>storage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0d7711709ea3a5d74097c36eeb53acce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>type</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a9a2cbc25b81810fa610da6a686fd5d03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a19e035f9cfe2559d8ea38c331ca9acfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>diskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ad8db45ff366bec21d66c9f853f0bde67</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>RemoveTemplates</name>
      <anchorfile>class_ogre_particle_asset.html</anchorfile>
      <anchor>ac67b4c06e764743c4971a770ceb770d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>StringVector</type>
      <name>templates</name>
      <anchorfile>class_ogre_particle_asset.html</anchorfile>
      <anchor>adee84db75dbdff8ca104cab0dfcb05d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>internalName</name>
      <anchorfile>class_ogre_particle_asset.html</anchorfile>
      <anchor>a0dca32d3f6d3b61e4607577127e626fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>originalData</name>
      <anchorfile>class_ogre_particle_asset.html</anchorfile>
      <anchor>a92086d9ff1f096c7c4d4933d58567ad0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; AssetReference &gt;</type>
      <name>references</name>
      <anchorfile>class_ogre_particle_asset.html</anchorfile>
      <anchor>ac337e13e8307c169c8f776727aae124f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OgreShadowCameraSetupFocusedPSSM</name>
    <filename>class_ogre_shadow_camera_setup_focused_p_s_s_m.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; float &gt;</type>
      <name>SplitPointList</name>
      <anchorfile>class_ogre_shadow_camera_setup_focused_p_s_s_m.html</anchorfile>
      <anchor>a9004b5551b7f24c6fbbff1fd5a499c7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; float &gt;</type>
      <name>OptimalAdjustFactorList</name>
      <anchorfile>class_ogre_shadow_camera_setup_focused_p_s_s_m.html</anchorfile>
      <anchor>ad3de5d41524989bd698222364e7ccd58</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OgreShadowCameraSetupFocusedPSSM</name>
      <anchorfile>class_ogre_shadow_camera_setup_focused_p_s_s_m.html</anchorfile>
      <anchor>a2340a937b6429146103c0d3c746cea51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~OgreShadowCameraSetupFocusedPSSM</name>
      <anchorfile>class_ogre_shadow_camera_setup_focused_p_s_s_m.html</anchorfile>
      <anchor>ac69cdeafd5010f968ccee2cfaf185c6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calculateSplitPoints</name>
      <anchorfile>class_ogre_shadow_camera_setup_focused_p_s_s_m.html</anchorfile>
      <anchor>ac106b5849a94273917872ab5fa572251</anchor>
      <arglist>(size_t splitCount, float nearDist, float farDist, float lambda=0.95)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSplitPoints</name>
      <anchorfile>class_ogre_shadow_camera_setup_focused_p_s_s_m.html</anchorfile>
      <anchor>a84c202623651faac2c5d084b404d8229</anchor>
      <arglist>(const SplitPointList &amp;newSplitPoints)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSplitPadding</name>
      <anchorfile>class_ogre_shadow_camera_setup_focused_p_s_s_m.html</anchorfile>
      <anchor>a3678ca37f18a82facf29f4b95ca473bd</anchor>
      <arglist>(float pad)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getSplitPadding</name>
      <anchorfile>class_ogre_shadow_camera_setup_focused_p_s_s_m.html</anchorfile>
      <anchor>a7258a565962601dfa28beafecaa29c27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getSplitCount</name>
      <anchorfile>class_ogre_shadow_camera_setup_focused_p_s_s_m.html</anchorfile>
      <anchor>af61cfbabd5cd73765e972594ce54b60f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getShadowCamera</name>
      <anchorfile>class_ogre_shadow_camera_setup_focused_p_s_s_m.html</anchorfile>
      <anchor>a06419698bbd250da72c221b27aecbc4a</anchor>
      <arglist>(const Ogre::SceneManager *sm, const Ogre::Camera *cam, const Ogre::Viewport *vp, const Ogre::Light *light, Ogre::Camera *texCam, size_t iteration) const </arglist>
    </member>
    <member kind="function">
      <type>const SplitPointList &amp;</type>
      <name>getSplitPoints</name>
      <anchorfile>class_ogre_shadow_camera_setup_focused_p_s_s_m.html</anchorfile>
      <anchor>a4d9c7a7c446aaea5fec978c5a384b640</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getOptimalAdjustFactor</name>
      <anchorfile>class_ogre_shadow_camera_setup_focused_p_s_s_m.html</anchorfile>
      <anchor>af4460b3a0abc30cf3cc693b6242ac482</anchor>
      <arglist>(size_t splitIndex) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getOptimalAdjustFactor</name>
      <anchorfile>class_ogre_shadow_camera_setup_focused_p_s_s_m.html</anchorfile>
      <anchor>a273ee16b1228ed80f0b18fec5845d3e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mSplitCount</name>
      <anchorfile>class_ogre_shadow_camera_setup_focused_p_s_s_m.html</anchorfile>
      <anchor>ac90909200d06e65eafc28e9106390751</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SplitPointList</type>
      <name>mSplitPoints</name>
      <anchorfile>class_ogre_shadow_camera_setup_focused_p_s_s_m.html</anchorfile>
      <anchor>a04388e4cb7d1c146a2e17bf6b9849269</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OptimalAdjustFactorList</type>
      <name>mOptimalAdjustFactors</name>
      <anchorfile>class_ogre_shadow_camera_setup_focused_p_s_s_m.html</anchorfile>
      <anchor>a789178e7f8372f0223038a3bc0cc3193</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mSplitPadding</name>
      <anchorfile>class_ogre_shadow_camera_setup_focused_p_s_s_m.html</anchorfile>
      <anchor>a4f957530c5c7305117e380d80a9a36ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mCurrentIteration</name>
      <anchorfile>class_ogre_shadow_camera_setup_focused_p_s_s_m.html</anchorfile>
      <anchor>a32a6c8245996eac3ae47c4150a45ce9f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OgreSkeletonAsset</name>
    <filename>class_ogre_skeleton_asset.html</filename>
    <base>IAsset</base>
    <member kind="slot">
      <type>QString</type>
      <name>Type</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1ee38592ddb9473b2824a6d39268465f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>Name</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0c3aedda2f04b27a77f90da3cf44eed6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetDiskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a65037aa4ef8ec83d976afd83253f6234</anchor>
      <arglist>(QString diskSource)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>DiskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a21607e4493b017999f35189d82a1587b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>LoadFromFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a6a204f512b26f20f49e7fda9ddfe15ed</anchor>
      <arglist>(QString filename)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>LoadFromCache</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ac1f56599756004172408ff0c40079ab6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Unload</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ab230fc35705c702c9ecf359930b6693f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>afa0a8684b67098c0694e71f1677a6fd0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual AssetPtr</type>
      <name>Clone</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a8bfd7618fbf62b20e106f81cb7648ddb</anchor>
      <arglist>(QString newAssetName) const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual bool</type>
      <name>SaveToFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a43ee1d3d1c9bc8eac79811d2900ed8cf</anchor>
      <arglist>(const QString &amp;filename, const QString &amp;serializationParameters=&quot;&quot;) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SaveCachedCopyToFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>af74f5e730e370db0e54a9cf7308ea32e</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="slot">
      <type>AssetStoragePtr</type>
      <name>GetAssetStorage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a9fd4b8a3353601b0ff47e9042e1e45e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>AssetProviderPtr</type>
      <name>GetAssetProvider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1968beba15e2f64b8aa356261bbe8eec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>ToString</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1ad41ad9fdcc0f036f786e0d0cc1259c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QByteArray</type>
      <name>GetRawData</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a827ca46bb695958627e1e63d7feb0424</anchor>
      <arglist>(const QString serializationParameters=&quot;&quot;) const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Unloaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a51e04b4100d7bdb620c6f0ae440d5f54</anchor>
      <arglist>(IAsset *asset)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Loaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0bf19c4b11e18f5925285231334aa054</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OgreSkeletonAsset</name>
      <anchorfile>class_ogre_skeleton_asset.html</anchorfile>
      <anchor>a683f75531b9e603c11671333f3d8723c</anchor>
      <arglist>(AssetAPI *owner, const QString &amp;type_, const QString &amp;name_)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OgreSkeletonAsset</name>
      <anchorfile>class_ogre_skeleton_asset.html</anchorfile>
      <anchor>a2c9b5148f43d5e31ca71232e76bf26ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>DeserializeFromData</name>
      <anchorfile>class_ogre_skeleton_asset.html</anchorfile>
      <anchor>aa00abd92ee683e41fefaf93d32991c2d</anchor>
      <arglist>(const u8 *data_, size_t numBytes, const bool allowAsynchronous)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operationCompleted</name>
      <anchorfile>class_ogre_skeleton_asset.html</anchorfile>
      <anchor>ae20c5a5d5c375a5a715dcc72361c9878</anchor>
      <arglist>(Ogre::BackgroundProcessTicket ticket, const Ogre::BackgroundProcessResult &amp;result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SerializeTo</name>
      <anchorfile>class_ogre_skeleton_asset.html</anchorfile>
      <anchor>a01bc601e5cde376bd2028d7c55a3c721</anchor>
      <arglist>(std::vector&lt; u8 &gt; &amp;data, const QString &amp;serializationParameters=&quot;&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DoUnload</name>
      <anchorfile>class_ogre_skeleton_asset.html</anchorfile>
      <anchor>afc36c8f6eb209c2dfa45a89da53a35de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLoaded</name>
      <anchorfile>class_ogre_skeleton_asset.html</anchorfile>
      <anchor>a21cb1b19aa028959f7879e1caf7f34e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFromFileInMemory</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a76fae2e679dc173de78d3dbe2d7b04e3</anchor>
      <arglist>(const u8 *data, size_t numBytes, bool allowAsynchronous=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadCompleted</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a156e1f8df2f868412c3278f27aab16af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DependencyLoaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a8db3fb94d1bd73e184bf3b4e5d0c7153</anchor>
      <arglist>(AssetPtr dependee)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; AssetReference &gt;</type>
      <name>FindReferences</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0e74e3802c3d7cc221ded59de7e5a5c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; AssetReference &gt;</type>
      <name>FindReferencesRecursive</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a43661820be04bb6898b0f6e0c1e60a9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAssetProvider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ab909dddbde3614b811908174a10ddf59</anchor>
      <arglist>(AssetProviderPtr provider)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAssetStorage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ad7cb7c54d73a2677f242dcd318791ce9</anchor>
      <arglist>(AssetStoragePtr storage)</arglist>
    </member>
    <member kind="variable">
      <type>Ogre::SkeletonPtr</type>
      <name>ogreSkeleton</name>
      <anchorfile>class_ogre_skeleton_asset.html</anchorfile>
      <anchor>aa89e8224eaedb1874e64aefabe5bcb91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>internal_name_</name>
      <anchorfile>class_ogre_skeleton_asset.html</anchorfile>
      <anchor>ae4bcf01379540cfff729020ddc84e0ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Ogre::BackgroundProcessTicket</type>
      <name>loadTicket_</name>
      <anchorfile>class_ogre_skeleton_asset.html</anchorfile>
      <anchor>a1a082cc965eed803cbe662e362effe5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetAPI *</type>
      <name>assetAPI</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>acfa90de1e91d33066b10e9a983d7f706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetProviderWeakPtr</type>
      <name>provider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a34182317435ed01abcfa86fd1a523a4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetStorageWeakPtr</type>
      <name>storage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0d7711709ea3a5d74097c36eeb53acce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>type</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a9a2cbc25b81810fa610da6a686fd5d03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a19e035f9cfe2559d8ea38c331ca9acfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>diskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ad8db45ff366bec21d66c9f853f0bde67</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OgreWorld</name>
    <filename>class_ogre_world.html</filename>
    <member kind="slot">
      <type>RaycastResult *</type>
      <name>Raycast</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>a6df24dae87f7df7f16473d9f466e7876</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="slot">
      <type>RaycastResult *</type>
      <name>Raycast</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>a8f2f18a32d352ac7a0c0083c76239211</anchor>
      <arglist>(int x, int y, unsigned layerMask)</arglist>
    </member>
    <member kind="slot">
      <type>RaycastResult *</type>
      <name>Raycast</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>aa0ca82f20051066b1722d7e7e9c31668</anchor>
      <arglist>(const Ray &amp;ray, unsigned layerMask)</arglist>
    </member>
    <member kind="slot">
      <type>QList&lt; Entity * &gt;</type>
      <name>FrustumQuery</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>acb32587a6644e0e776aec2fbf61b3d6c</anchor>
      <arglist>(QRect &amp;viewrect)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsEntityVisible</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>a29491d0c0b019d354877df71edd6ff77</anchor>
      <arglist>(Entity *entity) const </arglist>
    </member>
    <member kind="slot">
      <type>QList&lt; Entity * &gt;</type>
      <name>GetVisibleEntities</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>a9aca853f3e74fb833da12bbf69a605c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsActive</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>ab0f5a7742b4602b0fad4128cc4c81d8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>StartViewTracking</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>a3cca6e3e605a7b57f1ff2273e467f21d</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>StopViewTracking</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>a946d58c1b1e2d8e4c192799c0eb998de</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="slot">
      <type>OgreRenderer::Renderer *</type>
      <name>GetRenderer</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>aedef34f050afcab06eb1cd88f112f025</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Ogre::SceneManager *</type>
      <name>GetSceneManager</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>a637ec061506977399b70d7bb8a3f90ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>ScenePtr</type>
      <name>GetScene</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>a12a9404d77b54c725935da7fd98d8b6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>EntityEnterView</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>a2c06a42bd40a3519bb10c9df8a24117b</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>EntityLeaveView</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>a9793fb862a350d75a0cc3648cb869f36</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OgreWorld</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>ae5c7f7f85c1d8d849c9056832940038b</anchor>
      <arglist>(OgreRenderer::Renderer *renderer, ScenePtr scene)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OgreWorld</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>a269a496d5d92d761bd3996044d1c102a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetUniqueObjectName</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>ae0de67994cdb46a6cb2f9f0dfd59c524</anchor>
      <arglist>(const std::string &amp;prefix)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>PropertyName</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>a750c476d5d3d17d54fecdd51722afb58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnUpdated</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>abdda99569aa984233126e342fb90e2d6</anchor>
      <arglist>(float timeStep)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>RaycastResult *</type>
      <name>RaycastInternal</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>a296de9756d77dbfded764b8fbf1fb821</anchor>
      <arglist>(unsigned layerMask)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetupShadows</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>ab3c302ed561f0908357ef0ab6bafa06c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>EC_Camera *</type>
      <name>VerifyCurrentSceneCameraComponent</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>abc0ba839da92ab5320a32c5769b5cf24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Ogre::Camera *</type>
      <name>VerifyCurrentSceneCamera</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>a00ad067d000a731e8cbf67ca4223b81a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework_</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>af89cfe117a880a4a63ef9f0f750aa059</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>OgreRenderer::Renderer *</type>
      <name>renderer_</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>adcc901095a05cbec3a4db24ba302043b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SceneWeakPtr</type>
      <name>scene_</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>a6d222c33d1cc09e7f408ed57c3eef9b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::SceneManager *</type>
      <name>sceneManager_</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>a7a161c48a00fa8ab7a0a7bfb93857e40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::RaySceneQuery *</type>
      <name>rayQuery_</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>a4d1e2858c10839ccb72b8235ef32e542</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RaycastResult</type>
      <name>result_</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>ae554ade6266a787eb17b63cc393735f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; OgreRenderer::GaussianListener * &gt;</type>
      <name>gaussianListeners_</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>a063fd39bae78e7157937228d81140d18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; entity_id_t &gt;</type>
      <name>visibleEntities_</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>a26e7aeb593c6935c0d095a3cfceda006</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; entity_id_t &gt;</type>
      <name>lastVisibleEntities_</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>a1f45c73d274b2973e4d09d1585197acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; EntityWeakPtr &gt;</type>
      <name>visibilityTrackedEntities_</name>
      <anchorfile>class_ogre_world.html</anchorfile>
      <anchor>a0bd5923483163e26d9eb143f7af49b2f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PhysicsRaycastResult</name>
    <filename>class_physics_raycast_result.html</filename>
    <member kind="function">
      <type>Entity *</type>
      <name>getentity</name>
      <anchorfile>class_physics_raycast_result.html</anchorfile>
      <anchor>a3f458cc5b809960f9bb1baf5f572ce7f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>getpos</name>
      <anchorfile>class_physics_raycast_result.html</anchorfile>
      <anchor>a8c2c8ade777a54fa0ecce35edfc3ee65</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>getnormal</name>
      <anchorfile>class_physics_raycast_result.html</anchorfile>
      <anchor>a7caae94380e1e1a530c3f70591125ed7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getdistance</name>
      <anchorfile>class_physics_raycast_result.html</anchorfile>
      <anchor>a0f7aeace4d7fe6ca8312e72769469918</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Entity *</type>
      <name>entity</name>
      <anchorfile>class_physics_raycast_result.html</anchorfile>
      <anchor>a43bdd26a556b69ec979a8f836feb72f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>Entity</type>
      <name>entity</name>
      <anchorfile>class_physics_raycast_result.html</anchorfile>
      <anchor>a267f584dfb93a9633940f6bd2711e9a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float3</type>
      <name>pos</name>
      <anchorfile>class_physics_raycast_result.html</anchorfile>
      <anchor>a5038f80205643b81f1c799f54a3bb3ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float3</type>
      <name>normal</name>
      <anchorfile>class_physics_raycast_result.html</anchorfile>
      <anchor>a5e8b13ee1083a4ed27d50231e8cce7ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>distance</name>
      <anchorfile>class_physics_raycast_result.html</anchorfile>
      <anchor>a8f1729d7a32253172f3c294d7fd0c4b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Plane</name>
    <filename>class_plane.html</filename>
    <member kind="function">
      <type></type>
      <name>Plane</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>acac0d9c003e0ab10d07b146c3566a0c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plane</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a9039e9eafc806fd6f35b04cea51291e8</anchor>
      <arglist>(const float3 &amp;normal, float d)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plane</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a03a90ab2eb95a9191fdfcabdb3f55b19</anchor>
      <arglist>(const float3 &amp;v1, const float3 &amp;v2, const float3 &amp;v3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plane</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>ac5ab5f7445d3cce2efa57b8c77a04c5a</anchor>
      <arglist>(const float3 &amp;point, const float3 &amp;normal)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plane</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a9a035c5e744050a74f37d761c8339e6a</anchor>
      <arglist>(const Ray &amp;ray, const float3 &amp;normal)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plane</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>ade4de571f12b30c4d45395cd83e7a17f</anchor>
      <arglist>(const Line &amp;line, const float3 &amp;normal)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plane</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a7154ae1e6083f1ee8b47a4b3698e3024</anchor>
      <arglist>(const LineSegment &amp;lineSegment, const float3 &amp;normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a899157b05437e4a54450ec91131f5fe4</anchor>
      <arglist>(const float3 &amp;v1, const float3 &amp;v2, const float3 &amp;v3)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a996838903bc03cac3f95d5a1c3850e81</anchor>
      <arglist>(const float3 &amp;point, const float3 &amp;normal)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>PointOnPlane</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a27988f92535772d752bc680904d90e0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>ab5892d0a9448fa76a945be0f852ec58d</anchor>
      <arglist>(const float3x3 &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a400a48da0a54a4fd5dc7e6a4a5f111a5</anchor>
      <arglist>(const float3x4 &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a09a28fa391c0d4d4581c06970c7d6128</anchor>
      <arglist>(const float4x4 &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a278ae49cd2c57b9ecc999c3b49dc70d2</anchor>
      <arglist>(const Quat &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsInPositiveDirection</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a08b4fd7ce0d4fdca7888089fae5ef0b0</anchor>
      <arglist>(const float3 &amp;directionVector) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOnPositiveSide</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a42df718381e096eea62ed2c883007b91</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AreOnSameSide</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a7f134f450008da7e57b6314378158287</anchor>
      <arglist>(const float3 &amp;p1, const float3 &amp;p2) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>ac4aff58afe44065b4e23e9fb7790284f</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>SignedDistance</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a751afe2ca7dad4bb7887e712cdb7eabf</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>OrthoProjection</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a1137046902f85bce7faf342625f9b181</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>ObliqueProjection</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a65e7d0e6553eb8fef0ac3de4b83d7064</anchor>
      <arglist>(const float3 &amp;obliqueProjectionDir) const </arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>ReflectionMatrix</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a793c9b80a073c0ab5739fc99ecfcffe3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Reflect</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a05e731bb98b9f3c6f3d5965186ea597f</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Refract</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a7ce23f3a7a2ae9b767a15061d114960c</anchor>
      <arglist>(const float3 &amp;normal, float negativeSideRefractionIndex, float positiveSideRefractionIndex) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Project</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a1b6fd62e305b3b356becf2d0a1a926be</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ClosestPoint</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a6ba06ef2eae130111c3e2aff542fcd37</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ObliqueProject</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>ad3e433d0f457cf4e82dce41be6d148e9</anchor>
      <arglist>(const float3 &amp;point, const float3 &amp;obliqueProjectionDir) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Contains</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a2b17b0bed81564143caff9e50f5672c3</anchor>
      <arglist>(const float3 &amp;point, float distanceThreshold=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a7745fac65c95c605e43615b59c17b8d9</anchor>
      <arglist>(const Plane &amp;plane, Line *outLine=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a2947bfc9617005e2d4bb7c34c9e9f12f</anchor>
      <arglist>(const Plane &amp;plane, const Plane &amp;plane2, Line *outLine=0, float3 *outPoint=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a4836a02279d471a937e0d8dfebde2f74</anchor>
      <arglist>(const Ray &amp;ray, float *d) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>ad8ecbdc17e635efacdf51e56407bce51</anchor>
      <arglist>(const Line &amp;line, float *d) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a239690b2422edf1b2a2fa5d350eddec3</anchor>
      <arglist>(const LineSegment &amp;lineSegment, float *d) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a7db6b3e4a7728ba4cc0e850313ad1cd3</anchor>
      <arglist>(const Sphere &amp;sphere) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>ab77e392a837c97a5b8a12f36c225726d</anchor>
      <arglist>(const AABB &amp;aabb) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a412f5ed25eb557b18d223074db410fb6</anchor>
      <arglist>(const OBB &amp;obb) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>ae765b4140dcd5d2bebb91877d2369307</anchor>
      <arglist>(const Triangle &amp;triangle) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a5d51180c8191a6742ec5f07d686263f7</anchor>
      <arglist>(const Frustum &amp;frustum) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Clip</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a05f6f36c795c8150aecc4fb73926622b</anchor>
      <arglist>(LineSegment &amp;line) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Clip</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a0a0a78b3473480aa20c590c27f61b1e5</anchor>
      <arglist>(float3 &amp;a, float3 &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Clip</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a4c023ef12f1976bc6583c21345322d09</anchor>
      <arglist>(const Line &amp;line, Ray &amp;outRay) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Clip</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a748ac958ee114afca2125c3bb28af40b</anchor>
      <arglist>(const Triangle &amp;triangle, Triangle &amp;t1, Triangle &amp;t2) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsParallel</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>ab2004d16c775ee2a298353c78c241a34</anchor>
      <arglist>(const Plane &amp;plane, float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PassesThroughOrigin</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>aad970e15167ef571cb7a18371d2fe19d</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>DihedralAngle</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a153ade007820d532288c45e7921cfcc4</anchor>
      <arglist>(const Plane &amp;plane) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Equals</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a63c3d37fa113165b1b211957f5a4bfc3</anchor>
      <arglist>(const Plane &amp;other, float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>Circle</type>
      <name>GenerateCircle</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a548e859b37d9bf67e70e2b1c342f9fa2</anchor>
      <arglist>(const float3 &amp;circleCenter, float radius) const </arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>normal</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a8b7aa1989587f0ec88c265f9716e456e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>d</name>
      <anchorfile>class_plane.html</anchorfile>
      <anchor>a61fc789fce8fbe72914f5397f1bbed44</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PluginAPI</name>
    <filename>class_plugin_a_p_i.html</filename>
    <class kind="struct">PluginAPI::Plugin</class>
    <member kind="function">
      <type></type>
      <name>PluginAPI</name>
      <anchorfile>class_plugin_a_p_i.html</anchorfile>
      <anchor>aa7b2f77a18f4cecd271114a964816195</anchor>
      <arglist>(Framework *owner)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>ConfigurationFile</name>
      <anchorfile>class_plugin_a_p_i.html</anchorfile>
      <anchor>ab769cdc2f15271769bb185e106473b0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadPlugin</name>
      <anchorfile>class_plugin_a_p_i.html</anchorfile>
      <anchor>adb0d5733a3c936350681691e6bb691c3</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadPluginsFromXML</name>
      <anchorfile>class_plugin_a_p_i.html</anchorfile>
      <anchor>add022fc1a1299b1bce24a57316c2c303</anchor>
      <arglist>(QString pluginListFilename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnloadPlugins</name>
      <anchorfile>class_plugin_a_p_i.html</anchorfile>
      <anchor>a686074196148b4053613c9e7ff1e25b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; Plugin &gt;</type>
      <name>plugins</name>
      <anchorfile>class_plugin_a_p_i.html</anchorfile>
      <anchor>a7519f04bd149599a4d3dd2e53c6ce186</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>owner</name>
      <anchorfile>class_plugin_a_p_i.html</anchorfile>
      <anchor>a6572da5960a4c1a9c2e61070592d5c50</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PluginAPI::Plugin</name>
    <filename>struct_plugin_a_p_i_1_1_plugin.html</filename>
    <member kind="variable">
      <type>PluginHandle</type>
      <name>libraryHandle</name>
      <anchorfile>struct_plugin_a_p_i_1_1_plugin.html</anchorfile>
      <anchor>a2ed8c269261c784b02245c72f7413e35</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Polygon</name>
    <filename>class_polygon.html</filename>
    <member kind="function">
      <type></type>
      <name>Polygon</name>
      <anchorfile>class_polygon.html</anchorfile>
      <anchor>ac183e712f8be1e13f1c9d5b4d4512ead</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumEdges</name>
      <anchorfile>class_polygon.html</anchorfile>
      <anchor>a4866a4a0e56e152ac708571496617600</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LineSegment</type>
      <name>Edge</name>
      <anchorfile>class_polygon.html</anchorfile>
      <anchor>aa0d45162eb0b03dd8f99dc620e08d84c</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DiagonalExists</name>
      <anchorfile>class_polygon.html</anchorfile>
      <anchor>af1f089066020913df422ca3f267bb52d</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
    <member kind="function">
      <type>LineSegment</type>
      <name>Diagonal</name>
      <anchorfile>class_polygon.html</anchorfile>
      <anchor>a433fbd95750977ef334967205f2ed1c4</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsConvex</name>
      <anchorfile>class_polygon.html</anchorfile>
      <anchor>a9559b31604517fbc960834af8752aedc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPlanar</name>
      <anchorfile>class_polygon.html</anchorfile>
      <anchor>a386c1a21d4d6e2274a585e197b360dbb</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSimple</name>
      <anchorfile>class_polygon.html</anchorfile>
      <anchor>adb451af840c80dfa25222c265f6ba681</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Plane</type>
      <name>GetPlane</name>
      <anchorfile>class_polygon.html</anchorfile>
      <anchor>ac64c3a0f977dcc8b50f503e9f760519d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSelfIntersecting</name>
      <anchorfile>class_polygon.html</anchorfile>
      <anchor>a424b433bd2c38d2d2f4d17a7cbf3b38b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProjectToPlane</name>
      <anchorfile>class_polygon.html</anchorfile>
      <anchor>ae0bce2387dc598f5cd764926343ba85c</anchor>
      <arglist>(const Plane &amp;plane)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSelfIntersecting</name>
      <anchorfile>class_polygon.html</anchorfile>
      <anchor>aad5c2d7c4717d635d4200c512acbd476</anchor>
      <arglist>(const float3 &amp;viewDirection) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Contains</name>
      <anchorfile>class_polygon.html</anchorfile>
      <anchor>a6adce735bb910bf172857efb5c5ab040</anchor>
      <arglist>(const float3 &amp;point, const float3 &amp;viewDirection) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Area</name>
      <anchorfile>class_polygon.html</anchorfile>
      <anchor>a98d867eda56423605e6a038e3a245b72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Perimeter</name>
      <anchorfile>class_polygon.html</anchorfile>
      <anchor>a02e751fb39b77d0ebd434c980449e67f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Centroid</name>
      <anchorfile>class_polygon.html</anchorfile>
      <anchor>ad17a887fbf10f5a1e81ecd36846c1284</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsConcaveVertex</name>
      <anchorfile>class_polygon.html</anchorfile>
      <anchor>ac1b2ef1b61cfa62b168e89f5dc4a958d</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>Polygon</type>
      <name>ConvexHull</name>
      <anchorfile>class_polygon.html</anchorfile>
      <anchor>a166b25066e62b0149710a6acd09e79f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSupportingPoint</name>
      <anchorfile>class_polygon.html</anchorfile>
      <anchor>aa2a8f340642d0aba36fee14887f587b8</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSupportingPoint</name>
      <anchorfile>class_polygon.html</anchorfile>
      <anchor>a8ab009eeda5e9f4ee551001956b4e11c</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsConvexQuad</name>
      <anchorfile>class_polygon.html</anchorfile>
      <anchor>a338ed57ae0940921e620d222153af61b</anchor>
      <arglist>(const float3 &amp;pointA, const float3 &amp;pointB, const float3 &amp;pointC, const float3 &amp;pointD)</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; float3 &gt;</type>
      <name>points</name>
      <anchorfile>class_polygon.html</anchorfile>
      <anchor>a9be79951ef1308194d049bdd5ce0a17b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Polynomial</name>
    <filename>class_polynomial.html</filename>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>SolveQuadratic</name>
      <anchorfile>class_polynomial.html</anchorfile>
      <anchor>a6ff98f554777aa927f539f164c629fa3</anchor>
      <arglist>(float a, float b, float c, float &amp;root1, float &amp;root2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>SolveCubic</name>
      <anchorfile>class_polynomial.html</anchorfile>
      <anchor>afb3e810392fb96020ef8dac85d58c69d</anchor>
      <arglist>(float a, float b, float c, float d, float &amp;root1, float &amp;root2, float &amp;root3)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>SolveQuartic</name>
      <anchorfile>class_polynomial.html</anchorfile>
      <anchor>a7314daecfec4942c8ecda6749839998e</anchor>
      <arglist>(float a, float b, float c, float d, float &amp;root1, float &amp;root2, float &amp;root3, float &amp;root4)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PowIntT</name>
    <filename>class_pow_int_t.html</filename>
    <member kind="enumvalue">
      <name>val</name>
      <anchorfile>class_pow_int_t.html</anchorfile>
      <anchor>ae5deed1e512cd51060277bebb987778ca2bbc227c9c9b23040a2ad0f36055fa52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>val</name>
      <anchorfile>class_pow_int_t.html</anchorfile>
      <anchor>ae5deed1e512cd51060277bebb987778ca2bbc227c9c9b23040a2ad0f36055fa52</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Profiler</name>
    <filename>class_profiler.html</filename>
    <member kind="function">
      <type></type>
      <name>Profiler</name>
      <anchorfile>class_profiler.html</anchorfile>
      <anchor>a675ebc9207b9aeace1d967c085abeacf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Profiler</name>
      <anchorfile>class_profiler.html</anchorfile>
      <anchor>a1e6dd8f6cfb15cd5237b971d8f49c749</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StartBlock</name>
      <anchorfile>class_profiler.html</anchorfile>
      <anchor>a030a75d547390961b67881500bfcfc77</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EndBlock</name>
      <anchorfile>class_profiler.html</anchorfile>
      <anchor>a6bdbdaf0b992564a4dd5b2da9fcfdc27</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ThreadedReset</name>
      <anchorfile>class_profiler.html</anchorfile>
      <anchor>a47efb846203e5f8f42c3b2f28d3fe23a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ProfilerNodeTree *</type>
      <name>CreateThreadRootBlock</name>
      <anchorfile>class_profiler.html</anchorfile>
      <anchor>aac7c593d1651782c91dfed1eaf2b962b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveThreadRootBlock</name>
      <anchorfile>class_profiler.html</anchorfile>
      <anchor>aa4619c3dfca4dcbb9cb7cb1aa5cff673</anchor>
      <arglist>(ProfilerNodeTree *rootBlock)</arglist>
    </member>
    <member kind="function">
      <type>ProfilerNodeTree *</type>
      <name>GetThreadRootBlock</name>
      <anchorfile>class_profiler.html</anchorfile>
      <anchor>a8d937d65cc0e76d05989122350fbf2d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetThisThreadRootBlockName</name>
      <anchorfile>class_profiler.html</anchorfile>
      <anchor>aa2ac8d6a5ddbf2262d75934e653291b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ProfilerNodeTree *</type>
      <name>FindBlockByName</name>
      <anchorfile>class_profiler.html</anchorfile>
      <anchor>a6b829901b8661ca2299a9133a60af084</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>ProfilerNodeTree *</type>
      <name>GetOrCreateThreadRootBlock</name>
      <anchorfile>class_profiler.html</anchorfile>
      <anchor>a05575ae1aaa3b4182520a45515f2c1ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ProfilerNodeTree *</type>
      <name>Lock</name>
      <anchorfile>class_profiler.html</anchorfile>
      <anchor>a768d452721b7aaf1cfddebae82b0633f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Release</name>
      <anchorfile>class_profiler.html</anchorfile>
      <anchor>a05d2260fe20b6812db8d814a40a00f34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ProfilerNodeTree *</type>
      <name>GetRoot</name>
      <anchorfile>class_profiler.html</anchorfile>
      <anchor>ae26971adaf96f935241281a5ebfedf87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Reset</name>
      <anchorfile>class_profiler.html</anchorfile>
      <anchor>a6045c5de1798fe90d0e56f8f655f56fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ProfilerNodeTree</type>
      <name>root_</name>
      <anchorfile>class_profiler.html</anchorfile>
      <anchor>a27632fe34c73bbdc640cea43c0e2b73b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ProfilerNodeTree *</type>
      <name>thread_specific_root_</name>
      <anchorfile>class_profiler.html</anchorfile>
      <anchor>ada3ff4ef5c9f422493de971804818082</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ProfilerNodeTree *</type>
      <name>current_node_</name>
      <anchorfile>class_profiler.html</anchorfile>
      <anchor>a84586b289b454bcac7a4b3863a6775ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; ProfilerNodeTree * &gt;</type>
      <name>thread_root_nodes_</name>
      <anchorfile>class_profiler.html</anchorfile>
      <anchor>a35619173d0f475618757e461282810a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::mutex</type>
      <name>mutex_</name>
      <anchorfile>class_profiler.html</anchorfile>
      <anchor>ad9e929beb41fcab8a307ffb9e3810c5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ProfilerQObj</name>
      <anchorfile>class_profiler.html</anchorfile>
      <anchor>ade67d1c9821776c240cd9fcb34adf49b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ProfilerBlock</name>
    <filename>class_profiler_block.html</filename>
    <member kind="function">
      <type></type>
      <name>~ProfilerBlock</name>
      <anchorfile>class_profiler_block.html</anchorfile>
      <anchor>a5de61e5140a3209ff76085918ec811c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Start</name>
      <anchorfile>class_profiler_block.html</anchorfile>
      <anchor>a14149174aa548377e1f73aed18006345</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Stop</name>
      <anchorfile>class_profiler_block.html</anchorfile>
      <anchor>afbcf17686bf50a8c807353deb43c4783</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ElapsedTimeSeconds</name>
      <anchorfile>class_profiler_block.html</anchorfile>
      <anchor>a6901f4377216ca93b84a69f9fcfff149</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>s64</type>
      <name>ElapsedTimeMicroSeconds</name>
      <anchorfile>class_profiler_block.html</anchorfile>
      <anchor>a71b58c3e26cc210c5c8f2cfce8c74dbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>QueryCapability</name>
      <anchorfile>class_profiler_block.html</anchorfile>
      <anchor>af4bfdf2d9c1d0df300dc6a88b29b2cff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ElapsedTimeSeconds</name>
      <anchorfile>class_profiler_block.html</anchorfile>
      <anchor>aca684dccd217069144a84b7b24ae306a</anchor>
      <arglist>(const s64 &amp;start, const s64 &amp;end)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ProfilerBlock</name>
      <anchorfile>class_profiler_block.html</anchorfile>
      <anchor>ab71489ba6f4d07133fbbafef944867f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>s64</type>
      <name>start_time_</name>
      <anchorfile>class_profiler_block.html</anchorfile>
      <anchor>ac1bca760b5f1510a308bb8635a286c92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>s64</type>
      <name>end_time_</name>
      <anchorfile>class_profiler_block.html</anchorfile>
      <anchor>a4b935905513e4e6de821eed2387ae5d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>s64</type>
      <name>time_elapsed_</name>
      <anchorfile>class_profiler_block.html</anchorfile>
      <anchor>a26a08962648302d98a6402b124d969ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ProfilerNode</name>
      <anchorfile>class_profiler_block.html</anchorfile>
      <anchor>a4d5f9ba5798420d62f60997c31f58d96</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ProfilerNode</name>
    <filename>class_profiler_node.html</filename>
    <base>ProfilerNodeTree</base>
    <member kind="typedef">
      <type>std::list&lt; boost::shared_ptr&lt; ProfilerNodeTree &gt; &gt;</type>
      <name>NodeList</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>a56590b76132344e3bcadbba569584bc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProfilerNode</name>
      <anchorfile>class_profiler_node.html</anchorfile>
      <anchor>ac7491dc602a1f8d80c6cd7c73c461ac4</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ProfilerNode</name>
      <anchorfile>class_profiler_node.html</anchorfile>
      <anchor>acc345599aa5f75dff25fb4287da6af8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetValues</name>
      <anchorfile>class_profiler_node.html</anchorfile>
      <anchor>aa90478274c377c6aa6adfff44e0514cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>TotalCustomSpentInChildren</name>
      <anchorfile>class_profiler_node.html</anchorfile>
      <anchor>a493fa1e8c5a6ba2fe2cfe315231933c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveThreadRootBlock</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>a7608d3700c2e381ada76050aea9bd888</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddChild</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>ae2f43021961ef59c216d01b6a5647e49</anchor>
      <arglist>(boost::shared_ptr&lt; ProfilerNodeTree &gt; node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveChild</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>a5559543a404a72978567ea23297e3e3d</anchor>
      <arglist>(ProfilerNodeTree *node)</arglist>
    </member>
    <member kind="function">
      <type>ProfilerNodeTree *</type>
      <name>GetChild</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>af3c94bbb27dbf89ec3a5877dd17f3dca</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>Name</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>ac25a637e909cdcf9bb3fcf1280959f24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ProfilerNodeTree *</type>
      <name>Parent</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>a26cbdc1c7fd025a16c3da3da2c1711c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const NodeList &amp;</type>
      <name>GetChildren</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>ac07399c53e9b373f666a52240647a195</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NodeList &amp;</type>
      <name>GetChildren</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>ae10ac1e85538899ea03a34beefd86b92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MarkAsRootBlock</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>ac40ba10172ea2e85410e8c296a0ba716</anchor>
      <arglist>(Profiler *owner)</arglist>
    </member>
    <member kind="variable">
      <type>unsigned long</type>
      <name>num_called_total_</name>
      <anchorfile>class_profiler_node.html</anchorfile>
      <anchor>a15cca6a09c017b5c46d0e1cf678960e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned long</type>
      <name>num_called_</name>
      <anchorfile>class_profiler_node.html</anchorfile>
      <anchor>a46df468ff2dcbc4303c6361889d633ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>total_</name>
      <anchorfile>class_profiler_node.html</anchorfile>
      <anchor>ac704cd980ec9111c35ffe1fc9e2a827c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>elapsed_</name>
      <anchorfile>class_profiler_node.html</anchorfile>
      <anchor>a3f15317424226a0209a0bd5d53548a82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>elapsed_min_</name>
      <anchorfile>class_profiler_node.html</anchorfile>
      <anchor>a4f1b53fcd14733c89d470f0bca618ca4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>elapsed_max_</name>
      <anchorfile>class_profiler_node.html</anchorfile>
      <anchor>a44cf9543449c84457c8ba976214265b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned long</type>
      <name>num_called_custom_</name>
      <anchorfile>class_profiler_node.html</anchorfile>
      <anchor>afda1cbf1bf3df391fadd0d8ec0768816</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>total_custom_</name>
      <anchorfile>class_profiler_node.html</anchorfile>
      <anchor>af95167f5fd4f4f9d9cbe0121e9a735b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>custom_elapsed_min_</name>
      <anchorfile>class_profiler_node.html</anchorfile>
      <anchor>a3e3c92b7e35b555dacef45d8dc86458e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>custom_elapsed_max_</name>
      <anchorfile>class_profiler_node.html</anchorfile>
      <anchor>a822fe3ae9b3b0f2856314cba8a4998b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ProfilerNode</name>
      <anchorfile>class_profiler_node.html</anchorfile>
      <anchor>a0b217f96de5c62193c575d2c9bc89867</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ProfilerNode</name>
      <anchorfile>class_profiler_node.html</anchorfile>
      <anchor>a57c38b4ba70de4b6937d1895a6668fb6</anchor>
      <arglist>(const ProfilerNode &amp;rhs)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned long</type>
      <name>num_called_current_</name>
      <anchorfile>class_profiler_node.html</anchorfile>
      <anchor>a97ce831a3705a27e4d1fa032cf0fe4ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>elapsed_current_</name>
      <anchorfile>class_profiler_node.html</anchorfile>
      <anchor>abf8261f2394e5b69e49f307e16867f60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>elapsed_min_current_</name>
      <anchorfile>class_profiler_node.html</anchorfile>
      <anchor>a5c84b76e8bedc8350a1073e684f46144</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>elapsed_max_current_</name>
      <anchorfile>class_profiler_node.html</anchorfile>
      <anchor>ac786f0fb6930ae5275d7860f96866019</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ProfilerBlock</type>
      <name>block_</name>
      <anchorfile>class_profiler_node.html</anchorfile>
      <anchor>ab5ac19ae04c09f43aab524e255eda83d</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Profiler</name>
      <anchorfile>class_profiler_node.html</anchorfile>
      <anchor>ad73e5645d5b7b84a00d4a5d07b8d8078</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ProfilerNodeTree</name>
    <filename>class_profiler_node_tree.html</filename>
    <member kind="typedef">
      <type>std::list&lt; boost::shared_ptr&lt; ProfilerNodeTree &gt; &gt;</type>
      <name>NodeList</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>a56590b76132344e3bcadbba569584bc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProfilerNodeTree</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>a04a078ec48530e800e12801a0421a83b</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ProfilerNodeTree</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>a997231e727604b8fcc180af9f870adba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveThreadRootBlock</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>a7608d3700c2e381ada76050aea9bd888</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ResetValues</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>a5f74fa014d6b786c8a298d1cdaaf75b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddChild</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>ae2f43021961ef59c216d01b6a5647e49</anchor>
      <arglist>(boost::shared_ptr&lt; ProfilerNodeTree &gt; node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveChild</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>a5559543a404a72978567ea23297e3e3d</anchor>
      <arglist>(ProfilerNodeTree *node)</arglist>
    </member>
    <member kind="function">
      <type>ProfilerNodeTree *</type>
      <name>GetChild</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>af3c94bbb27dbf89ec3a5877dd17f3dca</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>Name</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>ac25a637e909cdcf9bb3fcf1280959f24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ProfilerNodeTree *</type>
      <name>Parent</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>a26cbdc1c7fd025a16c3da3da2c1711c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const NodeList &amp;</type>
      <name>GetChildren</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>ac07399c53e9b373f666a52240647a195</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NodeList &amp;</type>
      <name>GetChildren</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>ae10ac1e85538899ea03a34beefd86b92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MarkAsRootBlock</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>ac40ba10172ea2e85410e8c296a0ba716</anchor>
      <arglist>(Profiler *owner)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ProfilerNodeTree</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>a6b0724ea39d774163f88dd005bb18cce</anchor>
      <arglist>(const ProfilerNodeTree &amp;rhs)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>NodeList</type>
      <name>children_</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>a8c9ca7a6d298dd8a0329d94c4b4a5813</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ProfilerNodeTree *</type>
      <name>parent_</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>adc77f4ad562455f3e086af3a581cbdc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Profiler *</type>
      <name>owner_</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>a9937eabb20ff5f35c69c58e91516372e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const std::string</type>
      <name>name_</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>afb60b55e507f30a91fb4cfe9451be381</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>recursion_</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>a726d6017116b7972bfa8f5e2005a3ca6</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Profiler</name>
      <anchorfile>class_profiler_node_tree.html</anchorfile>
      <anchor>ad73e5645d5b7b84a00d4a5d07b8d8078</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ProfilerQObj</name>
    <filename>class_profiler_q_obj.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>BeginBlock</name>
      <anchorfile>class_profiler_q_obj.html</anchorfile>
      <anchor>af6533785459b85643347ecbeb485bba4</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EndBlock</name>
      <anchorfile>class_profiler_q_obj.html</anchorfile>
      <anchor>a5d36287dddd1f8901f62c071d426238c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ProfilerSection</name>
    <filename>class_profiler_section.html</filename>
    <member kind="function">
      <type></type>
      <name>ProfilerSection</name>
      <anchorfile>class_profiler_section.html</anchorfile>
      <anchor>a3ea122cd4073da3be1a7b611962baa84</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ProfilerSection</name>
      <anchorfile>class_profiler_section.html</anchorfile>
      <anchor>ad3621108a3a92855278c739a0db04189</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>__inline void</type>
      <name>Destruct</name>
      <anchorfile>class_profiler_section.html</anchorfile>
      <anchor>aa3e8d360d547f029d5668f8c56e7f144</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Profiler *</type>
      <name>GetProfiler</name>
      <anchorfile>class_profiler_section.html</anchorfile>
      <anchor>a0cf88247b749687ef4dd074808ef0ab4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ProfilerSection</name>
      <anchorfile>class_profiler_section.html</anchorfile>
      <anchor>a208c4d3440c4b42bea34f77d22399768</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ProfilerSection</name>
      <anchorfile>class_profiler_section.html</anchorfile>
      <anchor>a28f4affdb9ab352403db5d26b6f8304b</anchor>
      <arglist>(const ProfilerSection &amp;rhs)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const std::string</type>
      <name>name_</name>
      <anchorfile>class_profiler_section.html</anchorfile>
      <anchor>a7b7cfaa57105c1a39044a12ecdda9053</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>destroyed_</name>
      <anchorfile>class_profiler_section.html</anchorfile>
      <anchor>a2c10bcd50318e5795be59d97751936c4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>QStringLessThanNoCase</name>
    <filename>class_q_string_less_than_no_case.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>class_q_string_less_than_no_case.html</anchorfile>
      <anchor>abdb1f78c32adc15e1676e58497e80709</anchor>
      <arglist>(const QString &amp;a, const QString b) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>QtUiAsset</name>
    <filename>class_qt_ui_asset.html</filename>
    <base>IAsset</base>
    <class kind="struct">QtUiAsset::AssetRef</class>
    <member kind="slot">
      <type>QByteArray</type>
      <name>GetRefReplacedAssetData</name>
      <anchorfile>class_qt_ui_asset.html</anchorfile>
      <anchor>a2dcfe53d66a5519db44e27fdbfa2defc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsLoaded</name>
      <anchorfile>class_qt_ui_asset.html</anchorfile>
      <anchor>a9f7b583d2f70040384e5e5b59f1dc94c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QWidget *</type>
      <name>Instantiate</name>
      <anchorfile>class_qt_ui_asset.html</anchorfile>
      <anchor>ae963fc25ffeb76cc62808b658270797b</anchor>
      <arglist>(bool addToScene, QWidget *parent)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>Type</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1ee38592ddb9473b2824a6d39268465f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>Name</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0c3aedda2f04b27a77f90da3cf44eed6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetDiskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a65037aa4ef8ec83d976afd83253f6234</anchor>
      <arglist>(QString diskSource)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>DiskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a21607e4493b017999f35189d82a1587b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>LoadFromFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a6a204f512b26f20f49e7fda9ddfe15ed</anchor>
      <arglist>(QString filename)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>LoadFromCache</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ac1f56599756004172408ff0c40079ab6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Unload</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ab230fc35705c702c9ecf359930b6693f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>afa0a8684b67098c0694e71f1677a6fd0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual AssetPtr</type>
      <name>Clone</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a8bfd7618fbf62b20e106f81cb7648ddb</anchor>
      <arglist>(QString newAssetName) const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual bool</type>
      <name>SaveToFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a43ee1d3d1c9bc8eac79811d2900ed8cf</anchor>
      <arglist>(const QString &amp;filename, const QString &amp;serializationParameters=&quot;&quot;) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SaveCachedCopyToFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>af74f5e730e370db0e54a9cf7308ea32e</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="slot">
      <type>AssetStoragePtr</type>
      <name>GetAssetStorage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a9fd4b8a3353601b0ff47e9042e1e45e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>AssetProviderPtr</type>
      <name>GetAssetProvider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1968beba15e2f64b8aa356261bbe8eec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>ToString</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1ad41ad9fdcc0f036f786e0d0cc1259c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QByteArray</type>
      <name>GetRawData</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a827ca46bb695958627e1e63d7feb0424</anchor>
      <arglist>(const QString serializationParameters=&quot;&quot;) const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Unloaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a51e04b4100d7bdb620c6f0ae440d5f54</anchor>
      <arglist>(IAsset *asset)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Loaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0bf19c4b11e18f5925285231334aa054</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>QtUiAsset</name>
      <anchorfile>class_qt_ui_asset.html</anchorfile>
      <anchor>a5d92f523e42c287094c3c0a7af7f4432</anchor>
      <arglist>(AssetAPI *owner, const QString &amp;type_, const QString &amp;name_)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~QtUiAsset</name>
      <anchorfile>class_qt_ui_asset.html</anchorfile>
      <anchor>a16dc44e2d2a1e49cedf4f6e8dc4de7b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>DeserializeFromData</name>
      <anchorfile>class_qt_ui_asset.html</anchorfile>
      <anchor>a2e39f4e8fd86e58ecfef78cd6ffadf6d</anchor>
      <arglist>(const u8 *data, size_t numBytes, const bool allowAsynchronous)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SerializeTo</name>
      <anchorfile>class_qt_ui_asset.html</anchorfile>
      <anchor>af8cb4134c27e4d93ef1bb9ad8fac3548</anchor>
      <arglist>(std::vector&lt; u8 &gt; &amp;data, const QString &amp;serializationParameters=&quot;&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; AssetReference &gt;</type>
      <name>FindReferences</name>
      <anchorfile>class_qt_ui_asset.html</anchorfile>
      <anchor>aa17275cdfd38409054a3e052f04dcac5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFromFileInMemory</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a76fae2e679dc173de78d3dbe2d7b04e3</anchor>
      <arglist>(const u8 *data, size_t numBytes, bool allowAsynchronous=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadCompleted</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a156e1f8df2f868412c3278f27aab16af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DependencyLoaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a8db3fb94d1bd73e184bf3b4e5d0c7153</anchor>
      <arglist>(AssetPtr dependee)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; AssetReference &gt;</type>
      <name>FindReferencesRecursive</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a43661820be04bb6898b0f6e0c1e60a9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAssetProvider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ab909dddbde3614b811908174a10ddf59</anchor>
      <arglist>(AssetProviderPtr provider)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAssetStorage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ad7cb7c54d73a2677f242dcd318791ce9</anchor>
      <arglist>(AssetStoragePtr storage)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetAPI *</type>
      <name>assetAPI</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>acfa90de1e91d33066b10e9a983d7f706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetProviderWeakPtr</type>
      <name>provider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a34182317435ed01abcfa86fd1a523a4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetStorageWeakPtr</type>
      <name>storage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0d7711709ea3a5d74097c36eeb53acce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>type</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a9a2cbc25b81810fa610da6a686fd5d03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a19e035f9cfe2559d8ea38c331ca9acfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>diskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ad8db45ff366bec21d66c9f853f0bde67</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>DoUnload</name>
      <anchorfile>class_qt_ui_asset.html</anchorfile>
      <anchor>a0b75eb1cf6472087851af57ba1a6b6b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; AssetRef &gt;</type>
      <name>refs</name>
      <anchorfile>class_qt_ui_asset.html</anchorfile>
      <anchor>a052b0ff1be693d78e207c89679a963f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; u8 &gt;</type>
      <name>originalData</name>
      <anchorfile>class_qt_ui_asset.html</anchorfile>
      <anchor>aa42461335517f9fcd7add42d511f593f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>QtUiAsset::AssetRef</name>
    <filename>struct_qt_ui_asset_1_1_asset_ref.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>index</name>
      <anchorfile>struct_qt_ui_asset_1_1_asset_ref.html</anchorfile>
      <anchor>a5746ff94e61dd3b76bc860ab0f436712</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>length</name>
      <anchorfile>struct_qt_ui_asset_1_1_asset_ref.html</anchorfile>
      <anchor>acd3d95f9b4572004aa39f09161879cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>parsedRef</name>
      <anchorfile>struct_qt_ui_asset_1_1_asset_ref.html</anchorfile>
      <anchor>a33cd68f01d2caac28b94c5b22070ab94</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Quat</name>
    <filename>class_quat.html</filename>
    <member kind="function">
      <type></type>
      <name>Quat</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>afe432f2aac598c876a51b16dce29aa13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Quat</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>aee21b25254dd0d4638a9def7ca86d44e</anchor>
      <arglist>(const Quat &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Quat</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>afe12e3c30d24bb480db899adbf7a922c</anchor>
      <arglist>(const float *data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Quat</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a538923d790309d926cfa4c22b60a99be</anchor>
      <arglist>(const float3x3 &amp;rotationMatrix)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Quat</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>aeaf94761a22836e7eef0350c813a50ac</anchor>
      <arglist>(const float3x4 &amp;rotationMatrix)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Quat</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a368b2e3b0b3f0695c70ef8c26b108a34</anchor>
      <arglist>(const float4x4 &amp;rotationMatrix)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Quat</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>aee6d96df262aa9a4057687150487335f</anchor>
      <arglist>(float x, float y, float z, float w)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Quat</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a6ef8e718caef9d6f758ff2c5c29f323e</anchor>
      <arglist>(const float3 &amp;rotationAxis, float rotationAngleRadians)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>WorldX</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>ad58cea56fccddd465c9632c720ef11c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>WorldY</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a3e87586f47584a3d307f748789875bf8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>WorldZ</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a51138979389e1fb8e854af0adaba7c26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Axis</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a520f79d3e9fc32bad3cbc26c1866b357</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Angle</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>afbda0e5f4adc66231e0eae6e94294953</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Dot</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a6b24d6d69c7c74568c020a84c196b135</anchor>
      <arglist>(const Quat &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>LengthSq</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a777aa9745bcf77aa838ad10a1efccd3b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Length</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>abd807aaa6f64a63fe8d67f22dfe160aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Normalize</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a85a480602cedfd6543ac428db8ad2d14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>Normalized</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a21892cd4d1788963154dbb37f9184e67</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNormalized</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a048a0e91e83a78e069ac84793cccf1dd</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsInvertible</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a32d8c5f2e20f84cab13ae0d2d9c80cd0</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFinite</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a9c130317897d679f8bffa295ff0e8a30</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Equals</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>aca001c1c735a3e969402a1c1c8073d26</anchor>
      <arglist>(const Quat &amp;rhs, float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>float *</type>
      <name>ptr</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>ad1ec8c3cb121bbee9d4e5a7082d328a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const float *</type>
      <name>ptr</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a53ab9abdbf511b9f195ada8e8bfeb4a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Inverse</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a1bd4058a0acac5a54ebb05d51bc89710</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>Inverted</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>abcbbef9f8c398a5306804d2f21217a8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>InverseAndNormalize</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>acdac9573f74d736a5da90aba36168765</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Conjugate</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>adddd4f2e270b3987534339b2d0fd688a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>Conjugated</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a205824848ad12cb10fcb8c6c06c50af7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Transform</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>afc6d8d40e16934c00f4e783f8fc24f2e</anchor>
      <arglist>(float x, float y, float z) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Transform</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a4777d1213b7f19420acab540f8ecad04</anchor>
      <arglist>(const float3 &amp;vec) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Transform</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>aa5a27b54248ee691236d59a3d6771ff2</anchor>
      <arglist>(const float4 &amp;vec) const </arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>Lerp</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>ac5dcff83678a90c1c1693f325ea1e463</anchor>
      <arglist>(const Quat &amp;target, float t) const </arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>Slerp</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>aa63fddf35c3e057ab27a56243df80792</anchor>
      <arglist>(const Quat &amp;target, float t) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>AngleBetween</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a0cf7e6775bab35047166c3c29581542f</anchor>
      <arglist>(const Quat &amp;target) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>AxisFromTo</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>ad0525458bb779a740ae458665315f699</anchor>
      <arglist>(const Quat &amp;target) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToAxisAngle</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a22e86b4766c1b9d8d8c8c9c53ec85e72</anchor>
      <arglist>(float3 &amp;rotationAxis, float &amp;rotationAngleRadians) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFromAxisAngle</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>aeedcfb4b771a06d132dccb5832b08e67</anchor>
      <arglist>(const float3 &amp;rotationAxis, float rotationAngleRadians)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a94d576fcd7bb7d1e85f79e8513c6d160</anchor>
      <arglist>(const float3x3 &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a7f5d35eea94d145d273f7985463589ae</anchor>
      <arglist>(const float3x4 &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a522d43d1e5f3d87d67723bd2782a7ab0</anchor>
      <arglist>(const float4x4 &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>abca8ac0233d2d5f2ba3c97dde35ca696</anchor>
      <arglist>(float x, float y, float z, float w)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerXYX</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a3ac1f39a0683f284d9ae1a06fa4832a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerXZX</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a426f692381b6068fcfcd6af9aed3bbfa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerYXY</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a888a08575ab522afef5e653cb3b13069</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerYZY</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a5245d6d73369557d525f7632320aa89a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerZXZ</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a62bf836fe408dab67f6c51feae4749cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerZYZ</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>ae0fe18fcfb54a48ed543e2a3f5f13c58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerXYZ</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>ad1c4d694a32caded333e31a24e9d9f3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerXZY</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a657692f31e3fac72b1b7ba575f84ab59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerYXZ</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>afd4cabddd65fb245eb292bbfd8114c13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerYZX</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a878d3b6839b97bfe045fcb0275921fc0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerZXY</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>aac95d976f0da7ec68a922abfc22286e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ToEulerZYX</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>afa6bb6769a02b68e21d15881ffe66316</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>ToFloat3x3</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a704e400131ef6d7c6faace8e5a794241</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>ToFloat3x4</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a8c0b9f7c8453158b3bc02eb94c3256bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>ToFloat4x4</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>acc172c52c46dd1a8017489cd3b523e4e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>operator*</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a667de8cc5d16a89e6ed7295b2776abbc</anchor>
      <arglist>(const Quat &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator*</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a8ffaa448dc8f3e7bed8b947f3993998e</anchor>
      <arglist>(const float3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>operator/</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a2fb917f4fa7cffc0be76fadc395f30ac</anchor>
      <arglist>(const Quat &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Quat</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>abdbf011f63d05bf0ed938809594f012b</anchor>
      <arglist>(const QQuaternion &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator QQuaternion</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>ae14835b90f13b33bae2528b52eeabd6c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator QString</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>ae5051d8496264e3fca1b5ae3b99ce171</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>toString</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a036e9f125e5d8d2b05db0596374d4e31</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QQuaternion</type>
      <name>ToQQuaternion</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>aea307120f6bdeb9b2ec5d684b045e5b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>Mul</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a0dca7d9dac5c9da53d2c4f638108b27b</anchor>
      <arglist>(const Quat &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>Mul</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>aba602043c5351aeb1a7c2a26ced4456b</anchor>
      <arglist>(const float3x3 &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Mul</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a8b7511266f778b48f8afaf4e5be68adb</anchor>
      <arglist>(const float3 &amp;vector) const </arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Mul</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a44f775014db56fd6c2498b5f6b7e723b</anchor>
      <arglist>(const float4 &amp;vector) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>Lerp</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a8f2e2d31b1b12fff65b8d515d15dbdc2</anchor>
      <arglist>(const Quat &amp;source, const Quat &amp;target, float t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>Slerp</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a844f56ec5305ddff2453b797b94ca355</anchor>
      <arglist>(const Quat &amp;source, const Quat &amp;target, float t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>LookAt</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>af297f22ef5dc3215ad1b8702e6c34ab5</anchor>
      <arglist>(const float3 &amp;localForward, const float3 &amp;targetDirection, const float3 &amp;localUp, const float3 &amp;worldUp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>RotateX</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a0e4c80860506466c4b0c1370d1bae581</anchor>
      <arglist>(float angleRadians)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>RotateY</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a26f12042e280d1f0cd61dc0187ecafb3</anchor>
      <arglist>(float angleRadians)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>RotateZ</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a553e0cfd1e114106e2c165c241b15b34</anchor>
      <arglist>(float angleRadians)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>RotateAxisAngle</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>ae38b901de671870af2ebc6f240094661</anchor>
      <arglist>(const float3 &amp;axisDirection, float angleRadians)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>RotateFromTo</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>abd90363830eb8ab9ddcb3aff4352eeac</anchor>
      <arglist>(const float3 &amp;sourceDirection, const float3 &amp;targetDirection)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>RotateFromTo</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>af7007214c529a0060f55c506027bee49</anchor>
      <arglist>(const float3 &amp;sourceDirection, const float3 &amp;targetDirection, const float3 &amp;sourceDirection2, const float3 &amp;targetDirection2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>FromEulerXYX</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a9509aae4b45450bd583fea673e83445a</anchor>
      <arglist>(float x2, float y, float x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>FromEulerXZX</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>af7e61e10176e936781894bb746556680</anchor>
      <arglist>(float x2, float z, float x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>FromEulerYXY</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a78b32ddee4fc0d1945879ea6a08a7d9b</anchor>
      <arglist>(float y2, float x, float y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>FromEulerYZY</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>abb46dffe428ba7f8eafc44932e3c54a4</anchor>
      <arglist>(float y2, float z, float y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>FromEulerZXZ</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a4820334da6f1270e67101f2f7e70c5cd</anchor>
      <arglist>(float z2, float x, float z)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>FromEulerZYZ</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a92cb4f1dc174ac241787f6730ba5cbd0</anchor>
      <arglist>(float z2, float y, float z)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>FromEulerXYZ</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>ac36126451dd918e00dd3594e3b79b60f</anchor>
      <arglist>(float x, float y, float z)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>FromEulerXZY</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>aa6b4bbd9e46eb9a17361213df4241ca4</anchor>
      <arglist>(float x, float z, float y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>FromEulerYXZ</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a2989fc94494d0dfaa412e3328dd8266b</anchor>
      <arglist>(float y, float x, float z)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>FromEulerYZX</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>acf8254f298b48eb3bcb91307b5ecdd05</anchor>
      <arglist>(float y, float z, float x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>FromEulerZXY</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>ad5e5524ff0a813a8387009e38622382e</anchor>
      <arglist>(float z, float x, float y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>FromEulerZYX</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>abd8b6c2b86d7a510ce9935a4926fc224</anchor>
      <arglist>(float z, float y, float x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>RandomRotation</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a767a11e665ab1602fb76ccbbf6a67e2f</anchor>
      <arglist>(LCG &amp;lcg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>FromString</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a59224a7f05205361b41e66e389840266</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>FromQQuaternion</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>adb7361cb176a856f817fe28ff822fbbe</anchor>
      <arglist>(const QQuaternion &amp;q)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>FromString</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a9822952121690766c72e12c2886d524c</anchor>
      <arglist>(const QString &amp;str)</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a15db053bd6750a53e33bf30a0250c288</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>ac6045ee4149a978a4ce429c132e46fa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a611fbb79f7b802da4f1c65a31c2c5fea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>w</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>ad3aeee2134443ec0897793834209b0c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Quat</type>
      <name>identity</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>ad86f5f7cfef6582f26537209a0441e12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Quat</type>
      <name>nan</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a39a1a9bacd05ae7c12a1840ad00025cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>Quat</type>
      <name>operator*</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a82b64e3282e84cda04f05db06bd4f962</anchor>
      <arglist>(float scalar) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Quat</type>
      <name>operator/</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a6c5d901289ae6633210a67fec60d7333</anchor>
      <arglist>(float scalar) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Quat</type>
      <name>operator+</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a5949c59ffd10abf894f113ba53d62f38</anchor>
      <arglist>(const Quat &amp;rhs) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Quat</type>
      <name>operator-</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>ab3a9109cd4527c66c2ead2fdc8533301</anchor>
      <arglist>(const Quat &amp;rhs) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Quat</type>
      <name>operator-</name>
      <anchorfile>class_quat.html</anchorfile>
      <anchor>a01739a8b02cd7279dfe83a836bf058ec</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Ray</name>
    <filename>class_ray.html</filename>
    <member kind="function">
      <type></type>
      <name>Ray</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a2e3d2c29f2df4ab3da10da79d4acb852</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Ray</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a6d03009cd3a6fa3c92cfba9bb1678558</anchor>
      <arglist>(const float3 &amp;pos, const float3 &amp;dir)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Ray</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a51a12d30825907bf7a7f1fd80e5fce70</anchor>
      <arglist>(const Line &amp;line)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Ray</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a005e3c7d50917fe188662ca7034f8f64</anchor>
      <arglist>(const LineSegment &amp;lineSegment)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>GetPoint</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a81ca5d12b91229f4a518558b54437126</anchor>
      <arglist>(float distance) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>ad87a8d115bb679496404507ea3396c92</anchor>
      <arglist>(const float3x3 &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a84ea505f5885f7b610a94737c65078d8</anchor>
      <arglist>(const float3x4 &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a41e125a4fbcbf07b672b11b9f8b13347</anchor>
      <arglist>(const float4x4 &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a20dc67429f10765f1ccfd862e8ef6784</anchor>
      <arglist>(const Quat &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Contains</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>acb8f0d1c74157c76813bac06992df68f</anchor>
      <arglist>(const float3 &amp;point, float distanceThreshold=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>ab76b09a6bfa55298501059ebe38a3186</anchor>
      <arglist>(const float3 &amp;point, float *d=0) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>aa7a9c1858781a26b882418fbbe2ee03b</anchor>
      <arglist>(const Ray &amp;other, float *d=0, float *d2=0) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a0447fda528bcadac187c175e36bdeaef</anchor>
      <arglist>(const Line &amp;other, float *d=0, float *d2=0) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>aedb7ab29bae0e6fda165b3062fdc7009</anchor>
      <arglist>(const LineSegment &amp;other, float *d=0, float *d2=0) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ClosestPoint</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a5736d568a9b5380af2aaa7ec7bb5feb5</anchor>
      <arglist>(const float3 &amp;targetPoint, float *d=0) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ClosestPoint</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a053e6d63f1688d61d5b1168d0b6e6380</anchor>
      <arglist>(const Ray &amp;other, float *d=0, float *d2=0) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ClosestPoint</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a84f7f9bc6357dbbed72ededf96dec646</anchor>
      <arglist>(const Line &amp;other, float *d=0, float *d2=0) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ClosestPoint</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a7c6e34651192b14db8a849570f0be002</anchor>
      <arglist>(const LineSegment &amp;other, float *d=0, float *d2=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a351e3042c2ca2b21e71eba7fa80fed24</anchor>
      <arglist>(const Triangle &amp;triangle, float *d, float3 *intersectionPoint) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>afff8c19787ff4f2e87a711adffd09632</anchor>
      <arglist>(const Triangle &amp;triangle) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a62b2e37ae6006e4e9a5c59d9f50195c2</anchor>
      <arglist>(const Plane &amp;plane, float *d) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a13614445655775f89abf145bafb3f652</anchor>
      <arglist>(const Plane &amp;plane) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a0878758fa47e0fa98c26ebcc314db9b1</anchor>
      <arglist>(const Sphere &amp;s, float3 *intersectionPoint, float3 *intersectionNormal, float *d) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>ad8ecb3394c7b7e515077355539869bd3</anchor>
      <arglist>(const Sphere &amp;s) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a9ae03805415131d691258aa551adc97b</anchor>
      <arglist>(const AABB &amp;aabb, float *dNear, float *dFar) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a07a83b2ff4b79bc2dab6ffc2fbaf9fc5</anchor>
      <arglist>(const AABB &amp;aabb) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a4f9e5aafeebeec8185b2671d38661156</anchor>
      <arglist>(const OBB &amp;obb, float *dNear, float *dFar) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a9cf27330e2600497fc1a6105763d6e83</anchor>
      <arglist>(const OBB &amp;obb) const </arglist>
    </member>
    <member kind="function">
      <type>Line</type>
      <name>ToLine</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a8f2b0002cc010399519a8e0199f22844</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LineSegment</type>
      <name>ToLineSegment</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a0452715e438cc6cd494d87f492c9d193</anchor>
      <arglist>(float d) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator QString</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a17839b4bebb7ebf8e2df9e219a5c9019</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>toString</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a5817fbd1a750b4916f703fc6d69ffff4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>pos</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>a9f3d1739df0ef482f670b1408d11329b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>dir</name>
      <anchorfile>class_ray.html</anchorfile>
      <anchor>adb316c7a3d9ec022ca0a75ded7a88611</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RaycastResult</name>
    <filename>class_raycast_result.html</filename>
    <member kind="function">
      <type>Entity *</type>
      <name>getentity</name>
      <anchorfile>class_raycast_result.html</anchorfile>
      <anchor>a7d9e51dfef4d78089234a47c0431554f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>getpos</name>
      <anchorfile>class_raycast_result.html</anchorfile>
      <anchor>a8c06fce37a08b9f2708c7b4b9e5322d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>getnormal</name>
      <anchorfile>class_raycast_result.html</anchorfile>
      <anchor>a45cf57f28225961bdc4188ed499647f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>getsubmesh</name>
      <anchorfile>class_raycast_result.html</anchorfile>
      <anchor>a3378f66d0437949bd3ef928a459c7aec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>getindex</name>
      <anchorfile>class_raycast_result.html</anchorfile>
      <anchor>a977b7b717cfcc036d3ee6632767e2295</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getu</name>
      <anchorfile>class_raycast_result.html</anchorfile>
      <anchor>a128d7079b5916bd4f69791a8427dfaf1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getv</name>
      <anchorfile>class_raycast_result.html</anchorfile>
      <anchor>a57552a9a2d393b75b3afe7e03b3aa692</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="property">
      <type>Entity</type>
      <name>entity</name>
      <anchorfile>class_raycast_result.html</anchorfile>
      <anchor>a69b24ce787a4a349165f4565ef403551</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float3</type>
      <name>pos</name>
      <anchorfile>class_raycast_result.html</anchorfile>
      <anchor>ae417c663215f58015576db740eb6c4d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float3</type>
      <name>normal</name>
      <anchorfile>class_raycast_result.html</anchorfile>
      <anchor>a7114e76c594ed61f727e726f76445be3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>unsigned</type>
      <name>submesh</name>
      <anchorfile>class_raycast_result.html</anchorfile>
      <anchor>a495a427f3579e0ebc1306fe7768014cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>unsigned</type>
      <name>index</name>
      <anchorfile>class_raycast_result.html</anchorfile>
      <anchor>aafce81ea99373dc41cac4920426aecb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>u</name>
      <anchorfile>class_raycast_result.html</anchorfile>
      <anchor>ae74d243b3744ea2bc06cb7ee1e29ea12</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>float</type>
      <name>v</name>
      <anchorfile>class_raycast_result.html</anchorfile>
      <anchor>ad75b6d07f221f143b2780bb5679ac099</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>Entity *</type>
      <name>entity</name>
      <anchorfile>class_raycast_result.html</anchorfile>
      <anchor>a67dff91f411caaa7328c2239cd4cc2a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rect</name>
    <filename>class_rect.html</filename>
    <member kind="function">
      <type></type>
      <name>Rect</name>
      <anchorfile>class_rect.html</anchorfile>
      <anchor>a911e531b86de33734dd7de3456722115</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Rect</name>
      <anchorfile>class_rect.html</anchorfile>
      <anchor>a07bda43ddfcc2a3587f6f466ecb6e5ee</anchor>
      <arglist>(int left_, int top_, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Width</name>
      <anchorfile>class_rect.html</anchorfile>
      <anchor>ae220661d52f3439c31cdd3a412432520</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Height</name>
      <anchorfile>class_rect.html</anchorfile>
      <anchor>a0ef39dd5bbe303fc06c4418c1a4839d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>left</name>
      <anchorfile>class_rect.html</anchorfile>
      <anchor>ab0841a51d249d8560ddca36054fd1e57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>top</name>
      <anchorfile>class_rect.html</anchorfile>
      <anchor>abb300f9f75fcb27d2a27ae5e260d2ed2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>right</name>
      <anchorfile>class_rect.html</anchorfile>
      <anchor>aedfb34dad0634ee71105ddfd2c885243</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bottom</name>
      <anchorfile>class_rect.html</anchorfile>
      <anchor>a34f470ffa9b5f83ad3be7764ebd403b4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RedirectedPaintWidget</name>
    <filename>class_redirected_paint_widget.html</filename>
    <member kind="function">
      <type></type>
      <name>RedirectedPaintWidget</name>
      <anchorfile>class_redirected_paint_widget.html</anchorfile>
      <anchor>a7ddd0966690b8d21e96b5356709a4b50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QPaintEngine *</type>
      <name>paintEngine</name>
      <anchorfile>class_redirected_paint_widget.html</anchorfile>
      <anchor>a1f836d0e707dab223cf3f969ebaef29b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>devType</name>
      <anchorfile>class_redirected_paint_widget.html</anchorfile>
      <anchor>acce0b710610d59c291a88cf860646a9b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResizeSurface</name>
      <anchorfile>class_redirected_paint_widget.html</anchorfile>
      <anchor>a76cb4a1a932c6cefc4c132d44810761f</anchor>
      <arglist>(QSize newSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resizeEvent</name>
      <anchorfile>class_redirected_paint_widget.html</anchorfile>
      <anchor>abc943a0068b493a35148147ad087018c</anchor>
      <arglist>(QResizeEvent *event)</arglist>
    </member>
    <member kind="variable">
      <type>QImage</type>
      <name>target</name>
      <anchorfile>class_redirected_paint_widget.html</anchorfile>
      <anchor>a32b8e48417807369e4f0bca72fef3b9c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RenderWindow</name>
    <filename>class_render_window.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>Resize</name>
      <anchorfile>class_render_window.html</anchorfile>
      <anchor>ad02a67c47e18b316c1643c93eab1a3fb</anchor>
      <arglist>(int newWidth, int newHeight)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RenderWindow</name>
      <anchorfile>class_render_window.html</anchorfile>
      <anchor>ac644ce5a7654e4cdbc5a644bd9e02952</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CreateRenderWindow</name>
      <anchorfile>class_render_window.html</anchorfile>
      <anchor>a859247272f5795d57cf984a2f464f536</anchor>
      <arglist>(QWidget *targetWindow, const QString &amp;name, int width, int height, int left, int top, bool fullscreen)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::RenderWindow *</type>
      <name>OgreRenderWindow</name>
      <anchorfile>class_render_window.html</anchorfile>
      <anchor>a959860affec0c8d9b59fddd7c1b163be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ogre::Overlay *</type>
      <name>OgreOverlay</name>
      <anchorfile>class_render_window.html</anchorfile>
      <anchor>ac8cb5e9b5b5c92b54bc2c4f8df9f53ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>OverlayTextureName</name>
      <anchorfile>class_render_window.html</anchorfile>
      <anchor>a1fcdff4f1e4a4067927d96d6ef254dae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateOverlayImage</name>
      <anchorfile>class_render_window.html</anchorfile>
      <anchor>a6401a82a55a5a115133aa6bb374dba18</anchor>
      <arglist>(const QImage &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowOverlay</name>
      <anchorfile>class_render_window.html</anchorfile>
      <anchor>aedd99d156e9d6749ed54b7bdb140c9bc</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CreateRenderTargetOverlay</name>
      <anchorfile>class_render_window.html</anchorfile>
      <anchor>a2a3fcf30169e512593389b432a760d35</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::RenderWindow *</type>
      <name>renderWindow</name>
      <anchorfile>class_render_window.html</anchorfile>
      <anchor>a79d8acf1a9b8067ff164334cb07ff654</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::Overlay *</type>
      <name>overlay</name>
      <anchorfile>class_render_window.html</anchorfile>
      <anchor>a0d4cd87ad11172b98315bd2095cac9f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::OverlayElement *</type>
      <name>overlayContainer</name>
      <anchorfile>class_render_window.html</anchorfile>
      <anchor>aca30ec9c18a393ce78f9a1db3ea46542</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RequestNewAssetDialog</name>
    <filename>class_request_new_asset_dialog.html</filename>
    <member kind="function">
      <type></type>
      <name>RequestNewAssetDialog</name>
      <anchorfile>class_request_new_asset_dialog.html</anchorfile>
      <anchor>a889cfb518342a73d4a330ffe4a8868e5</anchor>
      <arglist>(AssetAPI *assetApi, QWidget *parent=0, Qt::WindowFlags f=0)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>Source</name>
      <anchorfile>class_request_new_asset_dialog.html</anchorfile>
      <anchor>ac1bdce26bc69670d2c1f061986cb3253</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>Type</name>
      <anchorfile>class_request_new_asset_dialog.html</anchorfile>
      <anchor>a080a0d76678195c4d8abf35f0ccb1393</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>hideEvent</name>
      <anchorfile>class_request_new_asset_dialog.html</anchorfile>
      <anchor>a13bc08c9b0c356054f8ff9000d283c60</anchor>
      <arglist>(QHideEvent *e)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QLineEdit *</type>
      <name>sourceLineEdit</name>
      <anchorfile>class_request_new_asset_dialog.html</anchorfile>
      <anchor>a8bfe30227f24926be9e990a0aa9b99d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QComboBox *</type>
      <name>typeComboBox</name>
      <anchorfile>class_request_new_asset_dialog.html</anchorfile>
      <anchor>a62889776f3d62662fd973fe22a3fd2bf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ScaleOp</name>
    <filename>class_scale_op.html</filename>
    <member kind="function">
      <type></type>
      <name>ScaleOp</name>
      <anchorfile>class_scale_op.html</anchorfile>
      <anchor>ae2f5a1f5a207ff4402d474b75593e615</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScaleOp</name>
      <anchorfile>class_scale_op.html</anchorfile>
      <anchor>a496a35ef27dea0f982a994036dfea4ae</anchor>
      <arglist>(const float3 &amp;scale)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScaleOp</name>
      <anchorfile>class_scale_op.html</anchorfile>
      <anchor>ad92672ceb9c194e32d87c663bd71d870</anchor>
      <arglist>(float sx, float sy, float sz)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Offset</name>
      <anchorfile>class_scale_op.html</anchorfile>
      <anchor>a4ef78d08c7847217878a3178e7b4841f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator float3x3</name>
      <anchorfile>class_scale_op.html</anchorfile>
      <anchor>ac36b77f21d97f833e10ee1439a1cc53d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator float3x4</name>
      <anchorfile>class_scale_op.html</anchorfile>
      <anchor>a1b5d1e721c64a5f827745238be617b89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator float4x4</name>
      <anchorfile>class_scale_op.html</anchorfile>
      <anchor>af63a190465c06c91f6126c489f044d2a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>ToFloat3x3</name>
      <anchorfile>class_scale_op.html</anchorfile>
      <anchor>a1fcf0a5f88c9887470bb5e410fbfc23f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>ToFloat3x4</name>
      <anchorfile>class_scale_op.html</anchorfile>
      <anchor>a7bbf47249f8ed5f2c322d197b09d5ff3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>ToFloat4x4</name>
      <anchorfile>class_scale_op.html</anchorfile>
      <anchor>abe853ca2d356460ff8c07bdeecb5b8bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>class_scale_op.html</anchorfile>
      <anchor>afa11cb23584ea17857d81a0e7f5e433f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>class_scale_op.html</anchorfile>
      <anchor>ab7d208eea9b429c886fb008863f3e732</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z</name>
      <anchorfile>class_scale_op.html</anchorfile>
      <anchor>a26a4ab33855cb3e26a99e7e06c9bd966</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Scene</name>
    <filename>class_scene.html</filename>
    <member kind="typedef">
      <type>std::map&lt; entity_id_t, EntityPtr &gt;</type>
      <name>EntityMap</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>afbf4ad42b8df0d1a55b55d1a4ce17903</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EntityMap::iterator</type>
      <name>iterator</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a96e7d3996952eedac9027eee2203e74d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EntityMap::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a6bb97d2c5b0010a28f6940e449050f69</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>EntityPtr</type>
      <name>CreateEntity</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>ab1905dd10f82d6430eadb19468dac1a0</anchor>
      <arglist>(entity_id_t id=0, const QStringList &amp;components=QStringList(), AttributeChange::Type change=AttributeChange::Default, bool replicated=true, bool componentsReplicated=true)</arglist>
    </member>
    <member kind="slot">
      <type>EntityPtr</type>
      <name>CreateLocalEntity</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a1c1daa784d640cffe204351455f2c2c9</anchor>
      <arglist>(const QStringList &amp;components=QStringList(), AttributeChange::Type change=AttributeChange::Default, bool componentsReplicated=true)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>StartAttributeInterpolation</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>adc2b17441f011a19759037d80d8cc5d6</anchor>
      <arglist>(IAttribute *attr, IAttribute *endvalue, float length)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>EndAttributeInterpolation</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a52d4871adc87d41d5a3b88bc6f19970b</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EndAllAttributeInterpolations</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a76cc25722bffde63d33250e7f78c4faf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>UpdateAttributeInterpolations</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a0feeafc811dcd74acb46c52cd6afddf8</anchor>
      <arglist>(float frametime)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsInterpolating</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a2bbd2720cedade68965e872c08130d79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a8d1f8b5a5b6b6be866d48dfc1d98d8c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>SceneDesc</type>
      <name>CreateSceneDescFromXml</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>af32e442a02169d443f855c543ec00d93</anchor>
      <arglist>(const QString &amp;filename) const </arglist>
    </member>
    <member kind="slot">
      <type>SceneDesc</type>
      <name>CreateSceneDescFromXml</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a8791d0d5d95beb305b7381a56fea099b</anchor>
      <arglist>(QByteArray &amp;data, SceneDesc &amp;sceneDesc) const </arglist>
    </member>
    <member kind="slot">
      <type>SceneDesc</type>
      <name>CreateSceneDescFromBinary</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>adb7e4a0e8e3d9fb680e25d339c115dfc</anchor>
      <arglist>(const QString &amp;filename) const </arglist>
    </member>
    <member kind="slot">
      <type>SceneDesc</type>
      <name>CreateSceneDescFromBinary</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>abe01200dfcb67874e6e0eb14ab3318f8</anchor>
      <arglist>(QByteArray &amp;data, SceneDesc &amp;sceneDesc) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SearchScriptAssetDependencies</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a74aec4f1afb0dbdd3f4b1d317620dce7</anchor>
      <arglist>(const QString &amp;filePath, SceneDesc &amp;sceneDesc) const </arglist>
    </member>
    <member kind="slot">
      <type>float3</type>
      <name>UpVector</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>ad5d19fab47ff95b5f6d6ac83e4876ca1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>float3</type>
      <name>RightVector</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>afcfa7e7a3d0ed4ed58245ed0871cb8ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>float3</type>
      <name>ForwardVector</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>aa3ad0c6c860da94b4e928baa8d9db22a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QByteArray</type>
      <name>GetEntityXml</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a737c252d39eb068a1d149832c2dcdc68</anchor>
      <arglist>(Entity *entity) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>ViewEnabled</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>ab79932dc16255dd0e9904456b68d6e36</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsAuthority</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a0074287196412e026114d7b9f68a0baf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>const QString &amp;</type>
      <name>Name</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a06b7d702a74738d0622bba63cb514482</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>EntityPtr</type>
      <name>GetEntity</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a9d63b519a79e6a9630dd4e37f1f33276</anchor>
      <arglist>(entity_id_t id) const </arglist>
    </member>
    <member kind="slot">
      <type>EntityPtr</type>
      <name>GetEntityByName</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a06ebca1ccb06a99644a9feb5e249de21</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsUniqueName</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>ae6bd57a23bf4ca3e07f3cb8cefc965b7</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>HasEntity</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>aeef450f843ef93b93c8f2858c89cf95d</anchor>
      <arglist>(entity_id_t id) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveEntity</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a691c9539cf747e6594b680ef15e4aa7e</anchor>
      <arglist>(entity_id_t id, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveAllEntities</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a4276052b6471623964b437dcb65b3594</anchor>
      <arglist>(bool send_events=true, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="slot">
      <type>entity_id_t</type>
      <name>NextFreeId</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a9e67afe46606ed8e7a22c6b63d06be7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>entity_id_t</type>
      <name>NextFreeIdLocal</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a5c75a26d25b618e794a0136480a43455</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>EntityList</type>
      <name>GetEntitiesWithComponent</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>ae1b516418496c7361cba0c0e3295528a</anchor>
      <arglist>(const QString &amp;typeName, const QString &amp;name=&quot;&quot;) const </arglist>
    </member>
    <member kind="slot">
      <type>EntityList</type>
      <name>GetAllEntities</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>aed3ba452538958477d3d61b4b99c4cab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeChanged</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a2216f962a3bd2df65a33a7645d104395</anchor>
      <arglist>(IComponent *comp, IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeAdded</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a43bed7063395a9097e6329aca16ae424</anchor>
      <arglist>(IComponent *comp, IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitAttributeRemoved</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a21fb85cbf1c589ccd11c3d515e1abea4</anchor>
      <arglist>(IComponent *comp, IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitComponentAdded</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a2fa221e4b5a59874489559e59cfe6e5b</anchor>
      <arglist>(Entity *entity, IComponent *comp, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitComponentRemoved</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a4b1b57bce88c60496818c86ff30acfc8</anchor>
      <arglist>(Entity *entity, IComponent *comp, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitEntityCreated</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a15781b435c15e235ae8a7696e430c3ee</anchor>
      <arglist>(Entity *entity, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitEntityRemoved</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a77c822b5e7abf8d2ae409deac3f4e0af</anchor>
      <arglist>(Entity *entity, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitActionTriggered</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a72b0a740497c713fe531bae53b6b9966</anchor>
      <arglist>(Entity *entity, const QString &amp;action, const QStringList &amp;params, EntityAction::ExecTypeField type)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitEntityAcked</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>ae06a4809d3e2c7dcc49ef63f704a414d</anchor>
      <arglist>(Entity *entity, entity_id_t oldId)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitComponentAcked</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a6ee8b982fdb5279ed0a1daf749bf8570</anchor>
      <arglist>(IComponent *component, component_id_t oldId)</arglist>
    </member>
    <member kind="slot">
      <type>QList&lt; Entity * &gt;</type>
      <name>LoadSceneXML</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a741dd4cb277173740dacaa1e0f5aa5db</anchor>
      <arglist>(const QString &amp;filename, bool clearScene, bool useEntityIDsFromFile, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>QByteArray</type>
      <name>GetSceneXML</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a8342de6aed394835ba559796a793e350</anchor>
      <arglist>(bool getTemporary, bool getLocal) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SaveSceneXML</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a4f5b81f447657967737bec3c81e44051</anchor>
      <arglist>(const QString &amp;filename, bool saveTemporary, bool saveLocal)</arglist>
    </member>
    <member kind="slot">
      <type>QList&lt; Entity * &gt;</type>
      <name>LoadSceneBinary</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a257543a9d558c838f92426204a8f8287</anchor>
      <arglist>(const QString &amp;filename, bool clearScene, bool useEntityIDsFromFile, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SaveSceneBinary</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>af7debbed83cd35f958956f9e6a62c94a</anchor>
      <arglist>(const QString &amp;filename, bool saveTemporary, bool saveLocal)</arglist>
    </member>
    <member kind="slot">
      <type>QList&lt; Entity * &gt;</type>
      <name>CreateContentFromXml</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a8caab994d2b0cc0f03e6b7b5b5f5bd08</anchor>
      <arglist>(const QString &amp;xml, bool useEntityIDsFromFile, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>QList&lt; Entity * &gt;</type>
      <name>CreateContentFromXml</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a4555893e20ac7f12f4523e01f2e88403</anchor>
      <arglist>(const QDomDocument &amp;xml, bool useEntityIDsFromFile, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>QList&lt; Entity * &gt;</type>
      <name>CreateContentFromBinary</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a3075a810ceb53d602a145df7a21bbeb4</anchor>
      <arglist>(const QString &amp;filename, bool useEntityIDsFromFile, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>QList&lt; Entity * &gt;</type>
      <name>CreateContentFromBinary</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a31233fe4c917d326137a79c1a771493f</anchor>
      <arglist>(const char *data, int numBytes, bool useEntityIDsFromFile, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>QList&lt; Entity * &gt;</type>
      <name>CreateContentFromSceneDesc</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>ace711c9a2dc276140b6aab7405decf4e</anchor>
      <arglist>(const SceneDesc &amp;desc, bool useEntityIDsFromFile, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot">
      <type>Entity *</type>
      <name>GetEntityRaw</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a42de1891d99706d05b2b16794a1914bb</anchor>
      <arglist>(uint id)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>DeleteEntityById</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a6c6b42cf0f73764c55e5023552169909</anchor>
      <arglist>(uint id, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveEntityRaw</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>ae14e08d98efb769d87dc4f7d482ab510</anchor>
      <arglist>(int entityid, AttributeChange::Type change=AttributeChange::Default)</arglist>
    </member>
    <member kind="slot">
      <type>QVariantList</type>
      <name>GetEntityIdsWithComponent</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a7852721d8dfb048d37cf97c4acbafe26</anchor>
      <arglist>(const QString &amp;type_name) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>AllowModifyEntity</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a984281d8680cdc366573180a943a7d0b</anchor>
      <arglist>(UserConnection *user, Entity *entity)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeChanged</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>aa230a50f0bf3c79a5810f56a8b258675</anchor>
      <arglist>(IComponent *comp, IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeAdded</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a4d97776630593e8549a09c0392c5fc3f</anchor>
      <arglist>(IComponent *comp, IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AttributeRemoved</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>aac33d43406da4836f9d4c48e73c3bd38</anchor>
      <arglist>(IComponent *comp, IAttribute *attribute, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentAdded</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a72649fc9893d134e6e8401998212a96b</anchor>
      <arglist>(Entity *entity, IComponent *comp, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentRemoved</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a724aeaa0547e910c364d753010acc67c</anchor>
      <arglist>(Entity *entity, IComponent *comp, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>EntityCreated</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>ac4fb3c3494311cac36eaa273530a7368</anchor>
      <arglist>(Entity *entity, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>EntityRemoved</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a5064c411fbb26cd4e77ebc15a49d09d3</anchor>
      <arglist>(Entity *entity, AttributeChange::Type change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>EntityAcked</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a94b152a357f0d26e6058e721e5f65fd2</anchor>
      <arglist>(Entity *entity, entity_id_t oldId)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ComponentAcked</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a8fcbe3edbd6b65c8c9f6253a0d96b6f5</anchor>
      <arglist>(IComponent *comp, component_id_t oldId)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ActionTriggered</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a56cc2e649ad98dad0609fe996a1c723c</anchor>
      <arglist>(Entity *entity, const QString &amp;action, const QStringList &amp;params, EntityAction::ExecTypeField type)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AboutToModifyEntity</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>ad99c4c5fa9a01a39121d123ab4714bc8</anchor>
      <arglist>(ChangeRequest *req, UserConnection *user, Entity *entity)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Removed</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a12323c94d8f7dd91444cbb96cfa1c3ef</anchor>
      <arglist>(Scene *scene)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>SceneCleared</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>aa81c1ff9ed2da808862c1a059f6152ec</anchor>
      <arglist>(Scene *scene)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Scene</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a3b8cec2e32546713915f8c6303c951f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>aa744ea8ff430995d1c387642d2f6c495</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a9b8a96780a70c3636790cba67369427b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a2155fd68f934e4dbef4b73626771f464</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a946897305ec2a0d463e177870bfd5d23</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const EntityMap &amp;</type>
      <name>Entities</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a46c3395a6dc36a60af8ef4c5e3a8a4f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>adc3544a74d5f4a50d2aaff88c21d144a</anchor>
      <arglist>(const Scene &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>aa43503694efa370d32129851b8b3aa89</anchor>
      <arglist>(const Scene &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a6e62028d60468eac3576df291950f494</anchor>
      <arglist>(const Scene &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>boost::shared_ptr&lt; T &gt;</type>
      <name>GetWorld</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>aacc871ddabb21389a376042bd705997f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ChangeEntityId</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>aba6787695a963e68de443affd932fd2b</anchor>
      <arglist>(entity_id_t old_id, entity_id_t new_id)</arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a0b769d4f4f8bf3a33249f69fb2f7dbcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>viewEnabled</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a94ae5018a32d0aa77f0c097c691bec56</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>authority</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a7a115865e7f5ebb1851dc3b648024c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnUpdated</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a17fd781b7ba4e6b45541f60fe2e254e3</anchor>
      <arglist>(float frameTime)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Q_DISABLE_COPY</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a83f6ef0a9b0da67d2146e7b96d47b61c</anchor>
      <arglist>(Scene)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Scene</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>aa550f22b31afc5d08c0dfc16030b6aa0</anchor>
      <arglist>(const QString &amp;name, Framework *fw, bool viewEnabled, bool authority)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>UniqueIdGenerator</type>
      <name>idGenerator_</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a0e8d37a52e09a367527590038673ae3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EntityMap</type>
      <name>entities_</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a327781c79bc9766e369495cc21633c56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework_</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>ac6075318f01665ca9a0d72973a86dd4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QString</type>
      <name>name_</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a7b20cfcd21cf7f09531ec84f28da3357</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>viewEnabled_</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a50434cee05bd4bb11ab006b9ef559482</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>interpolating_</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a965f44fce8c493144320ddccc808a9dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>authority_</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a52f397e9426ea96e4340320fb9f0ad53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; AttributeInterpolation &gt;</type>
      <name>interpolations_</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>ab857b97154537d132b598ed691c2c638</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::pair&lt; EntityWeakPtr, AttributeChange::Type &gt; &gt;</type>
      <name>entitiesCreatedThisFrame_</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a9e800c1c8c48e5b94383859c19cdd148</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>::SceneAPI</name>
      <anchorfile>class_scene.html</anchorfile>
      <anchor>a6a6f32ef8318d8833910bcada4962634</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SceneAPI</name>
    <filename>class_scene_a_p_i.html</filename>
    <member kind="slot">
      <type>SceneInteract *</type>
      <name>GetSceneInteract</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a8ac555f096d1ff5bc6f145907e663a82</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>HasScene</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a8f1a46b7e2116a96a03b918232df4fd3</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>ScenePtr</type>
      <name>GetScene</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a96b3bf069831d9531e15edf208de80b0</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="slot">
      <type>Scene *</type>
      <name>MainCameraScene</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a002ba7b9b4b8f93ccc07234683a01bc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>ScenePtr</type>
      <name>CreateScene</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>ad481fd2ca1a3332c411f2419c2b47a92</anchor>
      <arglist>(const QString &amp;name, bool viewEnabled, bool authority)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveScene</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a09eaaaaedc10339912f053ff178a82b3</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="slot">
      <type>SceneMap &amp;</type>
      <name>Scenes</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>ad5592bfcc702e279c8747bce8874b1e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>const SceneMap &amp;</type>
      <name>Scenes</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a00c582c3fe4083c73bd1f5ca6f5df2cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsComponentFactoryRegistered</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a4fd6404fb789c887f7f190b0b38d1ae2</anchor>
      <arglist>(const QString &amp;typeName)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RegisterComponentFactory</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a2c3ff581343cfabc0af49c4004ed62d5</anchor>
      <arglist>(ComponentFactoryPtr factory)</arglist>
    </member>
    <member kind="slot">
      <type>ComponentPtr</type>
      <name>CreateComponentByName</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a5c48382be2b3ce5177eb4ca8222661e0</anchor>
      <arglist>(Scene *scene, const QString &amp;componentTypename, const QString &amp;newComponentName=&quot;&quot;)</arglist>
    </member>
    <member kind="slot">
      <type>ComponentPtr</type>
      <name>CreateComponentById</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a1bfdd9f7bda62bc3725db0fb7891749c</anchor>
      <arglist>(Scene *scene, u32 componentTypeid, const QString &amp;newComponentName=&quot;&quot;)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>GetComponentTypeName</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a9675ae8b98279ceb68d1c9e703fe2ff7</anchor>
      <arglist>(u32 componentTypeid)</arglist>
    </member>
    <member kind="slot">
      <type>u32</type>
      <name>GetComponentTypeId</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>aaaeee1c275cadee43452a5ca0d4bbe79</anchor>
      <arglist>(const QString &amp;componentTypename)</arglist>
    </member>
    <member kind="slot" static="yes">
      <type>static QString</type>
      <name>GetAttributeTypeName</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>adda797e506845a7375df2e5e66425be6</anchor>
      <arglist>(u32 attributeTypeid)</arglist>
    </member>
    <member kind="slot" static="yes">
      <type>static u32</type>
      <name>GetAttributeTypeId</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a82956cb0bc8cfa9972c271fd8e6bd8dc</anchor>
      <arglist>(const QString &amp;attributeTypename)</arglist>
    </member>
    <member kind="slot" static="yes">
      <type>static IAttribute *</type>
      <name>CreateAttribute</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>ac4a96ed6cd1c2b781313e84c2ce4e39f</anchor>
      <arglist>(u32 attributeTypeid, const QString &amp;newAttributeName)</arglist>
    </member>
    <member kind="slot" static="yes">
      <type>static IAttribute *</type>
      <name>CreateAttribute</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a511c3ab1f3e131a987876bb0c7c848f1</anchor>
      <arglist>(const QString &amp;attributeTypename, const QString &amp;newAttributeName)</arglist>
    </member>
    <member kind="slot" static="yes">
      <type>static QStringList</type>
      <name>AttributeTypes</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a94fa016f42a5153bf3eb4df27c0a15c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>ComponentTypes</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>aea1c2f9fddfe66d17de678fca6c086e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>SceneAdded</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a80386b785bef9927d9e89d48d52d309d</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>SceneRemoved</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a9feeb4c711f967bd2e0cbf3f7edec404</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SceneAPI</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a3555d1df91da0458f087f0307b9a462e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boost::shared_ptr&lt; T &gt;</type>
      <name>CreateComponent</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a36bb4bf153bed79a4a32a98cd3b746eb</anchor>
      <arglist>(Scene *parentScene, const QString &amp;newComponentName=&quot;&quot;)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; QString, ComponentFactoryPtr, QStringLessThanNoCase &gt;</type>
      <name>ComponentFactoryMap</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a2e007a80a158d458395ea19e25d5307a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; u32, boost::weak_ptr&lt; IComponentFactory &gt; &gt;</type>
      <name>ComponentFactoryWeakMap</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a41d7116a45c3b0d4223f66b73d314003</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>SceneAPI</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>ab7a6c180fb731e6d47584af73f1d21d1</anchor>
      <arglist>(Framework *fw)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Reset</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a1f71f7c501fc07617777ac300572e6bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Initialise</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a81d7132e691bd702bc9383468ad04bb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ComponentFactoryPtr</type>
      <name>GetFactory</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a0605f75f31fd437c4f2a5ef613fbc463</anchor>
      <arglist>(const QString &amp;typeName)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ComponentFactoryPtr</type>
      <name>GetFactory</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a5dfba3037007c9c8b0e7160e7ec5daac</anchor>
      <arglist>(u32 typeId)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ComponentFactoryMap</type>
      <name>componentFactories</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>afcabbc19204d9cc0ba632782f9b6ce7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ComponentFactoryWeakMap</type>
      <name>componentFactoriesByTypeid</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a0eb68cedc4378672f3fa3993157a2ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework_</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a82b28bae60dd80d5f242a575bd8052a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SceneMap</type>
      <name>scenes_</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>ae9c97f33912a5d67dbb178dbc58519c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SceneInteract *</type>
      <name>sceneInteract</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>a48b0845eac2d96ab63088c32cec9b76f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static QStringList</type>
      <name>attributeTypeNames</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>ac0fa9fa8ed3d4addf05fe0ccae354894</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Framework</name>
      <anchorfile>class_scene_a_p_i.html</anchorfile>
      <anchor>ad3defef37a1222bb2b2a65577a6c4816</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceneDesc</name>
    <filename>struct_scene_desc.html</filename>
    <member kind="typedef">
      <type>QPair&lt; QString, QString &gt;</type>
      <name>AssetMapKey</name>
      <anchorfile>struct_scene_desc.html</anchorfile>
      <anchor>a1d3604d40ff78e2effa1ab3f49ed2bdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>QMap&lt; AssetMapKey, AssetDesc &gt;</type>
      <name>AssetMap</name>
      <anchorfile>struct_scene_desc.html</anchorfile>
      <anchor>a7d9870cb478b474d44eba634639c931a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>struct_scene_desc.html</anchorfile>
      <anchor>a4b0ba13640da027d56566e6494311cbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>struct_scene_desc.html</anchorfile>
      <anchor>a7009e7427284710cb225a7909948fa4a</anchor>
      <arglist>(const SceneDesc &amp;rhs) const </arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>filename</name>
      <anchorfile>struct_scene_desc.html</anchorfile>
      <anchor>a2247fc6c57cd79331d5eb980995a373b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>name</name>
      <anchorfile>struct_scene_desc.html</anchorfile>
      <anchor>a8669d5176071e6d27aac404e634b150a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>viewEnabled</name>
      <anchorfile>struct_scene_desc.html</anchorfile>
      <anchor>ac00bb88d0640b6dcef5fce0657e17c40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QList&lt; EntityDesc &gt;</type>
      <name>entities</name>
      <anchorfile>struct_scene_desc.html</anchorfile>
      <anchor>a413648d48d3425b68c30b823db46ad1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AssetMap</type>
      <name>assets</name>
      <anchorfile>struct_scene_desc.html</anchorfile>
      <anchor>ae406b920f53ac243999c8dfe7c802eaf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SceneInteract</name>
    <filename>class_scene_interact.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>EntityClicked</name>
      <anchorfile>class_scene_interact.html</anchorfile>
      <anchor>a6d50eea61b25a0be34df0fda1dd21d38</anchor>
      <arglist>(Entity *entity, Qt::MouseButton button, RaycastResult *result)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>EntityMouseMove</name>
      <anchorfile>class_scene_interact.html</anchorfile>
      <anchor>a1e00f61173298c1c858c5a7c672b20ef</anchor>
      <arglist>(Entity *entity, Qt::MouseButton button, RaycastResult *result)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>EntityClickReleased</name>
      <anchorfile>class_scene_interact.html</anchorfile>
      <anchor>ad70bc6d6dc54a90c122aa91a8c550434</anchor>
      <arglist>(Entity *entity, Qt::MouseButton button, RaycastResult *result)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SceneInteract</name>
      <anchorfile>class_scene_interact.html</anchorfile>
      <anchor>afea1515bf111a5f1c7e7ed19d3736851</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SceneInteract</name>
      <anchorfile>class_scene_interact.html</anchorfile>
      <anchor>a96e5d54634c976a29c7d9b546d4395d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_scene_interact.html</anchorfile>
      <anchor>a92851e18687e1e6ff3a05a244d4ea669</anchor>
      <arglist>(Framework *framework)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_scene_interact.html</anchorfile>
      <anchor>addc9cabe1f51ee58f71a2d3567bc0482</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleKeyEvent</name>
      <anchorfile>class_scene_interact.html</anchorfile>
      <anchor>ab51af4737e9436b702f66debebea02b4</anchor>
      <arglist>(KeyEvent *e)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleMouseEvent</name>
      <anchorfile>class_scene_interact.html</anchorfile>
      <anchor>a20298c29de11a2937c1cbf757072d404</anchor>
      <arglist>(MouseEvent *e)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>RaycastResult *</type>
      <name>Raycast</name>
      <anchorfile>class_scene_interact.html</anchorfile>
      <anchor>ad6754416b1264e3acaaaf50f761c631f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_scene_interact.html</anchorfile>
      <anchor>aa4cfd5509cc22a68df16a7e07f70630f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>InputContextPtr</type>
      <name>input</name>
      <anchorfile>class_scene_interact.html</anchorfile>
      <anchor>a5d7954dec38b6e27805972d02c59929a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>lastX</name>
      <anchorfile>class_scene_interact.html</anchorfile>
      <anchor>a9308bcb30ecdf98573590c6a2525fe31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>lastY</name>
      <anchorfile>class_scene_interact.html</anchorfile>
      <anchor>a27b7cd590282c8dc3858abf661ba771d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>itemUnderMouse</name>
      <anchorfile>class_scene_interact.html</anchorfile>
      <anchor>aa913feca099ce84373b93d6755ba71c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EntityWeakPtr</type>
      <name>lastHitEntity</name>
      <anchorfile>class_scene_interact.html</anchorfile>
      <anchor>ac6ce18aa2f2fcee5cb8be5643f059f4d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceneMaterialDropData</name>
    <filename>struct_scene_material_drop_data.html</filename>
    <member kind="function">
      <type></type>
      <name>SceneMaterialDropData</name>
      <anchorfile>struct_scene_material_drop_data.html</anchorfile>
      <anchor>a782bd92180ba6af15135d0b0b600cabf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>EC_Mesh *</type>
      <name>mesh</name>
      <anchorfile>struct_scene_material_drop_data.html</anchorfile>
      <anchor>a7ff26d750fc266fa0f1c3b9638231b6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AssetReferenceList</type>
      <name>materials</name>
      <anchorfile>struct_scene_material_drop_data.html</anchorfile>
      <anchor>a4905411ffff490b576c7ec29a95ee13c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QList&lt; uint &gt;</type>
      <name>affectedIndexes</name>
      <anchorfile>struct_scene_material_drop_data.html</anchorfile>
      <anchor>ae3e262904107cadfbbc426c1810fa3ff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SceneStructureModule</name>
    <filename>class_scene_structure_module.html</filename>
    <base>IModule</base>
    <member kind="slot">
      <type>QList&lt; Entity * &gt;</type>
      <name>InstantiateContent</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>a3f04f879d47bb637c45cf369b0d5f926</anchor>
      <arglist>(const QString &amp;filename, const float3 &amp;worldPos, bool clearScene)</arglist>
    </member>
    <member kind="slot">
      <type>QList&lt; Entity * &gt;</type>
      <name>InstantiateContent</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>acff118a2df725ca467cf4bd02ff8b219</anchor>
      <arglist>(const QStringList &amp;filenames, const float3 &amp;worldPos, bool clearScene)</arglist>
    </member>
    <member kind="slot" static="yes">
      <type>static void</type>
      <name>CentralizeEntitiesTo</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>aa820b84357524eb55322e27e915473c8</anchor>
      <arglist>(const float3 &amp;pos, const QList&lt; Entity * &gt; &amp;entities)</arglist>
    </member>
    <member kind="slot" static="yes">
      <type>static bool</type>
      <name>IsSupportedFileType</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>a0c6c192aee56e76112b4f8544ba8e122</anchor>
      <arglist>(const QString &amp;fileRef)</arglist>
    </member>
    <member kind="slot" static="yes">
      <type>static bool</type>
      <name>IsMaterialFile</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>a7f665d0632c4a21e46450107418e5f75</anchor>
      <arglist>(const QString &amp;fileRef)</arglist>
    </member>
    <member kind="slot" static="yes">
      <type>static bool</type>
      <name>IsUrl</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>adfa77957a0abc2e87b67eebae9349468</anchor>
      <arglist>(const QString &amp;fileRef)</arglist>
    </member>
    <member kind="slot" static="yes">
      <type>static void</type>
      <name>CleanReference</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>a59b963a7b7b1021a76e8dfcf34d6284b</anchor>
      <arglist>(QString &amp;fileRef)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ToggleSceneStructureWindow</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>aedd3657c977372ee0692473c2395b0ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ToggleAssetsWindow</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>a2467a934a3a8b1531ea15d0959e49e22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SceneStructureModule</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>afab531ecfb658dfbf598c4efc9287e08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SceneStructureModule</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>a831b92d79034d02ca26abf9ee1905070</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>a6789908be006201649a06fc2df2c44e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Load</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a6435d25926592938d058e231a1a6988a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Uninitialize</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a605e76696c3cef8d80450453da44ff21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Unload</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a29f68fed281ee378674d8b3d84a02e48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>af68bc12846076442d17bd09955019710</anchor>
      <arglist>(f64 frametime)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a715ca908fee148f6abeb45f41f646951</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>af0fc3706f5a2e27374c642e71e4eca8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework_</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>aff39960b9800c16d6f4976b5614c37a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleKeyPressed</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>a671e44fb2007b847c1101214005c10a7</anchor>
      <arglist>(KeyEvent *e)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleDragEnterEvent</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>a40cdea0a037ad722abea374c9db1af6c</anchor>
      <arglist>(QDragEnterEvent *e)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleDragLeaveEvent</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>a17098f622fda73eec8c51d1bb3484a22</anchor>
      <arglist>(QDragLeaveEvent *e)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleDragMoveEvent</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>a62c7c8c7043836453033eed528bb7a2e</anchor>
      <arglist>(QDragMoveEvent *e)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleDropEvent</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>ac77fee083de2a10afcfc936228c1582a</anchor>
      <arglist>(QDropEvent *e)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleMaterialDropEvent</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>ad8c4d6ba1a207ba3f56c5d1ae6e16245</anchor>
      <arglist>(QDropEvent *e, const QString &amp;materialRef)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>FinishMaterialDrop</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>af090585143a8150252594f7ec068a3e1</anchor>
      <arglist>(bool apply, const QString &amp;materialBaseUrl)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleSceneDescLoaded</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>a3fbe70556f66a49737eb77c5b5d00c3e</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleSceneDescFailed</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>a3064f028af6f5e0495f10876039a3e32</anchor>
      <arglist>(IAssetTransfer *transfer, QString reason)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QPointer&lt; SceneStructureWindow &gt;</type>
      <name>sceneWindow</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>a2c18fc90cae418d830695616041778e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QPointer&lt; AssetsWindow &gt;</type>
      <name>assetsWindow</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>a81e7aafdc436b92d53f4e3080928780e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::shared_ptr&lt; InputContext &gt;</type>
      <name>inputContext</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>a31b49de1f3046964f6340475f147d6f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SceneMaterialDropData</type>
      <name>materialDropData</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>a0547fcf9ada2449058269fce031bbc10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QHash&lt; QString, float3 &gt;</type>
      <name>urlToDropPos</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>ab175c96f3f2c36b19969f03e8275d035</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QWidget *</type>
      <name>toolTipWidget</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>ad613959f97e7660d462d0a32e7dd523e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QLabel *</type>
      <name>toolTip</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>afb447c84b355d490dee3a1eb66554780</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QString</type>
      <name>currentToolTipSource</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>a1f3010f305b23a35a08ef98449a78d52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QString</type>
      <name>currentToolTipDestination</name>
      <anchorfile>class_scene_structure_module.html</anchorfile>
      <anchor>a3f7bdf400b3f9cee0f9f023ba46b1278</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SceneStructureWindow</name>
    <filename>class_scene_structure_window.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>ShowComponents</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>ac3e53221184a0e0373bf6886982c0eaa</anchor>
      <arglist>(bool show)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ShowAssetReferences</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>abdccae44fef0a2bfef99523576db2e05</anchor>
      <arglist>(bool show)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SceneStructureWindow</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>a414e0b9e7109620673a1235002c07936</anchor>
      <arglist>(Framework *fw, QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SceneStructureWindow</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>ac99f427f6b11009b6a23d9ecd78bc67c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetScene</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>a08361be013d29c8a061a3bd812a1f2b3</anchor>
      <arglist>(const ScenePtr &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>eventFilter</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>a97a1607b5bdd1fd4c431f96f7be615dd</anchor>
      <arglist>(QObject *obj, QEvent *e)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>changeEvent</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>a0bd7874fe4773fc63a6c64f84a6bb673</anchor>
      <arglist>(QEvent *e)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>AddEntity</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>af1d61e9da78ee164582fc34add30ad80</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>RemoveEntity</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>a5f4feda2abc6a622660c94609d823942</anchor>
      <arglist>(Entity *entity)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>AckEntity</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>addc12b9d631bea3808c3ee6c26022d9e</anchor>
      <arglist>(Entity *entity, entity_id_t oldId)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>AddComponent</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>a7bc9b7ce42de8b79d5fcfeb8c4fe8447</anchor>
      <arglist>(Entity *entity, IComponent *comp)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>RemoveComponent</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>acf445cde121cdde2f91f12f4b08a6e57</anchor>
      <arglist>(Entity *entity, IComponent *comp)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>AddAssetReference</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>a1d619e8e87ed2481504653c6409dfa09</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>RemoveAssetReference</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>a7ae485d982bfd4b4d98c90a90606a054</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>UpdateAssetReference</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>a92a3053346593ed41861888ea984487f</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>UpdateEntityName</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>a910aa3124e30ca2132fb229efa40fa6b</anchor>
      <arglist>(IAttribute *attr)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>UpdateComponentName</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>ad1bd4eec4882984c2190298248f9a884</anchor>
      <arglist>(const QString &amp;oldName, const QString &amp;newName)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>Sort</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>a0cbb56bd482e1694868544c80c5c3837</anchor>
      <arglist>(const QString &amp;criteria)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>Search</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>a5d789268b204cb27ee761d5bce175cf3</anchor>
      <arglist>(const QString &amp;filter)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>ExpandOrCollapseAll</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>ae513dbe5aeda3b7cc7e4eec4f817b783</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>CheckTreeExpandStatus</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>aa6648e947aded9e3bc6a4ed8f1b6bcf2</anchor>
      <arglist>(QTreeWidgetItem *item)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>RemoveEntityById</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>a7e6a21c636c32d5b2a9770c40b3f8194</anchor>
      <arglist>(entity_id_t id)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Populate</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>acf30ef7eb4ad0e5833a6ca8e2e168a7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>a54fd8309972246743e7340f2295984fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CreateAssetReferences</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>a8b92f6b8379d469a68364a313bc0647a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ClearAssetReferences</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>afc2d5384dfa70baa11de4f2e039c6f33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CreateAssetItem</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>a4d6f1c29c206fe81702242afd8643441</anchor>
      <arglist>(QTreeWidgetItem *parentItem, IAttribute *attr)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>ab5a659247ce6bc8a3f57fd4a533788c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SceneWeakPtr</type>
      <name>scene</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>ac4ab5d03b25406ad1797dd506073094b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SceneTreeWidget *</type>
      <name>treeWidget</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>a8d41aedb74c800850f47587bfd441f2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>showComponents</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>ae8c341964591fa2d3e518d1719595f78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>showAssets</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>a3eded6ce5fa7627750b9ad46d82099d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QLineEdit *</type>
      <name>searchField</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>ae788bd36eacc9edfb95f22c6d628ae6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QPushButton *</type>
      <name>expandAndCollapseButton</name>
      <anchorfile>class_scene_structure_window.html</anchorfile>
      <anchor>a8216fde006e2c46b5a0f1eb637eb5282</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceneSyncState</name>
    <filename>struct_scene_sync_state.html</filename>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>struct_scene_sync_state.html</anchorfile>
      <anchor>a4688be7d94741eaf77ee11ca4d75f851</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveFromQueue</name>
      <anchorfile>struct_scene_sync_state.html</anchorfile>
      <anchor>aab9712d571f72591a8afeb39d19164a0</anchor>
      <arglist>(entity_id_t id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MarkEntityProcessed</name>
      <anchorfile>struct_scene_sync_state.html</anchorfile>
      <anchor>a76950056187f0985c3ceff8b749a0580</anchor>
      <arglist>(entity_id_t id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MarkComponentProcessed</name>
      <anchorfile>struct_scene_sync_state.html</anchorfile>
      <anchor>a0b59123786c0566e636a3e409dff22d5</anchor>
      <arglist>(entity_id_t id, component_id_t compId)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MarkEntityDirty</name>
      <anchorfile>struct_scene_sync_state.html</anchorfile>
      <anchor>a66bb4967cb273cdbbba7d5581ae1af51</anchor>
      <arglist>(entity_id_t id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MarkEntityRemoved</name>
      <anchorfile>struct_scene_sync_state.html</anchorfile>
      <anchor>a31e34ebb18eda8ab5f910be46b9e4711</anchor>
      <arglist>(entity_id_t id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MarkComponentDirty</name>
      <anchorfile>struct_scene_sync_state.html</anchorfile>
      <anchor>a1972444a468e9601793a0d61002bbb5c</anchor>
      <arglist>(entity_id_t id, component_id_t compId)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MarkComponentRemoved</name>
      <anchorfile>struct_scene_sync_state.html</anchorfile>
      <anchor>a6154683129c476f542c6c9c6ea9f5532</anchor>
      <arglist>(entity_id_t id, component_id_t compId)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MarkAttributeDirty</name>
      <anchorfile>struct_scene_sync_state.html</anchorfile>
      <anchor>ae25738ea6b6611cf31918b1bf0d18153</anchor>
      <arglist>(entity_id_t id, component_id_t compId, u8 attrIndex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MarkAttributeCreated</name>
      <anchorfile>struct_scene_sync_state.html</anchorfile>
      <anchor>a49e08df33d0aa78fac08f874c4ac6b9d</anchor>
      <arglist>(entity_id_t id, component_id_t compId, u8 attrIndex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MarkAttributeRemoved</name>
      <anchorfile>struct_scene_sync_state.html</anchorfile>
      <anchor>ae8f99ddf9799ce6eebc4050ac659f5e6</anchor>
      <arglist>(entity_id_t id, component_id_t compId, u8 attrIndex)</arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; EntitySyncState * &gt;</type>
      <name>dirtyQueue</name>
      <anchorfile>struct_scene_sync_state.html</anchorfile>
      <anchor>a135e0cb0988446c21c6c40c28dcdbda1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; entity_id_t, EntitySyncState &gt;</type>
      <name>entities</name>
      <anchorfile>struct_scene_sync_state.html</anchorfile>
      <anchor>a6efc5de4f0a08b30d8041e2606085135</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SceneTreeWidget</name>
    <filename>class_scene_tree_widget.html</filename>
    <member kind="function">
      <type></type>
      <name>SceneTreeWidget</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>aaaa35de2a93df678d40c4eaa9df92622</anchor>
      <arglist>(Framework *fw, QWidget *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SceneTreeWidget</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a67f0eae79a8212c922e10a1891939401</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetScene</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a83d47929c4a087db058c4abab6678d38</anchor>
      <arglist>(const ScenePtr &amp;scene)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>showComponents</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a73e61f44ce765537377f82240ea551fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>contextMenuEvent</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>af4fa980dcca3cd067d988f0784c88400</anchor>
      <arglist>(QContextMenuEvent *e)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>dragEnterEvent</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a0ff27dc588c1c9307d661f4c09b04acb</anchor>
      <arglist>(QDragEnterEvent *e)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>dragMoveEvent</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>ad6f4a2df78f31627f4c14e6741896ca9</anchor>
      <arglist>(QDragMoveEvent *e)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>dropEvent</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a0f2abcd09fdde80d9d520221dc753a4b</anchor>
      <arglist>(QDropEvent *e)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>Edit</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a1f5dbb59c5660137712d784bdb833765</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>EditInNew</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a0587c03864833de9379c684858f7d06a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>Rename</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>af4bc069b34052f3a8dda83c7ac53b160</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnItemEdited</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>aa83ed0d7949538230a509e419b6377d3</anchor>
      <arglist>(QTreeWidgetItem *item, int)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>NewEntity</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>ae7b140cd4e505d540a4544cd8b08c53e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>NewComponent</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>acc296f4b64ec2bfa08dae999cef18976</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>ComponentDialogFinished</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a2b65a0e0df916dc973afd3f9719efcdb</anchor>
      <arglist>(int result)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>Delete</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a2959fbf7e00a3df5caf9828fab78be07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>Copy</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a39a00eaa754e3853c4eaa5f32f9ba133</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>Paste</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a7f45f2de74a77d0792108e850702d906</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>SaveAs</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a48ac0f4a4b6151d04afa0a2c05da1bb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>SaveSceneAs</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a8f9f70a45ed9e73ff796828e4a9d95c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>ExportAll</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a112b6fabd5d9cd3227cad36fe59cfaa0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>Import</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>ada81629e7df57d476e10d651aabc432b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OpenNewScene</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a9a8150411bf62b842de47b2ca6e83515</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OpenEntityActionDialog</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a6f2c0902ee7a1dd308632b14c2096deb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>EntityActionDialogFinished</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>adccd714ad5f7c73f1dafcd335394c4d9</anchor>
      <arglist>(int result)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OpenFunctionDialog</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a98c546206e98428d2479d6f79ccf3947</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>FunctionDialogFinished</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a360c19ed4e83644cf779eec9490d74f6</anchor>
      <arglist>(int result)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>SaveSelectionDialogClosed</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a2500994972701a624841586719fd0d6b</anchor>
      <arglist>(int result)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>SaveSceneDialogClosed</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>afd4d74da53bcfea47f974f4f8e993de3</anchor>
      <arglist>(int result)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>ExportAllDialogClosed</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a5c629285df8bfac5ef106a1c26a9266e</anchor>
      <arglist>(int result)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OpenFileDialogClosed</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a0d526451717a98113629d90c8d14ae0b</anchor>
      <arglist>(int result)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>InvokeActionTriggered</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>ae6622f6b1c3ec1d2f97519f100608df9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>SaveAssetAs</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a4de469ff1618c9b1e4a7cc6e95c44d4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>SaveAssetDialogClosed</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a53a4cf9630f24526eb57bf8e5ec9a555</anchor>
      <arglist>(int result)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>AssetLoaded</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>aa003edfb6b676e9657415e09de61367d</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleECEditorDestroyed</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a90e5ff6c99763accbb56328dfa98d425</anchor>
      <arglist>(QObject *obj)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>ConvertEntityToLocal</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a7fa734c6987d7726563b85e6777a4ffa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>ConvertEntityToReplicated</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a6c9b89b97a4af14163441521d5cb7bb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>SetAsTemporary</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a3eac00dbba66ffff5bd8784e7c1550ab</anchor>
      <arglist>(bool temporary)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>AddAvailableActions</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a1dae6bc09137474665936b809edbb08f</anchor>
      <arglist>(QMenu *menu)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>AddAvailableAssetActions</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a2d315293484af295d27e90a5178a7a3b</anchor>
      <arglist>(QMenu *menu)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>AddAvailableEntityActions</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>aea6c453a65bc4adb3101f2fd466bd72b</anchor>
      <arglist>(QMenu *menu)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Selection</type>
      <name>GetSelection</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a95b7481efd12fe675d24b1bb6730ddc8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>QString</type>
      <name>GetSelectionAsXml</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a6759158c6b792b12ca4ad307d026bcd0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>LoadInvokeHistory</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a254a055ef486c78d616565cc5b16f994</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SaveInvokeHistory</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>ac48a8c2d1f3ca161e28afaef521fd424</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>InvokeItem *</type>
      <name>FindMruItem</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a3985eee6469ba57614e10ed6e8e79103</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>QSet&lt; QString &gt;</type>
      <name>GetAssetRefs</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a044586e7fd5550a69a2dd3c8b5104bd3</anchor>
      <arglist>(const EntityItem *eItem) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a00e3d01de0e08716e1b77ce650b6a661</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SceneWeakPtr</type>
      <name>scene</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>aecd97e407e092e78e050bc94c55d99dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QList&lt; QPointer&lt; ECEditorWindow &gt; &gt;</type>
      <name>ecEditors</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a4ad602a9e4694010fa4b1dd665988ade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>historyMaxItemCount</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a40347a6f6a19dd518a202d674ae5376f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numberOfInvokeItemsVisible</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>adc915d2587f4d566bdffe226169adc09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QPointer&lt; QFileDialog &gt;</type>
      <name>fileDialog</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a88c43d6afb617ea93ea3301fd4b096c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QList&lt; InvokeItem &gt;</type>
      <name>invokeHistory</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>abef5c8404ef93bda20baa1a81d65ef18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QPointer&lt; Menu &gt;</type>
      <name>contextMenu</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>ae83affc6d871322846483b0fabba6300</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QMap&lt; QString, QString &gt;</type>
      <name>fileSaves</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a3e793273eee2c0c956fd1e789a9b6a07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QSet&lt; QString &gt;</type>
      <name>savedAssets</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a61403c74fabe4690f019fe96248246c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>fetchReferences</name>
      <anchorfile>class_scene_tree_widget.html</anchorfile>
      <anchor>a958d3e900c8cf908a9c613942a2db947</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SearchRequest</name>
    <filename>struct_search_request.html</filename>
    <member kind="variable">
      <type>QNetworkReply *</type>
      <name>reply</name>
      <anchorfile>struct_search_request.html</anchorfile>
      <anchor>a2929f497030f1c12347c6c929b59f113</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Selection</name>
    <filename>struct_selection.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>struct_selection.html</anchorfile>
      <anchor>af89974a9c1f57359d93d11745af64d3c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasEntities</name>
      <anchorfile>struct_selection.html</anchorfile>
      <anchor>ab5ebce345c771cac73abbb7a7289d8ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasComponents</name>
      <anchorfile>struct_selection.html</anchorfile>
      <anchor>ad8c169d6952affead804fabdc935283a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasAssets</name>
      <anchorfile>struct_selection.html</anchorfile>
      <anchor>a5ec8e531f92cc9544da39c0b1a3db81d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QList&lt; entity_id_t &gt;</type>
      <name>EntityIds</name>
      <anchorfile>struct_selection.html</anchorfile>
      <anchor>ade03c03358f04f6b1102999183af5aee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>QList&lt; EntityItem * &gt;</type>
      <name>entities</name>
      <anchorfile>struct_selection.html</anchorfile>
      <anchor>aceabb310efe1aa33e64424e8b92f7434</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QList&lt; ComponentItem * &gt;</type>
      <name>components</name>
      <anchorfile>struct_selection.html</anchorfile>
      <anchor>a78800cc109cd83decbb7cece7f1c6980</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QList&lt; AssetRefItem * &gt;</type>
      <name>assets</name>
      <anchorfile>struct_selection.html</anchorfile>
      <anchor>a8e990df133da603a18999114729c7025</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ShellInputThread</name>
    <filename>class_shell_input_thread.html</filename>
    <member kind="function">
      <type></type>
      <name>ShellInputThread</name>
      <anchorfile>class_shell_input_thread.html</anchorfile>
      <anchor>ae327818fcb3a243f09a51932dd1491f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ShellInputThread</name>
      <anchorfile>class_shell_input_thread.html</anchorfile>
      <anchor>a2cc01ed690dca59b6898d85b75ef232c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ThreadMain</name>
      <anchorfile>class_shell_input_thread.html</anchorfile>
      <anchor>a6589f7acd56b0dfd433e0af3065cb148</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetLine</name>
      <anchorfile>class_shell_input_thread.html</anchorfile>
      <anchor>afcfabab0ef17528c6e2fd776541611b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::thread</type>
      <name>inputThread</name>
      <anchorfile>class_shell_input_thread.html</anchorfile>
      <anchor>af788dce1d58c37275fc6adddb05f0598</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::mutex</type>
      <name>inputQueueLock</name>
      <anchorfile>class_shell_input_thread.html</anchorfile>
      <anchor>a52a7b0b4964f94826aced475dca91d26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>inputQueue</name>
      <anchorfile>class_shell_input_thread.html</anchorfile>
      <anchor>a9d2adc3e35bf26b69756ae0aace965fa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SortByPolarAngle</name>
    <filename>class_sort_by_polar_angle.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>class_sort_by_polar_angle.html</anchorfile>
      <anchor>ab1bd17857bfefedbe2607f14cf7ad66a</anchor>
      <arglist>(const float2 &amp;a, const float2 &amp;b) const </arglist>
    </member>
    <member kind="variable">
      <type>float2</type>
      <name>perspective</name>
      <anchorfile>class_sort_by_polar_angle.html</anchorfile>
      <anchor>a92ab51fa073ba4e35fd5f365b14d5e77</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoundBuffer</name>
    <filename>class_sound_buffer.html</filename>
    <member kind="variable">
      <type>std::vector&lt; u8 &gt;</type>
      <name>data</name>
      <anchorfile>class_sound_buffer.html</anchorfile>
      <anchor>a1b7cafc50158b24d43627578c2109f5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>frequency</name>
      <anchorfile>class_sound_buffer.html</anchorfile>
      <anchor>a42860035c4b796d04480fb00d50b1532</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is16Bit</name>
      <anchorfile>class_sound_buffer.html</anchorfile>
      <anchor>a42998814ecf388af2ead612663fafcf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>stereo</name>
      <anchorfile>class_sound_buffer.html</anchorfile>
      <anchor>a17c840c595abecaa327b98bd5201f404</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoundChannel</name>
    <filename>class_sound_channel.html</filename>
    <member kind="enumeration">
      <name>SoundState</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a4b6e7a5f4df3b351994d40a8843c5559</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Stopped</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a4b6e7a5f4df3b351994d40a8843c5559a888682301a1dfa77320146152e22e96e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Pending</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a4b6e7a5f4df3b351994d40a8843c5559a134493faf9e14f8699222b87daf34bee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Playing</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a4b6e7a5f4df3b351994d40a8843c5559a3aacc46b8361408018bf6c8c4ff88395</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SoundType</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a7c5ec3578f696b785e923f118617aa36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Triggered</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a7c5ec3578f696b785e923f118617aa36a999d0f4da0c8dd07b58719bc037b63b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Ambient</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a7c5ec3578f696b785e923f118617aa36a867725f1fa464ecf8c0949258fff1a59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Voice</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a7c5ec3578f696b785e923f118617aa36a7c1843bac489b1d40540970ce79c719b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SoundChannel</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a4d5717eadacf174a4c32d5c39b44edde</anchor>
      <arglist>(sound_id_t channelId, SoundType type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SoundChannel</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>aa85af9a8e411e6b6e8d29e559ffd6a4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Play</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>ad362de4b8b8c4485c275318137eb54a8</anchor>
      <arglist>(AudioAssetPtr audioAsset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddBuffer</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a876d68624b1b3f86b4961a06fb88c11b</anchor>
      <arglist>(AudioAssetPtr buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPositional</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a42b8c52db12537d3b876f04faf17ccef</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLooped</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a718f75bf525cef69e83da1dadbcd067a</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPosition</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>ad3a11d886b59d2a745d4a56bcc29cdb1</anchor>
      <arglist>(const float3 &amp;pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPitch</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>ae645efb4ee5c2f1245572e856d7c3418</anchor>
      <arglist>(float pitch)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGain</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>aa4f2acfcf73d544360c7e4044de7237f</anchor>
      <arglist>(float gain)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMasterGain</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a05f76dfed738a733b4a7b79b6a2a0958</anchor>
      <arglist>(float master_gain)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRange</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a0e5f9fc3c12344cb937ab9337a7552ba</anchor>
      <arglist>(float inner_radius, float outer_radius, float rolloff)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Stop</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a9cbdd3c9503ae662cb49989d92be984a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>ab1bb48e0aca742f680e58c89fb890fe4</anchor>
      <arglist>(const float3 &amp;listener_pos)</arglist>
    </member>
    <member kind="function">
      <type>SoundState</type>
      <name>GetState</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a2f6c9f0ea5a352c53a124fff30ea305f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>GetSoundName</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>afe4eb6043b276eb6b57bfd8fde9cc251</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SoundType</type>
      <name>GetSoundType</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>abdac6d5240b6f7cb7fec8b2aff2280e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetGain</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a92c01f75c7bc63dca1cfd00546ac778b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetPitch</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>ab93c9f531f8242e002d0889dbf675611</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>sound_id_t</type>
      <name>GetChannelId</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>aae1e0e19f601c5a3bfc65fe9aeca70c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>QueueBuffers</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>ae5573b9a2dca20db7dacc946515ff5d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>UnqueueBuffers</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a7c653f369817445954af3967d63b48d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>CreateSource</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>aabc9ae8459d8626568ce20ee7a3c1a4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>DeleteSource</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>ac62ebfe70fa34c2bd7aa14e4c5a338cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CalculateAttenuation</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a916fbb579cadff263412f627c9a576db</anchor>
      <arglist>(const float3 &amp;listener_pos)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetPositionAndMode</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a82f35e463975698ae0f40b9ee52deb4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetAttenuatedGain</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>ab79f3de94d407a872bc164c4072a7f85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SoundType</type>
      <name>type_</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a297b3dfd63aabc7546cd17d9f2b55c82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ALuint</type>
      <name>handle_</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>ac8665e75ed33a27fdaa4ba33202254eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; AudioAssetPtr &gt;</type>
      <name>pending_sounds_</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>ae45bd4506df7699f6c9d30b31ddcf8d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; AudioAssetPtr &gt;</type>
      <name>playing_sounds_</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a2a9392f775ee4cc697abcd4b6c257bcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>float</type>
      <name>pitch_</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a70025321aab7c1a7db79acccd74ea3e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>float</type>
      <name>gain_</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a7d6b89e8824a65593a096f74a6d2b88c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>float</type>
      <name>master_gain_</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a0238abdffa0635420850c2073fea254b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>float</type>
      <name>inner_radius_</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a17032b970fac8b969b22398d2c9771c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>float</type>
      <name>outer_radius_</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>acdd341454ee92ac6bae387bf2b5b13c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>float</type>
      <name>rolloff_</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>af9d6eea6c026ef0690926963d694c212</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>float</type>
      <name>attenuation_</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>af196c8953ae5a6b4a4a8e47b8d286670</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>looped_</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a735ed76e51f6c257efd111213d117512</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>positional_</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a5055ba92f49cc6dff9229bea65c21faa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>buffered_mode_</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a4dcc87945df3c0ad4f7a276208f45f43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>float3</type>
      <name>position_</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a0661264cacb51bdee3945498bc0c638d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SoundState</type>
      <name>state_</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>abda8ac8d15b396365b9493fe52ae2ae1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>sound_id_t</type>
      <name>channelId</name>
      <anchorfile>class_sound_channel.html</anchorfile>
      <anchor>a82e1f2087997c6d947a25e90f42297c0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Sphere</name>
    <filename>class_sphere.html</filename>
    <member kind="function">
      <type></type>
      <name>Sphere</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>a890a63ff583cb88e7ec4e840b4ef5eb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sphere</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>ac64071cefd1dec29eeeea8850cf999f7</anchor>
      <arglist>(const float3 &amp;center, float radius)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sphere</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>a565d1107f9ea776d0741127f5e979676</anchor>
      <arglist>(const float3 &amp;pointA, const float3 &amp;pointB)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sphere</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>ab9af8f03e2d7cafb08eabb4adb319231</anchor>
      <arglist>(const float3 &amp;pointA, const float3 &amp;pointB, const float3 &amp;pointC)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sphere</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>a86a627114be7447064f98fd06ae5dd1a</anchor>
      <arglist>(const float3 &amp;pointA, const float3 &amp;pointB, const float3 &amp;pointC, const float3 &amp;pointD)</arglist>
    </member>
    <member kind="function">
      <type>AABB</type>
      <name>MinimalEnclosingAABB</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>acbfdcd52a00947530f0a339bebad5294</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AABB</type>
      <name>MaximalContainedAABB</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>a441f596873aa5a8a63da6b36189d6fdc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNegativeInfinity</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>a241326e6bac1fb2e0d3047000108b7fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Volume</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>af96dd641abb8d9650e258f0cf104240a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>SurfaceArea</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>a6f280acfa43636a4860c869ca161c1f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFinite</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>a21dc5af6fc556cab6f9e0f13d80b7c33</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDegenerate</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>a366bc6e6cb876f679e4b1a88c8359462</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Contains</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>ab7d8ab2c9fab5e97e10fc614c7409b4a</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>a1a9f263ec2c2adc16a8fbc9e2d66129d</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ClosestPoint</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>abaa807e5be4b3187130b7a00e94e2f6a</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>abe5de83a3e85fde0ec2a8ca7ca4695ac</anchor>
      <arglist>(const LineSegment &amp;l, float3 *intersectionPoint=0, float3 *intersectionNormal=0, float *d=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>af4ddd7b727e288d1425c875738b2f30c</anchor>
      <arglist>(const Line &amp;l, float3 *intersectionPoint=0, float3 *intersectionNormal=0, float *d=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>a9e1b065ef893095613479450a01647a7</anchor>
      <arglist>(const Ray &amp;r, float3 *intersectionPoint=0, float3 *intersectionNormal=0, float *d=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>adab21c2ab9b202a579cfb896b5255de5</anchor>
      <arglist>(const Plane &amp;plane) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>af41483606cacf7dc8f57fce60c1126ea</anchor>
      <arglist>(const AABB &amp;aabb, float3 *closestPointOnAABB) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>a2ca0bf43dab593edb184def9bdb4451f</anchor>
      <arglist>(const OBB &amp;obb, float3 *closestPointOnOBB) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>ab1dca1214e516461872bea21fd4f7457</anchor>
      <arglist>(const Triangle &amp;triangle, float3 *closestPointOnTriangle) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>ac1824fb7c67a863cbed80d7d62b2103d</anchor>
      <arglist>(const Sphere &amp;sphere) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Enclose</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>ab54c21fd4edabceeb00784ef08a6e36f</anchor>
      <arglist>(const AABB &amp;aabb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Enclose</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>a55f1bd16d4d046f2e47c842cd64e8da1</anchor>
      <arglist>(const OBB &amp;obb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Enclose</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>ad44abce637881980d7b41c3f28d468dd</anchor>
      <arglist>(const Sphere &amp;sphere)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Enclose</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>a3dcc1af9958dbaefaaa0a8ac21a8cfe1</anchor>
      <arglist>(const LineSegment &amp;lineSegment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Enclose</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>ac78242191dda26582c2c230a3cba5124</anchor>
      <arglist>(const float3 &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Enclose</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>aded2706b2ac39045e899f6095e6ed111</anchor>
      <arglist>(const float3 *pointArray, int numPoints)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>RandomPointInside</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>a4de2de8f782d2d2785f0fc58c46e7aa9</anchor>
      <arglist>(LCG &amp;lcg)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>RandomPointOnSurface</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>ae5a9082bcc8f1d6fc0e51da74dbdaae5</anchor>
      <arglist>(LCG &amp;lcg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Triangulate</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>a5f880cf1f7d73359fe09ae75bea59be9</anchor>
      <arglist>(float3 *outPos, float3 *outNormal, float2 *outUV, int numVertices)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Sphere</type>
      <name>FastEnclosingSphere</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>a0ddd9b8db5bb63ef7eb0bd9ad125be10</anchor>
      <arglist>(const float3 *pointArray, int numPoints)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3</type>
      <name>RandomPointInside</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>a11efc3b56e856d9fbd043944efd03241</anchor>
      <arglist>(LCG &amp;lcg, const float3 &amp;center, float radius)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3</type>
      <name>RandomPointOnSurface</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>a39e806a5aa2ba1ade556bc65b6c90c8e</anchor>
      <arglist>(LCG &amp;lcg, const float3 &amp;center, float radius)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float3</type>
      <name>RandomUnitaryFloat3</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>a884859bcf6c7d707a90854e99a7b0c19</anchor>
      <arglist>(LCG &amp;lcg)</arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>pos</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>af81384e5e37e9089a9aa731f429d4592</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>r</name>
      <anchorfile>class_sphere.html</anchorfile>
      <anchor>a2b1b412591a00eb30cb012e444f7192d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SuppressedPaintWidget</name>
    <filename>class_suppressed_paint_widget.html</filename>
    <member kind="function">
      <type></type>
      <name>SuppressedPaintWidget</name>
      <anchorfile>class_suppressed_paint_widget.html</anchorfile>
      <anchor>a5672b322d1518ea02e7313062417f9b3</anchor>
      <arglist>(QWidget *parent=0, Qt::WindowFlags f=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SuppressedPaintWidget</name>
      <anchorfile>class_suppressed_paint_widget.html</anchorfile>
      <anchor>a74db88098f3f72fc0230404764fb2d25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>event</name>
      <anchorfile>class_suppressed_paint_widget.html</anchorfile>
      <anchor>ad7437bf486405f699eeb4bd0db9c557a</anchor>
      <arglist>(QEvent *event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>paintEvent</name>
      <anchorfile>class_suppressed_paint_widget.html</anchorfile>
      <anchor>a480a9c48452243964c8d33ee15a6de89</anchor>
      <arglist>(QPaintEvent *event)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TextureAsset</name>
    <filename>class_texture_asset.html</filename>
    <base>IAsset</base>
    <member kind="slot">
      <type>QString</type>
      <name>Type</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1ee38592ddb9473b2824a6d39268465f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>Name</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0c3aedda2f04b27a77f90da3cf44eed6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetDiskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a65037aa4ef8ec83d976afd83253f6234</anchor>
      <arglist>(QString diskSource)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>DiskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a21607e4493b017999f35189d82a1587b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>LoadFromFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a6a204f512b26f20f49e7fda9ddfe15ed</anchor>
      <arglist>(QString filename)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>LoadFromCache</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ac1f56599756004172408ff0c40079ab6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Unload</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ab230fc35705c702c9ecf359930b6693f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>afa0a8684b67098c0694e71f1677a6fd0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual AssetPtr</type>
      <name>Clone</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a8bfd7618fbf62b20e106f81cb7648ddb</anchor>
      <arglist>(QString newAssetName) const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual bool</type>
      <name>SaveToFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a43ee1d3d1c9bc8eac79811d2900ed8cf</anchor>
      <arglist>(const QString &amp;filename, const QString &amp;serializationParameters=&quot;&quot;) const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>SaveCachedCopyToFile</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>af74f5e730e370db0e54a9cf7308ea32e</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="slot">
      <type>AssetStoragePtr</type>
      <name>GetAssetStorage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a9fd4b8a3353601b0ff47e9042e1e45e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>AssetProviderPtr</type>
      <name>GetAssetProvider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1968beba15e2f64b8aa356261bbe8eec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>ToString</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a1ad41ad9fdcc0f036f786e0d0cc1259c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QByteArray</type>
      <name>GetRawData</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a827ca46bb695958627e1e63d7feb0424</anchor>
      <arglist>(const QString serializationParameters=&quot;&quot;) const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Unloaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a51e04b4100d7bdb620c6f0ae440d5f54</anchor>
      <arglist>(IAsset *asset)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Loaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0bf19c4b11e18f5925285231334aa054</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextureAsset</name>
      <anchorfile>class_texture_asset.html</anchorfile>
      <anchor>a848931e3d83660c315487ad6858b4ea3</anchor>
      <arglist>(AssetAPI *owner, const QString &amp;type, const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TextureAsset</name>
      <anchorfile>class_texture_asset.html</anchorfile>
      <anchor>a115d65cc1ce33a8eb9cc1762497c4537</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>DeserializeFromData</name>
      <anchorfile>class_texture_asset.html</anchorfile>
      <anchor>aeabce1724bbc03f4f1c9b4c35367cbdb</anchor>
      <arglist>(const u8 *data_, size_t numBytes, const bool allowAsynchronous)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SerializeTo</name>
      <anchorfile>class_texture_asset.html</anchorfile>
      <anchor>af74300fb52c70fe99d0087913b22c0e3</anchor>
      <arglist>(std::vector&lt; u8 &gt; &amp;data, const QString &amp;serializationParameters) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operationCompleted</name>
      <anchorfile>class_texture_asset.html</anchorfile>
      <anchor>a5c65ff81c2bc05f94efddd1c06fc8eaa</anchor>
      <arglist>(Ogre::BackgroundProcessTicket ticket, const Ogre::BackgroundProcessResult &amp;result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DoUnload</name>
      <anchorfile>class_texture_asset.html</anchorfile>
      <anchor>a911fcdaa8cf8606e08ca90e22bdbe552</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QImage</type>
      <name>ToQImage</name>
      <anchorfile>class_texture_asset.html</anchorfile>
      <anchor>a66a1b9953e7dceee743c9db323cbab62</anchor>
      <arglist>(size_t faceIndex=0, size_t mipmapLevel=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLoaded</name>
      <anchorfile>class_texture_asset.html</anchorfile>
      <anchor>a8fcae47cc129bdf3aa1f3eee7a282b56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetContents</name>
      <anchorfile>class_texture_asset.html</anchorfile>
      <anchor>af6d985c21bd3931123cf09fe58d3890c</anchor>
      <arglist>(int newWidth, int newHeight, const u8 *data, size_t numBytes, Ogre::PixelFormat ogreFormat, bool regenerateMipmaps, bool dynamic)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetContentsFillSolidColor</name>
      <anchorfile>class_texture_asset.html</anchorfile>
      <anchor>a7476d4362b44b6a33c9daba4a30b0826</anchor>
      <arglist>(int newWidth, int newHeight, u32 color, Ogre::PixelFormat ogreFormat, bool regenerateMipmaps, bool dynamic)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetContentsDrawText</name>
      <anchorfile>class_texture_asset.html</anchorfile>
      <anchor>a8c8747fcceba038ce4f9e7d63bf07ab0</anchor>
      <arglist>(int newWidth, int newHeight, QString text, const QColor &amp;textColor, const QFont &amp;font, const QBrush &amp;backgroundBrush, const QPen &amp;borderPen, int flags=Qt::AlignCenter|Qt::TextWordWrap, bool generateMipmaps=false, bool dynamic=false, float xRadius=20.f, float yRadius=20.f)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFromFileInMemory</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a76fae2e679dc173de78d3dbe2d7b04e3</anchor>
      <arglist>(const u8 *data, size_t numBytes, bool allowAsynchronous=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadCompleted</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a156e1f8df2f868412c3278f27aab16af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DependencyLoaded</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a8db3fb94d1bd73e184bf3b4e5d0c7153</anchor>
      <arglist>(AssetPtr dependee)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; AssetReference &gt;</type>
      <name>FindReferences</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0e74e3802c3d7cc221ded59de7e5a5c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; AssetReference &gt;</type>
      <name>FindReferencesRecursive</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a43661820be04bb6898b0f6e0c1e60a9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAssetProvider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ab909dddbde3614b811908174a10ddf59</anchor>
      <arglist>(AssetProviderPtr provider)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAssetStorage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ad7cb7c54d73a2677f242dcd318791ce9</anchor>
      <arglist>(AssetStoragePtr storage)</arglist>
    </member>
    <member kind="variable">
      <type>Ogre::TexturePtr</type>
      <name>ogreTexture</name>
      <anchorfile>class_texture_asset.html</anchorfile>
      <anchor>af4cb25f73633715da30bbb7b6deca135</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>ogreAssetName</name>
      <anchorfile>class_texture_asset.html</anchorfile>
      <anchor>a5f58c43640bcca945e63fcca29d5ce1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Ogre::BackgroundProcessTicket</type>
      <name>loadTicket_</name>
      <anchorfile>class_texture_asset.html</anchorfile>
      <anchor>a2b680d955254b1975cff2354592e0fc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetAPI *</type>
      <name>assetAPI</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>acfa90de1e91d33066b10e9a983d7f706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetProviderWeakPtr</type>
      <name>provider</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a34182317435ed01abcfa86fd1a523a4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssetStorageWeakPtr</type>
      <name>storage</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a0d7711709ea3a5d74097c36eeb53acce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>type</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a9a2cbc25b81810fa610da6a686fd5d03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>a19e035f9cfe2559d8ea38c331ca9acfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>diskSource</name>
      <anchorfile>class_i_asset.html</anchorfile>
      <anchor>ad8db45ff366bec21d66c9f853f0bde67</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Transform</name>
    <filename>class_transform.html</filename>
    <member kind="function">
      <type></type>
      <name>Transform</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>aa08ca4266efabc768973cdeea51945ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Transform</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>a63bf74598d65963a1c96a641a139ac35</anchor>
      <arglist>(const float3 &amp;pos_, const float3 &amp;rot_, const float3 &amp;scale)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Transform</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>a88020d9a0a9ee2688e0bcee53110cbb7</anchor>
      <arglist>(const float3x3 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Transform</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>a1eaef766e5818aa9425af747868a7bf6</anchor>
      <arglist>(const float3x4 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Transform</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>a1a6726818c7166782815c7854c317d2f</anchor>
      <arglist>(const float4x4 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPos</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>a5408cd315607ca0b669ba589541ce63e</anchor>
      <arglist>(const float3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPos</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>a937e4fe70fa57e9fb9ec01b44265a303</anchor>
      <arglist>(float x, float y, float z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRotation</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>a80e28cb7ca8818e944c6177ed6ca7bfe</anchor>
      <arglist>(float x, float y, float z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetScale</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>a3f4051624bff3c6d6c5be9fd9433fe2f</anchor>
      <arglist>(float x, float y, float z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetScale</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>ac261c1ab9b2d4a2c990dc3b3d2daa873</anchor>
      <arglist>(const float3 &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>ToFloat3x4</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>a47e8aa7a576b0d628a20cc923320b415</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>ToFloat4x4</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>ab9194d72c49cb4214769edfbde2d7925</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromFloat3x4</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>adbaabf5694d75dfbbeb9a814355037c2</anchor>
      <arglist>(const float3x4 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromFloat4x4</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>a07222990c8ae4ab69a6ec895e59225d6</anchor>
      <arglist>(const float4x4 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRotationAndScale</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>afdf88637d088ff969db66909728a744f</anchor>
      <arglist>(const float3x3 &amp;mat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOrientation</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>a5f3c045db46970e7f555d12fa5c1c4c5</anchor>
      <arglist>(const float3x3 &amp;mat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOrientation</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>a9a1c6f2f87f6d2fde9a5b6aecbfafe53</anchor>
      <arglist>(const Quat &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>Orientation3x3</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>adfb558be921a73dab9606cdd442d81e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>Orientation</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>a0fd2c41b16828501de55c183ff1a384a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Transform</type>
      <name>operator*</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>aac212b2c917e1fd9ce3c7a93ff633658</anchor>
      <arglist>(const Transform &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>Transform</type>
      <name>Mul</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>a116f90b038bcf09bfe782434b155c7be</anchor>
      <arglist>(const Transform &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator float3x4</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>a7aa470429c91c58bc982bde30649395c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator float4x4</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>accd7585e9d7697624e93d0a6c71ce99f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>ad7a14c049f0deef8af2b0520a3465b9a</anchor>
      <arglist>(const Transform &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>a50fc366392d282da233613e44abd5b3e</anchor>
      <arglist>(const Transform &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>toString</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>a28bfa24a7b5083bb121e9651c9ab2bee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>pos</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>a94775b579f4163babedc5616470e6f8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>rot</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>a5bc4c290347608493cf102d13f3696d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>scale</name>
      <anchorfile>class_transform.html</anchorfile>
      <anchor>a9577e939313c3a35f53a3b84ac77a2ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TransformEditor</name>
    <filename>class_transform_editor.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>TranslateTargets</name>
      <anchorfile>class_transform_editor.html</anchorfile>
      <anchor>a18a9ecd830abf179f60fa408dadf72ed</anchor>
      <arglist>(const float3 &amp;offset)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RotateTargets</name>
      <anchorfile>class_transform_editor.html</anchorfile>
      <anchor>a0623c9fcf7eb6ebed0b582df98eef355</anchor>
      <arglist>(const Quat &amp;delta)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ScaleTargets</name>
      <anchorfile>class_transform_editor.html</anchorfile>
      <anchor>af20f464aceff92947e57c1d8a285b01a</anchor>
      <arglist>(const float3 &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransformEditor</name>
      <anchorfile>class_transform_editor.html</anchorfile>
      <anchor>a5e44233f3c67d07ee9de778afdf8087e</anchor>
      <arglist>(const ScenePtr &amp;scene)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TransformEditor</name>
      <anchorfile>class_transform_editor.html</anchorfile>
      <anchor>a7b9eeeb2eddba2613976eb4958effb0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSelection</name>
      <anchorfile>class_transform_editor.html</anchorfile>
      <anchor>a89142328bc32bc85143d73af5a8106de</anchor>
      <arglist>(const QList&lt; EntityPtr &gt; &amp;entities)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AppendSelection</name>
      <anchorfile>class_transform_editor.html</anchorfile>
      <anchor>a936975741cfde387d26d11a722cfe7b1</anchor>
      <arglist>(const QList&lt; EntityPtr &gt; &amp;entities)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AppendSelection</name>
      <anchorfile>class_transform_editor.html</anchorfile>
      <anchor>a1b8b737d0381032fd035e97d32453265</anchor>
      <arglist>(const EntityPtr &amp;entity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveFromSelection</name>
      <anchorfile>class_transform_editor.html</anchorfile>
      <anchor>aa4660ae2544476dc2ce52ec10957d4aa</anchor>
      <arglist>(const QList&lt; EntityPtr &gt; &amp;entities)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveFromSelection</name>
      <anchorfile>class_transform_editor.html</anchorfile>
      <anchor>ac873e7a22e59bfc6cdec1aa297a4e2b7</anchor>
      <arglist>(const EntityPtr &amp;entity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearSelection</name>
      <anchorfile>class_transform_editor.html</anchorfile>
      <anchor>a3ac1524f07e2d7844af08b1d519736e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FocusGizmoPivotToAabbBottomCenter</name>
      <anchorfile>class_transform_editor.html</anchorfile>
      <anchor>a07676d5bb88f6021030243967ef04d9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGizmoVisible</name>
      <anchorfile>class_transform_editor.html</anchorfile>
      <anchor>af6b589d182d58bcbf775dd6e9d5d283b</anchor>
      <arglist>(bool show)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>GetGizmoPos</name>
      <anchorfile>class_transform_editor.html</anchorfile>
      <anchor>a1f5b73c4388f5b00c934ccdcf104e373</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleKeyEvent</name>
      <anchorfile>class_transform_editor.html</anchorfile>
      <anchor>acf28c31000a2d006107d417cd37b9461</anchor>
      <arglist>(KeyEvent *e)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CreateGizmo</name>
      <anchorfile>class_transform_editor.html</anchorfile>
      <anchor>a8c91e5f9c26a6c4259f734153c63bed8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>DeleteGizmo</name>
      <anchorfile>class_transform_editor.html</anchorfile>
      <anchor>a97d9f37012e18f770b601f0778c5536e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SceneWeakPtr</type>
      <name>scene</name>
      <anchorfile>class_transform_editor.html</anchorfile>
      <anchor>a27597e1bef3669b3652e7c0642caadcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EntityPtr</type>
      <name>gizmo</name>
      <anchorfile>class_transform_editor.html</anchorfile>
      <anchor>abfa9dda3f2ccce08f1c9ea49d9aa9d25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QList&lt; AttributeWeakPtr &gt;</type>
      <name>targets</name>
      <anchorfile>class_transform_editor.html</anchorfile>
      <anchor>a93fdd95bcab6ddace3085527bb505c1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>InputContextPtr</type>
      <name>input</name>
      <anchorfile>class_transform_editor.html</anchorfile>
      <anchor>a9f4577fc249328b579a88c2687f65b41</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TranslateOp</name>
    <filename>class_translate_op.html</filename>
    <member kind="function">
      <type></type>
      <name>TranslateOp</name>
      <anchorfile>class_translate_op.html</anchorfile>
      <anchor>a0204795c029a30b785c3cc303d7453ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TranslateOp</name>
      <anchorfile>class_translate_op.html</anchorfile>
      <anchor>a0e954a3bd9371e441d7e58eb6a997263</anchor>
      <arglist>(const float3 &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TranslateOp</name>
      <anchorfile>class_translate_op.html</anchorfile>
      <anchor>a6e1ae5375f1e1012ebeee95c7060ef15</anchor>
      <arglist>(float x, float y, float z)</arglist>
    </member>
    <member kind="function">
      <type>float3x4</type>
      <name>ToFloat3x4</name>
      <anchorfile>class_translate_op.html</anchorfile>
      <anchor>adb462671cabc76140b85d3495eb3e400</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>ToFloat4x4</name>
      <anchorfile>class_translate_op.html</anchorfile>
      <anchor>a13d2bda791376cf6bed1077f6f70f5a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Offset</name>
      <anchorfile>class_translate_op.html</anchorfile>
      <anchor>a6cf0d8f70f8bb149708b541c2f60facd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator float3x4</name>
      <anchorfile>class_translate_op.html</anchorfile>
      <anchor>a51a1f772398bf4473bf82c83ba99913f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator float4x4</name>
      <anchorfile>class_translate_op.html</anchorfile>
      <anchor>a5c4bc760c3aa3c2e4b66bea1277a7f03</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>class_translate_op.html</anchorfile>
      <anchor>a87ca4fbc13ae4adf5eeced2b60611f1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>class_translate_op.html</anchorfile>
      <anchor>af5526f92b8f923bf1f170ee23b57cade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z</name>
      <anchorfile>class_translate_op.html</anchorfile>
      <anchor>ac2fa48941b375e05d159feab19086906</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TreeWidgetItemExpandMemory</name>
    <filename>class_tree_widget_item_expand_memory.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>HandleItemExpanded</name>
      <anchorfile>class_tree_widget_item_expand_memory.html</anchorfile>
      <anchor>a1c02602f1aeb23235bea25510adaed1c</anchor>
      <arglist>(QTreeWidgetItem *item)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>HandleItemCollapsed</name>
      <anchorfile>class_tree_widget_item_expand_memory.html</anchorfile>
      <anchor>a96a71224df1b7d2a7e1f5728d61f3cb0</anchor>
      <arglist>(QTreeWidgetItem *item)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeWidgetItemExpandMemory</name>
      <anchorfile>class_tree_widget_item_expand_memory.html</anchorfile>
      <anchor>a4c1d1259a00f7d26db2003c21b88b354</anchor>
      <arglist>(const char *group, Framework *fw)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeWidgetItemExpandMemory</name>
      <anchorfile>class_tree_widget_item_expand_memory.html</anchorfile>
      <anchor>a334ab670afb272c28aa986afb26b2fd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpandItem</name>
      <anchorfile>class_tree_widget_item_expand_memory.html</anchorfile>
      <anchor>ae23a17477a2f248a5f09da7d41a2bec0</anchor>
      <arglist>(QTreeWidget *treeWidget, const QTreeWidgetItem *item) const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>GetIndentifierText</name>
      <anchorfile>class_tree_widget_item_expand_memory.html</anchorfile>
      <anchor>a158f0f270161ef6189ea8b134876510f</anchor>
      <arglist>(const QTreeWidgetItem *item) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Load</name>
      <anchorfile>class_tree_widget_item_expand_memory.html</anchorfile>
      <anchor>a417247f9771a0ba022ed67ddb0d458ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Save</name>
      <anchorfile>class_tree_widget_item_expand_memory.html</anchorfile>
      <anchor>a5e3afb2c7cac1d99bcabdebfbdbcf68e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::string</type>
      <name>ToString</name>
      <anchorfile>class_tree_widget_item_expand_memory.html</anchorfile>
      <anchor>a0ba2483e9e253901908a8d1cf4e550a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QSet&lt; QString &gt;</type>
      <name>items</name>
      <anchorfile>class_tree_widget_item_expand_memory.html</anchorfile>
      <anchor>a6cf0d6f3a139d346461bea3c0b37b162</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_tree_widget_item_expand_memory.html</anchorfile>
      <anchor>a53ac0f2310f872d6e362168e78cdc5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>groupName</name>
      <anchorfile>class_tree_widget_item_expand_memory.html</anchorfile>
      <anchor>a8b7443b966a1ef1338142375f40bc9e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Triangle</name>
    <filename>class_triangle.html</filename>
    <member kind="function">
      <type></type>
      <name>Triangle</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>aaefe4ed500c07918d30c6f0e286332c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Triangle</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>a4dc0397e156cab591c2fb6b6c51cd7d3</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b, const float3 &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Barycentric</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>a686e5b36503b6af7983cab49f0bb6594</anchor>
      <arglist>(const float3 &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Point</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>a2b29f756cf1149594c57c61018109043</anchor>
      <arglist>(float u, float v, float w) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Point</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>a2fb8ea2441da0523c08714ce01871812</anchor>
      <arglist>(float u, float v) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Point</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>ae5fa98c0f9fa03ca8ae30202d6cfcdaa</anchor>
      <arglist>(const float3 &amp;barycentric) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Area</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>ad3885c40e78c33327a622351dbb07ed7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Plane</type>
      <name>GetPlane</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>a79326fefb2cb7ce14b9ed6aba8d80cc9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>NormalCCW</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>ad6d0e38e63b4ca990a564a504f690b47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>NormalCW</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>a9cba12061a7deb8269ea0b842ca56647</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>UnnormalizedNormalCCW</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>a13224f51676d8889f027c7e8f92011c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>UnnormalizedNormalCW</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>abb11b86d627c75dee7411daf4abba631</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDegenerate</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>ad11c4d89a46c96bf36ee8eeb2fa7a4ed</anchor>
      <arglist>(float epsilon=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Contains</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>a9b29acd69889f03786445e704ad1f622</anchor>
      <arglist>(const float3 &amp;point, float triangleThickness=1e-3f) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Distance</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>ab6454ed4a0b33235a4e3380f26e8a3d7</anchor>
      <arglist>(const float3 &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>a4e4ac89137c05a9ddd4736c7c1314e93</anchor>
      <arglist>(const LineSegment &amp;lineSegment, float *d, float3 *intersectionPoint) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>aae9a4a3356a2a84c167f9b916008a390</anchor>
      <arglist>(const Line &amp;line, float *d, float3 *intersectionPoint) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>a1f7892ec24d5b51f729c8bbc0fd20aa3</anchor>
      <arglist>(const Ray &amp;ray, float *d, float3 *intersectionPoint) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>ae73ce87d3d7c0ff05708bd17b1be0f85</anchor>
      <arglist>(const Plane &amp;plane) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>a29829a7eab3da30199e4ed314e639934</anchor>
      <arglist>(const Sphere &amp;sphere, float3 *closestPointOnTriangle) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>a028885262e327bcb18c2d75c4c2382cb</anchor>
      <arglist>(const Triangle &amp;triangle, LineSegment *outLine) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>a960e339bdc32b4f99c7bb5dc65c7c746</anchor>
      <arglist>(const AABB &amp;aabb) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>a2a742585f3e4adf5540e5cb3980b00e8</anchor>
      <arglist>(const OBB &amp;obb) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProjectToAxis</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>a0f925df1d5f648fcd30eda680b3ea30e</anchor>
      <arglist>(const float3 &amp;axis, float &amp;dMin, float &amp;dMax) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ClosestPoint</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>a096d6ab71390035b7059d5c11062bc6d</anchor>
      <arglist>(const float3 &amp;targetPoint) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ClosestPoint</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>aa27a86014d6421ca41402421dfdd2e6d</anchor>
      <arglist>(const LineSegment &amp;other, float3 *otherPt) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ClosestPoint</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>aae4440034bd1702b87552d0731711052</anchor>
      <arglist>(const Ray &amp;other, float3 *otherPt) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ClosestPoint</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>ab9a4ba0bea34bf4682bb9bab11fd3714</anchor>
      <arglist>(const Line &amp;other, float3 *otherPt) const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ClosestPoint</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>a06f42609d4d5bdec6844ad0273177073</anchor>
      <arglist>(const Triangle &amp;other, float3 *otherPt) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>BarycentricInsideTriangle</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>a841663c26d102cdb7051b7ec21ba784f</anchor>
      <arglist>(const float3 &amp;barycentric)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>Area2D</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>a755f2926a64f5ce5c09960c7b48742d6</anchor>
      <arglist>(const float2 &amp;p1, const float2 &amp;p2, const float2 &amp;p3)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>SignedArea</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>a9fb56471e79b893d6e4669ba077f6b33</anchor>
      <arglist>(const float3 &amp;point, const float3 &amp;a, const float3 &amp;b, const float3 &amp;c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsDegenerate</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>a6c96633c0fa46486f02c8a618e269552</anchor>
      <arglist>(const float3 &amp;p1, const float3 &amp;p2, const float3 &amp;p3, float epsilon=1e-3f)</arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>a</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>a60032e205c77bf7ea872af591926ef15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>b</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>ad10fe2087ce2c2aea57063c83281fe22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>c</name>
      <anchorfile>class_triangle.html</anchorfile>
      <anchor>aac57f92363f5c03d76ec2622eee90898</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>UiAPI</name>
    <filename>class_ui_a_p_i.html</filename>
    <member kind="slot">
      <type>UiMainWindow *</type>
      <name>MainWindow</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>a71b71f6e9f57f494653d332a27a5730b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>UiGraphicsView *</type>
      <name>GraphicsView</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>ab57ab51aed3ce35efc56d09a94e13d99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QGraphicsScene *</type>
      <name>GraphicsScene</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>a46bcfee135b3bf418d61b772c8a552e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>UiProxyWidget *</type>
      <name>AddWidgetToScene</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>af78fe8f0905b2955d9a930a1b38dcf9b</anchor>
      <arglist>(QWidget *widget, Qt::WindowFlags flags=Qt::Dialog)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>AddProxyWidgetToScene</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>a0e64bf80c02e88eb6b02e4e96648f6a2</anchor>
      <arglist>(UiProxyWidget *proxy)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveWidgetFromScene</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>ab4853056371f04bc629c34c63cd46351</anchor>
      <arglist>(QWidget *widget)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveWidgetFromScene</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>a9e6c10748285c5ff1b6c7e77501ab98f</anchor>
      <arglist>(QGraphicsProxyWidget *widget)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RemoveProxyWidgetFromScene</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>afae322ce03b518cb3ded1570b2cbdda5</anchor>
      <arglist>(QGraphicsProxyWidget *widget)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ShowWidget</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>a61469a46161eff82a32246c79c0c1766</anchor>
      <arglist>(QWidget *widget) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>HideWidget</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>aa03053a6007aee0f15f087b4832dbbf9</anchor>
      <arglist>(QWidget *widget) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>BringWidgetToFront</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>aaa370f10e5c64431826c4a3af7f16f7d</anchor>
      <arglist>(QWidget *widget) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>BringWidgetToFront</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>ae3cbbef2f150066b0277e26c3b3d88e1</anchor>
      <arglist>(QGraphicsProxyWidget *widget) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>BringProxyWidgetToFront</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>abcbe911a17f144e20e96d9d9f178f0be</anchor>
      <arglist>(QGraphicsProxyWidget *widget) const </arglist>
    </member>
    <member kind="slot">
      <type>QWidget *</type>
      <name>LoadFromFile</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>a0ea6ce3927f879917d4ba509e40b7fc0</anchor>
      <arglist>(const QString &amp;filePath, bool addToScene=true, QWidget *parent=0)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>EmitContextMenuAboutToOpen</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>adfca68ce007c1f4cc31ba368ade4995a</anchor>
      <arglist>(QMenu *menu, QList&lt; QObject * &gt; targets)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ContextMenuAboutToOpen</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>ae33ba126d682e2b743b4ff754dd40773</anchor>
      <arglist>(QMenu *menu, QList&lt; QObject * &gt; targets)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UiAPI</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>a745199f65345eca2811979e7f1b49c44</anchor>
      <arglist>(Framework *owner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~UiAPI</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>aa3b5ac94f6712e62437d3dd886cd88c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnProxyDestroyed</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>a45b1ad766c852cc25595f4724ff22b87</anchor>
      <arglist>(QObject *obj)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnSceneRectChanged</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>a6f4130f64522e289d7895339badc8fac</anchor>
      <arglist>(const QRectF &amp;rect)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>DeleteCallingWidgetOnClose</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>abe63d49eb662232d0718f5de1dd49e80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>owner</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>afdcdd5b5de2fa3b7d8a947867f49f43b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QPointer&lt; UiMainWindow &gt;</type>
      <name>mainWindow</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>a94e6e729b7e794304648dcfd493fb1d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>UiGraphicsView *</type>
      <name>graphicsView</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>adf52fdc2ba48cbd2571098714dd5fd1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QGraphicsScene *</type>
      <name>graphicsScene</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>ad23d13a152b59204a922748ea2cca236</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QPointer&lt; QWidget &gt;</type>
      <name>viewportWidget</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>af85bedd4e585769234e7b7001a844a6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QList&lt; QGraphicsProxyWidget * &gt;</type>
      <name>widgets</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>af290c1d4e0332fd13d71cadcc6af9ddb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QList&lt; QGraphicsProxyWidget * &gt;</type>
      <name>fullScreenWidgets</name>
      <anchorfile>class_ui_a_p_i.html</anchorfile>
      <anchor>ab6ef7ea9c26f90d0830b3d571f4397d4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>UiGraphicsView</name>
    <filename>class_ui_graphics_view.html</filename>
    <member kind="slot">
      <type>QGraphicsItem *</type>
      <name>GetVisibleItemAtCoords</name>
      <anchorfile>class_ui_graphics_view.html</anchorfile>
      <anchor>a662686ec5194cc51bb9f7a53937c07a2</anchor>
      <arglist>(int x, int y) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Resize</name>
      <anchorfile>class_ui_graphics_view.html</anchorfile>
      <anchor>ae487419b609f710038ca4f01b4a991be</anchor>
      <arglist>(int newWidth, int newHeight)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>WindowResized</name>
      <anchorfile>class_ui_graphics_view.html</anchorfile>
      <anchor>a8eeb48949e1c130795de8ef41f6c1942</anchor>
      <arglist>(int newWidth, int newHeight)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>DragEnterEvent</name>
      <anchorfile>class_ui_graphics_view.html</anchorfile>
      <anchor>abcee5cede439f213ccf3f6c2dae22c03</anchor>
      <arglist>(QDragEnterEvent *e)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>DragLeaveEvent</name>
      <anchorfile>class_ui_graphics_view.html</anchorfile>
      <anchor>ad19ce6fc19dfa20d35e7b0195d8c6d91</anchor>
      <arglist>(QDragLeaveEvent *e)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>DragMoveEvent</name>
      <anchorfile>class_ui_graphics_view.html</anchorfile>
      <anchor>ae237a41618a3ac849eac5d6ecf83de6c</anchor>
      <arglist>(QDragMoveEvent *e)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>DropEvent</name>
      <anchorfile>class_ui_graphics_view.html</anchorfile>
      <anchor>ab30bd0d09c84d18ba6e73281de77b6c2</anchor>
      <arglist>(QDropEvent *e)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UiGraphicsView</name>
      <anchorfile>class_ui_graphics_view.html</anchorfile>
      <anchor>afe2ab8db53734c06901c211a5541f2a8</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~UiGraphicsView</name>
      <anchorfile>class_ui_graphics_view.html</anchorfile>
      <anchor>a7fca957b72fec02196c974c0ed7142f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QImage *</type>
      <name>BackBuffer</name>
      <anchorfile>class_ui_graphics_view.html</anchorfile>
      <anchor>a7d6ba8ff39b9ddb7ff1b27bd61779bc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsViewDirty</name>
      <anchorfile>class_ui_graphics_view.html</anchorfile>
      <anchor>a172f18948e5eea4a64a9c407524608dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MarkViewUndirty</name>
      <anchorfile>class_ui_graphics_view.html</anchorfile>
      <anchor>a6b66eadfa5e3f0af57736bcbe40842c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QRectF</type>
      <name>DirtyRectangle</name>
      <anchorfile>class_ui_graphics_view.html</anchorfile>
      <anchor>a319d2c7158b5ac9a94626c4194a86de7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleSceneChanged</name>
      <anchorfile>class_ui_graphics_view.html</anchorfile>
      <anchor>a689923cb33ba0687a5cec4d5eb4f73ba</anchor>
      <arglist>(const QList&lt; QRectF &gt; &amp;rectangles)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>drawBackground</name>
      <anchorfile>class_ui_graphics_view.html</anchorfile>
      <anchor>a0f536b6e3334e4b5f26ac7f4654bc26c</anchor>
      <arglist>(QPainter *, const QRectF &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>event</name>
      <anchorfile>class_ui_graphics_view.html</anchorfile>
      <anchor>ae24f5b71c396355c8cb4733374cdff7a</anchor>
      <arglist>(QEvent *event)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>resizeEvent</name>
      <anchorfile>class_ui_graphics_view.html</anchorfile>
      <anchor>aa87e6b7c61112199597de9f7b52f9328</anchor>
      <arglist>(QResizeEvent *e)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>dragEnterEvent</name>
      <anchorfile>class_ui_graphics_view.html</anchorfile>
      <anchor>a8c9bb0831d7b2d4db2f2b57c13cb9aa4</anchor>
      <arglist>(QDragEnterEvent *e)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>dragLeaveEvent</name>
      <anchorfile>class_ui_graphics_view.html</anchorfile>
      <anchor>ae55750bea064f53ba389094805c92c11</anchor>
      <arglist>(QDragLeaveEvent *e)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>dragMoveEvent</name>
      <anchorfile>class_ui_graphics_view.html</anchorfile>
      <anchor>a1df3096092ac61a0f9f3be5b3cfa5a59</anchor>
      <arglist>(QDragMoveEvent *e)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>dropEvent</name>
      <anchorfile>class_ui_graphics_view.html</anchorfile>
      <anchor>a890a5d2df932a9fe2b616e904cdf7e3d</anchor>
      <arglist>(QDropEvent *e)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QImage *</type>
      <name>backBuffer</name>
      <anchorfile>class_ui_graphics_view.html</anchorfile>
      <anchor>ad0fd4f1d058571451d85ed1576036afe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QRectF</type>
      <name>dirtyRectangle</name>
      <anchorfile>class_ui_graphics_view.html</anchorfile>
      <anchor>a68e05e0269c805a097a6c042bbe2d6ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>UiMainWindow</name>
    <filename>class_ui_main_window.html</filename>
    <member kind="slot">
      <type>bool</type>
      <name>HasMenu</name>
      <anchorfile>class_ui_main_window.html</anchorfile>
      <anchor>a6293bebabd9e21f5c909808fdc36a18a</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="slot">
      <type>QMenu *</type>
      <name>GetMenu</name>
      <anchorfile>class_ui_main_window.html</anchorfile>
      <anchor>ac8663d319e8188a914b0e64c6d0c02ed</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="slot">
      <type>QMenu *</type>
      <name>AddMenu</name>
      <anchorfile>class_ui_main_window.html</anchorfile>
      <anchor>add56f68030c83f828137bcfc78b8240a</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="slot">
      <type>QAction *</type>
      <name>AddMenuAction</name>
      <anchorfile>class_ui_main_window.html</anchorfile>
      <anchor>a10e55ccad6cad84c8510d1f511298c78</anchor>
      <arglist>(const QString &amp;menuName, const QString &amp;actionName, const QIcon &amp;icon=QIcon())</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>WindowResizeEvent</name>
      <anchorfile>class_ui_main_window.html</anchorfile>
      <anchor>af093c248614ed3b17a318b69570959e8</anchor>
      <arglist>(int newWidth, int newHeight)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>WindowCloseEvent</name>
      <anchorfile>class_ui_main_window.html</anchorfile>
      <anchor>a7727cc73ccf8165923fcba026b65bc32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UiMainWindow</name>
      <anchorfile>class_ui_main_window.html</anchorfile>
      <anchor>ae968a7ace7704f32cd73c5b4ba65927e</anchor>
      <arglist>(Framework *owner)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadWindowSettingsFromFile</name>
      <anchorfile>class_ui_main_window.html</anchorfile>
      <anchor>adfcd20fbbba8bf9ba376c5f66e90e664</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SaveWindowSettingsToFile</name>
      <anchorfile>class_ui_main_window.html</anchorfile>
      <anchor>ae7824f96744fb5c0b4a7ae40eb2911b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>DesktopWidth</name>
      <anchorfile>class_ui_main_window.html</anchorfile>
      <anchor>a427ec650ea49a0dfad1256249dc59110</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>DesktopHeight</name>
      <anchorfile>class_ui_main_window.html</anchorfile>
      <anchor>a77e89e13e1580c2813283452e37d5a64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>closeEvent</name>
      <anchorfile>class_ui_main_window.html</anchorfile>
      <anchor>aab550985adb071680ba6776359125408</anchor>
      <arglist>(QCloseEvent *e)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>resizeEvent</name>
      <anchorfile>class_ui_main_window.html</anchorfile>
      <anchor>a49b4f9c11b46552963654916a2d48423</anchor>
      <arglist>(QResizeEvent *e)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>owner</name>
      <anchorfile>class_ui_main_window.html</anchorfile>
      <anchor>ad1490c29504bc60ca509297a31cbf39e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QHash&lt; QString, QMenu * &gt;</type>
      <name>menus_</name>
      <anchorfile>class_ui_main_window.html</anchorfile>
      <anchor>a2cc88afa6f484502362b731cc13c75a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>UiProxyWidget</name>
    <filename>class_ui_proxy_widget.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>SetGraphicsEffect</name>
      <anchorfile>class_ui_proxy_widget.html</anchorfile>
      <anchor>adfa186b8f9d6016963bfb874800b7628</anchor>
      <arglist>(QGraphicsEffect *effect)</arglist>
    </member>
    <member kind="slot">
      <type>QGraphicsEffect *</type>
      <name>GraphicsEffect</name>
      <anchorfile>class_ui_proxy_widget.html</anchorfile>
      <anchor>aa12a2190f87fc0701ff518f439a46f63</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Closed</name>
      <anchorfile>class_ui_proxy_widget.html</anchorfile>
      <anchor>a89505c3d1a17983862b5dc857b7c0743</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Visible</name>
      <anchorfile>class_ui_proxy_widget.html</anchorfile>
      <anchor>ad4dd1cb63296a9d6ec07ee3d244b9fe9</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>BringProxyToFrontRequest</name>
      <anchorfile>class_ui_proxy_widget.html</anchorfile>
      <anchor>a459b5ceae58b1d08f845dadb67b17fc5</anchor>
      <arglist>(QGraphicsProxyWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UiProxyWidget</name>
      <anchorfile>class_ui_proxy_widget.html</anchorfile>
      <anchor>a39036908cff6d566c2c7b12e51c9d435</anchor>
      <arglist>(QWidget *widget, Qt::WindowFlags flags=Qt::Dialog)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UiProxyWidget</name>
      <anchorfile>class_ui_proxy_widget.html</anchorfile>
      <anchor>a98c30fd1aceaa3d7630309f8942799be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BringToFront</name>
      <anchorfile>class_ui_proxy_widget.html</anchorfile>
      <anchor>a9da41a013958b1eac064c32cc83cd166</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>eventFilter</name>
      <anchorfile>class_ui_proxy_widget.html</anchorfile>
      <anchor>a01d7a512dc11d04307434aef8d9095cf</anchor>
      <arglist>(QObject *obj, QEvent *e)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>showEvent</name>
      <anchorfile>class_ui_proxy_widget.html</anchorfile>
      <anchor>aa77f7be5f34da149a308631a797f74d0</anchor>
      <arglist>(QShowEvent *e)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>hideEvent</name>
      <anchorfile>class_ui_proxy_widget.html</anchorfile>
      <anchor>a83d93d50885aff9c9731b7116bba1af5</anchor>
      <arglist>(QHideEvent *e)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>closeEvent</name>
      <anchorfile>class_ui_proxy_widget.html</anchorfile>
      <anchor>ac28e7841511f180b7375131a7ebbbb37</anchor>
      <arglist>(QCloseEvent *e)</arglist>
    </member>
    <member kind="property">
      <type>QGraphicsEffect</type>
      <name>graphicsEffect</name>
      <anchorfile>class_ui_proxy_widget.html</anchorfile>
      <anchor>a6ffc78aca079a243232626780aac9ae4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>UniqueIdGenerator</name>
    <filename>class_unique_id_generator.html</filename>
    <member kind="function">
      <type></type>
      <name>UniqueIdGenerator</name>
      <anchorfile>class_unique_id_generator.html</anchorfile>
      <anchor>a16b656e7f52031b6c55b606d9e2150fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>entity_id_t</type>
      <name>AllocateReplicated</name>
      <anchorfile>class_unique_id_generator.html</anchorfile>
      <anchor>a4b0138967e9c79ce2acca78a15030dea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>entity_id_t</type>
      <name>AllocateUnacked</name>
      <anchorfile>class_unique_id_generator.html</anchorfile>
      <anchor>a5592d13977689a51355fc5eb4f6d5062</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>entity_id_t</type>
      <name>AllocateLocal</name>
      <anchorfile>class_unique_id_generator.html</anchorfile>
      <anchor>a8e8c11cc9ee14f708409ab06e6e0b66c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetReplicatedId</name>
      <anchorfile>class_unique_id_generator.html</anchorfile>
      <anchor>a93602c170722c7aa14aa4950df118a33</anchor>
      <arglist>(entity_id_t id_)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Reset</name>
      <anchorfile>class_unique_id_generator.html</anchorfile>
      <anchor>a54dec78cc83642c14481a68f39afdffc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>entity_id_t</type>
      <name>id</name>
      <anchorfile>class_unique_id_generator.html</anchorfile>
      <anchor>a352dd83d1d2925851aca856d57e66052</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>entity_id_t</type>
      <name>unackedId</name>
      <anchorfile>class_unique_id_generator.html</anchorfile>
      <anchor>afec6fc31e289557525f616e217b5580a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>entity_id_t</type>
      <name>localId</name>
      <anchorfile>class_unique_id_generator.html</anchorfile>
      <anchor>acee64e7546a5bdc1a210b258854e1525</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const entity_id_t</type>
      <name>LAST_REPLICATED_ID</name>
      <anchorfile>class_unique_id_generator.html</anchorfile>
      <anchor>a732facf485727309c042a9614e20dbef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const entity_id_t</type>
      <name>FIRST_UNACKED_ID</name>
      <anchorfile>class_unique_id_generator.html</anchorfile>
      <anchor>a83b1c4e9652c5e5cc60f16aba10ad7ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const entity_id_t</type>
      <name>FIRST_LOCAL_ID</name>
      <anchorfile>class_unique_id_generator.html</anchorfile>
      <anchor>a87612c542ce014465193da04109794a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UserConnectedResponseData</name>
    <filename>struct_user_connected_response_data.html</filename>
    <member kind="variable">
      <type>QDomDocument</type>
      <name>responseData</name>
      <anchorfile>struct_user_connected_response_data.html</anchorfile>
      <anchor>ad12a918d4a1f68fdc0afabae1030e7a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>UserConnection</name>
    <filename>class_user_connection.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>Exec</name>
      <anchorfile>class_user_connection.html</anchorfile>
      <anchor>ae2bc54331f72acace8c075c5f4da16a3</anchor>
      <arglist>(QObject *entity, const QString &amp;action, const QString &amp;p1=&quot;&quot;, const QString &amp;p2=&quot;&quot;, const QString &amp;p3=&quot;&quot;)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Exec</name>
      <anchorfile>class_user_connection.html</anchorfile>
      <anchor>a6de76a32acca0940cc73402936ca93dc</anchor>
      <arglist>(QObject *entity, const QString &amp;action, const QStringList &amp;params)</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>GetConnectionID</name>
      <anchorfile>class_user_connection.html</anchorfile>
      <anchor>ad8cbee1e448aefad14a27db616dfefd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>GetLoginData</name>
      <anchorfile>class_user_connection.html</anchorfile>
      <anchor>a170fad89c1787d41d694b3d187df4419</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetProperty</name>
      <anchorfile>class_user_connection.html</anchorfile>
      <anchor>a7c1c77a37292292df82843819bce7c4c</anchor>
      <arglist>(const QString &amp;key, const QString &amp;value)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>GetProperty</name>
      <anchorfile>class_user_connection.html</anchorfile>
      <anchor>a7e4f921f3abde95e3b497d93e392aedc</anchor>
      <arglist>(const QString &amp;key) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>DenyConnection</name>
      <anchorfile>class_user_connection.html</anchorfile>
      <anchor>ad34ebe37795a944a377eecb73f4e520e</anchor>
      <arglist>(const QString &amp;reason)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ActionTriggered</name>
      <anchorfile>class_user_connection.html</anchorfile>
      <anchor>a02ead90a01317bd99f087cecd97891ca</anchor>
      <arglist>(UserConnection *connection, Entity *entity, const QString &amp;action, const QStringList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UserConnection</name>
      <anchorfile>class_user_connection.html</anchorfile>
      <anchor>a845eeb1ae481dab24a3e90a7cb06641e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Ptr</name>
      <anchorfile>class_user_connection.html</anchorfile>
      <anchor>a1b56e0ddacdcae0f9b69fc9624d79096</anchor>
      <arglist>(kNet::MessageConnection) connection</arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>id</name>
      <anchorfile>class_user_connection.html</anchorfile>
      <anchor>a886e50d9f5fac02d7f973ec9eda9d6d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>u8</type>
      <name>userID</name>
      <anchorfile>class_user_connection.html</anchorfile>
      <anchor>ac9424ca3d13705208b10e030c5f8382b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>loginData</name>
      <anchorfile>class_user_connection.html</anchorfile>
      <anchor>a90a16c22567d8498a7dd6836c4bd8322</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>std::map&lt; QString, QString &gt;</type>
      <name>properties</name>
      <anchorfile>class_user_connection.html</anchorfile>
      <anchor>abbfca759310f6b51222e1fae7fc9aeea</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>boost::shared_ptr&lt; SceneSyncState &gt;</type>
      <name>syncState</name>
      <anchorfile>class_user_connection.html</anchorfile>
      <anchor>adb0438e495b21406e04a945d08227065</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>VirtualAssetTransfer</name>
    <filename>class_virtual_asset_transfer.html</filename>
    <base>IAssetTransfer</base>
    <member kind="slot">
      <type>void</type>
      <name>SetCachingBehavior</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>afabe73f5add63eb6cb566a2f48756c86</anchor>
      <arglist>(bool cachingAllowed_, QString diskSource_)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>DiskSource</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a6526a4cb9bf9fd8f799b66d31e04f256</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>CachingAllowed</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a12ceebf4410f4b8ab2c58d1a72f0458d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QByteArray</type>
      <name>RawData</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a0a2e9c572e0daf78bccee8770c25b629</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>SourceUrl</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a338e9fbee435f5b51ced10eaba9e7563</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>AssetType</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>ad7cedf6627d791020eb70ffe75ea339d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>AssetPtr</type>
      <name>Asset</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a8ce3cd5bac0ab48c9e201e667e6a4e58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Downloaded</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a68cde51cf999156f511d7d6eae8e8150</anchor>
      <arglist>(IAssetTransfer *transfer)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Succeeded</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>af699be6a61f10b43cd4b6d750b8c48c4</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Failed</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a3ec4f7d42ecb0a6e31b36876aa8b94f4</anchor>
      <arglist>(IAssetTransfer *transfer, QString reason)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EmitAssetDownloaded</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a3a254e737873849f4b38ce48f2c9d3e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EmitTransferSucceeded</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>ae9cd89d255eee7543c2570b0afb192ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EmitAssetFailed</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a33af4d05ae18d5fc6e5b1a246f65f83e</anchor>
      <arglist>(QString reason)</arglist>
    </member>
    <member kind="variable">
      <type>AssetPtr</type>
      <name>asset</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>ad19a86526bce79480781c42521f1fbfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AssetReference</type>
      <name>source</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a314079cfb932021594869539652451b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>assetType</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a4e6c6cd77fb4bb41403b9e73c4ff990f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>internalResourceName</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a8c46c19efcb54176124e31d9224a8242</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AssetProviderWeakPtr</type>
      <name>provider</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a604a329735df768a17f05877734488a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AssetStorageWeakPtr</type>
      <name>storage</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>a6e2ac8d1036dd5146ec93a1331a649f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; u8 &gt;</type>
      <name>rawAssetData</name>
      <anchorfile>class_i_asset_transfer.html</anchorfile>
      <anchor>aad7d0371621ecf57b7f75955eb418c21</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>VoidArgumentType</name>
    <filename>class_void_argument_type.html</filename>
    <base>IArgumentType</base>
    <member kind="function">
      <type></type>
      <name>VoidArgumentType</name>
      <anchorfile>class_void_argument_type.html</anchorfile>
      <anchor>ab9756c666c2ff8601abf98c367fcfdcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QWidget *</type>
      <name>CreateEditor</name>
      <anchorfile>class_void_argument_type.html</anchorfile>
      <anchor>a0a4cbf4837c973be8bd7f585de7354c5</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateValueFromEditor</name>
      <anchorfile>class_void_argument_type.html</anchorfile>
      <anchor>ae3c0d2fe8198ca09c8c78de6ad4a6364</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateValueToEditor</name>
      <anchorfile>class_void_argument_type.html</anchorfile>
      <anchor>aea3ed11564fb234cbc5a0c065f1e532f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetValue</name>
      <anchorfile>class_void_argument_type.html</anchorfile>
      <anchor>a4e9d98e404b447d2e162d477bec71baf</anchor>
      <arglist>(void *val)</arglist>
    </member>
    <member kind="function">
      <type>QGenericArgument</type>
      <name>Value</name>
      <anchorfile>class_void_argument_type.html</anchorfile>
      <anchor>ab1c69cbd3f8a3d10aa8b101ac4c420e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QGenericReturnArgument</type>
      <name>ReturnValue</name>
      <anchorfile>class_void_argument_type.html</anchorfile>
      <anchor>a9a2e6492488c8532a8e2c067cb3b09ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>ToString</name>
      <anchorfile>class_void_argument_type.html</anchorfile>
      <anchor>a482182784d7dce6c5ba097e1820d7d2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>ToQVariant</name>
      <anchorfile>class_void_argument_type.html</anchorfile>
      <anchor>ac2834cdf13087ba5f0b37eb9553f9143</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromQVariant</name>
      <anchorfile>class_void_argument_type.html</anchorfile>
      <anchor>a87f97082e1794b1433ee132d2cdc8578</anchor>
      <arglist>(const QVariant &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FromString</name>
      <anchorfile>class_void_argument_type.html</anchorfile>
      <anchor>a62ef3d9a1f1e89d4539379d68e087344</anchor>
      <arglist>(const QString &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QString</type>
      <name>typeName</name>
      <anchorfile>class_void_argument_type.html</anchorfile>
      <anchor>a63edcac15f1417fb04f936bf7d786560</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>anonymous_namespace{AssetAPI.cpp}</name>
    <filename>namespaceanonymous__namespace_02_asset_a_p_i_8cpp_03.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>IsFileOfType</name>
      <anchorfile>namespaceanonymous__namespace_02_asset_a_p_i_8cpp_03.html</anchorfile>
      <anchor>aeca230647c35292afc4813f517917cf5</anchor>
      <arglist>(const QString &amp;filename, const char **suffixes, int numSuffixes)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>anonymous_namespace{AssetsWindow.cpp}</name>
    <filename>namespaceanonymous__namespace_02_assets_window_8cpp_03.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>HasSameRefAsPredecessors</name>
      <anchorfile>namespaceanonymous__namespace_02_assets_window_8cpp_03.html</anchorfile>
      <anchor>aa558bb548c1a31c966f9b890dacbf8b0</anchor>
      <arglist>(QTreeWidgetItem *item)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>anonymous_namespace{EC_Terrain.cpp}</name>
    <filename>namespaceanonymous__namespace_02_e_c___terrain_8cpp_03.html</filename>
    <member kind="function">
      <type>Ogre::Matrix4</type>
      <name>GetWorldTransform</name>
      <anchorfile>namespaceanonymous__namespace_02_e_c___terrain_8cpp_03.html</anchorfile>
      <anchor>ae0c4aefa6dab1832330bac1164e949cf</anchor>
      <arglist>(Ogre::SceneNode *node)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>anonymous_namespace{OggVorbisLoader.cpp}</name>
    <filename>namespaceanonymous__namespace_02_ogg_vorbis_loader_8cpp_03.html</filename>
    <class kind="class">anonymous_namespace{OggVorbisLoader.cpp}::OggMemDataSource</class>
    <member kind="function">
      <type>size_t</type>
      <name>OggReadCallback</name>
      <anchorfile>namespaceanonymous__namespace_02_ogg_vorbis_loader_8cpp_03.html</anchorfile>
      <anchor>a7fa93c71d71fe20e841f1e1e6c97ea5f</anchor>
      <arglist>(void *ptr, size_t size, size_t nmemb, void *datasource)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>OggSeekCallback</name>
      <anchorfile>namespaceanonymous__namespace_02_ogg_vorbis_loader_8cpp_03.html</anchorfile>
      <anchor>ae35c7218ce3c076d37d60335886fd570</anchor>
      <arglist>(void *datasource, ogg_int64_t offset, int whence)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>OggTellCallback</name>
      <anchorfile>namespaceanonymous__namespace_02_ogg_vorbis_loader_8cpp_03.html</anchorfile>
      <anchor>ab476ede3d3358d62247174524c993840</anchor>
      <arglist>(void *datasource)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>anonymous_namespace{OggVorbisLoader.cpp}::OggMemDataSource</name>
    <filename>classanonymous__namespace_02_ogg_vorbis_loader_8cpp_03_1_1_ogg_mem_data_source.html</filename>
    <member kind="function">
      <type></type>
      <name>OggMemDataSource</name>
      <anchorfile>classanonymous__namespace_02_ogg_vorbis_loader_8cpp_03_1_1_ogg_mem_data_source.html</anchorfile>
      <anchor>a63ff978c3ddc00ab6c7bc97f2f51e895</anchor>
      <arglist>(const u8 *data, uint size)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>Read</name>
      <anchorfile>classanonymous__namespace_02_ogg_vorbis_loader_8cpp_03_1_1_ogg_mem_data_source.html</anchorfile>
      <anchor>ae3737588c30a30390f094f5c09fc34a8</anchor>
      <arglist>(void *ptr, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Seek</name>
      <anchorfile>classanonymous__namespace_02_ogg_vorbis_loader_8cpp_03_1_1_ogg_mem_data_source.html</anchorfile>
      <anchor>a504a63842409858d567bc7bec04b8696</anchor>
      <arglist>(ogg_int64_t offset, int whence)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>Tell</name>
      <anchorfile>classanonymous__namespace_02_ogg_vorbis_loader_8cpp_03_1_1_ogg_mem_data_source.html</anchorfile>
      <anchor>a4fd182607ff2b0893c6dce54b4a612fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const u8 *</type>
      <name>data_</name>
      <anchorfile>classanonymous__namespace_02_ogg_vorbis_loader_8cpp_03_1_1_ogg_mem_data_source.html</anchorfile>
      <anchor>a295e53719bf6eaeb6c981fe20653b999</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint</type>
      <name>size_</name>
      <anchorfile>classanonymous__namespace_02_ogg_vorbis_loader_8cpp_03_1_1_ogg_mem_data_source.html</anchorfile>
      <anchor>a01ef8c481dc065e914ba5e3d9af84166</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint</type>
      <name>position_</name>
      <anchorfile>classanonymous__namespace_02_ogg_vorbis_loader_8cpp_03_1_1_ogg_mem_data_source.html</anchorfile>
      <anchor>a06122d5e9ada4abd54155ecca770459e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>anonymous_namespace{Profiler.h}</name>
    <filename>namespaceanonymous__namespace_02_profiler_8h_03.html</filename>
    <member kind="function">
      <type>void</type>
      <name>EmptyDeletor</name>
      <anchorfile>namespaceanonymous__namespace_02_profiler_8h_03.html</anchorfile>
      <anchor>a79bb3abb6a7b692502f20c326e8c87e7</anchor>
      <arglist>(ProfilerNodeTree *node)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>anonymous_namespace{RenderWindow.cpp}</name>
    <filename>namespaceanonymous__namespace_02_render_window_8cpp_03.html</filename>
    <member kind="variable">
      <type>const char</type>
      <name>rttTextureName</name>
      <anchorfile>namespaceanonymous__namespace_02_render_window_8cpp_03.html</anchorfile>
      <anchor>a99419111272211a2d58d671beb475e35</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>const char</type>
      <name>rttMaterialName</name>
      <anchorfile>namespaceanonymous__namespace_02_render_window_8cpp_03.html</anchorfile>
      <anchor>adf0b9f2f9a58274dc28f317ef109c62e</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Asset</name>
    <filename>namespace_asset.html</filename>
    <class kind="class">Asset::AssetModule</class>
    <class kind="class">Asset::LocalAssetProvider</class>
    <class kind="class">Asset::LocalAssetStorage</class>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; LocalAssetStorage &gt;</type>
      <name>LocalAssetStoragePtr</name>
      <anchorfile>namespace_asset.html</anchorfile>
      <anchor>a97076a4cf7c8ba5b3207e6ccd32e66f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Asset::AssetModule</name>
    <filename>class_asset_1_1_asset_module.html</filename>
    <base>IModule</base>
    <member kind="slot">
      <type>void</type>
      <name>ConsoleRequestAsset</name>
      <anchorfile>class_asset_1_1_asset_module.html</anchorfile>
      <anchor>a5caf34f61a7d9982578097d6cfefd3ec</anchor>
      <arglist>(const QString &amp;assetRef, const QString &amp;assetType)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>AddAssetStorage</name>
      <anchorfile>class_asset_1_1_asset_module.html</anchorfile>
      <anchor>adb2ee59e4c5ecf353091aadc6cd909f3</anchor>
      <arglist>(const QString &amp;storageString)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ListAssetStorages</name>
      <anchorfile>class_asset_1_1_asset_module.html</anchorfile>
      <anchor>a95cb1bf9e1b450d6e784c48762fbc496</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ConsoleRefreshHttpStorages</name>
      <anchorfile>class_asset_1_1_asset_module.html</anchorfile>
      <anchor>a8bf705f1f8418f2dd5031a1403a60467</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ConsoleDumpAssetTransfers</name>
      <anchorfile>class_asset_1_1_asset_module.html</anchorfile>
      <anchor>afb949100dd478dc8c1125198871a6af8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>LoadAllLocalAssetsWithSuffix</name>
      <anchorfile>class_asset_1_1_asset_module.html</anchorfile>
      <anchor>a0e07fd95ed2af6b429a2872531410cdd</anchor>
      <arglist>(const QString &amp;suffix, const QString &amp;assetType=&quot;&quot;)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>RefreshHttpStorages</name>
      <anchorfile>class_asset_1_1_asset_module.html</anchorfile>
      <anchor>ac0b5d3f91e54464787a03f5ca5d780a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ServerNewUserConnected</name>
      <anchorfile>class_asset_1_1_asset_module.html</anchorfile>
      <anchor>a3dff02dbf91234e7061829bfb2030862</anchor>
      <arglist>(int connectionID, UserConnection *connection, UserConnectedResponseData *responseData)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ClientConnectedToServer</name>
      <anchorfile>class_asset_1_1_asset_module.html</anchorfile>
      <anchor>ac285121696e80bc47e0fc55b586c2405</anchor>
      <arglist>(UserConnectedResponseData *responseData)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ClientDisconnectedFromServer</name>
      <anchorfile>class_asset_1_1_asset_module.html</anchorfile>
      <anchor>a9d99849e00376765d6f526983a09efbd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AssetModule</name>
      <anchorfile>class_asset_1_1_asset_module.html</anchorfile>
      <anchor>adcf0ca97a775d02d742e9633b4e3a907</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AssetModule</name>
      <anchorfile>class_asset_1_1_asset_module.html</anchorfile>
      <anchor>a4d89d05517493f18468c308702611a9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Initialize</name>
      <anchorfile>class_asset_1_1_asset_module.html</anchorfile>
      <anchor>ae7aa24970439998b4158a5a2125c1c1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Load</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a6435d25926592938d058e231a1a6988a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Uninitialize</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a605e76696c3cef8d80450453da44ff21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Unload</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a29f68fed281ee378674d8b3d84a02e48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>af68bc12846076442d17bd09955019710</anchor>
      <arglist>(f64 frametime)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a715ca908fee148f6abeb45f41f646951</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>af0fc3706f5a2e27374c642e71e4eca8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework_</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>aff39960b9800c16d6f4976b5614c37a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleKristalliMessage</name>
      <anchorfile>class_asset_1_1_asset_module.html</anchorfile>
      <anchor>aafbd99e8c99f70c987f9f61295ce66ca</anchor>
      <arglist>(kNet::MessageConnection *source, kNet::message_id_t id, const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleAssetDiscovery</name>
      <anchorfile>class_asset_1_1_asset_module.html</anchorfile>
      <anchor>ac359e35acef486e9da5c8f5dc967f62f</anchor>
      <arglist>(kNet::MessageConnection *source, MsgAssetDiscovery &amp;msg)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleAssetDeleted</name>
      <anchorfile>class_asset_1_1_asset_module.html</anchorfile>
      <anchor>a5e8367120bce3cc6ca334ebe0e8440c2</anchor>
      <arglist>(kNet::MessageConnection *source, MsgAssetDeleted &amp;msg)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnAssetUploaded</name>
      <anchorfile>class_asset_1_1_asset_module.html</anchorfile>
      <anchor>ae867b080d844a59806220ae4828de8db</anchor>
      <arglist>(const QString &amp;assetRef)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnAssetDeleted</name>
      <anchorfile>class_asset_1_1_asset_module.html</anchorfile>
      <anchor>a0e9291818b2f97e0c6cb65b12af1bb14</anchor>
      <arglist>(const QString &amp;assetRef)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ProcessCommandLineOptions</name>
      <anchorfile>class_asset_1_1_asset_module.html</anchorfile>
      <anchor>a597d9a665966b8d37fd84cf637ca5834</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; AssetStorageWeakPtr &gt;</type>
      <name>storagesReceivedFromServer</name>
      <anchorfile>class_asset_1_1_asset_module.html</anchorfile>
      <anchor>ab9cc928784554b25094bc96e17a861fa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Asset::LocalAssetProvider</name>
    <filename>class_asset_1_1_local_asset_provider.html</filename>
    <base>IAssetProvider</base>
    <member kind="function">
      <type></type>
      <name>LocalAssetProvider</name>
      <anchorfile>class_asset_1_1_local_asset_provider.html</anchorfile>
      <anchor>adddfb9f8cc5d76ad773172ae00f38308</anchor>
      <arglist>(Framework *framework)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LocalAssetProvider</name>
      <anchorfile>class_asset_1_1_local_asset_provider.html</anchorfile>
      <anchor>a8fea1a5368eabd2ca6e59c7b8a203b8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QString</type>
      <name>Name</name>
      <anchorfile>class_asset_1_1_local_asset_provider.html</anchorfile>
      <anchor>aa0cbfac622a326c5f547edef68895bb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsValidRef</name>
      <anchorfile>class_asset_1_1_local_asset_provider.html</anchorfile>
      <anchor>ab1df78352d1e89b1c1e43c831214013f</anchor>
      <arglist>(QString assetRef, QString assetType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AssetTransferPtr</type>
      <name>RequestAsset</name>
      <anchorfile>class_asset_1_1_local_asset_provider.html</anchorfile>
      <anchor>a53ffdbf05caf9848ffeb2be03049a3e3</anchor>
      <arglist>(QString assetRef, QString assetType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>class_asset_1_1_local_asset_provider.html</anchorfile>
      <anchor>a3af1982fb37eb2090f7ccd256bc1d9a5</anchor>
      <arglist>(f64 frametime)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeleteAssetFromStorage</name>
      <anchorfile>class_asset_1_1_local_asset_provider.html</anchorfile>
      <anchor>a24890c5c7875da100499f29cb26b4f90</anchor>
      <arglist>(QString assetRef)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>RemoveAssetStorage</name>
      <anchorfile>class_asset_1_1_local_asset_provider.html</anchorfile>
      <anchor>a26212d0d50afd58fe77cb069bd2d6561</anchor>
      <arglist>(QString storageName)</arglist>
    </member>
    <member kind="function">
      <type>LocalAssetStoragePtr</type>
      <name>AddStorageDirectory</name>
      <anchorfile>class_asset_1_1_local_asset_provider.html</anchorfile>
      <anchor>af0ad650780ce124740b8f073a28d3d30</anchor>
      <arglist>(QString directory, QString storageName, bool recursive)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; AssetStoragePtr &gt;</type>
      <name>GetStorages</name>
      <anchorfile>class_asset_1_1_local_asset_provider.html</anchorfile>
      <anchor>a70bfbfbbfecbaa4115309a3144300619</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AssetStoragePtr</type>
      <name>GetStorageByName</name>
      <anchorfile>class_asset_1_1_local_asset_provider.html</anchorfile>
      <anchor>aa59df40068210e9a2b4c257cca214762</anchor>
      <arglist>(const QString &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AssetStoragePtr</type>
      <name>GetStorageForAssetRef</name>
      <anchorfile>class_asset_1_1_local_asset_provider.html</anchorfile>
      <anchor>a08333c611ceda92572724235b13c7738</anchor>
      <arglist>(const QString &amp;assetRef) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AssetUploadTransferPtr</type>
      <name>UploadAssetFromFileInMemory</name>
      <anchorfile>class_asset_1_1_local_asset_provider.html</anchorfile>
      <anchor>a14f434767a7ffdde5a6d21f4672250a5</anchor>
      <arglist>(const u8 *data, size_t numBytes, AssetStoragePtr destination, const char *assetName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AssetStoragePtr</type>
      <name>TryDeserializeStorageFromString</name>
      <anchorfile>class_asset_1_1_local_asset_provider.html</anchorfile>
      <anchor>a039ccc229eb3f5dad45a279d6afdac19</anchor>
      <arglist>(const QString &amp;storage)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>GenerateUniqueStorageName</name>
      <anchorfile>class_asset_1_1_local_asset_provider.html</anchorfile>
      <anchor>afead02b9038bbc6aeeaf592cf65f8544</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>FileChanged</name>
      <anchorfile>class_asset_1_1_local_asset_provider.html</anchorfile>
      <anchor>aa7ff72e978908eedd707e534546d3727</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>QString</type>
      <name>GetPathForAsset</name>
      <anchorfile>class_asset_1_1_local_asset_provider.html</anchorfile>
      <anchor>ad497e145d8a29835e9d6cf1abf77fa7f</anchor>
      <arglist>(const QString &amp;localFilename, LocalAssetStoragePtr *storage) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CompletePendingFileDownloads</name>
      <anchorfile>class_asset_1_1_local_asset_provider.html</anchorfile>
      <anchor>a37ff73e15356f4d00de544ea1a8586a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CompletePendingFileUploads</name>
      <anchorfile>class_asset_1_1_local_asset_provider.html</anchorfile>
      <anchor>ab7720e8f2269a083b9fb81428e647a6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework</name>
      <anchorfile>class_asset_1_1_local_asset_provider.html</anchorfile>
      <anchor>a9a90a8b2d1a7ed0f0cd59ca871cbeb81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; LocalAssetStoragePtr &gt;</type>
      <name>storages</name>
      <anchorfile>class_asset_1_1_local_asset_provider.html</anchorfile>
      <anchor>aaed2dc4567fc093b29b6dc38400fb803</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; AssetUploadTransferPtr &gt;</type>
      <name>pendingUploads</name>
      <anchorfile>class_asset_1_1_local_asset_provider.html</anchorfile>
      <anchor>a983c6c6b9f09e21aeeebabac8d66b1e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; AssetTransferPtr &gt;</type>
      <name>pendingDownloads</name>
      <anchorfile>class_asset_1_1_local_asset_provider.html</anchorfile>
      <anchor>a398bf97c5f94ad4a73f6de71cb40c353</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Asset::LocalAssetStorage</name>
    <filename>class_asset_1_1_local_asset_storage.html</filename>
    <base>IAssetStorage</base>
    <member kind="slot">
      <type>bool</type>
      <name>Writable</name>
      <anchorfile>class_asset_1_1_local_asset_storage.html</anchorfile>
      <anchor>a93b2db04427e8bee059d7451373f8ed1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>Trusted</name>
      <anchorfile>class_asset_1_1_local_asset_storage.html</anchorfile>
      <anchor>aca87d7f58438f0f546409d269178f2b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>GetFullPathForAsset</name>
      <anchorfile>class_asset_1_1_local_asset_storage.html</anchorfile>
      <anchor>ad743f17d9355a8d2d50007bfdc912334</anchor>
      <arglist>(const QString &amp;assetname, bool recursive)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>GetFullAssetURL</name>
      <anchorfile>class_asset_1_1_local_asset_storage.html</anchorfile>
      <anchor>a830378e5fd50cc9bb41aab8010ee9a13</anchor>
      <arglist>(const QString &amp;localName)</arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual QString</type>
      <name>Type</name>
      <anchorfile>class_asset_1_1_local_asset_storage.html</anchorfile>
      <anchor>a4143fc04796b0be5dea332c5fb86a9bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual QStringList</type>
      <name>GetAllAssetRefs</name>
      <anchorfile>class_asset_1_1_local_asset_storage.html</anchorfile>
      <anchor>a6d557ea454012e291f8548ef2ecb844f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual void</type>
      <name>RefreshAssetRefs</name>
      <anchorfile>class_asset_1_1_local_asset_storage.html</anchorfile>
      <anchor>a1b0f1112f96fbdd48620f9c68a2609a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>Name</name>
      <anchorfile>class_asset_1_1_local_asset_storage.html</anchorfile>
      <anchor>aa6f182965d9c55a86d7ee69795d69cef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>BaseURL</name>
      <anchorfile>class_asset_1_1_local_asset_storage.html</anchorfile>
      <anchor>accabaf12a1aef24f01ccdb83511a2e18</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>ToString</name>
      <anchorfile>class_asset_1_1_local_asset_storage.html</anchorfile>
      <anchor>a50962cb3b0f4e24ce93e115f702ed511</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual QString</type>
      <name>SerializeToString</name>
      <anchorfile>class_asset_1_1_local_asset_storage.html</anchorfile>
      <anchor>ae47238daee62038ad7a52ea9045092f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AssetRefsChanged</name>
      <anchorfile>class_i_asset_storage.html</anchorfile>
      <anchor>a9087d9b7f62a4472d987d7c0d44ef836</anchor>
      <arglist>(AssetStoragePtr storage)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LocalAssetStorage</name>
      <anchorfile>class_asset_1_1_local_asset_storage.html</anchorfile>
      <anchor>a20d3f0ace3e6bd3fed39c21575d6049f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LocalAssetStorage</name>
      <anchorfile>class_asset_1_1_local_asset_storage.html</anchorfile>
      <anchor>aa66453a61ab8ae0e7d1e9ee82c890ea8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetupWatcher</name>
      <anchorfile>class_asset_1_1_local_asset_storage.html</anchorfile>
      <anchor>a763c929701f03e08774da35734b34553</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveWatcher</name>
      <anchorfile>class_asset_1_1_local_asset_storage.html</anchorfile>
      <anchor>a05e899c708f7e370ebc3c112c90461c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadAllAssetsOfType</name>
      <anchorfile>class_asset_1_1_local_asset_storage.html</anchorfile>
      <anchor>a18bd03b3b741ad9c01804f4220f058a5</anchor>
      <arglist>(AssetAPI *assetAPI, const QString &amp;suffix, const QString &amp;assetType)</arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>directory</name>
      <anchorfile>class_asset_1_1_local_asset_storage.html</anchorfile>
      <anchor>aaff12d6937950e0bdb26f8e29b43591e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>name</name>
      <anchorfile>class_asset_1_1_local_asset_storage.html</anchorfile>
      <anchor>acf93f7580179a22ffb43accf9299ad33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>recursive</name>
      <anchorfile>class_asset_1_1_local_asset_storage.html</anchorfile>
      <anchor>a878e15d2639d602f15e746b8458f7eaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QStringList</type>
      <name>assetRefs</name>
      <anchorfile>class_asset_1_1_local_asset_storage.html</anchorfile>
      <anchor>a7d029e83e326b73317a8bfbc1ba5ddb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AssetProviderWeakPtr</type>
      <name>provider</name>
      <anchorfile>class_i_asset_storage.html</anchorfile>
      <anchor>ad9de3ba5586cddd083fd3260d8f20b3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>class_asset_1_1_local_asset_storage.html</anchorfile>
      <anchor>ad854a25ad6ffdd38269b9889012cfd31</anchor>
      <arglist>(const LocalAssetStorage &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>LocalAssetStorage</name>
      <anchorfile>class_asset_1_1_local_asset_storage.html</anchorfile>
      <anchor>af2569c08951b0e652e300014e0084f7e</anchor>
      <arglist>(const LocalAssetStorage &amp;)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>DoxygenDocReader</name>
    <filename>namespace_doxygen_doc_reader.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>GetSymbolDocumentation</name>
      <anchorfile>namespace_doxygen_doc_reader.html</anchorfile>
      <anchor>a47aec06117e36ab41a2ee39afa49c77b</anchor>
      <arglist>(QString doxygenDocDirectory, QString functionName, QString *documentationOut)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSymbolDocumentation</name>
      <anchorfile>namespace_doxygen_doc_reader.html</anchorfile>
      <anchor>acb250538646325b09d7701c9fbc5ccda</anchor>
      <arglist>(QString functionName, QString *documentationOut, QUrl *docPathOut)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Environment</name>
    <filename>namespace_environment.html</filename>
    <class kind="class">Environment::EnvironmentModule</class>
    <class kind="class">Environment::TerrainLabel</class>
  </compound>
  <compound kind="class">
    <name>Environment::EnvironmentModule</name>
    <filename>class_environment_1_1_environment_module.html</filename>
    <base>IModule</base>
    <member kind="function">
      <type></type>
      <name>EnvironmentModule</name>
      <anchorfile>class_environment_1_1_environment_module.html</anchorfile>
      <anchor>a2282700bcb0f99ab2f408fa17d320cc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EnvironmentModule</name>
      <anchorfile>class_environment_1_1_environment_module.html</anchorfile>
      <anchor>ae67e70b53c2a2f11b55f7d2f33a2e08f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Load</name>
      <anchorfile>class_environment_1_1_environment_module.html</anchorfile>
      <anchor>a40e5a427095490baf14d3c24d31506ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Initialize</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a14aa87aaad464c6be26348e618f26dae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Uninitialize</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a605e76696c3cef8d80450453da44ff21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Unload</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a29f68fed281ee378674d8b3d84a02e48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>af68bc12846076442d17bd09955019710</anchor>
      <arglist>(f64 frametime)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a715ca908fee148f6abeb45f41f646951</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>af0fc3706f5a2e27374c642e71e4eca8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework_</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>aff39960b9800c16d6f4976b5614c37a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Q_DISABLE_COPY</name>
      <anchorfile>class_environment_1_1_environment_module.html</anchorfile>
      <anchor>a02a0f9703f458d9a19d870b94cf48828</anchor>
      <arglist>(EnvironmentModule)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Environment::TerrainLabel</name>
    <filename>class_environment_1_1_terrain_label.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>SendMouseEvent</name>
      <anchorfile>class_environment_1_1_terrain_label.html</anchorfile>
      <anchor>a636473d81e798be931e9c2a234d890b2</anchor>
      <arglist>(QMouseEvent *ev)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>SendMouseEventWithCanvasName</name>
      <anchorfile>class_environment_1_1_terrain_label.html</anchorfile>
      <anchor>af4e52918d57ccd7ceb9fab26e1b814ac</anchor>
      <arglist>(QMouseEvent *ev, QString name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TerrainLabel</name>
      <anchorfile>class_environment_1_1_terrain_label.html</anchorfile>
      <anchor>aa63ae7645339d08e054eca038f16bae7</anchor>
      <arglist>(QWidget *parent=0, Qt::WindowFlags f=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TerrainLabel</name>
      <anchorfile>class_environment_1_1_terrain_label.html</anchorfile>
      <anchor>a806284ebdd60c11b02146cfbea8a9cee</anchor>
      <arglist>(const QString &amp;text, QWidget *parent=0, Qt::WindowFlags f=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TerrainLabel</name>
      <anchorfile>class_environment_1_1_terrain_label.html</anchorfile>
      <anchor>a549e00fc7c33f34681879b906820b0c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>mousePressEvent</name>
      <anchorfile>class_environment_1_1_terrain_label.html</anchorfile>
      <anchor>a3989fb267f7a8c776e284969746775a8</anchor>
      <arglist>(QMouseEvent *event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>mouseMoveEvent</name>
      <anchorfile>class_environment_1_1_terrain_label.html</anchorfile>
      <anchor>a207f8879ff46c63bdbba6a8caa35e578</anchor>
      <arglist>(QMouseEvent *event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>mouseReleaseEvent</name>
      <anchorfile>class_environment_1_1_terrain_label.html</anchorfile>
      <anchor>a07545b7692129c8cbdfcb9917feb1040</anchor>
      <arglist>(QMouseEvent *event)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>json</name>
    <filename>namespacejson.html</filename>
    <class kind="struct">json::unicodecvt</class>
    <class kind="struct">json::unicodecvt&lt; char &gt;</class>
    <class kind="class">json::grammar</class>
    <member kind="function">
      <type>json::grammar&lt; typename Iterator::value_type &gt;::variant</type>
      <name>parse</name>
      <anchorfile>namespacejson.html</anchorfile>
      <anchor>afd6f96c7fd305b3fb4fe6f0470493250</anchor>
      <arglist>(Iterator const &amp;szFirst, Iterator const &amp;szEnd)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>json::unicodecvt</name>
    <filename>structjson_1_1unicodecvt.html</filename>
    <member kind="function" static="yes">
      <type>static std::basic_string&lt; Char &gt;</type>
      <name>convert</name>
      <anchorfile>structjson_1_1unicodecvt.html</anchorfile>
      <anchor>acc5115e00b2dcb88819459d1e4eb0003</anchor>
      <arglist>(int iUnicode)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>json::unicodecvt&lt; char &gt;</name>
    <filename>structjson_1_1unicodecvt_3_01char_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>convert</name>
      <anchorfile>structjson_1_1unicodecvt_3_01char_01_4.html</anchorfile>
      <anchor>ac7145767bbf0939a84a0e2fb79daffa9</anchor>
      <arglist>(int iUnicode)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>json::grammar</name>
    <filename>classjson_1_1grammar.html</filename>
    <class kind="class">json::grammar::array_delimiter</class>
    <class kind="struct">json::grammar::begin_array</class>
    <class kind="struct">json::grammar::begin_object</class>
    <class kind="struct">json::grammar::create_pair</class>
    <class kind="class">json::grammar::definition</class>
    <class kind="struct">json::grammar::end_array</class>
    <class kind="struct">json::grammar::end_object</class>
    <class kind="class">json::grammar::object_delimiter</class>
    <class kind="struct">json::grammar::push_boolean</class>
    <class kind="struct">json::grammar::push_double</class>
    <class kind="struct">json::grammar::push_int</class>
    <class kind="struct">json::grammar::push_null</class>
    <class kind="struct">json::grammar::push_string</class>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; boost::any &gt;</type>
      <name>variant</name>
      <anchorfile>classjson_1_1grammar.html</anchorfile>
      <anchor>a7aace6a8934c5562cda5071576854c65</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::stack&lt; variant &gt;</type>
      <name>stack</name>
      <anchorfile>classjson_1_1grammar.html</anchorfile>
      <anchor>a46bfb24c0417f5dd69e3b7ab847e668c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; std::basic_string&lt; Char &gt;, variant &gt;</type>
      <name>pair</name>
      <anchorfile>classjson_1_1grammar.html</anchorfile>
      <anchor>a0793a349f2d06b9f1f2004ef597362fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::deque&lt; variant &gt;</type>
      <name>array</name>
      <anchorfile>classjson_1_1grammar.html</anchorfile>
      <anchor>a173126389ad664a51d114a308452d050</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::basic_string&lt; Char &gt;, variant &gt;</type>
      <name>object</name>
      <anchorfile>classjson_1_1grammar.html</anchorfile>
      <anchor>a83ff617086ed42dcdc8cf0815a7c5774</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>grammar</name>
      <anchorfile>classjson_1_1grammar.html</anchorfile>
      <anchor>a37b6022f3358598538bfef6739d3e2be</anchor>
      <arglist>(stack &amp;stack)</arglist>
    </member>
    <member kind="variable">
      <type>stack &amp;</type>
      <name>m_stack</name>
      <anchorfile>classjson_1_1grammar.html</anchorfile>
      <anchor>a5e797bc8a6267a2d6b543ab4e8db0ee1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>json::grammar::array_delimiter</name>
    <filename>classjson_1_1grammar_1_1array__delimiter.html</filename>
  </compound>
  <compound kind="struct">
    <name>json::grammar::begin_array</name>
    <filename>structjson_1_1grammar_1_1begin__array.html</filename>
    <member kind="function">
      <type></type>
      <name>begin_array</name>
      <anchorfile>structjson_1_1grammar_1_1begin__array.html</anchorfile>
      <anchor>a9a056513fa68135aa598b0dbf5450d80</anchor>
      <arglist>(stack &amp;stack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>structjson_1_1grammar_1_1begin__array.html</anchorfile>
      <anchor>a7adec8388c88e3018b1bd295e59d7179</anchor>
      <arglist>(Iterator) const </arglist>
    </member>
    <member kind="variable">
      <type>stack &amp;</type>
      <name>m_stack</name>
      <anchorfile>structjson_1_1grammar_1_1begin__array.html</anchorfile>
      <anchor>af555aaad4563fa3329205070f0e82278</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>json::grammar::begin_object</name>
    <filename>structjson_1_1grammar_1_1begin__object.html</filename>
    <member kind="function">
      <type></type>
      <name>begin_object</name>
      <anchorfile>structjson_1_1grammar_1_1begin__object.html</anchorfile>
      <anchor>a54a276da4e8da7fe898e779bd86af781</anchor>
      <arglist>(stack &amp;stack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>structjson_1_1grammar_1_1begin__object.html</anchorfile>
      <anchor>a59b890f2e213a1d90dd0ef56510029a7</anchor>
      <arglist>(Iterator) const </arglist>
    </member>
    <member kind="variable">
      <type>stack &amp;</type>
      <name>m_stack</name>
      <anchorfile>structjson_1_1grammar_1_1begin__object.html</anchorfile>
      <anchor>a291f034b0425594f2e9b65d82cfc9101</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>json::grammar::create_pair</name>
    <filename>structjson_1_1grammar_1_1create__pair.html</filename>
    <member kind="function">
      <type></type>
      <name>create_pair</name>
      <anchorfile>structjson_1_1grammar_1_1create__pair.html</anchorfile>
      <anchor>a7a09bdbe1a494dff65173bf7ac730a5b</anchor>
      <arglist>(stack &amp;stack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>structjson_1_1grammar_1_1create__pair.html</anchorfile>
      <anchor>afcf04782d52cd7a786d2cbad5df165e1</anchor>
      <arglist>(Iterator, Iterator) const </arglist>
    </member>
    <member kind="variable">
      <type>stack &amp;</type>
      <name>m_stack</name>
      <anchorfile>structjson_1_1grammar_1_1create__pair.html</anchorfile>
      <anchor>acc8e13be85ce37f573f084c5489bd84d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>json::grammar::definition</name>
    <filename>classjson_1_1grammar_1_1definition.html</filename>
    <member kind="function">
      <type>boost::spirit::classic::rule&lt; SCANNER &gt; const &amp;</type>
      <name>start</name>
      <anchorfile>classjson_1_1grammar_1_1definition.html</anchorfile>
      <anchor>aacefe24dde03b29e47762abc79ef2716</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>definition</name>
      <anchorfile>classjson_1_1grammar_1_1definition.html</anchorfile>
      <anchor>ac2c10c7a866bdeb258d79f2d42748364</anchor>
      <arglist>(grammar const &amp;self)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::spirit::classic::rule&lt; SCANNER &gt;</type>
      <name>m_object</name>
      <anchorfile>classjson_1_1grammar_1_1definition.html</anchorfile>
      <anchor>a0bd8799d6e9568b78a60de95d9940f04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::spirit::classic::rule&lt; SCANNER &gt;</type>
      <name>m_array</name>
      <anchorfile>classjson_1_1grammar_1_1definition.html</anchorfile>
      <anchor>a93d06c909dd44d07d39cc30d3d261b83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::spirit::classic::rule&lt; SCANNER &gt;</type>
      <name>m_pair</name>
      <anchorfile>classjson_1_1grammar_1_1definition.html</anchorfile>
      <anchor>aa38a1ff8a75e8f2700edea49681a2ff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::spirit::classic::rule&lt; SCANNER &gt;</type>
      <name>m_value</name>
      <anchorfile>classjson_1_1grammar_1_1definition.html</anchorfile>
      <anchor>a94a7b8dd1d2259d51c424a5d0d637d95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::spirit::classic::rule&lt; SCANNER &gt;</type>
      <name>m_string</name>
      <anchorfile>classjson_1_1grammar_1_1definition.html</anchorfile>
      <anchor>a23f33f049192cb906990e402e5b220ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::spirit::classic::rule&lt; SCANNER &gt;</type>
      <name>m_number</name>
      <anchorfile>classjson_1_1grammar_1_1definition.html</anchorfile>
      <anchor>a0b94fca37cb1c895ee554dc8c55b27ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::spirit::classic::rule&lt; SCANNER &gt;</type>
      <name>m_boolean</name>
      <anchorfile>classjson_1_1grammar_1_1definition.html</anchorfile>
      <anchor>ad1d40f53d92cff848509856f947b4390</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::spirit::classic::rule&lt; SCANNER &gt;</type>
      <name>m_null</name>
      <anchorfile>classjson_1_1grammar_1_1definition.html</anchorfile>
      <anchor>a285586a097cd360397ba8b5e2e328f7b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>json::grammar::end_array</name>
    <filename>structjson_1_1grammar_1_1end__array.html</filename>
    <member kind="function">
      <type></type>
      <name>end_array</name>
      <anchorfile>structjson_1_1grammar_1_1end__array.html</anchorfile>
      <anchor>ac3492e67ed0513357605869d3ce853ec</anchor>
      <arglist>(stack &amp;stack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>structjson_1_1grammar_1_1end__array.html</anchorfile>
      <anchor>af0dbc85235c2a98a4eaf9ac19ca13c9c</anchor>
      <arglist>(Iterator) const </arglist>
    </member>
    <member kind="variable">
      <type>stack &amp;</type>
      <name>m_stack</name>
      <anchorfile>structjson_1_1grammar_1_1end__array.html</anchorfile>
      <anchor>a87df3ed7bf8e7594b6b534bdf9734fa2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>json::grammar::end_object</name>
    <filename>structjson_1_1grammar_1_1end__object.html</filename>
    <member kind="function">
      <type></type>
      <name>end_object</name>
      <anchorfile>structjson_1_1grammar_1_1end__object.html</anchorfile>
      <anchor>abcadd555234dbdbf98c0ac13530d36a5</anchor>
      <arglist>(stack &amp;stack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>structjson_1_1grammar_1_1end__object.html</anchorfile>
      <anchor>a793982443eef73bdf828e071f885e031</anchor>
      <arglist>(Iterator) const </arglist>
    </member>
    <member kind="variable">
      <type>stack &amp;</type>
      <name>m_stack</name>
      <anchorfile>structjson_1_1grammar_1_1end__object.html</anchorfile>
      <anchor>a37e34a022ac0dbb823027bb9986dceab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>json::grammar::object_delimiter</name>
    <filename>classjson_1_1grammar_1_1object__delimiter.html</filename>
  </compound>
  <compound kind="struct">
    <name>json::grammar::push_boolean</name>
    <filename>structjson_1_1grammar_1_1push__boolean.html</filename>
    <member kind="function">
      <type></type>
      <name>push_boolean</name>
      <anchorfile>structjson_1_1grammar_1_1push__boolean.html</anchorfile>
      <anchor>ad7239e7e4b598ebddd077e7cf267e2df</anchor>
      <arglist>(stack &amp;stack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>structjson_1_1grammar_1_1push__boolean.html</anchorfile>
      <anchor>a706e829f223b6d0fc5ce978b151ee1b5</anchor>
      <arglist>(Iterator szStart, Iterator) const </arglist>
    </member>
    <member kind="variable">
      <type>stack &amp;</type>
      <name>m_stack</name>
      <anchorfile>structjson_1_1grammar_1_1push__boolean.html</anchorfile>
      <anchor>aff669f7616aa43d3cd95557896ae8c20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>json::grammar::push_double</name>
    <filename>structjson_1_1grammar_1_1push__double.html</filename>
    <member kind="function">
      <type></type>
      <name>push_double</name>
      <anchorfile>structjson_1_1grammar_1_1push__double.html</anchorfile>
      <anchor>ab8c3b851a6b81981db2ebe7bc4aaea16</anchor>
      <arglist>(stack &amp;stack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>structjson_1_1grammar_1_1push__double.html</anchorfile>
      <anchor>a2ddf4f7654beb9a7e3373c40e67abe3d</anchor>
      <arglist>(double dValue) const </arglist>
    </member>
    <member kind="variable">
      <type>stack &amp;</type>
      <name>m_stack</name>
      <anchorfile>structjson_1_1grammar_1_1push__double.html</anchorfile>
      <anchor>aa13611ef868498dd06ae6ee2a13aa4e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>json::grammar::push_int</name>
    <filename>structjson_1_1grammar_1_1push__int.html</filename>
    <member kind="function">
      <type></type>
      <name>push_int</name>
      <anchorfile>structjson_1_1grammar_1_1push__int.html</anchorfile>
      <anchor>ac22bf2b687f6a850a692964a8a7f40db</anchor>
      <arglist>(stack &amp;stack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>structjson_1_1grammar_1_1push__int.html</anchorfile>
      <anchor>aeb4b0b5ef86f5875cce09cd34cc751cb</anchor>
      <arglist>(int iValue) const </arglist>
    </member>
    <member kind="variable">
      <type>stack &amp;</type>
      <name>m_stack</name>
      <anchorfile>structjson_1_1grammar_1_1push__int.html</anchorfile>
      <anchor>a8a22026fc4dc7d3240ed954f869fc18c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>json::grammar::push_null</name>
    <filename>structjson_1_1grammar_1_1push__null.html</filename>
    <member kind="function">
      <type></type>
      <name>push_null</name>
      <anchorfile>structjson_1_1grammar_1_1push__null.html</anchorfile>
      <anchor>ac2c47c0a40f6e36165a4b233cbc065ac</anchor>
      <arglist>(stack &amp;stack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>structjson_1_1grammar_1_1push__null.html</anchorfile>
      <anchor>ab9f3c00f4da984807f4a314e34c59886</anchor>
      <arglist>(Iterator, Iterator) const </arglist>
    </member>
    <member kind="variable">
      <type>stack &amp;</type>
      <name>m_stack</name>
      <anchorfile>structjson_1_1grammar_1_1push__null.html</anchorfile>
      <anchor>aa60f73bd630ee4188e0809032632b171</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>json::grammar::push_string</name>
    <filename>structjson_1_1grammar_1_1push__string.html</filename>
    <member kind="function">
      <type></type>
      <name>push_string</name>
      <anchorfile>structjson_1_1grammar_1_1push__string.html</anchorfile>
      <anchor>a2fe7d2b3ff3d3e5474ac896300294319</anchor>
      <arglist>(stack &amp;stack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>structjson_1_1grammar_1_1push__string.html</anchorfile>
      <anchor>a4b70333d998e7e752b800f6d570e0a35</anchor>
      <arglist>(Iterator szStart, Iterator szEnd) const </arglist>
    </member>
    <member kind="variable">
      <type>stack &amp;</type>
      <name>m_stack</name>
      <anchorfile>structjson_1_1grammar_1_1push__string.html</anchorfile>
      <anchor>a39677fc1ba6e0a86179acdf702bc4d5b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>kNet</name>
    <filename>namespacek_net.html</filename>
    <class kind="class">kNet::ArrayIterator</class>
    <class kind="class">kNet::Array</class>
    <class kind="class">kNet::StdCAlloc</class>
    <member kind="typedef">
      <type>unsigned long</type>
      <name>message_id_t</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>a13a69d6fe1a692c68cf8b4661b61127c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>u32</type>
      <name>AllocFlags</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>a78566bdb69648bbe2c8c9703fb29c98a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AFAllocLow</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>a8718051938d47206596f3d813de3f320a13f62914612fada16ce11cef831a0829</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AFAllocHigh</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>a8718051938d47206596f3d813de3f320afaf57f5e97a7249f509c48f45939ec3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPow2Aligned</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>a483081a6e031d8e991a52ccdccb70432</anchor>
      <arglist>(uintptr_t pointer, u32 alignment)</arglist>
    </member>
    <member kind="function">
      <type>uintptr_t</type>
      <name>AlignUpPow2</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>a07100282d8516409579154e7bb0c5f41</anchor>
      <arglist>(uintptr_t pointer, u32 alignment)</arglist>
    </member>
    <member kind="function">
      <type>uintptr_t</type>
      <name>AlignDownPow2</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>a2ec71f103131b8ed6dcf9053cd53adf5</anchor>
      <arglist>(uintptr_t pointer, u32 alignment)</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>RoundUpToNextPow2</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>aa1d89d5a81a1487392168704a3ad9174</anchor>
      <arglist>(u32 x)</arglist>
    </member>
    <member kind="function">
      <type>u64</type>
      <name>RoundUpToNextPow2</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>ab85fd627beeff2dae66b96b4e446cb53</anchor>
      <arglist>(u64 x)</arglist>
    </member>
    <member kind="function">
      <type>Object *</type>
      <name>New</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>a7baa6ab86f61d150e8f0c48b5872dc2b</anchor>
      <arglist>(Allocator *allocator, size_t alignment, const char *nameTag=0, AllocFlags flags=AFAllocLow)</arglist>
    </member>
    <member kind="function">
      <type>Object *</type>
      <name>NewArray</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>af631e2db3ebce1dcf973bf6911755793</anchor>
      <arglist>(size_t numObjects, Allocator *allocator, size_t alignment, const char *nameTag=0, AllocFlags flags=AFAllocLow)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Delete</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>a99c1e848c23136101ae32fed58d2f8d2</anchor>
      <arglist>(Object *ptr, Allocator *allocator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeleteArray</name>
      <anchorfile>namespacek_net.html</anchorfile>
      <anchor>a383225b7709dab30bdde6983ab56397c</anchor>
      <arglist>(Object *ptr, Allocator *allocator)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>kNet::ArrayIterator</name>
    <filename>classk_net_1_1_array_iterator.html</filename>
    <member kind="function">
      <type></type>
      <name>ArrayIterator</name>
      <anchorfile>classk_net_1_1_array_iterator.html</anchorfile>
      <anchor>abc62457db95746bb04249128d49544c3</anchor>
      <arglist>(const ArrayIterator &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrayIterator</name>
      <anchorfile>classk_net_1_1_array_iterator.html</anchorfile>
      <anchor>aa55bb2ed29d0ac07a70522e8bd99c5e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator++</name>
      <anchorfile>classk_net_1_1_array_iterator.html</anchorfile>
      <anchor>a68de3fe4cbe628ed02b71dcce8fb0ac8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator--</name>
      <anchorfile>classk_net_1_1_array_iterator.html</anchorfile>
      <anchor>ada2915c42210a5db5c6e4be4ed005567</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator T *</name>
      <anchorfile>classk_net_1_1_array_iterator.html</anchorfile>
      <anchor>aabf7a2d8d67a77704b39ba6469976912</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const T *</name>
      <anchorfile>classk_net_1_1_array_iterator.html</anchorfile>
      <anchor>a12286f25176dde0e1986e4d21717d83c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator*</name>
      <anchorfile>classk_net_1_1_array_iterator.html</anchorfile>
      <anchor>abf36daa021ed779a43b0d04254ac3d09</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator*</name>
      <anchorfile>classk_net_1_1_array_iterator.html</anchorfile>
      <anchor>a082ed165c8cb366a51354a681814bd85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classk_net_1_1_array_iterator.html</anchorfile>
      <anchor>ad6c8671c2f0d8b2b7d785426c4b36075</anchor>
      <arglist>(const ArrayIterator &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classk_net_1_1_array_iterator.html</anchorfile>
      <anchor>a01b96bcd24c23d216d9500813c25a4d4</anchor>
      <arglist>(const ArrayIterator &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classk_net_1_1_array_iterator.html</anchorfile>
      <anchor>afd1251f23a66940827de65a85e5e4e0e</anchor>
      <arglist>(const ArrayIterator &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classk_net_1_1_array_iterator.html</anchorfile>
      <anchor>aa71610bfbf4cd3b8a04563a6fd44cbeb</anchor>
      <arglist>(const ArrayIterator &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classk_net_1_1_array_iterator.html</anchorfile>
      <anchor>acc9d64de4ff9bf374e1b670a318c4ae8</anchor>
      <arglist>(const ArrayIterator &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classk_net_1_1_array_iterator.html</anchorfile>
      <anchor>a57a2e0c6d43e144d419e3d51b689d01d</anchor>
      <arglist>(const ArrayIterator &amp;rhs) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ArrayIterator</name>
      <anchorfile>classk_net_1_1_array_iterator.html</anchorfile>
      <anchor>a6efdf4239f5728e11e328ed67d1c5b38</anchor>
      <arglist>(Array&lt; T, AllocT &gt; &amp;container_, T *ptr_)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T *</type>
      <name>ptr</name>
      <anchorfile>classk_net_1_1_array_iterator.html</anchorfile>
      <anchor>a4068b67c1c70fcf7eca53f1973909d2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array&lt; T, AllocT &gt; *</type>
      <name>container</name>
      <anchorfile>classk_net_1_1_array_iterator.html</anchorfile>
      <anchor>ae2951cbe62c242f79e079ff77c710cc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Array&lt; T, AllocT &gt;</name>
      <anchorfile>classk_net_1_1_array_iterator.html</anchorfile>
      <anchor>a757bacd1a9418d7bd49be346c6990521</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>kNet::Array</name>
    <filename>classk_net_1_1_array.html</filename>
    <member kind="typedef">
      <type>ArrayIterator&lt; T, AllocT &gt;</type>
      <name>iterator</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>aff4d6e22dba948a3feb379cc6ef094b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>a0f55dd81709b2a201791357c68bdbd92</anchor>
      <arglist>(AllocT *allocator_=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>a0f476fb58730cf390543d28c522b723d</anchor>
      <arglist>(const Array &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>a95435021ae93e01e0050f453ae40685e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>front</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>aa838c973f19fc5311bf03b65bd478bf8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>back</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>afcc39ce71e83eb92005e61435eb7e7ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>front</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>a19a7c56361d26a0b483f3550ebc176ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>back</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>a5718e2df18fcd112b9172894896533ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>ac88802aee60f32923b09eb15168b0d0e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>capacity</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>af8e32815cd9881bcfdb25165e6825017</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_allocator</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>a65f724c31aeffb0bb2d42d6b5df54ffb</anchor>
      <arglist>(AllocT *allocator_)</arglist>
    </member>
    <member kind="function">
      <type>AllocT *</type>
      <name>get_allocator</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>af20807ed7d45821d50505a2e87423221</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>beginptr</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>aa7a4ee97fa5a4daedc4ecd257b88502f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>endptr</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>a66dc97d20e4796246bbd8bc1bf513b3b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>capptr</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>ad6f01ee86afd7729bd178f71793152ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>adcb449db6e48a3a6234e4f9d4dbd83f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>a4fc7b8cc607f98bc20f047338f0db09c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>end</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>aef9f019ac548b151a2bd21895015c9ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>a2798c9278810320bdbdc09c47a9cd1a2</anchor>
      <arglist>(const T &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>a561c3c130e403df3926972118561067f</anchor>
      <arglist>(int i, const T &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>af4e3fde21fb2ed6a457145b6e32ac2c1</anchor>
      <arglist>(const T *dataArray, int numElements)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InsertMultiple</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>ab52967c725abc97546e1f3a92ca9e285</anchor>
      <arglist>(int i, const T &amp;val, int numTimes)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MembersUnique</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>ae87dba9fd6cb333379a2b45c09daca11</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_front</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>adaec9d71033a42653793fc95a5542799</anchor>
      <arglist>(const T &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>a58890fdd7b1d2a4a2106e1eb864cd007</anchor>
      <arglist>(const T &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back_unsafe</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>a7416ce05ba3603651c62717261035c08</anchor>
      <arglist>(const T &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>push_back_unsafe_pod</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>ac1ffcef2e6535c5a4f8a9456f6bd6637</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>push_back</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>a71505d40964f428b93aeb710ce26a1e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>ad16d494ed978bd790183ac55a216679a</anchor>
      <arglist>(int start, int end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>a7a41561a506fd6aff8bc99ddf587694f</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>adcc1aa7f709556fea3c0faf7240419ea</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_back</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>acbcb526833f4c7c655846cfcfdbbeee4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_back_pod</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>a47108732100311e431c664c18f2a8c2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>a67d67b6205eb35520b38bead8bf1759d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_pod</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>a2e34094e5ec7aa19acaf13e4e4a210c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>aaa956010d92ac62cfebff1dfefb504f7</anchor>
      <arglist>(size_t newSize)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>a0e29c301640ad65a2c8865a1cf136e34</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>a06720d6388f18c80f83dbb9784de1424</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; T, AllocT &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>a0ff627ca7a3114ad4809350d22f442dc</anchor>
      <arglist>(const Array&lt; T, AllocT &gt; &amp;rhs)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>a46c348c772673b7bb44c60ae116fb389</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AllocT *</type>
      <name>allocator</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>a56bb1abd9d51efc3a3fb01d57d431190</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>cap</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>a07dacfcb761faa7cd88656959c1aa755</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>used</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>aa6a98c86d7bfc320753be5366ed5466e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const size_t</type>
      <name>initialSize</name>
      <anchorfile>classk_net_1_1_array.html</anchorfile>
      <anchor>a60dbb58ca8182647c41051022e121470</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>kNet::StdCAlloc</name>
    <filename>classk_net_1_1_std_c_alloc.html</filename>
    <member kind="function" static="yes">
      <type>static void *</type>
      <name>Alloc</name>
      <anchorfile>classk_net_1_1_std_c_alloc.html</anchorfile>
      <anchor>a3816dcc158e5b9b4d55e5b33462eb9d2</anchor>
      <arglist>(StdCAlloc *, size_t size, size_t alignment, const char *=0, AllocFlags=AFAllocLow)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Free</name>
      <anchorfile>classk_net_1_1_std_c_alloc.html</anchorfile>
      <anchor>acec42d6983a1a0f686327128202de71a</anchor>
      <arglist>(StdCAlloc *, void *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>Size</name>
      <anchorfile>classk_net_1_1_std_c_alloc.html</anchorfile>
      <anchor>a3ea3a40a4ff298644a2cd5deec1965b3</anchor>
      <arglist>(StdCAlloc *, void *ptr)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>KristalliProtocol</name>
    <filename>namespace_kristalli_protocol.html</filename>
    <namespace>KristalliProtocol::anonymous_namespace{KristalliProtocolModule.cpp}</namespace>
    <class kind="class">KristalliProtocol::KristalliProtocolModule</class>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>cInitialAttempts</name>
      <anchorfile>namespace_kristalli_protocol.html</anchorfile>
      <anchor>af2cc161e3d8ed398b58c7ba76192dd9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>cReconnectAttempts</name>
      <anchorfile>namespace_kristalli_protocol.html</anchorfile>
      <anchor>a85e606b57296a375e14560dd0a088e7b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KristalliProtocol::KristalliProtocolModule</name>
    <filename>class_kristalli_protocol_1_1_kristalli_protocol_module.html</filename>
    <base>IModule</base>
    <member kind="signal">
      <type>void</type>
      <name>NetworkMessageReceived</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a43ba8120f9d8f18902e993ddd6bb566f</anchor>
      <arglist>(kNet::MessageConnection *source, kNet::message_id_t id, const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ClientConnectedEvent</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a5e1fc69a5f2d68df53c084e0e0756ec2</anchor>
      <arglist>(UserConnection *connection)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ClientDisconnectedEvent</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a23155dd6e3db8629200f7a249877c38e</anchor>
      <arglist>(UserConnection *connection)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ConnectionAttemptFailed</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>abff203ec105bde985bb08b7e94296558</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KristalliProtocolModule</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a670c1530c36db1b6df2c988491c38b31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KristalliProtocolModule</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a571efba65229c42c634f9ee9dd4b2fe0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Load</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a5a30608c759bc5852255ac09fa869f78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Unload</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a789752051d290ce224a40581c8ecd2ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a2384edb047652342391bf0fe3ba14423</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Uninitialize</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a92949292b30c61507defbc63f04b659f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>aba6a10cb3564cbbd3519feed472f45eb</anchor>
      <arglist>(f64 frametime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Connect</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>aad59051cc0a3e93364329b635a0f0664</anchor>
      <arglist>(const char *ip, unsigned short port, kNet::SocketTransportLayer transport)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Disconnect</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a5bd45aa9af91612c16de5b72730fa624</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StartServer</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a3a412b8bc8bb2cfaca997108d1c4486a</anchor>
      <arglist>(unsigned short port, kNet::SocketTransportLayer transport)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StopServer</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>ace0bf205947f9d1b9bde7cca1e6141f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleMessage</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>aaf54c36ea05f94bec0ec6b36cf39424a</anchor>
      <arglist>(kNet::MessageConnection *source, kNet::message_id_t id, const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NewConnectionEstablished</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a67eea9c1cbab978500cf4a73373cd1c7</anchor>
      <arglist>(kNet::MessageConnection *source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClientDisconnected</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a66e54e83f78438bd05a110f94d343047</anchor>
      <arglist>(kNet::MessageConnection *source)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Connected</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a4dc72d557f514bb115387518ca87946a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SubscribeToNetworkEvents</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a6f4737004c46a75227ff1caca56c2b16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>kNet::MessageConnection *</type>
      <name>GetMessageConnection</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a5288b4b1bb7cd32228adb751512737ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>kNet::NetworkServer *</type>
      <name>GetServer</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a6c35e9cc4cbfbf7dac3760a8020c44bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>kNet::Network *</type>
      <name>GetNetwork</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a86bc3cc3cd3dea3504ceddfdaa0c6a04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsServer</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a11ae00093d698d2701d06616a8b6df64</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>UserConnectionList &amp;</type>
      <name>GetUserConnections</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>accc21c8e3108b72ab04dfe2b5a59d47e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>UserConnection *</type>
      <name>GetUserConnection</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a3fbf3dcdba090a0ed92dbab7b0ada946</anchor>
      <arglist>(kNet::MessageConnection *source)</arglist>
    </member>
    <member kind="function">
      <type>UserConnection *</type>
      <name>GetUserConnection</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>ab85375731db1bca51e00f0325a3df1f5</anchor>
      <arglist>(u8 id)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a715ca908fee148f6abeb45f41f646951</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>af0fc3706f5a2e27374c642e71e4eca8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>kNet::SocketTransportLayer</type>
      <name>defaultTransport</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>ac7983a00560de9e6bd853e18faae6586</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework_</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>aff39960b9800c16d6f4976b5614c37a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>PerformConnection</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a5b14f46f5b294c8bae3d01cf202bef6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>u8</type>
      <name>AllocateNewConnectionID</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a9e64fdf0687eede7a41531cb24902cbb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Ptr</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>ab930d387e820fac2e0def773e067cb41</anchor>
      <arglist>(kNet::MessageConnection) serverConnection</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>kNet::PolledTimer</type>
      <name>reconnectTimer</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>aa159ba551292c3b184df9195f34733ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>reconnectAttempts</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a6d7d88b292e3d296795745e635faca3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>connectionPending</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a51a6c9d2fa8b2712966c35c73769c213</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>serverIp</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a5813738788c60d0e4c2b982b796e6593</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned short</type>
      <name>serverPort</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a8ede1ca31142de9f87b778727c160706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>kNet::SocketTransportLayer</type>
      <name>serverTransport</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>afe49d1ee31a4f4aca91c0d1d3da43c3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>kNet::Network</type>
      <name>network</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>a0ec1bd4fe3c197d90aaf0fbfc7644e06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>kNet::NetworkServer *</type>
      <name>server</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>ac32e77636f2379f16897176b21f6c336</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>UserConnectionList</type>
      <name>connections</name>
      <anchorfile>class_kristalli_protocol_1_1_kristalli_protocol_module.html</anchorfile>
      <anchor>ae5b4972a78ad0a020020c1a9f5c5ab82</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>KristalliProtocol::anonymous_namespace{KristalliProtocolModule.cpp}</name>
    <filename>namespace_kristalli_protocol_1_1anonymous__namespace_02_kristalli_protocol_module_8cpp_03.html</filename>
  </compound>
  <compound kind="namespace">
    <name>math</name>
    <filename>namespacemath.html</filename>
    <class kind="class">math::FixedPoint</class>
    <member kind="function">
      <type>void</type>
      <name>Add</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>ad01b89eb82a682d3fe1ade9dc54165aa</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;dst, const FixedPoint&lt; T, F2 &gt; &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Add</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a42a6e22992ad1074db9c7afa11fc9c36</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;dst, const T &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Sub</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a82d86a88be5ab7db981aac693a2516c1</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;dst, const FixedPoint&lt; T, F2 &gt; &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Sub</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>aefadd31245567be325f740742aba8a00</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;dst, const T &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Mul</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>ad2fa40717a314d53a309bb755ee39ed0</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;dst, const T &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MulExtraFast</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a5bce4f63685aa6fa85dc09b55d068478</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F2 &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MulFast</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a84dc0c0003d43f2e71c033f67f84bd5c</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MulPrecise</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a5f47615aac7f148153cd1cd44dbfc01d</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Div</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>ad62161140be09cd7ef2a87d95d5b2200</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DivExtraFast</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a1ad737a948ece7d14a0f094c83d4657d</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F2 &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>const FixedPoint&lt; T, F &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>af06dd01373a9cc475ace8a329fc57f98</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>const FixedPoint&lt; T, F &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a516ca798e80e6988aa7f6f26733c123d</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>const FixedPoint&lt; T, F &gt;</type>
      <name>operator+</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a4ee0aec7813e8c2a8a68c5ee32a47051</anchor>
      <arglist>(const FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>const FixedPoint&lt; T, F &gt;</type>
      <name>operator+</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>abd7df11f54168d02066096cc2568927f</anchor>
      <arglist>(const FixedPoint&lt; T, F &gt; &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>const FixedPoint&lt; T, F &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a7413a6b129732e95ba36f5df64fe1596</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>const FixedPoint&lt; T, F &gt;</type>
      <name>operator-</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>aa3de418f09295637f1ea0f8f2c09bd14</anchor>
      <arglist>(const FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>const FixedPoint&lt; T, F &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a0b8eaeb85079e405ecbd961b818c1ee3</anchor>
      <arglist>(FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>const FixedPoint&lt; T, F &gt;</type>
      <name>operator*</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a75a01f33fccd083776456f7f12d73510</anchor>
      <arglist>(const FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a4c2fcb9b351511e9dc7e36757b61a837</anchor>
      <arglist>(const FixedPoint&lt; T, F &gt; &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>af37a872120c3038c54f7b10f900f53d2</anchor>
      <arglist>(const FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a7993be54f0a184a69891da1d9f6fdab4</anchor>
      <arglist>(const FixedPoint&lt; T, F &gt; &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>ae2126c60c2f684ff7ba7154ada4ea079</anchor>
      <arglist>(const FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespacemath.html</anchorfile>
      <anchor>a1fd591b6cf7f6d63ecca9e0a0464ba37</anchor>
      <arglist>(const FixedPoint&lt; T, F &gt; &amp;a, const FixedPoint&lt; T, F &gt; &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>math::FixedPoint</name>
    <filename>classmath_1_1_fixed_point.html</filename>
    <member kind="enumvalue">
      <name>One</name>
      <anchorfile>classmath_1_1_fixed_point.html</anchorfile>
      <anchor>a1a9637e22a3c445e48e12ae2c80f5bd9aa9d0f9d35ecc0686dcaefc1bbfc5ac83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IntBits</name>
      <anchorfile>classmath_1_1_fixed_point.html</anchorfile>
      <anchor>a1a9637e22a3c445e48e12ae2c80f5bd9a4bd3e9a721a0b9f642ecebe26b272315</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FracBits</name>
      <anchorfile>classmath_1_1_fixed_point.html</anchorfile>
      <anchor>a1a9637e22a3c445e48e12ae2c80f5bd9ad1ad823616ef92a2e5ee68e353c10cbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MaxVal</name>
      <anchorfile>classmath_1_1_fixed_point.html</anchorfile>
      <anchor>a1a9637e22a3c445e48e12ae2c80f5bd9a4b7d0750324bcf3facae2f711684f087</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MaxFrac</name>
      <anchorfile>classmath_1_1_fixed_point.html</anchorfile>
      <anchor>a1a9637e22a3c445e48e12ae2c80f5bd9ac393d5f81fec4ca7fa95b534bfaeb168</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Epsilon</name>
      <anchorfile>classmath_1_1_fixed_point.html</anchorfile>
      <anchor>a1a9637e22a3c445e48e12ae2c80f5bd9a72bd0a34527953a5ca7301ae6d743b0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FixedPoint</name>
      <anchorfile>classmath_1_1_fixed_point.html</anchorfile>
      <anchor>ac1e0b0f9063f7af4988ef3a478bad4f0</anchor>
      <arglist>(const BaseT &amp;v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FixedPoint</name>
      <anchorfile>classmath_1_1_fixed_point.html</anchorfile>
      <anchor>a28e593601e317507e577b87096776ce6</anchor>
      <arglist>(const BaseT &amp;whole, const BaseT &amp;frac)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FixedPoint</name>
      <anchorfile>classmath_1_1_fixed_point.html</anchorfile>
      <anchor>a603b8b50db99cfb24a6c1e9f7d633e3b</anchor>
      <arglist>(const BaseT &amp;whole, const BaseT &amp;nomin, const BaseT &amp;denom)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator double</name>
      <anchorfile>classmath_1_1_fixed_point.html</anchorfile>
      <anchor>a9b3398cd54e85d8ea25b7ae74e4afe56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BaseT</type>
      <name>Int</name>
      <anchorfile>classmath_1_1_fixed_point.html</anchorfile>
      <anchor>a867271e45df89a47b8ce8c396d8b8747</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BaseT</type>
      <name>Frac</name>
      <anchorfile>classmath_1_1_fixed_point.html</anchorfile>
      <anchor>a21f82e7bdfab6f7214381df2294e87b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>BaseT</type>
      <name>value</name>
      <anchorfile>classmath_1_1_fixed_point.html</anchorfile>
      <anchor>aa19c37176db02c9f207ccba03b0797ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>OggVorbisLoader</name>
    <filename>namespace_ogg_vorbis_loader.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>LoadOggVorbisFromFileInMemory</name>
      <anchorfile>namespace_ogg_vorbis_loader.html</anchorfile>
      <anchor>a104cb093d0b3feaf0c5c40ee29d55e88</anchor>
      <arglist>(const u8 *fileData, size_t numBytes, std::vector&lt; u8 &gt; &amp;dst, bool *isStereo, bool *is16Bit, int *frequency)</arglist>
    </member>
    <member kind="function">
      <type>bool AUDIO_API</type>
      <name>LoadOggVorbisFileToSoundBuffer</name>
      <anchorfile>namespace_ogg_vorbis_loader.html</anchorfile>
      <anchor>ad7ffcd31f8810016e9591f7ae3a50497</anchor>
      <arglist>(const u8 *data, size_t numBytes, SoundBuffer &amp;dst)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Ogre</name>
    <filename>namespace_ogre.html</filename>
  </compound>
  <compound kind="namespace">
    <name>OgreRenderer</name>
    <filename>namespace_ogre_renderer.html</filename>
    <class kind="class">OgreRenderer::HDRListener</class>
    <class kind="class">OgreRenderer::GaussianListener</class>
    <class kind="class">OgreRenderer::CompositionHandler</class>
    <class kind="class">OgreRenderer::OgreRenderingModule</class>
    <class kind="class">OgreRenderer::OgreLogListener</class>
    <class kind="class">OgreRenderer::Renderer</class>
    <class kind="class">OgreRenderer::RendererSettingsWindow</class>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Renderer &gt;</type>
      <name>RendererPtr</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>acd18f894da3dcd6bc9f4d3b4425ecb3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; Renderer &gt;</type>
      <name>RendererWeakPtr</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a472796ef0d8bafebe800b7dcc0498ed9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Ogre::Root &gt;</type>
      <name>OgreRootPtr</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a70fb8766879663dff764c73269b63173</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; ResourceHandler &gt;</type>
      <name>ResourceHandlerPtr</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a06f6435cdc6d572863e877c9b454f35c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; RenderableListener &gt;</type>
      <name>RenderableListenerPtr</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a3677fbdf62b6c533d28c6ed72f835940</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ShadowQuality</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>aad0833469aa8af821b4dc8c0fce29d17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Shadows_Off</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>aad0833469aa8af821b4dc8c0fce29d17a15767242844b5dc44ecbc401a9c31e56</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Shadows_Low</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>aad0833469aa8af821b4dc8c0fce29d17a513e2a301fd9f4601ddc0b3bcdb04d68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Shadows_High</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>aad0833469aa8af821b4dc8c0fce29d17a04b73f7ae474c141d61aa68b6f3859fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>TextureQuality</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a3a501a39b10a82505d11f5c3fb8e8c96</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Texture_Low</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a3a501a39b10a82505d11f5c3fb8e8c96a205374209fb462e9833fcb52ef52124b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Texture_Normal</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a3a501a39b10a82505d11f5c3fb8e8c96ad5e7d45f2b9fcca1a319d17671344603</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>AddDoubleQuotesIfNecessary</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>ae319180e8bff881610d31fa27392ff10</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DesanitateAssetIds</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a9a811e0492b3cfbea6dd3d66894a3f28</anchor>
      <arglist>(std::string &amp;script, const QStringList &amp;keywords)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::MeshPtr</type>
      <name>GetLocalMesh</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a2d5d18b223a5e85e28de93d62b320a7b</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::SkeletonPtr</type>
      <name>GetLocalSkeleton</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a6dbdacb468b479af253ae10228960358</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::MaterialPtr</type>
      <name>GetLocalMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a08719648d0c2d3f449cabc6d5715a24d</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::TexturePtr</type>
      <name>GetLocalTexture</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a6173be4a44e1c63d47c9b2b8d3eb17be</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMaterialSuffixValid</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a69bacf0251ed9d9fd79750a93d4a5277</anchor>
      <arglist>(const std::string &amp;suffix)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetMaterialSuffix</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>ae0efe76389fb78cbdbf46c6fc97c37a0</anchor>
      <arglist>(uint variation)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>GetMaterialVariation</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>aa5d02a31d4dbf8911a32d9ac7ce95beb</anchor>
      <arglist>(const std::string &amp;suffix)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::MaterialPtr</type>
      <name>CloneMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a0b91039592ecf5ce407ec07b7cea0cd4</anchor>
      <arglist>(const std::string &amp;sourceMaterialName, const std::string &amp;newName)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::MaterialPtr</type>
      <name>GetOrCreateLitTexturedMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a7d4e5623027f48086835943c350d39d5</anchor>
      <arglist>(const std::string &amp;materialName)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::MaterialPtr</type>
      <name>GetOrCreateUnlitTexturedMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a2509d75a87f531327918334eda3c0795</anchor>
      <arglist>(const std::string &amp;materialName)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::MaterialPtr</type>
      <name>GetOrCreateLegacyMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>aeb9f2c39ba4e0c85d3a7ad82911195f0</anchor>
      <arglist>(const std::string &amp;textureName, const std::string &amp;suffix)</arglist>
    </member>
    <member kind="function">
      <type>Ogre::MaterialPtr</type>
      <name>GetOrCreateLegacyMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>ac512f4370041971a4bb0c36ac2a7af7a</anchor>
      <arglist>(const std::string &amp;textureName, uint variation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateLegacyMaterials</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a34cf1bc48dd09715d2b0fe88d3b058b7</anchor>
      <arglist>(const std::string &amp;texture_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTextureUnitOnMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a4b1547c5c8e4250a4a190caa4af88502</anchor>
      <arglist>(Ogre::MaterialPtr material, const std::string &amp;texture_name, uint index=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReplaceTextureOnMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a0d35939e0b9bfcae1f6b35248c338dc0</anchor>
      <arglist>(Ogre::MaterialPtr material, const std::string &amp;original_name, const std::string &amp;texture_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetTextureNamesFromMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>ad0eb23264f2f4815e15f865a42e508d9</anchor>
      <arglist>(Ogre::MaterialPtr material, StringVector &amp;textures)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveMaterial</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>ae74a5dd2af66de31e3485f1feb86c96e</anchor>
      <arglist>(Ogre::MaterialPtr &amp;material)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ProcessBraces</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>ac9069a6d5052f4d23d95421c22257f48</anchor>
      <arglist>(const std::string &amp;line, int &amp;braceLevel)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>BaseMaterials</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a3772f0c1663cb1e9ca32db3e044b753c</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>AlphaBaseMaterials</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>acec127bfbb9d01c7b31aeafab51fb3d6</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>MaterialSuffix</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a848bf4202ca6f1a20f0fdae906496d3a</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>const uint</type>
      <name>LEGACYMAT_NORMAL</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a3a664da650ef7efb571380176a75b800</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint</type>
      <name>LEGACYMAT_FULLBRIGHT</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>ae940f81164bda9c86490e9a10cfa6b83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint</type>
      <name>LEGACYMAT_ADDITIVE</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a07b86bddcead54210352c16b14ce2197</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint</type>
      <name>LEGACYMAT_ALPHA</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>ab72063660ad3084a1d13ebcdd9b523d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint</type>
      <name>LEGACYMAT_VERTEXCOL</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a2c8c7a86262b4ac28743c51c9c98a0e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint</type>
      <name>LEGACYMAT_VERTEXCOLALPHA</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>a52dd22c240d8ccba255563a6f85236cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint</type>
      <name>MAX_MATERIAL_VARIATIONS</name>
      <anchorfile>namespace_ogre_renderer.html</anchorfile>
      <anchor>afb2fe03db79c99c244791ae0fb44cab8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OgreRenderer::HDRListener</name>
    <filename>class_ogre_renderer_1_1_h_d_r_listener.html</filename>
    <member kind="function">
      <type></type>
      <name>HDRListener</name>
      <anchorfile>class_ogre_renderer_1_1_h_d_r_listener.html</anchorfile>
      <anchor>a2a771bcf406c0f022883fe92a8737163</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HDRListener</name>
      <anchorfile>class_ogre_renderer_1_1_h_d_r_listener.html</anchorfile>
      <anchor>a4fe53857d5932ac5a90acee35603d280</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyViewportSize</name>
      <anchorfile>class_ogre_renderer_1_1_h_d_r_listener.html</anchorfile>
      <anchor>a2915e1d6e36fe14e6e328d071c57b6a3</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyCompositor</name>
      <anchorfile>class_ogre_renderer_1_1_h_d_r_listener.html</anchorfile>
      <anchor>a244ca0cb9c3a1d355ba749914c0ef278</anchor>
      <arglist>(Ogre::CompositorInstance *instance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyMaterialSetup</name>
      <anchorfile>class_ogre_renderer_1_1_h_d_r_listener.html</anchorfile>
      <anchor>a37946e4547c01209290b658f066c4d14</anchor>
      <arglist>(Ogre::uint32 pass_id, Ogre::MaterialPtr &amp;mat)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyMaterialRender</name>
      <anchorfile>class_ogre_renderer_1_1_h_d_r_listener.html</anchorfile>
      <anchor>a3a8d41adeefb7ac977e622740faa9a6b</anchor>
      <arglist>(Ogre::uint32 pass_id, Ogre::MaterialPtr &amp;mat)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mVpWidth</name>
      <anchorfile>class_ogre_renderer_1_1_h_d_r_listener.html</anchorfile>
      <anchor>a2efcf57f1831a1b1cb560bbb3e3eb3b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mVpHeight</name>
      <anchorfile>class_ogre_renderer_1_1_h_d_r_listener.html</anchorfile>
      <anchor>a725de415e0a0785ba89f353a517938de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mBloomSize</name>
      <anchorfile>class_ogre_renderer_1_1_h_d_r_listener.html</anchorfile>
      <anchor>af5627ab6aa7337622eddcf5775773f3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mBloomTexWeights</name>
      <anchorfile>class_ogre_renderer_1_1_h_d_r_listener.html</anchorfile>
      <anchor>a5dc11a9120e2e3bd5694185189898e17</anchor>
      <arglist>[15][4]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mBloomTexOffsetsHorz</name>
      <anchorfile>class_ogre_renderer_1_1_h_d_r_listener.html</anchorfile>
      <anchor>ab46836b6c93a41d1582e41bba7c008e6</anchor>
      <arglist>[15][4]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mBloomTexOffsetsVert</name>
      <anchorfile>class_ogre_renderer_1_1_h_d_r_listener.html</anchorfile>
      <anchor>a4647d92a3cce60ca7672358ab9c05626</anchor>
      <arglist>[15][4]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OgreRenderer::GaussianListener</name>
    <filename>class_ogre_renderer_1_1_gaussian_listener.html</filename>
    <member kind="function">
      <type></type>
      <name>GaussianListener</name>
      <anchorfile>class_ogre_renderer_1_1_gaussian_listener.html</anchorfile>
      <anchor>a8947249d8e77f1f7975f876475c9a772</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GaussianListener</name>
      <anchorfile>class_ogre_renderer_1_1_gaussian_listener.html</anchorfile>
      <anchor>ac2d7c78da6a9f852dccabd588f01be9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyViewportSize</name>
      <anchorfile>class_ogre_renderer_1_1_gaussian_listener.html</anchorfile>
      <anchor>abaa61335ee4033f5c99493ccbfee30ce</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyMaterialSetup</name>
      <anchorfile>class_ogre_renderer_1_1_gaussian_listener.html</anchorfile>
      <anchor>a37ba1ca2f25f09259b52a4a0281e9f30</anchor>
      <arglist>(Ogre::uint32 pass_id, Ogre::MaterialPtr &amp;mat)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyMaterialRender</name>
      <anchorfile>class_ogre_renderer_1_1_gaussian_listener.html</anchorfile>
      <anchor>a513e98294cec3bb49bde58bb83a31a53</anchor>
      <arglist>(Ogre::uint32 pass_id, Ogre::MaterialPtr &amp;mat)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mVpWidth</name>
      <anchorfile>class_ogre_renderer_1_1_gaussian_listener.html</anchorfile>
      <anchor>ab8f4de87b71cbf57c89145594ff61aee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mVpHeight</name>
      <anchorfile>class_ogre_renderer_1_1_gaussian_listener.html</anchorfile>
      <anchor>ab9d8cecb14e38c95f2d3e48f7301baeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mBloomTexWeights</name>
      <anchorfile>class_ogre_renderer_1_1_gaussian_listener.html</anchorfile>
      <anchor>aa27ee82fe3fca28128f97a93bb09c6ea</anchor>
      <arglist>[15][4]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mBloomTexOffsetsHorz</name>
      <anchorfile>class_ogre_renderer_1_1_gaussian_listener.html</anchorfile>
      <anchor>a42082745a3af7d4ad2d88fe139e683cf</anchor>
      <arglist>[15][4]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mBloomTexOffsetsVert</name>
      <anchorfile>class_ogre_renderer_1_1_gaussian_listener.html</anchorfile>
      <anchor>ab1cbbb2259efd151e71bc34a732643d7</anchor>
      <arglist>[15][4]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OgreRenderer::CompositionHandler</name>
    <filename>class_ogre_renderer_1_1_composition_handler.html</filename>
    <class kind="struct">OgreRenderer::CompositionHandler::Compositor</class>
    <member kind="function">
      <type></type>
      <name>CompositionHandler</name>
      <anchorfile>class_ogre_renderer_1_1_composition_handler.html</anchorfile>
      <anchor>ad97bfe18071850d980d4d28a2dbf8c46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CompositionHandler</name>
      <anchorfile>class_ogre_renderer_1_1_composition_handler.html</anchorfile>
      <anchor>abd33eb4bdf366fcc8568e74c8ab7d8c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Initialize</name>
      <anchorfile>class_ogre_renderer_1_1_composition_handler.html</anchorfile>
      <anchor>a51bca734879a1a883ea0758b48411d87</anchor>
      <arglist>(Framework *framework, Ogre::Viewport *vp)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddCompositorForViewport</name>
      <anchorfile>class_ogre_renderer_1_1_composition_handler.html</anchorfile>
      <anchor>a063e110429293f9eadb4930378e10fef</anchor>
      <arglist>(const std::string &amp;compositor, Ogre::Viewport *vp, int position=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveCompositorFromViewport</name>
      <anchorfile>class_ogre_renderer_1_1_composition_handler.html</anchorfile>
      <anchor>a7d76e702d5d8b96f9999b5da8409b65e</anchor>
      <arglist>(const std::string &amp;compositor, Ogre::Viewport *vp)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddCompositorForViewport</name>
      <anchorfile>class_ogre_renderer_1_1_composition_handler.html</anchorfile>
      <anchor>a588e5bb3914acff4d4c73227b8484a0f</anchor>
      <arglist>(const std::string &amp;compositor, int position=-1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddCompositorForViewportPriority</name>
      <anchorfile>class_ogre_renderer_1_1_composition_handler.html</anchorfile>
      <anchor>a6c19d0e4dc341c85606b784d39952e6e</anchor>
      <arglist>(const std::string &amp;compositor, int priority=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveCompositorFromViewport</name>
      <anchorfile>class_ogre_renderer_1_1_composition_handler.html</anchorfile>
      <anchor>a1253ea3f519804f08965c851e18a93d2</anchor>
      <arglist>(const std::string &amp;compositor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCompositorParameter</name>
      <anchorfile>class_ogre_renderer_1_1_composition_handler.html</anchorfile>
      <anchor>a4346e7981bdf1fb142e9436702080f82</anchor>
      <arglist>(const std::string &amp;compositorName, const QList&lt; std::pair&lt; std::string, Ogre::Vector4 &gt; &gt; &amp;source) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCompositorEnabled</name>
      <anchorfile>class_ogre_renderer_1_1_composition_handler.html</anchorfile>
      <anchor>a54aabbf673e4df449c9700c58062938c</anchor>
      <arglist>(const std::string &amp;compositor, bool enable) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAllCompositors</name>
      <anchorfile>class_ogre_renderer_1_1_composition_handler.html</anchorfile>
      <anchor>a2f1af30dcaf756484cd567536368c22b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CameraChanged</name>
      <anchorfile>class_ogre_renderer_1_1_composition_handler.html</anchorfile>
      <anchor>a4f7596c9fce1adaf4abd4f401497ff6c</anchor>
      <arglist>(Ogre::Viewport *vp, Ogre::Camera *newCamera)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>AddCompositor</name>
      <anchorfile>class_ogre_renderer_1_1_composition_handler.html</anchorfile>
      <anchor>a184a3ff85c48d1862d9b27346990f8e7</anchor>
      <arglist>(const std::string &amp;compositor, Ogre::Viewport *vp, int position)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetCompositorTargetParameters</name>
      <anchorfile>class_ogre_renderer_1_1_composition_handler.html</anchorfile>
      <anchor>ae01a772b2b15c680fbeba5c7afb0a9e4</anchor>
      <arglist>(Ogre::CompositionTargetPass *target, const QList&lt; std::pair&lt; std::string, Ogre::Vector4 &gt; &gt; &amp;source) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetMaterialParameters</name>
      <anchorfile>class_ogre_renderer_1_1_composition_handler.html</anchorfile>
      <anchor>a70c130d874e9f83cde47b00a6d7d9dda</anchor>
      <arglist>(const Ogre::MaterialPtr &amp;material, const QList&lt; std::pair&lt; std::string, Ogre::Vector4 &gt; &gt; &amp;source) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::CompositorManager *</type>
      <name>c_manager_</name>
      <anchorfile>class_ogre_renderer_1_1_composition_handler.html</anchorfile>
      <anchor>af7745fbb5ad040fde6fbe000406474ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::Viewport *</type>
      <name>viewport_</name>
      <anchorfile>class_ogre_renderer_1_1_composition_handler.html</anchorfile>
      <anchor>ad4a4bfee98056852626d0007d1ad9ba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>HDRListener</type>
      <name>hdr_listener_</name>
      <anchorfile>class_ogre_renderer_1_1_composition_handler.html</anchorfile>
      <anchor>aefd36d806e5d9d5e11f8c474469d621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>GaussianListener</type>
      <name>gaussian_listener_</name>
      <anchorfile>class_ogre_renderer_1_1_composition_handler.html</anchorfile>
      <anchor>a2b7f147f9551f6d9fce114543d65bc66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, int &gt;</type>
      <name>priorities_</name>
      <anchorfile>class_ogre_renderer_1_1_composition_handler.html</anchorfile>
      <anchor>ad1c2406fc059f52c0a0157360084e12a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework_</name>
      <anchorfile>class_ogre_renderer_1_1_composition_handler.html</anchorfile>
      <anchor>af7f05dd7fb663feaf4105270742fdf01</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>OgreRenderer::CompositionHandler::Compositor</name>
    <filename>struct_ogre_renderer_1_1_composition_handler_1_1_compositor.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>struct_ogre_renderer_1_1_composition_handler_1_1_compositor.html</anchorfile>
      <anchor>aef2c9b2fe53c95bd4a7149f138aa773d</anchor>
      <arglist>(const Compositor &amp;rhs) const </arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>struct_ogre_renderer_1_1_composition_handler_1_1_compositor.html</anchorfile>
      <anchor>a2850da13e4a90dd248846f29d70930f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>position</name>
      <anchorfile>struct_ogre_renderer_1_1_composition_handler_1_1_compositor.html</anchorfile>
      <anchor>a260f5eb29d698f7cbbe6891114de6492</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OgreRenderer::OgreRenderingModule</name>
    <filename>class_ogre_renderer_1_1_ogre_rendering_module.html</filename>
    <base>IModule</base>
    <member kind="slot">
      <type>void</type>
      <name>ShowSettingsWindow</name>
      <anchorfile>class_ogre_renderer_1_1_ogre_rendering_module.html</anchorfile>
      <anchor>a7a7607ee4d824a3451b0a64d86051ded</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ConsoleStats</name>
      <anchorfile>class_ogre_renderer_1_1_ogre_rendering_module.html</anchorfile>
      <anchor>a4bd6def2a2800fcf6853bc8b828f485a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetMaterialAttribute</name>
      <anchorfile>class_ogre_renderer_1_1_ogre_rendering_module.html</anchorfile>
      <anchor>a9008e41a79ace9907e2c1f3d5340c42f</anchor>
      <arglist>(const QStringList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OgreRenderingModule</name>
      <anchorfile>class_ogre_renderer_1_1_ogre_rendering_module.html</anchorfile>
      <anchor>aeef1c2e97e8ef3f8fb33167585cf1969</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OgreRenderingModule</name>
      <anchorfile>class_ogre_renderer_1_1_ogre_rendering_module.html</anchorfile>
      <anchor>a021231ed41cfebb601c0ac0e921581cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Load</name>
      <anchorfile>class_ogre_renderer_1_1_ogre_rendering_module.html</anchorfile>
      <anchor>aecc3eeb1a4d4c842cda844f52cd994db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Initialize</name>
      <anchorfile>class_ogre_renderer_1_1_ogre_rendering_module.html</anchorfile>
      <anchor>a07eee1db24c1b9f34022d119576f4d5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Uninitialize</name>
      <anchorfile>class_ogre_renderer_1_1_ogre_rendering_module.html</anchorfile>
      <anchor>aa4d14eac1ed10090c2e4c5daf11a972f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>class_ogre_renderer_1_1_ogre_rendering_module.html</anchorfile>
      <anchor>af130041050c5d4917de61f2bc09319f3</anchor>
      <arglist>(f64 frametime)</arglist>
    </member>
    <member kind="function">
      <type>RendererPtr</type>
      <name>GetRenderer</name>
      <anchorfile>class_ogre_renderer_1_1_ogre_rendering_module.html</anchorfile>
      <anchor>a8965cd21ccc63cf15d729678a5c8df6c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Unload</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a29f68fed281ee378674d8b3d84a02e48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a715ca908fee148f6abeb45f41f646951</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>af0fc3706f5a2e27374c642e71e4eca8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::string</type>
      <name>CACHE_RESOURCE_GROUP</name>
      <anchorfile>class_ogre_renderer_1_1_ogre_rendering_module.html</anchorfile>
      <anchor>ae555cffdfb130b9df5089005c27ff1bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework_</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>aff39960b9800c16d6f4976b5614c37a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnSceneAdded</name>
      <anchorfile>class_ogre_renderer_1_1_ogre_rendering_module.html</anchorfile>
      <anchor>a0c4e31e7b047cb1fb1b6c4640262bd0b</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnSceneRemoved</name>
      <anchorfile>class_ogre_renderer_1_1_ogre_rendering_module.html</anchorfile>
      <anchor>a50784fd9ed140093f78f71c94a8a2be1</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RendererPtr</type>
      <name>renderer</name>
      <anchorfile>class_ogre_renderer_1_1_ogre_rendering_module.html</anchorfile>
      <anchor>a5ddfd4830124f5269a66910095434a97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QPointer&lt; RendererSettingsWindow &gt;</type>
      <name>settingsWindow</name>
      <anchorfile>class_ogre_renderer_1_1_ogre_rendering_module.html</anchorfile>
      <anchor>a481f9a43edd75ce0966b90077ed653a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OgreRenderer::OgreLogListener</name>
    <filename>class_ogre_renderer_1_1_ogre_log_listener.html</filename>
    <member kind="function">
      <type>void</type>
      <name>messageLogged</name>
      <anchorfile>class_ogre_renderer_1_1_ogre_log_listener.html</anchorfile>
      <anchor>a3a462699c63daddc560a600cbf16844a</anchor>
      <arglist>(const Ogre::String &amp;message, Ogre::LogMessageLevel lml, bool maskDebug, const Ogre::String &amp;logName)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OgreRenderer::Renderer</name>
    <filename>class_ogre_renderer_1_1_renderer.html</filename>
    <base>IRenderer</base>
    <member kind="slot" virtualness="virtual">
      <type>virtual void</type>
      <name>Render</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a7e33ecced28ab01910a20e5b05e9b1c6</anchor>
      <arglist>(float frameTime)</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>GetWindowWidth</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a1ca0916476f424ee1d745f99ec75f1d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>GetWindowHeight</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a0b0b55cd582c0cdb874a06d181f2fb6e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>AddResourceDirectory</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>ac7ad89a9b039f38577af96ce4edd382b</anchor>
      <arglist>(const QString &amp;directory)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetFullScreen</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a9d0eaf49517147d937c075d065681a66</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>DoFullUIRedraw</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>adb7a7c978fda6e81e0ee34b233a0e853</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual RaycastResult *</type>
      <name>Raycast</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a66fd3b93d9d8c5b1548413cb84673ac7</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="slot">
      <type>Entity *</type>
      <name>MainCamera</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a0ed6fff37982f44add3f53a710e2eba1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>EC_Camera *</type>
      <name>MainCameraComponent</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a3a268121a37bf86b055846de53c5b2e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>Scene *</type>
      <name>MainCameraScene</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a543db5af0219b3df6edc4c811477a9fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetMainCamera</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a95694f318a6a7ec53bb81b686f0eeb60</anchor>
      <arglist>(Entity *mainCameraEntity)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>MainCameraChanged</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a74ef38ab87a06a10a0c44094fbb12db0</anchor>
      <arglist>(Entity *newMainWindowCamera)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Renderer</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>aa81526e21b5cc9e8303bacd69798bb07</anchor>
      <arglist>(Framework *framework, const std::string &amp;config, const std::string &amp;plugins, const std::string &amp;window_title)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Renderer</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a28f66258f47d449bebe17daadb82ea06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetViewDistance</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>aef43be03650cacdb61a0d6775abc230e</anchor>
      <arglist>(float distance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>ViewDistance</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>aae61312a1d425e0834c6d503df24a044</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFullScreen</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a1e91731fd20db3dbd9ff6f667e545f00</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a7b7ce444baf60608f6f450b38fef8f54</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsInitialized</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a3b72240d48528130eb06c089d766933e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OgreRootPtr</type>
      <name>GetRoot</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a8abc86aeba481cc00598fe65d7330e0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ogre::Viewport *</type>
      <name>MainViewport</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>ad8e732726f4d8f1c0785d2ba7b4225f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ogre::RenderWindow *</type>
      <name>GetCurrentRenderWindow</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>acd6cb98073323c908062c16c8395644c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ogre::Camera *</type>
      <name>MainOgreCamera</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>aa2f9add5e258eba4c4ceb18c44632dbd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OgreWorldPtr</type>
      <name>GetActiveOgreWorld</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>aa98e348d8ba05eeb39214de4df3d4b5b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetUniqueObjectName</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>afdb0dc7f80779369311b0b891a03aafa</anchor>
      <arglist>(const std::string &amp;prefix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a36f2629ad71bcd9981a046b00fc0eabf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CompositionHandler *</type>
      <name>GetCompositionHandler</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>ae4c5b144851521e3280409f67b30c0c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ShadowQuality</type>
      <name>GetShadowQuality</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>add674d12084dc723b8d9b1bb6e873038</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShadowQuality</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a64f4d5f3c5cb12a306792a9747d73159</anchor>
      <arglist>(ShadowQuality newquality)</arglist>
    </member>
    <member kind="function">
      <type>TextureQuality</type>
      <name>GetTextureQuality</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>aadc4fde05b85d18898e693ab72b86576</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTextureQuality</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a257344126ec0f1b6fbfddce5ff2e6a13</anchor>
      <arglist>(TextureQuality newquality)</arglist>
    </member>
    <member kind="function">
      <type>RenderWindow *</type>
      <name>GetRenderWindow</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a43fe8ff5ed4adc390c7a2affd3fe2773</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>DoFrameTimeLimiting</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>adc188916b1d8f6caeb6aec4b9db42419</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>QStringList</type>
      <name>LoadPlugins</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>aa13fee8619d2b027f24280d23d704782</anchor>
      <arglist>(const std::string &amp;plugin_filename)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetupResources</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a141ca70d9f36dafed64039acdd914e95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>PrepareConfig</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a1cd12e9318d51de7f57676da25d98a46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>initialized_</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a7ae720956b204ddd46f01c52d9d99819</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>OgreRootPtr</type>
      <name>root_</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a5f3610fbca41b987b0eba09604397d6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::DefaultHardwareBufferManager *</type>
      <name>buffermanager_</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a44ab8b59ecfa513956c782e3dae97382</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; Scene *, OgreWorldPtr &gt;</type>
      <name>ogreWorlds_</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a6cd38e9395e3218487730225b3269f1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::weak_ptr&lt; Entity &gt;</type>
      <name>activeMainCamera</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a11ea6c22657c8909a4ac85fe8379f0ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::Camera *</type>
      <name>dummyDefaultCamera</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a8b4c26f29dd7e22f44320af4230cfc1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::Viewport *</type>
      <name>mainViewport</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a45bcccacfcc34dc252914936688720a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>float</type>
      <name>view_distance_</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a455580a1f6067549e3fbbf14bc0b82d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::SceneManager *</type>
      <name>defaultScene_</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>ac317e31d17597d0f450522d9d8019fa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RenderWindow *</type>
      <name>renderWindow</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a8e5154228f0d513478a90184d35cae69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework_</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a8216d8195dc94c71e9da4f980cb0b87d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint</type>
      <name>object_id_</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>afb21f801cefeff1b43bb3498236f585a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint</type>
      <name>group_id_</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a46be1be8c717fbc3cc4e6a73e4de686d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>config_filename_</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a20306d5e0f11be3da2b14ce82656ae04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>plugins_filename_</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a2b31303aef6307eccefc20582ad27775</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>window_title_</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>aca45595f1126417e4306ff9fabd123e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>StringVector</type>
      <name>added_resource_directories_</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a776778c8c491f0095894d4b4e3ae2812</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>CompositionHandler *</type>
      <name>c_handler_</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>abe6ea9c186fb33bc02d42313f8156aa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>last_height_</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a0a27767ea29dbe3148a64900c2462d2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>last_width_</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a5b5a2e35a4b4aa7171bf0242e39306f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>resized_dirty_</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>af8fd68a5b5edf5dd976fd5186b55db7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ShadowQuality</type>
      <name>shadowquality_</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>abe125381b296361a50e15beaa613dde0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TextureQuality</type>
      <name>texturequality_</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a037d846be605dfd66a8d43e1fc0a7380</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ogre::uchar *</type>
      <name>capture_screen_pixel_data_</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a6c7ac0b03e9a54f4109b71a50ae9f062</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tick_t</type>
      <name>lastPresentTime</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a8a7553d914e25c4065aea46a04ef6a7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tick_t</type>
      <name>timerFrequency</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>a2a87b6a97ce8a86c2b2ed96473f44610</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>OgreLogListener *</type>
      <name>logListener</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>acd9a07649b30b7fa7b07aa3f2a543f37</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>OgreRenderingModule</name>
      <anchorfile>class_ogre_renderer_1_1_renderer.html</anchorfile>
      <anchor>ab6fa69eb7d2766d3fbadaafcb0d70ce1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OgreRenderer::RendererSettingsWindow</name>
    <filename>class_ogre_renderer_1_1_renderer_settings_window.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>ViewDistanceChanged</name>
      <anchorfile>class_ogre_renderer_1_1_renderer_settings_window.html</anchorfile>
      <anchor>ada99c55e70becfa7e91c60ca01b35d16</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ShadowQualityChanged</name>
      <anchorfile>class_ogre_renderer_1_1_renderer_settings_window.html</anchorfile>
      <anchor>a868747a4c353a1c242a36e73c1c0d397</anchor>
      <arglist>(int quality)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>TextureQualityChanged</name>
      <anchorfile>class_ogre_renderer_1_1_renderer_settings_window.html</anchorfile>
      <anchor>abc9c1a728f1ff81f23a59c0f759fe55b</anchor>
      <arglist>(int quality)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetFullScreenMode</name>
      <anchorfile>class_ogre_renderer_1_1_renderer_settings_window.html</anchorfile>
      <anchor>a9995c59b96938bc8f1869866f5cd9591</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>KeyPressed</name>
      <anchorfile>class_ogre_renderer_1_1_renderer_settings_window.html</anchorfile>
      <anchor>aa4e4b3e49c8c8e0b65860c64445fac75</anchor>
      <arglist>(KeyEvent *e)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RendererSettingsWindow</name>
      <anchorfile>class_ogre_renderer_1_1_renderer_settings_window.html</anchorfile>
      <anchor>af664e2ca3743eab5c6e9141c4b4f5540</anchor>
      <arglist>(Framework *fw, QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RendererSettingsWindow</name>
      <anchorfile>class_ogre_renderer_1_1_renderer_settings_window.html</anchorfile>
      <anchor>ab496bbef49111bb76a9c667d846caeb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>InputContextPtr</type>
      <name>input_context_</name>
      <anchorfile>class_ogre_renderer_1_1_renderer_settings_window.html</anchorfile>
      <anchor>aea34353834ee089876691fe5dbf9809b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework_</name>
      <anchorfile>class_ogre_renderer_1_1_renderer_settings_window.html</anchorfile>
      <anchor>a2d42414fac7cc4629406662a661d17e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QWidget *</type>
      <name>settings_widget_</name>
      <anchorfile>class_ogre_renderer_1_1_renderer_settings_window.html</anchorfile>
      <anchor>ac596d76e351c000a6ec3f673eedea7c9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Physics</name>
    <filename>namespace_physics.html</filename>
    <class kind="struct">Physics::ConvexHull</class>
    <class kind="struct">Physics::ConvexHullSet</class>
    <class kind="class">Physics::PhysicsModule</class>
    <class kind="class">Physics::PhysicsWorld</class>
    <member kind="function">
      <type>void</type>
      <name>GenerateTriangleMesh</name>
      <anchorfile>namespace_physics.html</anchorfile>
      <anchor>a74c39cc83879daa2902f2be2bb809683</anchor>
      <arglist>(Ogre::Mesh *mesh, btTriangleMesh *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GenerateConvexHullSet</name>
      <anchorfile>namespace_physics.html</anchorfile>
      <anchor>abd1761300fc9fb7a08439d1c75c10519</anchor>
      <arglist>(Ogre::Mesh *mesh, ConvexHullSet *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetTrianglesFromMesh</name>
      <anchorfile>namespace_physics.html</anchorfile>
      <anchor>a8f5800493f4602f189a0a947312c02ba</anchor>
      <arglist>(Ogre::Mesh *mesh, std::vector&lt; float3 &gt; &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TickCallback</name>
      <anchorfile>namespace_physics.html</anchorfile>
      <anchor>a01e43ddbc43ad99af8d15290e9166afb</anchor>
      <arglist>(btDynamicsWorld *world, btScalar timeStep)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float</type>
      <name>cMinFps</name>
      <anchorfile>namespace_physics.html</anchorfile>
      <anchor>a21f396d3ab727e4428c68583c2382b7f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Physics::ConvexHull</name>
    <filename>struct_physics_1_1_convex_hull.html</filename>
    <member kind="variable">
      <type>float3</type>
      <name>position_</name>
      <anchorfile>struct_physics_1_1_convex_hull.html</anchorfile>
      <anchor>a8f3667c99451079aad7cf362dc6bb274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boost::shared_ptr&lt; btConvexHullShape &gt;</type>
      <name>hull_</name>
      <anchorfile>struct_physics_1_1_convex_hull.html</anchorfile>
      <anchor>af4d806bda2b138b3595d147ccfc0fd91</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Physics::ConvexHullSet</name>
    <filename>struct_physics_1_1_convex_hull_set.html</filename>
    <member kind="variable">
      <type>std::vector&lt; ConvexHull &gt;</type>
      <name>hulls_</name>
      <anchorfile>struct_physics_1_1_convex_hull_set.html</anchorfile>
      <anchor>a806e9fea271764f37a4f4fc79a5f3165</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Physics::PhysicsModule</name>
    <filename>class_physics_1_1_physics_module.html</filename>
    <base>IModule</base>
    <member kind="slot">
      <type>void</type>
      <name>ToggleDebugGeometry</name>
      <anchorfile>class_physics_1_1_physics_module.html</anchorfile>
      <anchor>abce69192c862af069ca2f8cdd6d9952d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>StopPhysics</name>
      <anchorfile>class_physics_1_1_physics_module.html</anchorfile>
      <anchor>aa931f584d447e307e023ee3519ebb35a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>StartPhysics</name>
      <anchorfile>class_physics_1_1_physics_module.html</anchorfile>
      <anchor>aec3e4a93e675f8a9547477fbe4db92ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>AutoCollisionMesh</name>
      <anchorfile>class_physics_1_1_physics_module.html</anchorfile>
      <anchor>a305309f179720cd537c090883829e724</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetRunPhysics</name>
      <anchorfile>class_physics_1_1_physics_module.html</anchorfile>
      <anchor>a8fe64cedba20d02815a5cc861da1fcbb</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>OnScriptEngineCreated</name>
      <anchorfile>class_physics_1_1_physics_module.html</anchorfile>
      <anchor>a9a8182ca13c9bb8cb215c2d3355be970</anchor>
      <arglist>(QScriptEngine *engine)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PhysicsModule</name>
      <anchorfile>class_physics_1_1_physics_module.html</anchorfile>
      <anchor>a3cf2850b524664e66fa957b5d39f709d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PhysicsModule</name>
      <anchorfile>class_physics_1_1_physics_module.html</anchorfile>
      <anchor>a85951d8127ed656347691286c6556228</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Load</name>
      <anchorfile>class_physics_1_1_physics_module.html</anchorfile>
      <anchor>a9efd27cc6e377231f40399facccc4d67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_physics_1_1_physics_module.html</anchorfile>
      <anchor>ad7d7f7eb93f7077d65aedc6412f28421</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_physics_1_1_physics_module.html</anchorfile>
      <anchor>af8db026a9b1964a566cbda3ab7641711</anchor>
      <arglist>(f64 frametime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Uninitialize</name>
      <anchorfile>class_physics_1_1_physics_module.html</anchorfile>
      <anchor>ad675f597c71ee330cb11db7363424ebd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boost::shared_ptr&lt; btTriangleMesh &gt;</type>
      <name>GetTriangleMeshFromOgreMesh</name>
      <anchorfile>class_physics_1_1_physics_module.html</anchorfile>
      <anchor>a6aeb6303f51c4b671ece537f52ac0874</anchor>
      <arglist>(Ogre::Mesh *mesh)</arglist>
    </member>
    <member kind="function">
      <type>boost::shared_ptr&lt; ConvexHullSet &gt;</type>
      <name>GetConvexHullSetFromOgreMesh</name>
      <anchorfile>class_physics_1_1_physics_module.html</anchorfile>
      <anchor>af092a3bb5676eb94fdf9dae02992b5ec</anchor>
      <arglist>(Ogre::Mesh *mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Unload</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a29f68fed281ee378674d8b3d84a02e48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a715ca908fee148f6abeb45f41f646951</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>af0fc3706f5a2e27374c642e71e4eca8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework_</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>aff39960b9800c16d6f4976b5614c37a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; Scene *, boost::shared_ptr&lt; Physics::PhysicsWorld &gt; &gt;</type>
      <name>PhysicsWorldMap</name>
      <anchorfile>class_physics_1_1_physics_module.html</anchorfile>
      <anchor>a79de5d7032b2724f7bdd89320a2bc5e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; std::string, boost::shared_ptr&lt; btTriangleMesh &gt; &gt;</type>
      <name>TriangleMeshMap</name>
      <anchorfile>class_physics_1_1_physics_module.html</anchorfile>
      <anchor>a3beb0795d3a39d6fd614c0d5f40d9262</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; std::string, boost::shared_ptr&lt; ConvexHullSet &gt; &gt;</type>
      <name>ConvexHullSetMap</name>
      <anchorfile>class_physics_1_1_physics_module.html</anchorfile>
      <anchor>a573d1f1e8d36307ab9d6123dbbfd588a</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnSceneAdded</name>
      <anchorfile>class_physics_1_1_physics_module.html</anchorfile>
      <anchor>ab285231bf9b6faf55b7f91ac99d60d03</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnSceneRemoved</name>
      <anchorfile>class_physics_1_1_physics_module.html</anchorfile>
      <anchor>aac4de76aa123c88e1c616540bfb1b41a</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PhysicsWorldMap</type>
      <name>physicsWorlds_</name>
      <anchorfile>class_physics_1_1_physics_module.html</anchorfile>
      <anchor>ad9b6985e4b6272f85200eb18f90b5218</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TriangleMeshMap</type>
      <name>triangleMeshes_</name>
      <anchorfile>class_physics_1_1_physics_module.html</anchorfile>
      <anchor>adc0dacba438a54f0f47e22e1ebeeace3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ConvexHullSetMap</type>
      <name>convexHullSets_</name>
      <anchorfile>class_physics_1_1_physics_module.html</anchorfile>
      <anchor>a3a08a80576782840133e1bd7b6b354c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Physics::PhysicsWorld</name>
    <filename>class_physics_1_1_physics_world.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>SetPhysicsUpdatePeriod</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>aa3be70344bbb25c170d191cf32c17342</anchor>
      <arglist>(float updatePeriod)</arglist>
    </member>
    <member kind="slot">
      <type>float</type>
      <name>GetPhysicsUpdatePeriod</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>aa7618d7c14fc0b63ad4b078a2e2468fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetGravity</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>afaa265004ef77c085e1a39e44ff75b27</anchor>
      <arglist>(const float3 &amp;gravity)</arglist>
    </member>
    <member kind="slot">
      <type>PhysicsRaycastResult *</type>
      <name>Raycast</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a20c76d268a3c56a5b5653f192418a7fd</anchor>
      <arglist>(const float3 &amp;origin, const float3 &amp;direction, float maxdistance, int collisiongroup=-1, int collisionmask=-1)</arglist>
    </member>
    <member kind="slot">
      <type>float3</type>
      <name>GetGravity</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a0c5f6d8dd6c5a8b4476447c8dc31b37a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>btDiscreteDynamicsWorld *</type>
      <name>GetWorld</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>aced1b177ae9208c66b3e665cebbf7ce1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsClient</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a2048110432caba0d359f52073140b702</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetDrawDebugGeometry</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a0f4067013ebdc9621c218ed5c29edb94</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>GetDrawDebugGeometry</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>ad4dc66ca1338361c6b44caa49aaa0926</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetRunPhysics</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>afff54df75c152d61f62997ed48746ba4</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>GetRunPhysics</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a0e05c4d796b9590a85338d9c7591e7b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>DrawAABB</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>acfb5d7491d4f4f659df7e0743a73eebd</anchor>
      <arglist>(const AABB &amp;aabb, float r, float g, float b)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>DrawOBB</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>aeda138b35e6a81572906cd14d04d9f17</anchor>
      <arglist>(const OBB &amp;obb, float r, float g, float b)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>DrawLineSegment</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a79228d2af2cd8ddad6a404ffa487f7c3</anchor>
      <arglist>(const LineSegment &amp;l, float r, float g, float b)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>DrawTransform</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>ab0f608c7389f1e2689796c68a92534d4</anchor>
      <arglist>(const Transform &amp;t, float axisLength, float boxSize, float r, float g, float b)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>DrawFloat3x4</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>aa189a6ac7da89fa46156d7d2a520daf4</anchor>
      <arglist>(const float3x4 &amp;t, float axisLength, float boxSize, float r, float g, float b)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>DrawCircle</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a761ced90a10565a715d533f929b6618f</anchor>
      <arglist>(const Circle &amp;c, int numSubdivisions, float r, float g, float b)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>PhysicsCollision</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a986b608e71a034d3f9f91d724e0a1915</anchor>
      <arglist>(Entity *entityA, Entity *entityB, const float3 &amp;position, const float3 &amp;normal, float distance, float impulse, bool newCollision)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AboutToUpdate</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>ace294b6a21013aa645f8e5f40d8f8119</anchor>
      <arglist>(float frametime)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Updated</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a64bc84a34af63b9f4a9f2b4a4c406f01</anchor>
      <arglist>(float frametime)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PhysicsWorld</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a7fa8917b0e2a08ac455f75e0bf402d75</anchor>
      <arglist>(ScenePtr scene, bool isClient)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PhysicsWorld</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>acecf897628ca464843d3285a5de418ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Simulate</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>ac34756e118fde6ef8efb4a81ed95921b</anchor>
      <arglist>(f64 frametime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessPostTick</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a26b5278d3deb0ce8050f76b42838a09b</anchor>
      <arglist>(float substeptime)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawLine</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a0516a3f0d6332b9a5f3ec2f3b78cc476</anchor>
      <arglist>(const btVector3 &amp;from, const btVector3 &amp;to, const btVector3 &amp;color)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reportErrorWarning</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a01dc9a9e24dc57da9ffc9f7cf438c450</anchor>
      <arglist>(const char *warningString)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawContactPoint</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>afb4cdbd7442532abea9bd443335e1c0b</anchor>
      <arglist>(const btVector3 &amp;PointOnB, const btVector3 &amp;normalOnB, btScalar distance, int lifeTime, const btVector3 &amp;color)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>draw3dText</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>ad750c4a658b7f0b979eecbe0cf2a5d7b</anchor>
      <arglist>(const btVector3 &amp;location, const char *textString)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDebugMode</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a844fd97404f3694d22f0fbf9ba580cbb</anchor>
      <arglist>(int debugMode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDebugMode</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a827230e978d6ff5e9215cefc2592d062</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::set&lt; std::pair&lt; btCollisionObject *, btCollisionObject * &gt; &gt; &amp;</type>
      <name>PreviousFrameCollisions</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a52017b8d9ccaab3bd1718f9d5264a614</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>PropertyName</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a3ec8fbae63b876af3cbf5f068f635bf6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>UpdateDebugGeometry</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>ac32ac26118b5978d7f5789db07f1684f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>btCollisionConfiguration *</type>
      <name>collisionConfiguration_</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>abc25b7021ea3b2bde79269220d238451</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>btDispatcher *</type>
      <name>collisionDispatcher_</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>ad94a8cc233876ffe66ede0295ef6083a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>btBroadphaseInterface *</type>
      <name>broadphase_</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a9cf0fcb5f5a86441d189aea61e095bdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>btConstraintSolver *</type>
      <name>solver_</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a28277b7f6068101d43f69dd975ce5cff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>btDiscreteDynamicsWorld *</type>
      <name>world_</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>ae283bc1625252178535183af7f03d010</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>float</type>
      <name>physicsUpdatePeriod_</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a2ee4087e2bc35c4694d090e6773b4833</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isClient_</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>ae44f8f2494f0bb04243fa72709ad7e05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SceneWeakPtr</type>
      <name>scene_</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a348f14b18919fa6dfb9de396ca5e3647</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; std::pair&lt; btCollisionObject *, btCollisionObject * &gt; &gt;</type>
      <name>previousCollisions_</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>ad27d27b3ab7e646c78f8328287f5a843</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>drawDebugGeometry_</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a64a41f1c5b1cf88962e3bea9e0820f49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>drawDebugManuallySet_</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a16567bd1ffacbef57277fe95f986d3fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DebugLines *</type>
      <name>debugGeometryObject_</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>af4fe8cbd6a2ad66bef9987df0a59a486</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>runPhysics_</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a5a07daad432ace86bc3b7e8aa9584af7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>debugDrawMode_</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a9d7797e316a012f1c9a8eb00db8bd2b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; EC_RigidBody * &gt;</type>
      <name>debugRigidBodies_</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>a55223d4771bfb24ac889d3063d088cf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>PhysicsModule</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>af91efcc40177142f332645ed82062e76</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>::EC_RigidBody</name>
      <anchorfile>class_physics_1_1_physics_world.html</anchorfile>
      <anchor>afb21d7134873de1b98046e05ed87c74a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>QtUtils</name>
    <filename>namespace_qt_utils.html</filename>
    <member kind="function">
      <type>QFileDialog *</type>
      <name>OpenFileDialogNonModal</name>
      <anchorfile>namespace_qt_utils.html</anchorfile>
      <anchor>af0bdfef7b3c444defe22d89ce252a8a1</anchor>
      <arglist>(const QString &amp;filter, const QString &amp;caption, const QString &amp;dir, QWidget *parent, QObject *initiator, const char *slot, bool multipleFiles=false)</arglist>
    </member>
    <member kind="function">
      <type>QFileDialog *</type>
      <name>SaveFileDialogNonModal</name>
      <anchorfile>namespace_qt_utils.html</anchorfile>
      <anchor>a7290b84024e537b0a8bda86ae6e37b8a</anchor>
      <arglist>(const QString &amp;filter, const QString &amp;caption, const QString &amp;dir, QWidget *parent, QObject *initiator, const char *slot)</arglist>
    </member>
    <member kind="function">
      <type>QFileDialog *</type>
      <name>DirectoryDialogNonModal</name>
      <anchorfile>namespace_qt_utils.html</anchorfile>
      <anchor>a987791158db263ee6517da7e7be9b2cc</anchor>
      <arglist>(const QString &amp;caption, const QString &amp;dir, QWidget *parent, QObject *initiator, const char *slot)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>StanHull</name>
    <filename>namespace_stan_hull.html</filename>
    <class kind="class">StanHull::int3</class>
    <class kind="class">StanHull::float2</class>
    <class kind="class">StanHull::float3</class>
    <class kind="class">StanHull::float3x3</class>
    <class kind="class">StanHull::float4</class>
    <class kind="class">StanHull::float4x4</class>
    <class kind="class">StanHull::Quaternion</class>
    <class kind="class">StanHull::Plane</class>
    <class kind="class">StanHull::Array</class>
    <class kind="class">StanHull::ArrayRet</class>
    <class kind="class">StanHull::PHullResult</class>
    <class kind="class">StanHull::ConvexH</class>
    <class kind="class">StanHull::VertFlag</class>
    <class kind="class">StanHull::EdgeFlag</class>
    <class kind="class">StanHull::PlaneFlag</class>
    <class kind="class">StanHull::Coplanar</class>
    <class kind="class">StanHull::Tri</class>
    <class kind="class">StanHull::int4</class>
    <class kind="class">StanHull::HullResult</class>
    <class kind="class">StanHull::HullDesc</class>
    <class kind="class">StanHull::HullLibrary</class>
    <member kind="typedef">
      <type>ConvexH::HalfEdge</type>
      <name>HalfEdge</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a64c17e94b1fce4bad35353b51253e48a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>HullFlag</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a1441db78350dcf3622daae83acabc359</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QF_TRIANGLES</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a1441db78350dcf3622daae83acabc359ac81188e83a158425df76a94763b0bcc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QF_REVERSE_ORDER</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a1441db78350dcf3622daae83acabc359a252b4eb0e3de454bd7df4c5591312f7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QF_SKIN_WIDTH</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a1441db78350dcf3622daae83acabc359a42a4391921c42c39914181a2509436fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QF_DEFAULT</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a1441db78350dcf3622daae83acabc359ac6a009ef1d30ee42ff69793d77ba5cb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>HullError</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>aa0e34eb30ca5a21b8f40c6b52e501704</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QE_OK</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>aa0e34eb30ca5a21b8f40c6b52e501704a9e55f83a1bc4a4f81cc19760122eaa3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QE_FAIL</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>aa0e34eb30ca5a21b8f40c6b52e501704a26bc81336069a0154c96d4b253c511e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>argmin</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ae9299df1178786acfbff6a0fe8e39f8f</anchor>
      <arglist>(float a[], int n)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>sqr</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a63e0342dcd6fbc5248b1884400f6f097</anchor>
      <arglist>(float a)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>clampf</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ae3bcd2906eae0e9068a88507291584d8</anchor>
      <arglist>(float a)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Round</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>af26251f128c8a6ceeff2e20bae801f05</anchor>
      <arglist>(float a, float precision)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Interpolate</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>aec519ec40683f9a0a3cfd84c9f5c2fd6</anchor>
      <arglist>(const float &amp;f0, const float &amp;f1, float alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Swap</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a36678f39688e573ef730c974dd24fe4f</anchor>
      <arglist>(T &amp;a, T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>Max</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a97e5fb8d08d6c0994f2df4e028c5f37d</anchor>
      <arglist>(const T &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>Min</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ab3fb3bba06707ff1d984beebbf2a0d8b</anchor>
      <arglist>(const T &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>operator-</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>afc0c5bc41786ef13e10dcf3f5569a5d1</anchor>
      <arglist>(const float2 &amp;a, const float2 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float2</type>
      <name>operator+</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a5cc338d0e7897e8bdc5cd0c9499029cc</anchor>
      <arglist>(const float2 &amp;a, const float2 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3 &amp;</type>
      <name>operator+=</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ab105ef8e10d2fbfe8e1d41724beb2ee6</anchor>
      <arglist>(float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3 &amp;</type>
      <name>operator-=</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>aa63ff9b56759746e0f54046e44d014a1</anchor>
      <arglist>(float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3 &amp;</type>
      <name>operator*=</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>aeeaf8152acd0edafd9733cf636066cab</anchor>
      <arglist>(float3 &amp;v, const float s)</arglist>
    </member>
    <member kind="function">
      <type>float3 &amp;</type>
      <name>operator/=</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>adc64726852cc0947fdf3ac341a974dbb</anchor>
      <arglist>(float3 &amp;v, const float s)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>magnitude</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a0181b447eca8d443132bda7ce5a0cf04</anchor>
      <arglist>(const float3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>normalize</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a94403f13b0531f2219c11c0e38848414</anchor>
      <arglist>(const float3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>safenormalize</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a367b06c542289ba8d25e23e9474c4e86</anchor>
      <arglist>(const float3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>vabs</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a5c467f46f4321c71e425e1ae54fb5a4a</anchor>
      <arglist>(const float3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator+</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a7725b78cd385231932817663f1da5d63</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator-</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a29137151e81f8ff225483f7071de6a1d</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator-</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>af054eb0931e83d0fadebad2febeffe94</anchor>
      <arglist>(const float3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a779c1451a6438d1e34160085a5abe5e0</anchor>
      <arglist>(const float3 &amp;v, const float s)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a99d4164a4e4824cffc5261a2a5b35430</anchor>
      <arglist>(const float s, const float3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator/</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a77f36643e606e2bbd5bc5f44d17fce81</anchor>
      <arglist>(const float3 &amp;v, const float s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>operator==</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a814a2db4f8aa492a9eb980027b0ebf00</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>operator!=</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a8bf6b8a5d6062e3af85cb882698dfa14</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dot</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a0d4c80348748162f7aa838a0572aadfb</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>cmul</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a3f38a529e96d31327d71f442f0eb24a8</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>cross</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a8c9a941e3624ebd4e2f572f788fd0cbf</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Interpolate</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ab27acf4c351c29ddab6343eaa1edb1b5</anchor>
      <arglist>(const float3 &amp;v0, const float3 &amp;v1, float alpha)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>Round</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a0c1e78d7f944694248cf3a35d4890bce</anchor>
      <arglist>(const float3 &amp;a, float precision)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>VectorMax</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a04f62372145cbedb5f6aba6f3bf07c20</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>VectorMin</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a2e9c797c1f4434655fe3371fc67d1515</anchor>
      <arglist>(const float3 &amp;a, const float3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>Transpose</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>af13d8bda737fbc70eca36259081d3874</anchor>
      <arglist>(const float3x3 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a088ab33a0e78b76468212160455a54e8</anchor>
      <arglist>(const float3 &amp;v, const float3x3 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a17ca225e25471abb20d9b7609f06b1c2</anchor>
      <arglist>(const float3x3 &amp;m, const float3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>aec830acdd41873f709fdb5b55530b81b</anchor>
      <arglist>(const float3x3 &amp;m, const float &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a817f4b1a6a39c900c8d5db6506498be3</anchor>
      <arglist>(const float3x3 &amp;ma, const float3x3 &amp;mb)</arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>operator/</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ad9bc84fcb986deab889b5261485528fb</anchor>
      <arglist>(const float3x3 &amp;a, const float &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>operator+</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a3130317959d3664324167d8082ffe4de</anchor>
      <arglist>(const float3x3 &amp;a, const float3x3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>operator-</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>aa4c601f2c522e982a8ac60db7b06cf98</anchor>
      <arglist>(const float3x3 &amp;a, const float3x3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3x3 &amp;</type>
      <name>operator+=</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>aab54d2b3646955979394678342ec4a30</anchor>
      <arglist>(float3x3 &amp;a, const float3x3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3x3 &amp;</type>
      <name>operator-=</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ac1e2f12270431acc33ec9b74adc29c8f</anchor>
      <arglist>(float3x3 &amp;a, const float3x3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3x3 &amp;</type>
      <name>operator*=</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>aab19b8a97678c00857ce5160a54c6fa1</anchor>
      <arglist>(float3x3 &amp;a, const float &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Determinant</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a4b6f44f975bc7d7f92b644d0e07572e0</anchor>
      <arglist>(const float3x3 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>Inverse</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a7615b729b4f0f065dbd5be49a2542706</anchor>
      <arglist>(const float3x3 &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>operator==</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a3ad17b9f6c3e61cc08ebeba1d2658fb3</anchor>
      <arglist>(const float4 &amp;a, const float4 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>Homogenize</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a251ba08d9fbd2e5140865652c0f643d3</anchor>
      <arglist>(const float3 &amp;v3, const float &amp;w=1.0f)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>cmul</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a2f813e2897073d73b6602e8c3ddce4fa</anchor>
      <arglist>(const float4 &amp;a, const float4 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a61972b4c9caf30d35cffffb1e6a24f5e</anchor>
      <arglist>(const float4 &amp;v, float s)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a718889a0984c80a89e78fbb4226f7497</anchor>
      <arglist>(float s, const float4 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>operator+</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a89aeb181f3287dff91b3bc9cf5ded3c9</anchor>
      <arglist>(const float4 &amp;a, const float4 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>operator-</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a149a2ec75509846291103e33a6910a7c</anchor>
      <arglist>(const float4 &amp;a, const float4 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>aa2d6c6b1180b7032ee096c9ee0c863cd</anchor>
      <arglist>(const float4x4 &amp;a, const float4x4 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float4</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a8a37e7d09337389f5135534b833e3354</anchor>
      <arglist>(const float4 &amp;v, const float4x4 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>Inverse</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a68d51690a5aa4719b7361e4aabb0eaec</anchor>
      <arglist>(const float4x4 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>MatrixRigidInverse</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>aa0c00be7c74bfd9957448dd7976f9e9c</anchor>
      <arglist>(const float4x4 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>MatrixTranspose</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a0d5cc726c6adb8bfcd12ca81793cacc9</anchor>
      <arglist>(const float4x4 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>MatrixPerspectiveFov</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a6d02e09854d724d5255b870587c106a3</anchor>
      <arglist>(float fovy, float Aspect, float zn, float zf)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>MatrixTranslation</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a06c5d4dd01823571a1818fe88ce13590</anchor>
      <arglist>(const float3 &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>MatrixRotationZ</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a0a15518344a6258d39d736c36fd631d2</anchor>
      <arglist>(const float angle_radians)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>MatrixLookAt</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ade369df00fe031e7147152f04843b15d</anchor>
      <arglist>(const float3 &amp;eye, const float3 &amp;at, const float3 &amp;up)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>operator==</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a2110d707aa928abb15d503a7437cc382</anchor>
      <arglist>(const float4x4 &amp;a, const float4x4 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion &amp;</type>
      <name>operator*=</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a5918482038fe07a21207e2c633ba7363</anchor>
      <arglist>(Quaternion &amp;a, float s)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ab06069b53e378041f09358ca38ce1cd0</anchor>
      <arglist>(const Quaternion &amp;a, float s)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a0ecd41bf8f245af888e88796b5b14986</anchor>
      <arglist>(const Quaternion &amp;a, const Quaternion &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion</type>
      <name>operator+</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ad28268d44063a89b17c9ace7686b0323</anchor>
      <arglist>(const Quaternion &amp;a, const Quaternion &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion</type>
      <name>normalize</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a3bc457190463f476d65b0ad7860be894</anchor>
      <arglist>(Quaternion a)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dot</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a32848025a0a2ffd9e8ff9ffa5584d484</anchor>
      <arglist>(const Quaternion &amp;a, const Quaternion &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a004c2f83cb47d7df0d9efa18799950c0</anchor>
      <arglist>(const Quaternion &amp;q, const float3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>operator*</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a199a61b581a63b7278c27f07c332dac1</anchor>
      <arglist>(const float3 &amp;v, const Quaternion &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion</type>
      <name>slerp</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>acf2f06971912b6f8e573769b02c22db1</anchor>
      <arglist>(Quaternion a, const Quaternion &amp;b, float interp)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion</type>
      <name>Interpolate</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a4f5e333b953d88e2a1ff7ada5d63c0a8</anchor>
      <arglist>(const Quaternion &amp;q0, const Quaternion &amp;q1, float alpha)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion</type>
      <name>RotationArc</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>abf427671bf8daaf97e0a51b63c6887ac</anchor>
      <arglist>(float3 v0, float3 v1)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion</type>
      <name>Inverse</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>add2fae3adc88e89c9d3b2bbafc9cb682</anchor>
      <arglist>(const Quaternion &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>float4x4</type>
      <name>MatrixFromQuatVec</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a1393398c362aa0cd59cf8a4664b93529</anchor>
      <arglist>(const Quaternion &amp;q, const float3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion</type>
      <name>YawPitchRoll</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a39d35ed9ccc506946584491b4ed10d01</anchor>
      <arglist>(float yaw, float pitch, float roll)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Yaw</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a609b1a74c26a23e9be622a3af3adadcc</anchor>
      <arglist>(const Quaternion &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Pitch</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a8fb65578a2c4a593781c71203d5c5c33</anchor>
      <arglist>(const Quaternion &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Roll</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a853013d9131e182d328adf52a094d58c</anchor>
      <arglist>(Quaternion q)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Yaw</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a68d6cb6ad972f9318c010079931ee3e1</anchor>
      <arglist>(const float3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Pitch</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a51f6429f03b5323a025702a9d300b6bc</anchor>
      <arglist>(const float3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Plane</type>
      <name>PlaneFlip</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ad39652f1897dfd6fbccb0934cfe3e05a</anchor>
      <arglist>(const Plane &amp;plane)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>operator==</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ab3c68d9a04e32a71b516aa858753b6d7</anchor>
      <arglist>(const Plane &amp;a, const Plane &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>coplanar</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a454235a72f3bc5756475a6e80956329f</anchor>
      <arglist>(const Plane &amp;a, const Plane &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>PlaneLineIntersection</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a7e40f64b63457151d66cd29e53c3ec11</anchor>
      <arglist>(const Plane &amp;plane, const float3 &amp;p0, const float3 &amp;p1)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>PlaneProject</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a7e186fde65053ae96276022282464f62</anchor>
      <arglist>(const Plane &amp;plane, const float3 &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>LineProject</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ada31ac6abbbfab82c183ca9fe55a8121</anchor>
      <arglist>(const float3 &amp;p0, const float3 &amp;p1, const float3 &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>LineProjectTime</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>abb41076ecb85885c11c36a58053cba1f</anchor>
      <arglist>(const float3 &amp;p0, const float3 &amp;p1, const float3 &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ThreePlaneIntersection</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a353e9d8a1f35c101a68bc451410e562a</anchor>
      <arglist>(const Plane &amp;p0, const Plane &amp;p1, const Plane &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>PolyHit</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a4fc0759c3ccf7e82970d3f852efc3ac3</anchor>
      <arglist>(const float3 *vert, const int n, const float3 &amp;v0, const float3 &amp;v1, float3 *impact=NULL, float3 *normal=NULL)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>BoxInside</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>abf9a8682ccf5955aa5cd939cef06986d</anchor>
      <arglist>(const float3 &amp;p, const float3 &amp;bmin, const float3 &amp;bmax)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>BoxIntersect</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a3ff3f2fab7e23a087737d7c6cae9decb</anchor>
      <arglist>(const float3 &amp;v0, const float3 &amp;v1, const float3 &amp;bmin, const float3 &amp;bmax, float3 *impact)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>DistanceBetweenLines</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a45925a68916b0be77880f426d1e7a43f</anchor>
      <arglist>(const float3 &amp;ustart, const float3 &amp;udir, const float3 &amp;vstart, const float3 &amp;vdir, float3 *upoint=NULL, float3 *vpoint=NULL)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>TriNormal</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ac3c14476cae0ef73e6bf4664b082fac4</anchor>
      <arglist>(const float3 &amp;v0, const float3 &amp;v1, const float3 &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>NormalOf</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a2acca86a40d96f8cc657f4064be00db7</anchor>
      <arglist>(const float3 *vert, const int n)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion</type>
      <name>VirtualTrackBall</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a3452a7804bf62399cd985da23be1b84a</anchor>
      <arglist>(const float3 &amp;cop, const float3 &amp;cor, const float3 &amp;dir0, const float3 &amp;dir1)</arglist>
    </member>
    <member kind="function">
      <type>ConvexH *</type>
      <name>ConvexHDup</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a4fdbd2f75b0a9dc2e4bc7f848e8c206c</anchor>
      <arglist>(ConvexH *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>PlaneTest</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ab161ceaa67f5cb0209b460bc37ec7e24</anchor>
      <arglist>(const Plane &amp;p, const REAL3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SplitTest</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a8d271b2b91220a033025636a0d416ff2</anchor>
      <arglist>(ConvexH &amp;convex, const Plane &amp;plane)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>AssertIntact</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a6aa1ec917d30adb205071a4949074140</anchor>
      <arglist>(ConvexH &amp;convex)</arglist>
    </member>
    <member kind="function">
      <type>ConvexH *</type>
      <name>test_btbq</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a2d17ba0b734dd2621dcc8c36c9250849</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConvexH *</type>
      <name>test_cube</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a98e750d288f1368e5969a81e98b33d8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConvexH *</type>
      <name>ConvexHMakeCube</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a1af768b9461da3e11b99b6e30b02367f</anchor>
      <arglist>(const REAL3 &amp;bmin, const REAL3 &amp;bmax)</arglist>
    </member>
    <member kind="function">
      <type>ConvexH *</type>
      <name>ConvexHCrop</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a2ae9e7360faa5542f8d9aebd3d424199</anchor>
      <arglist>(ConvexH &amp;convex, const Plane &amp;slice)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>candidateplane</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a028f54efb29a0a1cdbf4803a1dadb334</anchor>
      <arglist>(Plane *planes, int planes_count, ConvexH *convex, float epsilon)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maxdir</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ac2d0b561976370ef505346a5746eee90</anchor>
      <arglist>(const T *p, int count, const T &amp;dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maxdirfiltered</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a50498b77bfbadae0fef77794e4737109</anchor>
      <arglist>(const T *p, int count, const T &amp;dir, Array&lt; int &gt; &amp;allow)</arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>orth</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a2783270bed4a04b127298974c10a3e2f</anchor>
      <arglist>(const float3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maxdirsterid</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a9809b1c878f8e6a9ba1c0048dfe5fa52</anchor>
      <arglist>(const T *p, int count, const T &amp;dir, Array&lt; int &gt; &amp;allow)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>operator==</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a977b4e9d4f56040e9d909bc0f639aa69</anchor>
      <arglist>(const int3 &amp;a, const int3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>int3</type>
      <name>roll3</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a7ec545d7aac216a294715a2d70823915</anchor>
      <arglist>(int3 a)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>isa</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a74bf1f3fa3f07b3f58db0db47ca0b5d6</anchor>
      <arglist>(const int3 &amp;a, const int3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>b2b</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a53753c51ae95b873a1953aee87f0acc5</anchor>
      <arglist>(const int3 &amp;a, const int3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>above</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ab0528345eccc581733b82125b63f170e</anchor>
      <arglist>(float3 *vertices, const int3 &amp;t, const float3 &amp;p, float epsilon)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hasedge</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a7256f74c27e8a789540b2e1e9ae117fc</anchor>
      <arglist>(const int3 &amp;t, int a, int b)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hasvert</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a4cea851b62036157eb45f3ad5a40e445</anchor>
      <arglist>(const int3 &amp;t, int v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>shareedge</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a3aa8c87bbd1ff46ffa285c36a93583a5</anchor>
      <arglist>(const int3 &amp;a, const int3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>b2bfix</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a84bc5348d0e957d69813e01250902ba9</anchor>
      <arglist>(Tri *s, Tri *t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeb2b</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ae5912e11d2f11892e571cc1cf8873022</anchor>
      <arglist>(Tri *s, Tri *t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkit</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a34567992ecac8d2f489fe7412248e733</anchor>
      <arglist>(Tri *t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extrude</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a6fb6f38eac82eb82b3b7c7412b51836f</anchor>
      <arglist>(Tri *t0, int v)</arglist>
    </member>
    <member kind="function">
      <type>Tri *</type>
      <name>extrudable</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a1a5de73098443921293da4375470c078</anchor>
      <arglist>(float epsilon)</arglist>
    </member>
    <member kind="function">
      <type>int4</type>
      <name>FindSimplex</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ad9b5d31344d85eb3f0efcbdeca0b0d47</anchor>
      <arglist>(float3 *verts, int verts_count, Array&lt; int &gt; &amp;allow)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>calchullgen</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a74d1627400eccc64bb4ca414180b743d</anchor>
      <arglist>(float3 *verts, int verts_count, int vlimit)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>calchull</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ad467cfb69f29b0d322ea14c49f767fdc</anchor>
      <arglist>(float3 *verts, int verts_count, int *&amp;tris_out, int &amp;tris_count, int vlimit)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>calchullpbev</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ae43c922729c3829081f499a1a8303e5d</anchor>
      <arglist>(float3 *verts, int verts_count, int vlimit, Array&lt; Plane &gt; &amp;planes, float bevangle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>overhull</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>afd85ef34e25e29252703b41e1491a861</anchor>
      <arglist>(Plane *planes, int planes_count, float3 *verts, int verts_count, int maxplanes, float3 *&amp;verts_out, int &amp;verts_count_out, int *&amp;faces_out, int &amp;faces_count_out, float inflate)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>overhullv</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a257460e051780aa759b456f9673193ee</anchor>
      <arglist>(float3 *verts, int verts_count, int maxplanes, float3 *&amp;verts_out, int &amp;verts_count_out, int *&amp;faces_out, int &amp;faces_count_out, float inflate, float bevangle, int vlimit)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ComputeHull</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>afaa15b6b51ca0a95c49dc02b4a7a8716</anchor>
      <arglist>(unsigned int vcount, const float *vertices, PHullResult &amp;result, unsigned int vlimit, float inflate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReleaseHull</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a948443c392f1962fa09bb28fa498276d</anchor>
      <arglist>(PHullResult &amp;result)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddPoint</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>abf433f048a1ab4c7c61df02e2aeeb695</anchor>
      <arglist>(unsigned int &amp;vcount, float *p, float x, float y, float z)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetDist</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a2f704aceb5a83db7d7d32223d6864691</anchor>
      <arglist>(float px, float py, float pz, const float *p2)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>countpolyhit</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ab12597d2807b33215b0b23eb70d5519f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>planetestepsilon</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>a64a2eb9b2caedf03f207a58066a98b35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; Tri * &gt;</type>
      <name>tris</name>
      <anchorfile>namespace_stan_hull.html</anchorfile>
      <anchor>ab34b44104d6e4c0bfa123f546baa46d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StanHull::int3</name>
    <filename>class_stan_hull_1_1int3.html</filename>
    <member kind="function">
      <type></type>
      <name>int3</name>
      <anchorfile>class_stan_hull_1_1int3.html</anchorfile>
      <anchor>a291e23a41f87371276ed5132f9eebcfa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>int3</name>
      <anchorfile>class_stan_hull_1_1int3.html</anchorfile>
      <anchor>a7463b94e896e7ab88771d9fd47250b87</anchor>
      <arglist>(int _x, int _y, int _z)</arglist>
    </member>
    <member kind="function">
      <type>const int &amp;</type>
      <name>operator[]</name>
      <anchorfile>class_stan_hull_1_1int3.html</anchorfile>
      <anchor>a27474bfa8db1e41e1a675e48de6ceca7</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>int &amp;</type>
      <name>operator[]</name>
      <anchorfile>class_stan_hull_1_1int3.html</anchorfile>
      <anchor>abf425b21c21810768816674fe3d578ba</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>x</name>
      <anchorfile>class_stan_hull_1_1int3.html</anchorfile>
      <anchor>a3f669121bc3b822baad7b362b96e4677</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>y</name>
      <anchorfile>class_stan_hull_1_1int3.html</anchorfile>
      <anchor>a723f7a859998fabfa72c33a46f9a4c77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>z</name>
      <anchorfile>class_stan_hull_1_1int3.html</anchorfile>
      <anchor>a24068e2ffd777d3bd82b58d2096fb1d1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StanHull::float2</name>
    <filename>class_stan_hull_1_1float2.html</filename>
    <member kind="function">
      <type></type>
      <name>float2</name>
      <anchorfile>class_stan_hull_1_1float2.html</anchorfile>
      <anchor>acaf3137949e6b48cca6718be29636511</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float2</name>
      <anchorfile>class_stan_hull_1_1float2.html</anchorfile>
      <anchor>a9c37cdb6acbe77a40dfb0d2ecb21575a</anchor>
      <arglist>(float _x, float _y)</arglist>
    </member>
    <member kind="function">
      <type>float &amp;</type>
      <name>operator[]</name>
      <anchorfile>class_stan_hull_1_1float2.html</anchorfile>
      <anchor>a7407f98323e5b7dcc7c15a220d36bdd5</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>const float &amp;</type>
      <name>operator[]</name>
      <anchorfile>class_stan_hull_1_1float2.html</anchorfile>
      <anchor>ae4c39a118bf2293ddbc531d94b495501</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>class_stan_hull_1_1float2.html</anchorfile>
      <anchor>acc45222b2ffd8604953beee80d865b30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>class_stan_hull_1_1float2.html</anchorfile>
      <anchor>ae0fb99c42d8e88023b03f87a02614dc3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StanHull::float3</name>
    <filename>class_stan_hull_1_1float3.html</filename>
    <member kind="function">
      <type></type>
      <name>float3</name>
      <anchorfile>class_stan_hull_1_1float3.html</anchorfile>
      <anchor>afa380c42778ba0cc9a5fb012a0c2a4ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float3</name>
      <anchorfile>class_stan_hull_1_1float3.html</anchorfile>
      <anchor>a65737b27d4fc96fe8fa5eabe33ef486e</anchor>
      <arglist>(float _x, float _y, float _z)</arglist>
    </member>
    <member kind="function">
      <type>float &amp;</type>
      <name>operator[]</name>
      <anchorfile>class_stan_hull_1_1float3.html</anchorfile>
      <anchor>a32487d3d1b623301484e576437a90032</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>const float &amp;</type>
      <name>operator[]</name>
      <anchorfile>class_stan_hull_1_1float3.html</anchorfile>
      <anchor>a9f39b14165b6af45f5318ef987d45e48</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>class_stan_hull_1_1float3.html</anchorfile>
      <anchor>aa260522412dff80f8b46811f6fe74708</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>class_stan_hull_1_1float3.html</anchorfile>
      <anchor>a019407a10401af26824fd2ea139c6212</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z</name>
      <anchorfile>class_stan_hull_1_1float3.html</anchorfile>
      <anchor>abcf6671d8b751d562cad23f3de4b7bb2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StanHull::float3x3</name>
    <filename>class_stan_hull_1_1float3x3.html</filename>
    <member kind="function">
      <type></type>
      <name>float3x3</name>
      <anchorfile>class_stan_hull_1_1float3x3.html</anchorfile>
      <anchor>ab00b2c3d1fff62da206be9da31482243</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float3x3</name>
      <anchorfile>class_stan_hull_1_1float3x3.html</anchorfile>
      <anchor>af54df4e8b765f6ac6df77c49bfaf3b1c</anchor>
      <arglist>(float xx, float xy, float xz, float yx, float yy, float yz, float zx, float zy, float zz)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float3x3</name>
      <anchorfile>class_stan_hull_1_1float3x3.html</anchorfile>
      <anchor>a76157890b5ce51d606dd5b69f674e886</anchor>
      <arglist>(float3 _x, float3 _y, float3 _z)</arglist>
    </member>
    <member kind="function">
      <type>float3 &amp;</type>
      <name>operator[]</name>
      <anchorfile>class_stan_hull_1_1float3x3.html</anchorfile>
      <anchor>a333eab46ad83fe2a9566008caca08a60</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>const float3 &amp;</type>
      <name>operator[]</name>
      <anchorfile>class_stan_hull_1_1float3x3.html</anchorfile>
      <anchor>aac75839bbd13fc42cc680bb46b50692f</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>float &amp;</type>
      <name>operator()</name>
      <anchorfile>class_stan_hull_1_1float3x3.html</anchorfile>
      <anchor>ae5d5bfbde5b77710db5b34089ee6a15a</anchor>
      <arglist>(int r, int c)</arglist>
    </member>
    <member kind="function">
      <type>const float &amp;</type>
      <name>operator()</name>
      <anchorfile>class_stan_hull_1_1float3x3.html</anchorfile>
      <anchor>ad7436c34034be485731a04b3b44eaea4</anchor>
      <arglist>(int r, int c) const </arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>x</name>
      <anchorfile>class_stan_hull_1_1float3x3.html</anchorfile>
      <anchor>ab8863b37daedfc9ff254b88708251d7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>y</name>
      <anchorfile>class_stan_hull_1_1float3x3.html</anchorfile>
      <anchor>a0a3f7a7e3fbce47b09d3c415da93b477</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>z</name>
      <anchorfile>class_stan_hull_1_1float3x3.html</anchorfile>
      <anchor>a68c3fc4db463342204e74a5062239091</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StanHull::float4</name>
    <filename>class_stan_hull_1_1float4.html</filename>
    <member kind="function">
      <type></type>
      <name>float4</name>
      <anchorfile>class_stan_hull_1_1float4.html</anchorfile>
      <anchor>a975a2af884b91477aa642c32665f01b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float4</name>
      <anchorfile>class_stan_hull_1_1float4.html</anchorfile>
      <anchor>ab72bab6621c8e661afe7afd2f3fccc94</anchor>
      <arglist>(float _x, float _y, float _z, float _w)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float4</name>
      <anchorfile>class_stan_hull_1_1float4.html</anchorfile>
      <anchor>a61a01792c386f90e15e8ba4a9a423b24</anchor>
      <arglist>(const float3 &amp;v, float _w)</arglist>
    </member>
    <member kind="function">
      <type>float &amp;</type>
      <name>operator[]</name>
      <anchorfile>class_stan_hull_1_1float4.html</anchorfile>
      <anchor>ac16136a6b508ac4ebb45e67cb1cb027d</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>const float &amp;</type>
      <name>operator[]</name>
      <anchorfile>class_stan_hull_1_1float4.html</anchorfile>
      <anchor>ad4ef91cea71953219e44ad6536e95582</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>const float3 &amp;</type>
      <name>xyz</name>
      <anchorfile>class_stan_hull_1_1float4.html</anchorfile>
      <anchor>af53893ede63705a3304858d95ef941de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3 &amp;</type>
      <name>xyz</name>
      <anchorfile>class_stan_hull_1_1float4.html</anchorfile>
      <anchor>a8e95bf3ab8cdee96c9d5e9c2fbbfecce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>class_stan_hull_1_1float4.html</anchorfile>
      <anchor>ad0adba55c5362f4e180ea7a2e557ee11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>class_stan_hull_1_1float4.html</anchorfile>
      <anchor>a7ce8f8d1ea958f5a51f84db02c34c690</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z</name>
      <anchorfile>class_stan_hull_1_1float4.html</anchorfile>
      <anchor>a29e87c1b0f70075847f3dec4862f35ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>w</name>
      <anchorfile>class_stan_hull_1_1float4.html</anchorfile>
      <anchor>a1c2027264b47f09240793e975b5cdb12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StanHull::float4x4</name>
    <filename>class_stan_hull_1_1float4x4.html</filename>
    <member kind="function">
      <type></type>
      <name>float4x4</name>
      <anchorfile>class_stan_hull_1_1float4x4.html</anchorfile>
      <anchor>aecf168ef961936e197defa4ab7f96fca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float4x4</name>
      <anchorfile>class_stan_hull_1_1float4x4.html</anchorfile>
      <anchor>a2d8384b762f5981536ab1dd2b7bf19eb</anchor>
      <arglist>(const float4 &amp;_x, const float4 &amp;_y, const float4 &amp;_z, const float4 &amp;_w)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>float4x4</name>
      <anchorfile>class_stan_hull_1_1float4x4.html</anchorfile>
      <anchor>a665049eb5393a9222b177256d821e9b8</anchor>
      <arglist>(float m00, float m01, float m02, float m03, float m10, float m11, float m12, float m13, float m20, float m21, float m22, float m23, float m30, float m31, float m32, float m33)</arglist>
    </member>
    <member kind="function">
      <type>float &amp;</type>
      <name>operator()</name>
      <anchorfile>class_stan_hull_1_1float4x4.html</anchorfile>
      <anchor>a9a6623a1c079f1754f51fc420b55d540</anchor>
      <arglist>(int r, int c)</arglist>
    </member>
    <member kind="function">
      <type>const float &amp;</type>
      <name>operator()</name>
      <anchorfile>class_stan_hull_1_1float4x4.html</anchorfile>
      <anchor>a1b718453f6733b6f417211a50bf8f35e</anchor>
      <arglist>(int r, int c) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator float *</name>
      <anchorfile>class_stan_hull_1_1float4x4.html</anchorfile>
      <anchor>a44fd67c5b661106b8bbe24be0a58bde1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const float *</name>
      <anchorfile>class_stan_hull_1_1float4x4.html</anchorfile>
      <anchor>acbf39f0deaa311cb748959984c1ac6cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator struct D3DXMATRIX *</name>
      <anchorfile>class_stan_hull_1_1float4x4.html</anchorfile>
      <anchor>af232796980d0f996a24e39a878e96622</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const struct D3DXMATRIX *</name>
      <anchorfile>class_stan_hull_1_1float4x4.html</anchorfile>
      <anchor>a60d5958ce67c1245dbd2d0128084fac9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>float4</type>
      <name>x</name>
      <anchorfile>class_stan_hull_1_1float4x4.html</anchorfile>
      <anchor>af23da22467a12fd8227630206428e55a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float4</type>
      <name>y</name>
      <anchorfile>class_stan_hull_1_1float4x4.html</anchorfile>
      <anchor>a9dccc4eac7e8d304338f039994f13c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float4</type>
      <name>z</name>
      <anchorfile>class_stan_hull_1_1float4x4.html</anchorfile>
      <anchor>ae8a0a3dc4aac5d598ef4e402a2f0c7d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float4</type>
      <name>w</name>
      <anchorfile>class_stan_hull_1_1float4x4.html</anchorfile>
      <anchor>a829efffae912257a5ea0475179e1222e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StanHull::Quaternion</name>
    <filename>class_stan_hull_1_1_quaternion.html</filename>
    <base>StanHull::float4</base>
    <member kind="function">
      <type></type>
      <name>Quaternion</name>
      <anchorfile>class_stan_hull_1_1_quaternion.html</anchorfile>
      <anchor>ae05d594ba5e1f12de06df2f46403397d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Quaternion</name>
      <anchorfile>class_stan_hull_1_1_quaternion.html</anchorfile>
      <anchor>a02c82ceed3613d6de68f654e0d2a623a</anchor>
      <arglist>(float3 v, float t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Quaternion</name>
      <anchorfile>class_stan_hull_1_1_quaternion.html</anchorfile>
      <anchor>a8e5e70e21e5199920bc235f476e31f4b</anchor>
      <arglist>(float _x, float _y, float _z, float _w)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>angle</name>
      <anchorfile>class_stan_hull_1_1_quaternion.html</anchorfile>
      <anchor>a4084d345afa699ba2980ad2d17983588</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>axis</name>
      <anchorfile>class_stan_hull_1_1_quaternion.html</anchorfile>
      <anchor>a59974cc58b55d918bb9dc17b094c375c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>xdir</name>
      <anchorfile>class_stan_hull_1_1_quaternion.html</anchorfile>
      <anchor>a287835d4c77f6c7fabbfb514097592e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>ydir</name>
      <anchorfile>class_stan_hull_1_1_quaternion.html</anchorfile>
      <anchor>a8ae623d0951225b6f0dd15417c3bd0b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3</type>
      <name>zdir</name>
      <anchorfile>class_stan_hull_1_1_quaternion.html</anchorfile>
      <anchor>a697b45985de858f4e7b05fece8d8b8af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3x3</type>
      <name>getmatrix</name>
      <anchorfile>class_stan_hull_1_1_quaternion.html</anchorfile>
      <anchor>ad3217c343d7d3589f68339e956f9767f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator float3x3</name>
      <anchorfile>class_stan_hull_1_1_quaternion.html</anchorfile>
      <anchor>a3743a5f7fd9d3da07cfb6fc5ed65bd9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Normalize</name>
      <anchorfile>class_stan_hull_1_1_quaternion.html</anchorfile>
      <anchor>a3d81f8348d28c4fac349586c5537c8ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float &amp;</type>
      <name>operator[]</name>
      <anchorfile>class_stan_hull_1_1float4.html</anchorfile>
      <anchor>ac16136a6b508ac4ebb45e67cb1cb027d</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>const float &amp;</type>
      <name>operator[]</name>
      <anchorfile>class_stan_hull_1_1float4.html</anchorfile>
      <anchor>ad4ef91cea71953219e44ad6536e95582</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>const float3 &amp;</type>
      <name>xyz</name>
      <anchorfile>class_stan_hull_1_1float4.html</anchorfile>
      <anchor>af53893ede63705a3304858d95ef941de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float3 &amp;</type>
      <name>xyz</name>
      <anchorfile>class_stan_hull_1_1float4.html</anchorfile>
      <anchor>a8e95bf3ab8cdee96c9d5e9c2fbbfecce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>class_stan_hull_1_1float4.html</anchorfile>
      <anchor>ad0adba55c5362f4e180ea7a2e557ee11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>class_stan_hull_1_1float4.html</anchorfile>
      <anchor>a7ce8f8d1ea958f5a51f84db02c34c690</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z</name>
      <anchorfile>class_stan_hull_1_1float4.html</anchorfile>
      <anchor>a29e87c1b0f70075847f3dec4862f35ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>w</name>
      <anchorfile>class_stan_hull_1_1float4.html</anchorfile>
      <anchor>a1c2027264b47f09240793e975b5cdb12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StanHull::Plane</name>
    <filename>class_stan_hull_1_1_plane.html</filename>
    <member kind="function">
      <type></type>
      <name>Plane</name>
      <anchorfile>class_stan_hull_1_1_plane.html</anchorfile>
      <anchor>a601d7ad65ce49fbf3308f035cbbe1819</anchor>
      <arglist>(const float3 &amp;n, float d)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plane</name>
      <anchorfile>class_stan_hull_1_1_plane.html</anchorfile>
      <anchor>abf359c5c8469a967eb725ecabc552812</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Transform</name>
      <anchorfile>class_stan_hull_1_1_plane.html</anchorfile>
      <anchor>ad070cb4dfe930c6a154fe7f7bce758df</anchor>
      <arglist>(const float3 &amp;position, const Quaternion &amp;orientation)</arglist>
    </member>
    <member kind="variable">
      <type>float3</type>
      <name>normal</name>
      <anchorfile>class_stan_hull_1_1_plane.html</anchorfile>
      <anchor>a076dbb940b962b8c785da5a6d6a2ae23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>dist</name>
      <anchorfile>class_stan_hull_1_1_plane.html</anchorfile>
      <anchor>a297ef36c9677067f0ab41c3fae9767c1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StanHull::Array</name>
    <filename>class_stan_hull_1_1_array.html</filename>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>a53385361e7e76f30091060ad086ae4f1</anchor>
      <arglist>(int s=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>ab57725eca36fbd1de99948fa1c9bf18b</anchor>
      <arglist>(Array&lt; Type &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>ad9aba86b305c0cdc7c666c0a5ba5277f</anchor>
      <arglist>(ArrayRet&lt; Type &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>a623a8b9776160ee57543ef354895b70b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocate</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>a44561d628ddfae4bfc275f640a4bf7b8</anchor>
      <arglist>(int s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSize</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>a02e67280b3632b1037809cf776172c89</anchor>
      <arglist>(int s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Pack</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>af05fd73c56bd08dda8dc0e8983467102</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Type &amp;</type>
      <name>Add</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>a6300e2b523ba554443ef43c38d77676b</anchor>
      <arglist>(Type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddUnique</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>ae85d8f0bd3df8f5ae540fe223c3482b8</anchor>
      <arglist>(Type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Contains</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>a92946cd169ef3ea8c9262e1c74ce4f96</anchor>
      <arglist>(Type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Insert</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>ae8939f86569de3ea1efadb9a3a563bde</anchor>
      <arglist>(Type, int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>IndexOf</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>a95037265784aecd3d3fdf523d18e57eb</anchor>
      <arglist>(Type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Remove</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>a7f575b281a9e599e28d2e63472abfe6a</anchor>
      <arglist>(Type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DelIndex</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>accfb6d2c192ca866f660c5cc6286e699</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>const Type &amp;</type>
      <name>operator[]</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>adeea162b185d4613d338c37e8f1165ec</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>Type &amp;</type>
      <name>operator[]</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>a7d151404a4aa91162da2f02e5d62837d</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>Type &amp;</type>
      <name>Pop</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>a0f93d0f570691e491d2c88271b936884</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; Type &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>a644bb2e06c5b9b83dd990569b26b981a</anchor>
      <arglist>(Array&lt; Type &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; Type &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>a7bd608d5382c1226e778297cf18e6806</anchor>
      <arglist>(ArrayRet&lt; Type &gt; &amp;array)</arglist>
    </member>
    <member kind="variable">
      <type>Type *</type>
      <name>element</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>a9817ae92dddee7ae2d876e3fc78a13c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>count</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>ab82875069f9f71c97b152a3fe3c1a430</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>array_size</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>a4fdee7855bec960301b3e711ff9b19a6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StanHull::ArrayRet</name>
    <filename>class_stan_hull_1_1_array_ret.html</filename>
    <base>Array&lt; Type &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>allocate</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>a44561d628ddfae4bfc275f640a4bf7b8</anchor>
      <arglist>(int s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSize</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>a02e67280b3632b1037809cf776172c89</anchor>
      <arglist>(int s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Pack</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>af05fd73c56bd08dda8dc0e8983467102</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Type &amp;</type>
      <name>Add</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>a6300e2b523ba554443ef43c38d77676b</anchor>
      <arglist>(Type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddUnique</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>ae85d8f0bd3df8f5ae540fe223c3482b8</anchor>
      <arglist>(Type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Contains</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>a92946cd169ef3ea8c9262e1c74ce4f96</anchor>
      <arglist>(Type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Insert</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>ae8939f86569de3ea1efadb9a3a563bde</anchor>
      <arglist>(Type, int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>IndexOf</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>a95037265784aecd3d3fdf523d18e57eb</anchor>
      <arglist>(Type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Remove</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>a7f575b281a9e599e28d2e63472abfe6a</anchor>
      <arglist>(Type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DelIndex</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>accfb6d2c192ca866f660c5cc6286e699</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>const Type &amp;</type>
      <name>operator[]</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>adeea162b185d4613d338c37e8f1165ec</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>Type &amp;</type>
      <name>operator[]</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>a7d151404a4aa91162da2f02e5d62837d</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>Type &amp;</type>
      <name>Pop</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>a0f93d0f570691e491d2c88271b936884</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Type *</type>
      <name>element</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>a9817ae92dddee7ae2d876e3fc78a13c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>count</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>ab82875069f9f71c97b152a3fe3c1a430</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>array_size</name>
      <anchorfile>class_stan_hull_1_1_array.html</anchorfile>
      <anchor>a4fdee7855bec960301b3e711ff9b19a6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StanHull::PHullResult</name>
    <filename>class_stan_hull_1_1_p_hull_result.html</filename>
    <member kind="function">
      <type></type>
      <name>PHullResult</name>
      <anchorfile>class_stan_hull_1_1_p_hull_result.html</anchorfile>
      <anchor>a6c351d5f0caffe6dfd34793e9071583d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>mVcount</name>
      <anchorfile>class_stan_hull_1_1_p_hull_result.html</anchorfile>
      <anchor>a1da7a0f1faadc8d56fa478ef1573fb97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>mIndexCount</name>
      <anchorfile>class_stan_hull_1_1_p_hull_result.html</anchorfile>
      <anchor>a73ec926bd987219f66d238041eefb0ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>mFaceCount</name>
      <anchorfile>class_stan_hull_1_1_p_hull_result.html</anchorfile>
      <anchor>a2e1896b26daa7756f352883b13ff20d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float *</type>
      <name>mVertices</name>
      <anchorfile>class_stan_hull_1_1_p_hull_result.html</anchorfile>
      <anchor>aa4d86a715561daf812a54ff7d9c557f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int *</type>
      <name>mIndices</name>
      <anchorfile>class_stan_hull_1_1_p_hull_result.html</anchorfile>
      <anchor>abea76f9624e59528ad0bbc01ce9db104</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StanHull::ConvexH</name>
    <filename>class_stan_hull_1_1_convex_h.html</filename>
    <class kind="class">StanHull::ConvexH::HalfEdge</class>
    <member kind="function">
      <type></type>
      <name>ConvexH</name>
      <anchorfile>class_stan_hull_1_1_convex_h.html</anchorfile>
      <anchor>a8e784fba84b4786bd829c0fafd14d147</anchor>
      <arglist>(int vertices_size, int edges_size, int facets_size)</arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; REAL3 &gt;</type>
      <name>vertices</name>
      <anchorfile>class_stan_hull_1_1_convex_h.html</anchorfile>
      <anchor>a4d8765055190deef77c2e62ce279f20f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; HalfEdge &gt;</type>
      <name>edges</name>
      <anchorfile>class_stan_hull_1_1_convex_h.html</anchorfile>
      <anchor>ae76e7d2078409d20a5b7f4be7f251a20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; Plane &gt;</type>
      <name>facets</name>
      <anchorfile>class_stan_hull_1_1_convex_h.html</anchorfile>
      <anchor>a787637117e56c03f622bfcb803b56934</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StanHull::ConvexH::HalfEdge</name>
    <filename>class_stan_hull_1_1_convex_h_1_1_half_edge.html</filename>
    <member kind="function">
      <type></type>
      <name>HalfEdge</name>
      <anchorfile>class_stan_hull_1_1_convex_h_1_1_half_edge.html</anchorfile>
      <anchor>adf23149b109820013e0773ac0ef86844</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HalfEdge</name>
      <anchorfile>class_stan_hull_1_1_convex_h_1_1_half_edge.html</anchorfile>
      <anchor>a88790aca4bcf4463b9f004e75c422226</anchor>
      <arglist>(short _ea, unsigned char _v, unsigned char _p)</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>ea</name>
      <anchorfile>class_stan_hull_1_1_convex_h_1_1_half_edge.html</anchorfile>
      <anchor>affcea7484e674df6b700b435fcb5e65d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>v</name>
      <anchorfile>class_stan_hull_1_1_convex_h_1_1_half_edge.html</anchorfile>
      <anchor>a0c056eda86a9336d82d0ad861218b1dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>p</name>
      <anchorfile>class_stan_hull_1_1_convex_h_1_1_half_edge.html</anchorfile>
      <anchor>abbff29a3e63154f24a753b56170507af</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StanHull::VertFlag</name>
    <filename>class_stan_hull_1_1_vert_flag.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>planetest</name>
      <anchorfile>class_stan_hull_1_1_vert_flag.html</anchorfile>
      <anchor>ae70548b17fbc011428190e3e59a1b710</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>junk</name>
      <anchorfile>class_stan_hull_1_1_vert_flag.html</anchorfile>
      <anchor>a5df82821efc0df544e669cd40bb06f19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>undermap</name>
      <anchorfile>class_stan_hull_1_1_vert_flag.html</anchorfile>
      <anchor>a980fe702c18d2362005e7e82ae2428e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>overmap</name>
      <anchorfile>class_stan_hull_1_1_vert_flag.html</anchorfile>
      <anchor>a69e2944a520cf0440c9b82974f1f557c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StanHull::EdgeFlag</name>
    <filename>class_stan_hull_1_1_edge_flag.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>planetest</name>
      <anchorfile>class_stan_hull_1_1_edge_flag.html</anchorfile>
      <anchor>af204f9d72e0d0fdcfd7f06d01254b493</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>fixes</name>
      <anchorfile>class_stan_hull_1_1_edge_flag.html</anchorfile>
      <anchor>a1558a582acc55fd1395e885e48171e2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>undermap</name>
      <anchorfile>class_stan_hull_1_1_edge_flag.html</anchorfile>
      <anchor>aa96a07904e2e7b0f6d13b2735ae18353</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>overmap</name>
      <anchorfile>class_stan_hull_1_1_edge_flag.html</anchorfile>
      <anchor>ad312bb5c046b99229647080211a812e0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StanHull::PlaneFlag</name>
    <filename>class_stan_hull_1_1_plane_flag.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>undermap</name>
      <anchorfile>class_stan_hull_1_1_plane_flag.html</anchorfile>
      <anchor>a0d8f9fc7d61caae24a1ed933c607538c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>overmap</name>
      <anchorfile>class_stan_hull_1_1_plane_flag.html</anchorfile>
      <anchor>a360f134430da374de1aec75a7734e9be</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StanHull::Coplanar</name>
    <filename>class_stan_hull_1_1_coplanar.html</filename>
    <member kind="variable">
      <type>unsigned short</type>
      <name>ea</name>
      <anchorfile>class_stan_hull_1_1_coplanar.html</anchorfile>
      <anchor>a4f807676111d1535cd58f9241fe4607d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>v0</name>
      <anchorfile>class_stan_hull_1_1_coplanar.html</anchorfile>
      <anchor>ab1dc772199d0a74ee084e49b8bbdff30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>v1</name>
      <anchorfile>class_stan_hull_1_1_coplanar.html</anchorfile>
      <anchor>a39bdfd23d7d9f431dc9de3b8132ff191</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StanHull::Tri</name>
    <filename>class_stan_hull_1_1_tri.html</filename>
    <base>StanHull::int3</base>
    <member kind="function">
      <type></type>
      <name>Tri</name>
      <anchorfile>class_stan_hull_1_1_tri.html</anchorfile>
      <anchor>aac00b239f1ccc86ded5b7ed4bd868af3</anchor>
      <arglist>(int a, int b, int c)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Tri</name>
      <anchorfile>class_stan_hull_1_1_tri.html</anchorfile>
      <anchor>a17262261bdd187f58d1a9a7590116a01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int &amp;</type>
      <name>neib</name>
      <anchorfile>class_stan_hull_1_1_tri.html</anchorfile>
      <anchor>ade94ffe1735886fe2e6ad847b2eb9408</anchor>
      <arglist>(int a, int b)</arglist>
    </member>
    <member kind="function">
      <type>const int &amp;</type>
      <name>operator[]</name>
      <anchorfile>class_stan_hull_1_1int3.html</anchorfile>
      <anchor>a27474bfa8db1e41e1a675e48de6ceca7</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>int &amp;</type>
      <name>operator[]</name>
      <anchorfile>class_stan_hull_1_1int3.html</anchorfile>
      <anchor>abf425b21c21810768816674fe3d578ba</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="variable">
      <type>int3</type>
      <name>n</name>
      <anchorfile>class_stan_hull_1_1_tri.html</anchorfile>
      <anchor>a90aa0a6d461d7fe2b561c5717e64cd00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>id</name>
      <anchorfile>class_stan_hull_1_1_tri.html</anchorfile>
      <anchor>a72316cfc234c854b96b6d35c33fd8931</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>vmax</name>
      <anchorfile>class_stan_hull_1_1_tri.html</anchorfile>
      <anchor>ab2d2ff3baaedfb8fa2cce45cd4960943</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>rise</name>
      <anchorfile>class_stan_hull_1_1_tri.html</anchorfile>
      <anchor>a7debe5ab7377d38bf96d28a9fe47e773</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>x</name>
      <anchorfile>class_stan_hull_1_1int3.html</anchorfile>
      <anchor>a3f669121bc3b822baad7b362b96e4677</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>y</name>
      <anchorfile>class_stan_hull_1_1int3.html</anchorfile>
      <anchor>a723f7a859998fabfa72c33a46f9a4c77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>z</name>
      <anchorfile>class_stan_hull_1_1int3.html</anchorfile>
      <anchor>a24068e2ffd777d3bd82b58d2096fb1d1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StanHull::int4</name>
    <filename>class_stan_hull_1_1int4.html</filename>
    <member kind="function">
      <type></type>
      <name>int4</name>
      <anchorfile>class_stan_hull_1_1int4.html</anchorfile>
      <anchor>aef5dcb14f718985dafefdcd3e7b6c199</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>int4</name>
      <anchorfile>class_stan_hull_1_1int4.html</anchorfile>
      <anchor>ac8a508592e44afc006e7c825d1aef244</anchor>
      <arglist>(int _x, int _y, int _z, int _w)</arglist>
    </member>
    <member kind="function">
      <type>const int &amp;</type>
      <name>operator[]</name>
      <anchorfile>class_stan_hull_1_1int4.html</anchorfile>
      <anchor>a3f8e5c052bbe2887025c34712bad9e6c</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>int &amp;</type>
      <name>operator[]</name>
      <anchorfile>class_stan_hull_1_1int4.html</anchorfile>
      <anchor>af1cc1233783d62d2cddf9737c4b44521</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>x</name>
      <anchorfile>class_stan_hull_1_1int4.html</anchorfile>
      <anchor>a24236c0deef899e1a3aa9bce77aeb903</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>y</name>
      <anchorfile>class_stan_hull_1_1int4.html</anchorfile>
      <anchor>a3cd8e226c9b4eff07cb098ed701c96f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>z</name>
      <anchorfile>class_stan_hull_1_1int4.html</anchorfile>
      <anchor>adf1cd918fe20ae1fda2ba870160c03f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>w</name>
      <anchorfile>class_stan_hull_1_1int4.html</anchorfile>
      <anchor>a1fa65df9d1a7bb125fe49f1e089055db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StanHull::HullResult</name>
    <filename>class_stan_hull_1_1_hull_result.html</filename>
    <member kind="function">
      <type></type>
      <name>HullResult</name>
      <anchorfile>class_stan_hull_1_1_hull_result.html</anchorfile>
      <anchor>a96dc37adde1f1c1221bd9d6880ca747b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mPolygons</name>
      <anchorfile>class_stan_hull_1_1_hull_result.html</anchorfile>
      <anchor>ad74a79d95cd913b9fc51e98e2be33cfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>mNumOutputVertices</name>
      <anchorfile>class_stan_hull_1_1_hull_result.html</anchorfile>
      <anchor>a731c5ea7b45d76e974b20f1a6990a047</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float *</type>
      <name>mOutputVertices</name>
      <anchorfile>class_stan_hull_1_1_hull_result.html</anchorfile>
      <anchor>ab75253da4d604158ee518749884e951f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>mNumFaces</name>
      <anchorfile>class_stan_hull_1_1_hull_result.html</anchorfile>
      <anchor>a00ea31fdc76ff6094705e3e0d4bcdaf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>mNumIndices</name>
      <anchorfile>class_stan_hull_1_1_hull_result.html</anchorfile>
      <anchor>a4ec51f0c71d4799e0c226e6a97ce6d19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int *</type>
      <name>mIndices</name>
      <anchorfile>class_stan_hull_1_1_hull_result.html</anchorfile>
      <anchor>add37307cd1dc893fdf858776ad58e871</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StanHull::HullDesc</name>
    <filename>class_stan_hull_1_1_hull_desc.html</filename>
    <member kind="function">
      <type></type>
      <name>HullDesc</name>
      <anchorfile>class_stan_hull_1_1_hull_desc.html</anchorfile>
      <anchor>a8972b2d7d444dba929180ae3cdeca7d5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HullDesc</name>
      <anchorfile>class_stan_hull_1_1_hull_desc.html</anchorfile>
      <anchor>aa48b934a5b892a55dd1ff8dabba8941a</anchor>
      <arglist>(HullFlag flag, unsigned int vcount, const float *vertices, unsigned int stride)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasHullFlag</name>
      <anchorfile>class_stan_hull_1_1_hull_desc.html</anchorfile>
      <anchor>a418a53328855828b22f80c5c2f6b5085</anchor>
      <arglist>(HullFlag flag) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHullFlag</name>
      <anchorfile>class_stan_hull_1_1_hull_desc.html</anchorfile>
      <anchor>a7545cc4264e2c28a0e250996e9a01a7c</anchor>
      <arglist>(HullFlag flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearHullFlag</name>
      <anchorfile>class_stan_hull_1_1_hull_desc.html</anchorfile>
      <anchor>a271d87caf9c5d94f557340b91be0af99</anchor>
      <arglist>(HullFlag flag)</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>mFlags</name>
      <anchorfile>class_stan_hull_1_1_hull_desc.html</anchorfile>
      <anchor>a74e9e6924927ba18fee63109c4345485</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>mVcount</name>
      <anchorfile>class_stan_hull_1_1_hull_desc.html</anchorfile>
      <anchor>a73cb71a1468a4c4d092076157700860d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const float *</type>
      <name>mVertices</name>
      <anchorfile>class_stan_hull_1_1_hull_desc.html</anchorfile>
      <anchor>a298250d9b12a6cc70cffd725b8197c07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>mVertexStride</name>
      <anchorfile>class_stan_hull_1_1_hull_desc.html</anchorfile>
      <anchor>a111893e00763a405ab98080bf9cd2b52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>mNormalEpsilon</name>
      <anchorfile>class_stan_hull_1_1_hull_desc.html</anchorfile>
      <anchor>a5332828415704b9306eb833c9f7396a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>mSkinWidth</name>
      <anchorfile>class_stan_hull_1_1_hull_desc.html</anchorfile>
      <anchor>aac60d6bf753e7b68dbabd927590e2a7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>mMaxVertices</name>
      <anchorfile>class_stan_hull_1_1_hull_desc.html</anchorfile>
      <anchor>aeb2d2fe1447330ee91979ad85c311b54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>mMaxFaces</name>
      <anchorfile>class_stan_hull_1_1_hull_desc.html</anchorfile>
      <anchor>aa2205ef3519aaec9dca3130dc805633b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StanHull::HullLibrary</name>
    <filename>class_stan_hull_1_1_hull_library.html</filename>
    <member kind="function">
      <type>HullError</type>
      <name>CreateConvexHull</name>
      <anchorfile>class_stan_hull_1_1_hull_library.html</anchorfile>
      <anchor>a019abd31aa749f792bff1a92dfc6ef33</anchor>
      <arglist>(const HullDesc &amp;desc, HullResult &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>HullError</type>
      <name>ReleaseResult</name>
      <anchorfile>class_stan_hull_1_1_hull_library.html</anchorfile>
      <anchor>adaa136e6ee4fe0ad824d2bf8b036af76</anchor>
      <arglist>(HullResult &amp;result)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>BringOutYourDead</name>
      <anchorfile>class_stan_hull_1_1_hull_library.html</anchorfile>
      <anchor>a8cbeb7f44b11896f44a7f1c0e91d48db</anchor>
      <arglist>(const float *verts, unsigned int vcount, float *overts, unsigned int &amp;ocount, unsigned int *indices, unsigned indexcount)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>CleanupVertices</name>
      <anchorfile>class_stan_hull_1_1_hull_library.html</anchorfile>
      <anchor>a4f3bf53e8bc73698f4895935059814d1</anchor>
      <arglist>(unsigned int svcount, const float *svertices, unsigned int stride, unsigned int &amp;vcount, float *vertices, float normalepsilon, float *scale)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>std::allocator</name>
    <filename>classstd_1_1allocator.html</filename>
    <member kind="variable" protection="private">
      <type>T</type>
      <name>elements</name>
      <anchorfile>classstd_1_1allocator.html</anchorfile>
      <anchor>aab8084021caff8cccf82fd6c33d96192</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>std::auto_ptr</name>
    <filename>classstd_1_1auto__ptr.html</filename>
    <member kind="variable" protection="private">
      <type>T</type>
      <name>ptr</name>
      <anchorfile>classstd_1_1auto__ptr.html</anchorfile>
      <anchor>a6744abd199acaae294f1448f6a2734e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>std::ios_base</name>
    <filename>classstd_1_1ios__base.html</filename>
    <class kind="class">std::ios_base::failure</class>
  </compound>
  <compound kind="class">
    <name>std::ios_base::failure</name>
    <filename>classstd_1_1ios__base_1_1failure.html</filename>
    <base>std::exception</base>
  </compound>
  <compound kind="class">
    <name>std::basic_ios</name>
    <filename>classstd_1_1basic__ios.html</filename>
    <base>std::ios_base</base>
  </compound>
  <compound kind="class">
    <name>std::basic_istream</name>
    <filename>classstd_1_1basic__istream.html</filename>
    <base virtualness="virtual">basic_ios&lt; Char &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::basic_ostream</name>
    <filename>classstd_1_1basic__ostream.html</filename>
    <base virtualness="virtual">basic_ios&lt; Char &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::basic_iostream</name>
    <filename>classstd_1_1basic__iostream.html</filename>
    <base>basic_istream&lt; Char &gt;</base>
    <base>basic_ostream&lt; Char &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::basic_ifstream</name>
    <filename>classstd_1_1basic__ifstream.html</filename>
    <base>basic_istream&lt; Char &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::basic_ofstream</name>
    <filename>classstd_1_1basic__ofstream.html</filename>
    <base>basic_ostream&lt; Char &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::basic_fstream</name>
    <filename>classstd_1_1basic__fstream.html</filename>
    <base>basic_iostream&lt; Char &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::basic_istringstream</name>
    <filename>classstd_1_1basic__istringstream.html</filename>
    <base>basic_istream&lt; Char &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::basic_ostringstream</name>
    <filename>classstd_1_1basic__ostringstream.html</filename>
    <base>basic_ostream&lt; Char &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::basic_stringstream</name>
    <filename>classstd_1_1basic__stringstream.html</filename>
    <base>basic_iostream&lt; Char &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::ios</name>
    <filename>classstd_1_1ios.html</filename>
    <base>basic_ios&lt; char &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::wios</name>
    <filename>classstd_1_1wios.html</filename>
    <base>basic_ios&lt; wchar_t &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::istream</name>
    <filename>classstd_1_1istream.html</filename>
    <base>basic_istream&lt; char &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::wistream</name>
    <filename>classstd_1_1wistream.html</filename>
    <base>basic_istream&lt; wchar_t &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::ostream</name>
    <filename>classstd_1_1ostream.html</filename>
    <base>basic_ostream&lt; char &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::wostream</name>
    <filename>classstd_1_1wostream.html</filename>
    <base>basic_ostream&lt; wchar_t &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::ifstream</name>
    <filename>classstd_1_1ifstream.html</filename>
    <base>basic_ifstream&lt; char &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::wifstream</name>
    <filename>classstd_1_1wifstream.html</filename>
    <base>basic_ifstream&lt; wchar_t &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::ofstream</name>
    <filename>classstd_1_1ofstream.html</filename>
    <base>basic_ofstream&lt; char &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::wofstream</name>
    <filename>classstd_1_1wofstream.html</filename>
    <base>basic_ofstream&lt; wchar_t &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::fstream</name>
    <filename>classstd_1_1fstream.html</filename>
    <base>basic_fstream&lt; char &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::wfstream</name>
    <filename>classstd_1_1wfstream.html</filename>
    <base>basic_fstream&lt; wchar_t &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::istringstream</name>
    <filename>classstd_1_1istringstream.html</filename>
    <base>basic_istringstream&lt; char &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::wistringstream</name>
    <filename>classstd_1_1wistringstream.html</filename>
    <base>basic_istringstream&lt; wchar_t &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::ostringstream</name>
    <filename>classstd_1_1ostringstream.html</filename>
    <base>basic_ostringstream&lt; char &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::wostringstream</name>
    <filename>classstd_1_1wostringstream.html</filename>
    <base>basic_ostringstream&lt; wchar_t &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::stringstream</name>
    <filename>classstd_1_1stringstream.html</filename>
    <base>basic_stringstream&lt; char &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::wstringstream</name>
    <filename>classstd_1_1wstringstream.html</filename>
    <base>basic_stringstream&lt; wchar_t &gt;</base>
  </compound>
  <compound kind="class">
    <name>std::basic_string</name>
    <filename>classstd_1_1basic__string.html</filename>
    <class kind="class">std::basic_string::const_iterator</class>
    <class kind="class">std::basic_string::const_reverse_iterator</class>
    <class kind="class">std::basic_string::iterator</class>
    <class kind="class">std::basic_string::reverse_iterator</class>
  </compound>
  <compound kind="class">
    <name>std::basic_string::const_iterator</name>
    <filename>classstd_1_1basic__string_1_1const__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::basic_string::const_reverse_iterator</name>
    <filename>classstd_1_1basic__string_1_1const__reverse__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::basic_string::iterator</name>
    <filename>classstd_1_1basic__string_1_1iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::basic_string::reverse_iterator</name>
    <filename>classstd_1_1basic__string_1_1reverse__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::string</name>
    <filename>classstd_1_1string.html</filename>
    <base>basic_string&lt; char &gt;</base>
    <class kind="class">std::string::const_iterator</class>
    <class kind="class">std::string::const_reverse_iterator</class>
    <class kind="class">std::string::iterator</class>
    <class kind="class">std::string::reverse_iterator</class>
  </compound>
  <compound kind="class">
    <name>std::string::const_iterator</name>
    <filename>classstd_1_1string_1_1const__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::string::const_reverse_iterator</name>
    <filename>classstd_1_1string_1_1const__reverse__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::string::iterator</name>
    <filename>classstd_1_1string_1_1iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::string::reverse_iterator</name>
    <filename>classstd_1_1string_1_1reverse__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::wstring</name>
    <filename>classstd_1_1wstring.html</filename>
    <base>basic_string&lt; wchar_t &gt;</base>
    <class kind="class">std::wstring::const_iterator</class>
    <class kind="class">std::wstring::const_reverse_iterator</class>
    <class kind="class">std::wstring::iterator</class>
    <class kind="class">std::wstring::reverse_iterator</class>
  </compound>
  <compound kind="class">
    <name>std::wstring::const_iterator</name>
    <filename>classstd_1_1wstring_1_1const__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::wstring::const_reverse_iterator</name>
    <filename>classstd_1_1wstring_1_1const__reverse__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::wstring::iterator</name>
    <filename>classstd_1_1wstring_1_1iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::wstring::reverse_iterator</name>
    <filename>classstd_1_1wstring_1_1reverse__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::complex</name>
    <filename>classstd_1_1complex.html</filename>
  </compound>
  <compound kind="class">
    <name>std::bitset</name>
    <filename>classstd_1_1bitset.html</filename>
  </compound>
  <compound kind="class">
    <name>std::deque</name>
    <filename>classstd_1_1deque.html</filename>
    <class kind="class">std::deque::const_iterator</class>
    <class kind="class">std::deque::const_reverse_iterator</class>
    <class kind="class">std::deque::iterator</class>
    <class kind="class">std::deque::reverse_iterator</class>
    <member kind="variable" protection="private">
      <type>T</type>
      <name>elements</name>
      <anchorfile>classstd_1_1deque.html</anchorfile>
      <anchor>a0f91bdaf87e2c3cdf58b202a00132ae4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>std::deque::const_iterator</name>
    <filename>classstd_1_1deque_1_1const__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::deque::const_reverse_iterator</name>
    <filename>classstd_1_1deque_1_1const__reverse__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::deque::iterator</name>
    <filename>classstd_1_1deque_1_1iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::deque::reverse_iterator</name>
    <filename>classstd_1_1deque_1_1reverse__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::list</name>
    <filename>classstd_1_1list.html</filename>
    <class kind="class">std::list::const_iterator</class>
    <class kind="class">std::list::const_reverse_iterator</class>
    <class kind="class">std::list::iterator</class>
    <class kind="class">std::list::reverse_iterator</class>
    <member kind="variable" protection="private">
      <type>T</type>
      <name>elements</name>
      <anchorfile>classstd_1_1list.html</anchorfile>
      <anchor>a33c3659798192be98e26358e877f28a6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>std::list::const_iterator</name>
    <filename>classstd_1_1list_1_1const__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::list::const_reverse_iterator</name>
    <filename>classstd_1_1list_1_1const__reverse__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::list::iterator</name>
    <filename>classstd_1_1list_1_1iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::list::reverse_iterator</name>
    <filename>classstd_1_1list_1_1reverse__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::map</name>
    <filename>classstd_1_1map.html</filename>
    <class kind="class">std::map::const_iterator</class>
    <class kind="class">std::map::const_reverse_iterator</class>
    <class kind="class">std::map::iterator</class>
    <class kind="class">std::map::reverse_iterator</class>
    <member kind="variable" protection="private">
      <type>K</type>
      <name>keys</name>
      <anchorfile>classstd_1_1map.html</anchorfile>
      <anchor>a5b9df6b5d1014318c9d5ccf9acfbadeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T</type>
      <name>elements</name>
      <anchorfile>classstd_1_1map.html</anchorfile>
      <anchor>a938c0a33e68b325ce83d30938d8fc5fa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>std::map::const_iterator</name>
    <filename>classstd_1_1map_1_1const__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::map::const_reverse_iterator</name>
    <filename>classstd_1_1map_1_1const__reverse__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::map::iterator</name>
    <filename>classstd_1_1map_1_1iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::map::reverse_iterator</name>
    <filename>classstd_1_1map_1_1reverse__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::multimap</name>
    <filename>classstd_1_1multimap.html</filename>
    <class kind="class">std::multimap::const_iterator</class>
    <class kind="class">std::multimap::const_reverse_iterator</class>
    <class kind="class">std::multimap::iterator</class>
    <class kind="class">std::multimap::reverse_iterator</class>
    <member kind="variable" protection="private">
      <type>K</type>
      <name>keys</name>
      <anchorfile>classstd_1_1multimap.html</anchorfile>
      <anchor>ad0b86a21605e0a17a0b70370e4e39140</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T</type>
      <name>elements</name>
      <anchorfile>classstd_1_1multimap.html</anchorfile>
      <anchor>aa24ed2129da1d80392fb4447cd2e3f97</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>std::multimap::const_iterator</name>
    <filename>classstd_1_1multimap_1_1const__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::multimap::const_reverse_iterator</name>
    <filename>classstd_1_1multimap_1_1const__reverse__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::multimap::iterator</name>
    <filename>classstd_1_1multimap_1_1iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::multimap::reverse_iterator</name>
    <filename>classstd_1_1multimap_1_1reverse__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::set</name>
    <filename>classstd_1_1set.html</filename>
    <class kind="class">std::set::const_iterator</class>
    <class kind="class">std::set::const_reverse_iterator</class>
    <class kind="class">std::set::iterator</class>
    <class kind="class">std::set::reverse_iterator</class>
    <member kind="variable" protection="private">
      <type>K</type>
      <name>keys</name>
      <anchorfile>classstd_1_1set.html</anchorfile>
      <anchor>a1e20933bdb1498a0fb6c3f93799c093d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>std::set::const_iterator</name>
    <filename>classstd_1_1set_1_1const__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::set::const_reverse_iterator</name>
    <filename>classstd_1_1set_1_1const__reverse__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::set::iterator</name>
    <filename>classstd_1_1set_1_1iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::set::reverse_iterator</name>
    <filename>classstd_1_1set_1_1reverse__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::multiset</name>
    <filename>classstd_1_1multiset.html</filename>
    <class kind="class">std::multiset::const_iterator</class>
    <class kind="class">std::multiset::const_reverse_iterator</class>
    <class kind="class">std::multiset::iterator</class>
    <class kind="class">std::multiset::reverse_iterator</class>
    <member kind="variable" protection="private">
      <type>K</type>
      <name>keys</name>
      <anchorfile>classstd_1_1multiset.html</anchorfile>
      <anchor>ae9f6f614614e031284d9f0103ff8f22d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>std::multiset::const_iterator</name>
    <filename>classstd_1_1multiset_1_1const__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::multiset::const_reverse_iterator</name>
    <filename>classstd_1_1multiset_1_1const__reverse__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::multiset::iterator</name>
    <filename>classstd_1_1multiset_1_1iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::multiset::reverse_iterator</name>
    <filename>classstd_1_1multiset_1_1reverse__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::vector</name>
    <filename>classstd_1_1vector.html</filename>
    <class kind="class">std::vector::const_iterator</class>
    <class kind="class">std::vector::const_reverse_iterator</class>
    <class kind="class">std::vector::iterator</class>
    <class kind="class">std::vector::reverse_iterator</class>
    <member kind="variable" protection="private">
      <type>T</type>
      <name>elements</name>
      <anchorfile>classstd_1_1vector.html</anchorfile>
      <anchor>ab5c8a0a29c9d895c71aafb303ada11aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>std::vector::const_iterator</name>
    <filename>classstd_1_1vector_1_1const__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::vector::const_reverse_iterator</name>
    <filename>classstd_1_1vector_1_1const__reverse__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::vector::iterator</name>
    <filename>classstd_1_1vector_1_1iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::vector::reverse_iterator</name>
    <filename>classstd_1_1vector_1_1reverse__iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>std::queue</name>
    <filename>classstd_1_1queue.html</filename>
    <member kind="variable" protection="private">
      <type>T</type>
      <name>elements</name>
      <anchorfile>classstd_1_1queue.html</anchorfile>
      <anchor>a1bd007ce6c487297f2a7606c22a5cf8d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>std::priority_queue</name>
    <filename>classstd_1_1priority__queue.html</filename>
    <member kind="variable" protection="private">
      <type>T</type>
      <name>elements</name>
      <anchorfile>classstd_1_1priority__queue.html</anchorfile>
      <anchor>a7266c507041c192ca5345e1ffb697d88</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>std::stack</name>
    <filename>classstd_1_1stack.html</filename>
    <member kind="variable" protection="private">
      <type>T</type>
      <name>elements</name>
      <anchorfile>classstd_1_1stack.html</anchorfile>
      <anchor>a46f2bbed2f0f2513148c1c6c1d81b651</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>std::valarray</name>
    <filename>classstd_1_1valarray.html</filename>
    <member kind="variable" protection="private">
      <type>T</type>
      <name>elements</name>
      <anchorfile>classstd_1_1valarray.html</anchorfile>
      <anchor>a3a17d31c6b966967137eda619f402465</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>std::exception</name>
    <filename>classstd_1_1exception.html</filename>
  </compound>
  <compound kind="class">
    <name>std::bad_alloc</name>
    <filename>classstd_1_1bad__alloc.html</filename>
    <base>std::exception</base>
  </compound>
  <compound kind="class">
    <name>std::bad_cast</name>
    <filename>classstd_1_1bad__cast.html</filename>
    <base>std::exception</base>
  </compound>
  <compound kind="class">
    <name>std::bad_typeid</name>
    <filename>classstd_1_1bad__typeid.html</filename>
    <base>std::exception</base>
  </compound>
  <compound kind="class">
    <name>std::logic_error</name>
    <filename>classstd_1_1logic__error.html</filename>
    <base>std::exception</base>
  </compound>
  <compound kind="class">
    <name>std::runtime_error</name>
    <filename>classstd_1_1runtime__error.html</filename>
    <base>std::exception</base>
  </compound>
  <compound kind="class">
    <name>std::bad_exception</name>
    <filename>classstd_1_1bad__exception.html</filename>
    <base>std::exception</base>
  </compound>
  <compound kind="class">
    <name>std::domain_error</name>
    <filename>classstd_1_1domain__error.html</filename>
    <base>std::logic_error</base>
  </compound>
  <compound kind="class">
    <name>std::invalid_argument</name>
    <filename>classstd_1_1invalid__argument.html</filename>
    <base>std::logic_error</base>
  </compound>
  <compound kind="class">
    <name>std::length_error</name>
    <filename>classstd_1_1length__error.html</filename>
    <base>std::logic_error</base>
  </compound>
  <compound kind="class">
    <name>std::out_of_range</name>
    <filename>classstd_1_1out__of__range.html</filename>
    <base>std::logic_error</base>
  </compound>
  <compound kind="class">
    <name>std::range_error</name>
    <filename>classstd_1_1range__error.html</filename>
    <base>std::runtime_error</base>
  </compound>
  <compound kind="class">
    <name>std::overflow_error</name>
    <filename>classstd_1_1overflow__error.html</filename>
    <base>std::runtime_error</base>
  </compound>
  <compound kind="class">
    <name>std::underflow_error</name>
    <filename>classstd_1_1underflow__error.html</filename>
    <base>std::runtime_error</base>
  </compound>
  <compound kind="namespace">
    <name>TundraLogic</name>
    <filename>namespace_tundra_logic.html</filename>
    <class kind="class">TundraLogic::Client</class>
    <class kind="struct">TundraLogic::MaterialInfo</class>
    <class kind="class">TundraLogic::SceneImporter</class>
    <class kind="class">TundraLogic::Server</class>
    <class kind="struct">TundraLogic::RemovedComponent</class>
    <class kind="class">TundraLogic::SyncManager</class>
    <class kind="class">TundraLogic::TundraLogicModule</class>
    <member kind="typedef">
      <type>std::set&lt; MaterialInfo &gt;</type>
      <name>MaterialInfoList</name>
      <anchorfile>namespace_tundra_logic.html</anchorfile>
      <anchor>ab499212ea6b34c84eef904dae841d652</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>QScriptValue</type>
      <name>qScriptValueFromNull</name>
      <anchorfile>namespace_tundra_logic.html</anchorfile>
      <anchor>abeb81c08b3aa28bedc92a400f2c637bd</anchor>
      <arglist>(QScriptEngine *engine, const T &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>qScriptValueToNull</name>
      <anchorfile>namespace_tundra_logic.html</anchorfile>
      <anchor>a48f9d392204d85e6ceab71aa513b121a</anchor>
      <arglist>(const QScriptValue &amp;value, T &amp;v)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned short</type>
      <name>cDefaultPort</name>
      <anchorfile>namespace_tundra_logic.html</anchorfile>
      <anchor>acad726ae993708ff9280fbd2987e6334</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TundraLogic::Client</name>
    <filename>class_tundra_logic_1_1_client.html</filename>
    <member kind="enumeration">
      <name>ClientLoginState</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a0a84694910864f963e9cb9e170cc37b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NotConnected</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a0a84694910864f963e9cb9e170cc37b2aa85a532e53067c56a0e56f491bd783e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ConnectionPending</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a0a84694910864f963e9cb9e170cc37b2ab3f4db1ba11b6e941f3c7f4a5f0a1f29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ConnectionEstablished</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a0a84694910864f963e9cb9e170cc37b2a645c839cb6f6108ea697ca1f3c961b14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LoggedIn</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a0a84694910864f963e9cb9e170cc37b2a2e741746dff078d032b265e6b7ee8a4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Login</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>af1107b39ca75d30503d8804808ca5937</anchor>
      <arglist>(const QUrl &amp;loginUrl)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Login</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a7f8dc715db55c00a38088484e9f25184</anchor>
      <arglist>(const QString &amp;address, unsigned short port, const QString &amp;username, const QString &amp;password, const QString &amp;protocol=QString())</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Login</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a70ab70fefeff31f7aa77e23f57a3b397</anchor>
      <arglist>(const QString &amp;address, unsigned short port, kNet::SocketTransportLayer protocol=kNet::InvalidTransportLayer)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Logout</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a9c86c4fd54777db8d2282393673c2bea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>GetConnectionID</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>aa7632bde72577e96ff656f82fa4bb4d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsConnected</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a74225ff8bb8bae09ca6192fffa9679e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SetLoginProperty</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>aa5f81a41c540d0353c85e97ba503b800</anchor>
      <arglist>(QString key, QString value)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>GetLoginProperty</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>ada67dcf4ce4bbf70d148921c5ad1a342</anchor>
      <arglist>(QString key)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>LoginPropertiesAsXml</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>aeb7f292fd9605c125bee88eac9c5d071</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>std::map&lt; QString, QString &gt; &amp;</type>
      <name>GetAllLoginProperties</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a6e12aae2060007f90f4dfea7f77fba2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ClearLoginProperties</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>ad0857566a976919e0230c9274b52e280</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AboutToConnect</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>afe2ef295971c8d1e39be7bd120a75f7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Connected</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a55479030f4184dd6b94cd6c9dce6a997</anchor>
      <arglist>(UserConnectedResponseData *responseData)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>NetworkMessageReceived</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a51c8fa8fa646454b7d0a97d4780f4cf5</anchor>
      <arglist>(kNet::message_id_t id, const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Disconnected</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>aa7dc6677d8751e6cda9469b59f1accac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>LoginFailed</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a61fcab8eadce2d4557c8e1b85f63de0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Client</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a4cfedd4a35ea991036ef8adc3db970f7</anchor>
      <arglist>(TundraLogicModule *owner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Client</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a33140979c3428380579700f8ac5857d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a5098fa85cbcf16407a0cec1349b2cd3c</anchor>
      <arglist>(f64 frametime)</arglist>
    </member>
    <member kind="function">
      <type>ClientLoginState</type>
      <name>GetLoginState</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>ac31212e8152606d07d9d6cabd458e898</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>kNet::MessageConnection *</type>
      <name>GetConnection</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a45629ac773d00b548cba23593d51ab4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DoLogout</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a95613d80d504e15ac73821c35b574355</anchor>
      <arglist>(bool fail=false)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleKristalliMessage</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a4551d908178d4fb0f599d99deb8cb257</anchor>
      <arglist>(kNet::MessageConnection *source, kNet::message_id_t id, const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnConnectionAttemptFailed</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>acada310f5164af03744575a83a3eae46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>DelayedLogout</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>aa0b9efc863445b6ef2888a05727686b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CheckLogin</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a93ba0571d5cb6b72e3273c06b22a16de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleLoginReply</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a0937b867f6bfc989936d13fbdea9cd51</anchor>
      <arglist>(kNet::MessageConnection *source, const MsgLoginReply &amp;msg)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleClientJoined</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>af5e3ffd7d77853b32274fab31e0c33c2</anchor>
      <arglist>(kNet::MessageConnection *source, const MsgClientJoined &amp;msg)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleClientLeft</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a4011c8cd6df12ff8e0d75ba8e29ee31e</anchor>
      <arglist>(kNet::MessageConnection *source, const MsgClientLeft &amp;msg)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ClientLoginState</type>
      <name>loginstate_</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a9d86ee05dd1261ba347d1dc3581ece13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; QString, QString &gt;</type>
      <name>properties</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a7c0b9a4d348d78b3856f20ceb18e2b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>reconnect_</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a971f72af5663a4e6c8c1cf68be2fa6e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>u8</type>
      <name>client_id_</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a817c6bf3d6917b2f876ed857f0781eee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TundraLogicModule *</type>
      <name>owner_</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a451a8b8fb29a38476f7f2845269ec091</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework_</name>
      <anchorfile>class_tundra_logic_1_1_client.html</anchorfile>
      <anchor>a934eca153a1f786caa3e57652cc5674d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TundraLogic::MaterialInfo</name>
    <filename>struct_tundra_logic_1_1_material_info.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>struct_tundra_logic_1_1_material_info.html</anchorfile>
      <anchor>a46a43e28852614abc1ac195f7ba49cf8</anchor>
      <arglist>(const MaterialInfo &amp;rhs) const </arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>source</name>
      <anchorfile>struct_tundra_logic_1_1_material_info.html</anchorfile>
      <anchor>a32a49cb267c42fd1a9ddb306ef7ea031</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>name</name>
      <anchorfile>struct_tundra_logic_1_1_material_info.html</anchorfile>
      <anchor>a6487ad83c7b0c836a125caba415e79cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>data</name>
      <anchorfile>struct_tundra_logic_1_1_material_info.html</anchorfile>
      <anchor>a552afda1584dbada40cd62c26a2ede18</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TundraLogic::SceneImporter</name>
    <filename>class_tundra_logic_1_1_scene_importer.html</filename>
    <member kind="function">
      <type></type>
      <name>SceneImporter</name>
      <anchorfile>class_tundra_logic_1_1_scene_importer.html</anchorfile>
      <anchor>af5e443766422b7c3c9a62729423b58c4</anchor>
      <arglist>(const ScenePtr &amp;scene)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SceneImporter</name>
      <anchorfile>class_tundra_logic_1_1_scene_importer.html</anchorfile>
      <anchor>a9f4e6e678474631719d18af920e8535f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EntityPtr</type>
      <name>ImportMesh</name>
      <anchorfile>class_tundra_logic_1_1_scene_importer.html</anchorfile>
      <anchor>a25c12525eb6eb9a7c0ba562304bdbc2b</anchor>
      <arglist>(const QString &amp;filename, const QString &amp;in_asset_dir, const Transform &amp;worldtransform, const QString &amp;entity_prefab_xml, const QString &amp;prefix, AttributeChange::Type change, bool inspect=true, const QString &amp;meshName=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; Entity * &gt;</type>
      <name>Import</name>
      <anchorfile>class_tundra_logic_1_1_scene_importer.html</anchorfile>
      <anchor>a6837d76ca15a9fae2322901a46903da3</anchor>
      <arglist>(const QString &amp;filename, const QString &amp;in_asset_dir, const Transform &amp;worldtransform, const QString &amp;prefix, AttributeChange::Type change, bool clearscene=false, bool replace=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ParseMeshForMaterialsAndSkeleton</name>
      <anchorfile>class_tundra_logic_1_1_scene_importer.html</anchorfile>
      <anchor>a9e45e4f2708468938b4a274f0fb72ddf</anchor>
      <arglist>(const QString &amp;meshname, QStringList &amp;material_names, QString &amp;skeleton_name) const </arglist>
    </member>
    <member kind="function">
      <type>SceneDesc</type>
      <name>CreateSceneDescFromMesh</name>
      <anchorfile>class_tundra_logic_1_1_scene_importer.html</anchorfile>
      <anchor>a9eb8a4f88e0378bc733011a37b84122c</anchor>
      <arglist>(const QString &amp;source) const </arglist>
    </member>
    <member kind="function">
      <type>SceneDesc</type>
      <name>CreateSceneDescFromScene</name>
      <anchorfile>class_tundra_logic_1_1_scene_importer.html</anchorfile>
      <anchor>a8b82f87e31d124684811116162bd92bb</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>QSet&lt; QString &gt;</type>
      <name>ProcessMaterialFileForTextures</name>
      <anchorfile>class_tundra_logic_1_1_scene_importer.html</anchorfile>
      <anchor>a4eb0cc9d8fef0b33534d6e2d75ee3f27</anchor>
      <arglist>(const QString &amp;matfilename, const QSet&lt; QString &gt; &amp;used_materials) const </arglist>
    </member>
    <member kind="function">
      <type>QSet&lt; QString &gt;</type>
      <name>ProcessMaterialForTextures</name>
      <anchorfile>class_tundra_logic_1_1_scene_importer.html</anchorfile>
      <anchor>aa58834002eeced38afee275cc8219b41</anchor>
      <arglist>(const QString &amp;material) const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>LoadSingleMaterialFromFile</name>
      <anchorfile>class_tundra_logic_1_1_scene_importer.html</anchorfile>
      <anchor>a79e90e1f501aa820da3263c1a89d5635</anchor>
      <arglist>(const QString &amp;filename, const QString &amp;materialName) const </arglist>
    </member>
    <member kind="function">
      <type>MaterialInfoList</type>
      <name>LoadAllMaterialsFromFile</name>
      <anchorfile>class_tundra_logic_1_1_scene_importer.html</anchorfile>
      <anchor>abc8cd15827457303f91b0c16b43cdf16</anchor>
      <arglist>(const QString &amp;filename) const </arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>FindMaterialFiles</name>
      <anchorfile>class_tundra_logic_1_1_scene_importer.html</anchorfile>
      <anchor>a8ba7a6a65d5f5bfde59506a05616dbdb</anchor>
      <arglist>(const QString &amp;dir) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ProcessNodeForAssets</name>
      <anchorfile>class_tundra_logic_1_1_scene_importer.html</anchorfile>
      <anchor>a594a2eac20d5e8fe3e4c46237fd9720b</anchor>
      <arglist>(QDomElement node_elem, const QString &amp;in_asset_dir)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ProcessNodeForCreation</name>
      <anchorfile>class_tundra_logic_1_1_scene_importer.html</anchorfile>
      <anchor>a2aff23559c16103c77d8f9a9670be994</anchor>
      <arglist>(QList&lt; Entity * &gt; &amp;entities, QDomElement node_elem, float3 pos, Quat rot, float3 scale, AttributeChange::Type change, const QString &amp;prefix, bool flipyz, bool replace)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CreateAssetDescs</name>
      <anchorfile>class_tundra_logic_1_1_scene_importer.html</anchorfile>
      <anchor>acf8df4851c201efa62a220f56cef26df</anchor>
      <arglist>(const QString &amp;path, const QStringList &amp;meshFiles, const QStringList &amp;skeletons, const QStringList &amp;materialFiles, const QSet&lt; QString &gt; &amp;usedMaterials, SceneDesc &amp;desc) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QMap&lt; QString, QStringList &gt;</type>
      <name>mesh_default_materials_</name>
      <anchorfile>class_tundra_logic_1_1_scene_importer.html</anchorfile>
      <anchor>a250ecc5b64a5ecfb582ac94fd41c892b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; std::string &gt;</type>
      <name>material_names_</name>
      <anchorfile>class_tundra_logic_1_1_scene_importer.html</anchorfile>
      <anchor>aa9b6dfd2bd842305b9868b8567bb542d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; std::string &gt;</type>
      <name>node_names_</name>
      <anchorfile>class_tundra_logic_1_1_scene_importer.html</anchorfile>
      <anchor>a42f9e2b6137ebf96c16c1556f114e99e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ScenePtr</type>
      <name>scene_</name>
      <anchorfile>class_tundra_logic_1_1_scene_importer.html</anchorfile>
      <anchor>a6c5acbb1899c107d8dc17b8883cdd8c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>mesh_names_</name>
      <anchorfile>class_tundra_logic_1_1_scene_importer.html</anchorfile>
      <anchor>aa3bcdb8cef095bb08d7e2ce9120a8bc2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TundraLogic::Server</name>
    <filename>class_tundra_logic_1_1_server.html</filename>
    <member kind="slot">
      <type>bool</type>
      <name>IsRunning</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>ac0cb7f068c30c7a9d8692d4f704ecdb5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>IsAboutToStart</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>a7ee7b4e2377aff121bfffc3dcaa1146c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>GetPort</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>abd6351cb44bc303b4817073992400385</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>GetProtocol</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>a4d50878865ba04593653e2ba412e459f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QVariantList</type>
      <name>GetConnectionIDs</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>ab644654e7953274bba7dd344ac31104f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>UserConnection *</type>
      <name>GetUserConnection</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>a0162043a47f997f6e5d4fbd09e33ba8d</anchor>
      <arglist>(int connectionID) const </arglist>
    </member>
    <member kind="slot">
      <type>UserConnection *</type>
      <name>GetActionSender</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>acf022f8fe8155d411171bb391abf0458</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>OnScriptEngineCreated</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>a01996841eedffd3bf799c88f65f95fbc</anchor>
      <arglist>(QScriptEngine *engine)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>UserAboutToConnect</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>a9a64c3a79a5269ce1e71a7f56fcb08ac</anchor>
      <arglist>(int connectionID, UserConnection *connection)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>UserConnected</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>a754d5dc96d7c31bc173a903dced04570</anchor>
      <arglist>(int connectionID, UserConnection *connection, UserConnectedResponseData *responseData)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>MessageReceived</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>a2da79058a45b18395c4ddc1ac2e3bd64</anchor>
      <arglist>(UserConnection *connection, kNet::message_id_t id, const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>UserDisconnected</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>ac520ab108a55e636104d550a8b97639c</anchor>
      <arglist>(int connectionID, UserConnection *connection)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ServerStarted</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>a6bbb36676f898ccc38d9ff978708610e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ServerStopped</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>a4fddca87507b41797e6aec8e1b070cda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Server</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>a8f7ab1b5bad73eb63a623b537f93a544</anchor>
      <arglist>(TundraLogicModule *owner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Server</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>a40af6920ac9beabdb8034714c2d39719</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>a05d5b3c2cf540f471ac18ebd3f493b4f</anchor>
      <arglist>(f64 frametime)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Start</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>a68d507e347271771083932d57565589d</anchor>
      <arglist>(unsigned short port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Stop</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>a6bf1e1db9d58ab046be2abc1581a1da1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>UserConnection *</type>
      <name>GetUserConnection</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>a89f75b3f43d3f632be01786f604dadbb</anchor>
      <arglist>(kNet::MessageConnection *source) const </arglist>
    </member>
    <member kind="function">
      <type>UserConnectionList &amp;</type>
      <name>GetUserConnections</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>ad2ccaa01f7a840c1ffee1087aa783102</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>UserConnectionList</type>
      <name>GetAuthenticatedUsers</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>a8ca4690de50731830311a1de4b1f1cbd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetActionSender</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>a7ec3d92fd38af1d3d1f7ed2bf7ed860f</anchor>
      <arglist>(UserConnection *user)</arglist>
    </member>
    <member kind="function">
      <type>kNet::NetworkServer *</type>
      <name>GetServer</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>a832ca45e34765cbf2b2fd2033c18c13b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleKristalliMessage</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>a2d83105128a72176b77bc03111adfb3c</anchor>
      <arglist>(kNet::MessageConnection *source, kNet::message_id_t id, const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleUserDisconnected</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>a63b0bc0c6e38c2809c2c67963f32698b</anchor>
      <arglist>(UserConnection *user)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleLogin</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>aab3d4f4e5ad973941bac2ed8c6a5c17e</anchor>
      <arglist>(kNet::MessageConnection *source, const MsgLogin &amp;msg)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>UserConnection *</type>
      <name>actionsender_</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>a51125a8376c34217acd4e66d7f6e822b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TundraLogicModule *</type>
      <name>owner_</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>a0c065d90ecdc74a526a5ab8482a7cfdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework_</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>aa768cd664f053ffe22e0742d8a660cab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>current_port_</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>a33c6d614685e33487a58d3688e0181d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>QString</type>
      <name>current_protocol_</name>
      <anchorfile>class_tundra_logic_1_1_server.html</anchorfile>
      <anchor>aa66513aa6cb8806297208365a1411575</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TundraLogic::RemovedComponent</name>
    <filename>struct_tundra_logic_1_1_removed_component.html</filename>
    <member kind="variable">
      <type>QString</type>
      <name>typename_</name>
      <anchorfile>struct_tundra_logic_1_1_removed_component.html</anchorfile>
      <anchor>af9e11df528a3a7b6389c5f9a38879367</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>name_</name>
      <anchorfile>struct_tundra_logic_1_1_removed_component.html</anchorfile>
      <anchor>add644a7b5297eaca5877c808bc15af38</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TundraLogic::SyncManager</name>
    <filename>class_tundra_logic_1_1_sync_manager.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>SetUpdatePeriod</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>a97929e840ff9893aa1235aa93e1b7aaa</anchor>
      <arglist>(float period)</arglist>
    </member>
    <member kind="slot">
      <type>float</type>
      <name>GetUpdatePeriod</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>a8dafb620b8b31837d660f221a276c345</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SyncManager</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>aca75d619db9b208d5c0ad6535197a9f8</anchor>
      <arglist>(TundraLogicModule *owner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SyncManager</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>ac4e531d71a61c166ef5ffbd2dcb87656</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RegisterToScene</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>abf041d2d1fa3504ed2fa9ed76d741e85</anchor>
      <arglist>(ScenePtr scene)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>a780ab24b892e5ef0993759909b1b03b7</anchor>
      <arglist>(f64 frametime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NewUserConnected</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>a04c9d26bf637b4960d05054df23d2984</anchor>
      <arglist>(UserConnection *user)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnAttributeChanged</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>a461a761c243061fdc2501ffaf2f0677f</anchor>
      <arglist>(IComponent *comp, IAttribute *attr, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnAttributeAdded</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>a099b5da7142cf9fa0370765940fe8c6e</anchor>
      <arglist>(IComponent *comp, IAttribute *attr, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnAttributeRemoved</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>acb0c3422870d8dd169e4b30c969c0f71</anchor>
      <arglist>(IComponent *comp, IAttribute *attr, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnComponentAdded</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>a361512d29335d9554a8e9e5a249341b9</anchor>
      <arglist>(Entity *entity, IComponent *comp, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnComponentRemoved</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>a1ab7c102e2335f1db9878cf31859d96b</anchor>
      <arglist>(Entity *entity, IComponent *comp, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnEntityCreated</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>a224ca63574e080f87e3fd66661a3e7a6</anchor>
      <arglist>(Entity *entity, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnEntityRemoved</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>ae7639523d4625f99e949b5e02d794674</anchor>
      <arglist>(Entity *entity, AttributeChange::Type change)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnActionTriggered</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>afc1866c49ace705e12e822e31945981b</anchor>
      <arglist>(Entity *entity, const QString &amp;action, const QStringList &amp;params, EntityAction::ExecTypeField type)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>OnUserActionTriggered</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>af09db9b510d0b041f3defa717d149e74</anchor>
      <arglist>(UserConnection *user, Entity *entity, const QString &amp;action, const QStringList &amp;params)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>HandleKristalliMessage</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>a7ea7a2ed52b3a9abaf26ba5bcf071fe7</anchor>
      <arglist>(kNet::MessageConnection *source, kNet::message_id_t id, const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>QueueMessage</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>af11cff44cf3b61d55e14bfac9ad6174e</anchor>
      <arglist>(kNet::MessageConnection *connection, kNet::message_id_t id, bool reliable, bool inOrder, kNet::DataSerializer &amp;ds)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>WriteComponentFullUpdate</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>ae0e0129c48d3e900e721ab23499232ce</anchor>
      <arglist>(kNet::DataSerializer &amp;ds, ComponentPtr comp)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleEntityAction</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>ae4b208a218f3aae83871862147ab286d</anchor>
      <arglist>(kNet::MessageConnection *source, MsgEntityAction &amp;msg)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleCreateEntity</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>ab732fb2b2b9f7a742aa234d65667eb78</anchor>
      <arglist>(kNet::MessageConnection *source, const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleCreateComponents</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>a06f6a5dfa0bf35f7502bbc400140ec5d</anchor>
      <arglist>(kNet::MessageConnection *source, const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleCreateAttributes</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>a4c9805ebdd172034a1139b84b20c7b47</anchor>
      <arglist>(kNet::MessageConnection *source, const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleEditAttributes</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>af297989fff2674cb45213816e8141da9</anchor>
      <arglist>(kNet::MessageConnection *source, const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleRemoveAttributes</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>a397ca6889300644ce8bcec2b36d7fd0a</anchor>
      <arglist>(kNet::MessageConnection *source, const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleRemoveComponents</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>a1b6e60577831e751cbc8e9562d99c9aa</anchor>
      <arglist>(kNet::MessageConnection *source, const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleRemoveEntity</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>aa9cb35447c0e333c72857ba16768f87a</anchor>
      <arglist>(kNet::MessageConnection *source, const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleCreateEntityReply</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>ac8775b211e1c54749ec83027a5c24f49</anchor>
      <arglist>(kNet::MessageConnection *source, const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleCreateComponentsReply</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>a616abbcaf969c0622a58278e78fb0374</anchor>
      <arglist>(kNet::MessageConnection *source, const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ProcessSyncState</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>a83981a2fb291c042e10b7acb0ab300de</anchor>
      <arglist>(kNet::MessageConnection *destination, SceneSyncState *state)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ValidateAction</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>ae4e966abd39e2b7679e021dd40795e14</anchor>
      <arglist>(kNet::MessageConnection *source, unsigned messageID, entity_id_t entityID)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>SceneSyncState *</type>
      <name>GetSceneSyncState</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>ac5db532b4178f69567637ef8bc0a4d64</anchor>
      <arglist>(kNet::MessageConnection *connection)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ScenePtr</type>
      <name>GetRegisteredScene</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>ae7db7bba9098d570039aaf38aa671e58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TundraLogicModule *</type>
      <name>owner_</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>aceb50356bb0c85b1533cee7b239552eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Framework *</type>
      <name>framework_</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>a2462939ae4c4f34f6f3d6f38917de7fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SceneWeakPtr</type>
      <name>scene_</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>a9cdb4547f89f937627c62523db2674dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>float</type>
      <name>update_period_</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>ad2b1428726657c9ec37c5f93423c5d48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>float</type>
      <name>update_acc_</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>aea6aff1cfd44342381b93fe3b0b6ec24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SceneSyncState</type>
      <name>server_syncstate_</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>a523a55566c7350cf987bc7111fe54340</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>char</type>
      <name>createEntityBuffer_</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>a95af9ffc30bd50ea2bb105cf00dfb027</anchor>
      <arglist>[64 *1024]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>char</type>
      <name>createCompsBuffer_</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>ae0ef6806dabc4796406d30a4156e6b0d</anchor>
      <arglist>[64 *1024]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>char</type>
      <name>editAttrsBuffer_</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>a1f81255907c5748a3e1ce892ea282617</anchor>
      <arglist>[64 *1024]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>char</type>
      <name>createAttrsBuffer_</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>a4a67ba71ba7cae1e1b4472a0f0ef0a0a</anchor>
      <arglist>[16 *1024]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>char</type>
      <name>attrDataBuffer_</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>addd48b5912d61836f23e15ac9df512de</anchor>
      <arglist>[16 *1024]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>char</type>
      <name>removeCompsBuffer_</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>a46b86fcfc5a8dce4f3fc89f77cc40e28</anchor>
      <arglist>[1024]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>char</type>
      <name>removeEntityBuffer_</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>a7ec43f29e7f84a7ca2fc9bfedd20fb6b</anchor>
      <arglist>[1024]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>char</type>
      <name>removeAttrsBuffer_</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>ae835d85af7225605227887953cb775ca</anchor>
      <arglist>[1024]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; u8 &gt;</type>
      <name>changedAttributes_</name>
      <anchorfile>class_tundra_logic_1_1_sync_manager.html</anchorfile>
      <anchor>a637fbde9db14f77c5fe10459639ba85e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TundraLogic::TundraLogicModule</name>
    <filename>class_tundra_logic_1_1_tundra_logic_module.html</filename>
    <base>IModule</base>
    <member kind="slot">
      <type>void</type>
      <name>StartServer</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>a1ff4fd45c264f10958b53e638fa24b2f</anchor>
      <arglist>(int port)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>StopServer</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>a338675bb671187ac61030542e0e8dabc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Connect</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>a1485fc2ea5b5952150f10820f264334f</anchor>
      <arglist>(QString address, int port, QString protocol, QString username, QString password)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Disconnect</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>a7a352d89f06376293ea0a17caa45ec58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>SaveScene</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>a8da8c738cbc925ba012a42f44cd68480</anchor>
      <arglist>(QString filename, bool asBinary=false, bool saveTemporaryEntities=false, bool saveLocalEntities=true)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>LoadScene</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>a64776d8f27976bf082abe1d6e1b3d508</anchor>
      <arglist>(QString filename, bool clearScene=true, bool useEntityIDsFromFile=true)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ImportScene</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>adbc9c1ff56af93fc5c172d4b3dfbeae4</anchor>
      <arglist>(QString filename, bool clearScene=true, bool replace=true)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ImportMesh</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>aca9da0a1417d94caeeb69f90a5b3c76d</anchor>
      <arglist>(QString filename, float tx=0.f, float ty=0.f, float tz=0.f, float rx=0.f, float ry=0.f, float rz=0.f, float sx=1.f, float sy=1.f, float sz=1.f, bool inspect=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TundraLogicModule</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>af83c549cabf858ffb26a8334251974f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TundraLogicModule</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>aabbac065ee22d67d1f715a83abf27a07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Load</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>a156e4e479f4c1d87e7fb33d65c22cdfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>a4ff3bb80021e35851ee701a396d37ce6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Uninitialize</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>a9857d1e277122d24051d7ff19f2bb33f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Update</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>a86c71810a414661bd90051020dafe120</anchor>
      <arglist>(f64 frametime)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsServer</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>ab4a4e7dd8f07acad64e957610ee0df93</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KristalliProtocol::KristalliProtocolModule *</type>
      <name>GetKristalliModule</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>ac9f27bc210fa3b532fa3eecfc392097b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const boost::shared_ptr&lt; SyncManager &gt; &amp;</type>
      <name>GetSyncManager</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>a2853eaa33e8a4c364104220b363adffb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const boost::shared_ptr&lt; Client &gt; &amp;</type>
      <name>GetClient</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>a0bbaf9fab9b7c2ba8bc52444dbccbb90</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const boost::shared_ptr&lt; Server &gt; &amp;</type>
      <name>GetServer</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>a7d056425f56005dfdc18ff4b2496e5a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Unload</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a29f68fed281ee378674d8b3d84a02e48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>Name</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>a715ca908fee148f6abeb45f41f646951</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Framework *</type>
      <name>GetFramework</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>af0fc3706f5a2e27374c642e71e4eca8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Framework *</type>
      <name>framework_</name>
      <anchorfile>class_i_module.html</anchorfile>
      <anchor>aff39960b9800c16d6f4976b5614c37a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>StartupSceneLoaded</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>af0d1fef82c9adba6d8d208e44351cfde</anchor>
      <arglist>(AssetPtr asset)</arglist>
    </member>
    <member kind="slot" protection="private">
      <type>void</type>
      <name>StartupSceneTransferFailed</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>a75b2c3344b323fa04644c10e20e19ee9</anchor>
      <arglist>(IAssetTransfer *transfer, QString reason)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleKristalliMessage</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>a4551d908178d4fb0f599d99deb8cb257</anchor>
      <arglist>(kNet::MessageConnection *source, kNet::message_id_t id, const char *data, size_t numBytes)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>LoadStartupScene</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>a045791d3644951fc02431d4d18f3b366</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::shared_ptr&lt; SyncManager &gt;</type>
      <name>syncManager_</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>a621e7940909bccf855396cc6ed5835a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::shared_ptr&lt; Client &gt;</type>
      <name>client_</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>ab3c9e399b93dfc9161e887129d9687d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::shared_ptr&lt; Server &gt;</type>
      <name>server_</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>ae78fc3dccf8d9fa49b5768e1b4b2c41e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>KristalliProtocol::KristalliProtocolModule *</type>
      <name>kristalliModule_</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>ae2d1ff271e208baa63650ff131f199df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>autoStartServer_</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>ae99d82e268a048282d911ce844d0afe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>short</type>
      <name>autoStartServerPort_</name>
      <anchorfile>class_tundra_logic_1_1_tundra_logic_module.html</anchorfile>
      <anchor>a885ea2761425b47b9685e564fe295755</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>WavLoader</name>
    <filename>namespace_wav_loader.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>IdentifyWavFileInMemory</name>
      <anchorfile>namespace_wav_loader.html</anchorfile>
      <anchor>a1ad2f3f960c5a6b30c19097732ab4d55</anchor>
      <arglist>(const u8 *fileData, size_t numBytes)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadWavFromFileInMemory</name>
      <anchorfile>namespace_wav_loader.html</anchorfile>
      <anchor>acd3c61d080d8bfb883e2971f0a0c48e4</anchor>
      <arglist>(const u8 *fileData, size_t numBytes, std::vector&lt; u8 &gt; &amp;dst, bool *isStereo, bool *is16Bit, int *frequency)</arglist>
    </member>
    <member kind="function">
      <type>bool AUDIO_API</type>
      <name>LoadWavFileToSoundBuffer</name>
      <anchorfile>namespace_wav_loader.html</anchorfile>
      <anchor>ae3db481b9a2b45be3c017287a4d13b4e</anchor>
      <arglist>(const u8 *data, size_t numBytes, SoundBuffer &amp;dst)</arglist>
    </member>
  </compound>
</tagfile>

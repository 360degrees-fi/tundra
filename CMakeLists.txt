# Set project name
project (naali-viewer)

# CMake version requirement
cmake_minimum_required (VERSION 2.4)

# Set CMake library search policy
if (COMMAND cmake_policy)
	cmake_policy (SET CMP0003 NEW)
endif (COMMAND cmake_policy)

# Set CMake custom module path & include them
set (CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} CMakeModules)

# The following CMake modules are required for the project to build.
include (Sagase)
include (ModuleSetup)
include (ConfigurePackages)

# Disable unnecessary build types
set (CMAKE_CONFIGURATION_TYPES "Release;Debug" CACHE STRING "Configurations" FORCE)

# Use Caelum, but not Hydrax for now.
SET (CAELUM 1)
SET (HYDRAX 0)

# Possibility to disable console output and make viewer a true Windows application (Windows only)
SET (WINDOWS_APP 0)
if (MSVC)
    if (WINDOWS_APP)
        add_definitions (-DWINDOWS_APP)
    endif (WINDOWS_APP)
endif (MSVC)

# In Visual Studio, use unicode character set
if (MSVC)
	add_definitions (-DUNICODE -D_UNICODE)
endif (MSVC)

# Generate profiling data. Currently disabled because of threadsafety issues.
if (MSVC)
#	add_definitions (-DPROFILING)
endif (MSVC)

# Set normalized path for common environment variables
file (TO_CMAKE_PATH "$ENV{NAALI_DEP_PATH}" ENV_NAALI_DEP_PATH)
file (TO_CMAKE_PATH "$ENV{QT_DIR}" ENV_QT_DIR)
file (TO_CMAKE_PATH "$ENV{OGRE_HOME}" ENV_OGRE_HOME)

# Find needed external libraries, abort on error
configure_boost ()
configure_poco ()
configure_qt4 ()
configure_python ()
configure_python_qt ()
configure_ois ()
configure_ogre ()
configure_xmlrpc ()
configure_curl ()
configure_openjpeg ()
configure_telepathy_qt4 ()

if (CAELUM)
    configure_caelum ()
endif (CAELUM)

if (HYDRAX)
	configure_hydrax ()
endif (HYDRAX)


# Add all the subprojects in the rex viewer.

# The following are the core modules that are 
# required for the project to build. None of
# these can't be omitted.
add_subdirectory (Core)
add_subdirectory (Foundation)
add_subdirectory (Interfaces)
add_subdirectory (RexCommon)
add_subdirectory (SceneManager)
add_subdirectory (OgreRenderingModule)
add_subdirectory (Application)
add_subdirectory (ReXLogic)
add_subdirectory (SupportModules)
add_subdirectory (AssetModule)
add_subdirectory (QtModule)
add_subdirectory (HttpUtilities)
add_subdirectory (RpcUtilities)

# The following are not really core modules,
# but you can't do anything practical without
# having them so, they're effectively required.
add_subdirectory (InputModuleOIS)
add_subdirectory (TextureDecoderModule)
add_subdirectory (OpenSimProtocol)
add_subdirectory (InventoryModule)

# If the custom optional modules configuration file does not yet
# exist, create it from a template.
if (NOT EXISTS CMakeOptionalModules.txt)
execute_process(COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/CMakeOptionalModulesTemplate.txt ${CMAKE_CURRENT_SOURCE_DIR}/CMakeOptionalModules.txt)
endif ()

# Read the set of optional modules from another file
# that is kept outside the source control. 
# To configure the set of optional modules to add to the build,
# edit CMakeOptionalModules.txt and rerun cmake.
include (CMakeOptionalModules.txt)
